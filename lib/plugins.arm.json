{
  "fullName": null,
  "usage": "[options] [command]",
  "options": [
    {
      "flags": "-v, --version",
      "required": 0,
      "optional": 0,
      "bool": true,
      "short": "-v",
      "long": "--version",
      "description": "output the application version"
    }
  ],
  "commands": [
    {
      "name": "help",
      "description": "Display help for a given command",
      "fullName": "help",
      "usage": "[options] [command]",
      "filePath": "commands/help.js",
      "options": [
        {
          "flags": "-v, --verbose",
          "required": 0,
          "optional": 0,
          "bool": true,
          "short": "-v",
          "long": "--verbose",
          "description": "use verbose output"
        },
        {
          "flags": "-vv",
          "required": 0,
          "optional": 0,
          "bool": true,
          "long": "-vv",
          "description": "more verbose with debug output"
        },
        {
          "flags": "--json",
          "required": 0,
          "optional": 0,
          "bool": true,
          "long": "--json",
          "description": "use json output"
        }
      ]
    },
    {
      "name": "login",
      "description": "Log in to an Azure subscription using Active Directory or a Microsoft account identity.",
      "fullName": "login",
      "usage": "[options]",
      "filePath": "commands/login._js",
      "options": [
        {
          "flags": "-v, --verbose",
          "required": 0,
          "optional": 0,
          "bool": true,
          "short": "-v",
          "long": "--verbose",
          "description": "use verbose output"
        },
        {
          "flags": "-vv",
          "required": 0,
          "optional": 0,
          "bool": true,
          "long": "-vv",
          "description": "more verbose with debug output"
        },
        {
          "flags": "--json",
          "required": 0,
          "optional": 0,
          "bool": true,
          "long": "--json",
          "description": "use json output"
        },
        {
          "flags": "-u --username <username>",
          "required": -15,
          "optional": 0,
          "bool": true,
          "short": "-u",
          "long": "--username",
          "description": "user name or service principal ID. If multifactor authentication is required, you will be prompted to use the login command without parameters for interactive support."
        },
        {
          "flags": "-e --environment [environment]",
          "required": 0,
          "optional": -18,
          "bool": true,
          "short": "-e",
          "long": "--environment",
          "description": "Environment to authenticate against, such as AzureChinaCloud; must support active directory."
        },
        {
          "flags": "-p --password <password>",
          "required": -15,
          "optional": 0,
          "bool": true,
          "short": "-p",
          "long": "--password",
          "description": "user password or service principal secret, will prompt if not given."
        },
        {
          "flags": "--service-principal",
          "required": 0,
          "optional": 0,
          "bool": true,
          "long": "--service-principal",
          "description": "If given, log in as a service principal rather than a user."
        },
        {
          "flags": "--certificate-file <certificateFile>",
          "required": -20,
          "optional": 0,
          "bool": true,
          "long": "--certificate-file",
          "description": "A PEM encoded certificate private key file."
        },
        {
          "flags": "--thumbprint <thumbprint>",
          "required": -14,
          "optional": 0,
          "bool": true,
          "long": "--thumbprint",
          "description": "A hex encoded thumbprint of the certificate."
        },
        {
          "flags": "--tenant <tenant>",
          "required": -10,
          "optional": 0,
          "bool": true,
          "long": "--tenant",
          "description": "Tenant domain or ID to log into."
        },
        {
          "flags": "-q --quiet",
          "required": 0,
          "optional": 0,
          "bool": true,
          "short": "-q",
          "long": "--quiet",
          "description": "do not prompt for confirmation of PII storage."
        }
      ]
    },
    {
      "name": "logout",
      "description": "Log out from Azure subscription using Active Directory. Currently, the user can log out only via Microsoft organizational account",
      "fullName": "logout",
      "usage": "[options] [username]",
      "filePath": "commands/login._js",
      "options": [
        {
          "flags": "-v, --verbose",
          "required": 0,
          "optional": 0,
          "bool": true,
          "short": "-v",
          "long": "--verbose",
          "description": "use verbose output"
        },
        {
          "flags": "-vv",
          "required": 0,
          "optional": 0,
          "bool": true,
          "long": "-vv",
          "description": "more verbose with debug output"
        },
        {
          "flags": "--json",
          "required": 0,
          "optional": 0,
          "bool": true,
          "long": "--json",
          "description": "use json output"
        },
        {
          "flags": "-u --username <username>",
          "required": -15,
          "optional": 0,
          "bool": true,
          "short": "-u",
          "long": "--username",
          "description": "Required. User name used to log out from Azure Active Directory."
        }
      ]
    },
    {
      "name": "portal",
      "description": "Open the portal in a browser",
      "fullName": "portal",
      "usage": "[options]",
      "filePath": "commands/portal._js",
      "options": [
        {
          "flags": "-v, --verbose",
          "required": 0,
          "optional": 0,
          "bool": true,
          "short": "-v",
          "long": "--verbose",
          "description": "use verbose output"
        },
        {
          "flags": "-vv",
          "required": 0,
          "optional": 0,
          "bool": true,
          "long": "-vv",
          "description": "more verbose with debug output"
        },
        {
          "flags": "--json",
          "required": 0,
          "optional": 0,
          "bool": true,
          "long": "--json",
          "description": "use json output"
        },
        {
          "flags": "-e, --environment <environment>",
          "required": -19,
          "optional": 0,
          "bool": true,
          "short": "-e",
          "long": "--environment",
          "description": "the publish settings download environment"
        },
        {
          "flags": "-r, --realm <realm>",
          "required": -13,
          "optional": 0,
          "bool": true,
          "short": "-r",
          "long": "--realm",
          "description": "the organization's realm"
        }
      ]
    }
  ],
  "categories": {
    "account": {
      "name": "account",
      "description": "Commands to manage your account information and publish settings",
      "fullName": "account",
      "usage": "[options] [command]",
      "options": [],
      "commands": [
        {
          "name": "list",
          "description": "List the imported subscriptions",
          "fullName": "account list",
          "usage": "[options]",
          "filePath": "commands/account._js",
          "options": [
            {
              "flags": "-v, --verbose",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-v",
              "long": "--verbose",
              "description": "use verbose output"
            },
            {
              "flags": "-vv",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "-vv",
              "description": "more verbose with debug output"
            },
            {
              "flags": "--json",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--json",
              "description": "use json output"
            }
          ]
        },
        {
          "name": "show",
          "description": "Show details about a subscription",
          "fullName": "account show",
          "usage": "[options] [subscriptionNameOrId]",
          "filePath": "commands/account._js",
          "options": [
            {
              "flags": "-v, --verbose",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-v",
              "long": "--verbose",
              "description": "use verbose output"
            },
            {
              "flags": "-vv",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "-vv",
              "description": "more verbose with debug output"
            },
            {
              "flags": "--json",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--json",
              "description": "use json output"
            },
            {
              "flags": "-s --subscriptionNameOrId <subscriptionNameOrId>",
              "required": -27,
              "optional": 0,
              "bool": true,
              "short": "-s",
              "long": "--subscriptionNameOrId",
              "description": "The subscription to show"
            },
            {
              "flags": "-d --details",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-d",
              "long": "--details",
              "description": "Show extra information about the subscription"
            }
          ]
        },
        {
          "name": "set",
          "description": "Set the current subscription",
          "fullName": "account set",
          "usage": "[options] <subscriptionNameOrId>",
          "filePath": "commands/account._js",
          "options": [
            {
              "flags": "-v, --verbose",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-v",
              "long": "--verbose",
              "description": "use verbose output"
            },
            {
              "flags": "-vv",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "-vv",
              "description": "more verbose with debug output"
            },
            {
              "flags": "--json",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--json",
              "description": "use json output"
            }
          ]
        },
        {
          "name": "clear",
          "description": "Remove a subscription or environment, or clear all of the stored account and environment info",
          "fullName": "account clear",
          "usage": "[options]",
          "filePath": "commands/account._js",
          "options": [
            {
              "flags": "-v, --verbose",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-v",
              "long": "--verbose",
              "description": "use verbose output"
            },
            {
              "flags": "-vv",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "-vv",
              "description": "more verbose with debug output"
            },
            {
              "flags": "--json",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--json",
              "description": "use json output"
            },
            {
              "flags": "-s --subscription <subscriptionNameOrId>",
              "required": -19,
              "optional": 0,
              "bool": true,
              "short": "-s",
              "long": "--subscription",
              "description": "Subscription name or id to remove"
            },
            {
              "flags": "-e --environment <environmentName>",
              "required": -18,
              "optional": 0,
              "bool": true,
              "short": "-e",
              "long": "--environment",
              "description": "Environment name to remove"
            },
            {
              "flags": "-q --quiet",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-q",
              "long": "--quiet",
              "description": "quiet mode, do not ask for delete confirmation"
            }
          ]
        }
      ],
      "categories": {
        "env": {
          "name": "env",
          "description": "Commands to manage your account environment",
          "fullName": "account env",
          "usage": "[options] [command]",
          "options": [],
          "commands": [
            {
              "name": "list",
              "description": "List the environments",
              "fullName": "account env list",
              "usage": "[options]",
              "filePath": "commands/account.environment._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                }
              ]
            },
            {
              "name": "show",
              "description": "Show an environment",
              "fullName": "account env show",
              "usage": "[options] [environment]",
              "filePath": "commands/account.environment._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "--environment <environment>",
                  "required": -15,
                  "optional": 0,
                  "bool": true,
                  "long": "--environment",
                  "description": "the environment name"
                }
              ]
            },
            {
              "name": "add",
              "description": "Add an environment",
              "fullName": "account env add",
              "usage": "[options] [environment]",
              "filePath": "commands/account.environment._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "--environment <environment>",
                  "required": -15,
                  "optional": 0,
                  "bool": true,
                  "long": "--environment",
                  "description": "the environment name"
                },
                {
                  "flags": "--portal-url <portalUrl>",
                  "required": -14,
                  "optional": 0,
                  "bool": true,
                  "long": "--portal-url",
                  "description": "the management portal URL"
                },
                {
                  "flags": "--azure-data-lake-analytics-catalog-and-job-endpoint-suffix <azureDataLakeAnalyticsCatalogAndJobEndpointSuffix>",
                  "required": -61,
                  "optional": 0,
                  "bool": true,
                  "long": "--azure-data-lake-analytics-catalog-and-job-endpoint-suffix",
                  "description": "the data lake analytics job and catalog service dns suffix"
                },
                {
                  "flags": "--management-endpoint-url <managementEndpointUrl>",
                  "required": -27,
                  "optional": 0,
                  "bool": true,
                  "long": "--management-endpoint-url",
                  "description": "the management service endpoint"
                },
                {
                  "flags": "--resource-manager-endpoint-url <resourceManagerEndpointUrl>",
                  "required": -33,
                  "optional": 0,
                  "bool": true,
                  "long": "--resource-manager-endpoint-url",
                  "description": "the resource management endpoint"
                },
                {
                  "flags": "--sql-management-endpoint-url <sqlManagementEndpointUrl>",
                  "required": -31,
                  "optional": 0,
                  "bool": true,
                  "long": "--sql-management-endpoint-url",
                  "description": "the sql server management endpoint for mobile commands"
                },
                {
                  "flags": "--sql-server-hostname-suffix <sqlServerHostnameSuffix>",
                  "required": -30,
                  "optional": 0,
                  "bool": true,
                  "long": "--sql-server-hostname-suffix",
                  "description": "the dns suffix for sql servers"
                },
                {
                  "flags": "--active-directory-endpoint-url <activeDirectoryEndpointUrl>",
                  "required": -33,
                  "optional": 0,
                  "bool": true,
                  "long": "--active-directory-endpoint-url",
                  "description": "the Active Directory login endpoint"
                },
                {
                  "flags": "--publishing-profile-url <publishingProfileUrl>",
                  "required": -26,
                  "optional": 0,
                  "bool": true,
                  "long": "--publishing-profile-url",
                  "description": "the publish settings file URL"
                },
                {
                  "flags": "--gallery-endpoint-url <galleryEndpointUrl>",
                  "required": -24,
                  "optional": 0,
                  "bool": true,
                  "long": "--gallery-endpoint-url",
                  "description": "the template gallery endpoint"
                },
                {
                  "flags": "--active-directory-graph-resource-id <activeDirectoryGraphResourceId>",
                  "required": -38,
                  "optional": 0,
                  "bool": true,
                  "long": "--active-directory-graph-resource-id",
                  "description": "the Active Directory resource ID"
                },
                {
                  "flags": "--active-directory-graph-api-version <activeDirectoryGraphApiVersion>",
                  "required": -38,
                  "optional": 0,
                  "bool": true,
                  "long": "--active-directory-graph-api-version",
                  "description": "the Active Directory api version"
                },
                {
                  "flags": "--storage-endpoint-suffix <storageEndpointSuffix>",
                  "required": -27,
                  "optional": 0,
                  "bool": true,
                  "long": "--storage-endpoint-suffix",
                  "description": "the endpoint suffix for storage accounts"
                },
                {
                  "flags": "--key-vault-dns-suffix <keyVaultDnsSuffix>",
                  "required": -24,
                  "optional": 0,
                  "bool": true,
                  "long": "--key-vault-dns-suffix",
                  "description": "the keyvault service dns suffix"
                },
                {
                  "flags": "--azure-data-lake-store-file-system-endpoint-suffix <azureDataLakeStoreFileSystemEndpointSuffix>",
                  "required": -53,
                  "optional": 0,
                  "bool": true,
                  "long": "--azure-data-lake-store-file-system-endpoint-suffix",
                  "description": "the data lake store filesystem service dns suffix"
                },
                {
                  "flags": "--active-directory-resource-id <activeDirectoryResourceId>",
                  "required": -32,
                  "optional": 0,
                  "bool": true,
                  "long": "--active-directory-resource-id",
                  "description": "The resource ID to obtain AD tokens for"
                }
              ]
            },
            {
              "name": "set",
              "description": "Update an environment",
              "fullName": "account env set",
              "usage": "[options] [environment]",
              "filePath": "commands/account.environment._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "--environment <environment>",
                  "required": -15,
                  "optional": 0,
                  "bool": true,
                  "long": "--environment",
                  "description": "the environment name"
                },
                {
                  "flags": "--portal-url <portalUrl>",
                  "required": -14,
                  "optional": 0,
                  "bool": true,
                  "long": "--portal-url",
                  "description": "the management portal URL"
                },
                {
                  "flags": "--active-directory-resource-id <activeDirectoryResourceId>",
                  "required": -32,
                  "optional": 0,
                  "bool": true,
                  "long": "--active-directory-resource-id",
                  "description": "The resource ID to obtain AD tokens for"
                },
                {
                  "flags": "--management-endpoint-url <managementEndpointUrl>",
                  "required": -27,
                  "optional": 0,
                  "bool": true,
                  "long": "--management-endpoint-url",
                  "description": "the management service endpoint"
                },
                {
                  "flags": "--resource-manager-endpoint-url <resourceManagerEndpointUrl>",
                  "required": -33,
                  "optional": 0,
                  "bool": true,
                  "long": "--resource-manager-endpoint-url",
                  "description": "the resource management endpoint"
                },
                {
                  "flags": "--sql-management-endpoint-url <sqlManagementEndpointUrl>",
                  "required": -31,
                  "optional": 0,
                  "bool": true,
                  "long": "--sql-management-endpoint-url",
                  "description": "the sql server management endpoint for mobile commands"
                },
                {
                  "flags": "--sql-server-hostname-suffix <sqlServerHostnameSuffix>",
                  "required": -30,
                  "optional": 0,
                  "bool": true,
                  "long": "--sql-server-hostname-suffix",
                  "description": "the dns suffix for sql servers"
                },
                {
                  "flags": "--active-directory-endpoint-url <activeDirectoryEndpointUrl>",
                  "required": -33,
                  "optional": 0,
                  "bool": true,
                  "long": "--active-directory-endpoint-url",
                  "description": "the Active Directory login endpoint"
                },
                {
                  "flags": "--azure-data-lake-analytics-catalog-and-job-endpoint-suffix <azureDataLakeAnalyticsCatalogAndJobEndpointSuffix>",
                  "required": -61,
                  "optional": 0,
                  "bool": true,
                  "long": "--azure-data-lake-analytics-catalog-and-job-endpoint-suffix",
                  "description": "the data lake analytics job and catalog service dns suffix"
                },
                {
                  "flags": "--gallery-endpoint-url <galleryEndpointUrl>",
                  "required": -24,
                  "optional": 0,
                  "bool": true,
                  "long": "--gallery-endpoint-url",
                  "description": "the template gallery endpoint"
                },
                {
                  "flags": "--active-directory-graph-resource-id <activeDirectoryGraphResourceId>",
                  "required": -38,
                  "optional": 0,
                  "bool": true,
                  "long": "--active-directory-graph-resource-id",
                  "description": "the Active Directory resource ID"
                },
                {
                  "flags": "--active-directory-graph-api-version <activeDirectoryGraphApiVersion>",
                  "required": -38,
                  "optional": 0,
                  "bool": true,
                  "long": "--active-directory-graph-api-version",
                  "description": "the Active Directory api version"
                },
                {
                  "flags": "--storage-endpoint-suffix <storageEndpointSuffix>",
                  "required": -27,
                  "optional": 0,
                  "bool": true,
                  "long": "--storage-endpoint-suffix",
                  "description": "the endpoint suffix for storage accounts"
                },
                {
                  "flags": "--key-vault-dns-suffix <keyVaultDnsSuffix>",
                  "required": -24,
                  "optional": 0,
                  "bool": true,
                  "long": "--key-vault-dns-suffix",
                  "description": "the keyvault service dns suffix"
                },
                {
                  "flags": "--azure-data-lake-store-file-system-endpoint-suffix <azureDataLakeStoreFileSystemEndpointSuffix>",
                  "required": -53,
                  "optional": 0,
                  "bool": true,
                  "long": "--azure-data-lake-store-file-system-endpoint-suffix",
                  "description": "the data lake store filesystem service dns suffix"
                },
                {
                  "flags": "--publishing-profile-url <publishingProfileUrl>",
                  "required": -26,
                  "optional": 0,
                  "bool": true,
                  "long": "--publishing-profile-url",
                  "description": "the publish settings file URL"
                }
              ]
            },
            {
              "name": "delete",
              "description": "Delete an environment",
              "fullName": "account env delete",
              "usage": "[options] [environment]",
              "filePath": "commands/account.environment._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "--environment <environment>",
                  "required": -15,
                  "optional": 0,
                  "bool": true,
                  "long": "--environment",
                  "description": "the environment name"
                }
              ]
            }
          ],
          "categories": {}
        }
      }
    },
    "config": {
      "name": "config",
      "description": "Commands to manage your local settings",
      "fullName": "config",
      "usage": "[options] [command]",
      "options": [],
      "commands": [
        {
          "name": "list",
          "description": "List config settings",
          "fullName": "config list",
          "usage": "[options]",
          "filePath": "commands/config.js",
          "options": [
            {
              "flags": "-v, --verbose",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-v",
              "long": "--verbose",
              "description": "use verbose output"
            },
            {
              "flags": "-vv",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "-vv",
              "description": "more verbose with debug output"
            },
            {
              "flags": "--json",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--json",
              "description": "use json output"
            }
          ]
        },
        {
          "name": "delete",
          "description": "Delete a config setting",
          "fullName": "config delete",
          "usage": "[options] <name>",
          "filePath": "commands/config.js",
          "options": [
            {
              "flags": "-v, --verbose",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-v",
              "long": "--verbose",
              "description": "use verbose output"
            },
            {
              "flags": "-vv",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "-vv",
              "description": "more verbose with debug output"
            },
            {
              "flags": "--json",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--json",
              "description": "use json output"
            }
          ]
        },
        {
          "name": "set",
          "description": "Update a config setting",
          "fullName": "config set",
          "usage": "<name> <value>",
          "filePath": "commands/config.js",
          "options": [
            {
              "flags": "-v, --verbose",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-v",
              "long": "--verbose",
              "description": "use verbose output"
            },
            {
              "flags": "-vv",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "-vv",
              "description": "more verbose with debug output"
            },
            {
              "flags": "--json",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--json",
              "description": "use json output"
            }
          ]
        },
        {
          "name": "mode",
          "description": "Sets the cli working mode, valid names are 'arm' for resource manager and 'asm' for service management",
          "fullName": "config mode",
          "usage": "[options] <name>",
          "filePath": "commands/config.js",
          "options": [
            {
              "flags": "-v, --verbose",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-v",
              "long": "--verbose",
              "description": "use verbose output"
            },
            {
              "flags": "-vv",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "-vv",
              "description": "more verbose with debug output"
            },
            {
              "flags": "--json",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--json",
              "description": "use json output"
            }
          ]
        }
      ],
      "categories": {}
    },
    "storage": {
      "name": "storage",
      "description": "Commands to manage your Storage objects",
      "fullName": "storage",
      "usage": "[options]",
      "options": [],
      "commands": [],
      "categories": {
        "account": {
          "name": "account",
          "description": "Commands to manage your Storage accounts",
          "fullName": "storage account",
          "usage": "[options] [command]",
          "options": [],
          "commands": [
            {
              "name": "list",
              "description": "List storage accounts",
              "fullName": "storage account list",
              "usage": "[options]",
              "filePath": "commands/storage/storage.account._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "-g, --resource-group <resourceGroup>",
                  "required": -22,
                  "optional": 0,
                  "bool": true,
                  "short": "-g",
                  "long": "--resource-group",
                  "description": "the resource group name"
                },
                {
                  "flags": "-s, --subscription <id>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "short": "-s",
                  "long": "--subscription",
                  "description": "the subscription id"
                }
              ]
            },
            {
              "name": "show",
              "description": "Show a storage account",
              "fullName": "storage account show",
              "usage": "[options] <name>",
              "filePath": "commands/storage/storage.account._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "-g, --resource-group <resourceGroup>",
                  "required": -22,
                  "optional": 0,
                  "bool": true,
                  "short": "-g",
                  "long": "--resource-group",
                  "description": "the resource group name"
                },
                {
                  "flags": "-s, --subscription <id>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "short": "-s",
                  "long": "--subscription",
                  "description": "the subscription id"
                }
              ]
            },
            {
              "name": "create",
              "description": "Create a storage account",
              "fullName": "storage account create",
              "usage": "[options] <name>",
              "filePath": "commands/storage/storage.account._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "--tags <tags>",
                  "required": -8,
                  "optional": 0,
                  "bool": true,
                  "long": "--tags",
                  "description": "the account tags. Tags are key=value pairs and separated with semicolon(;)"
                },
                {
                  "flags": "-l, --location <location>",
                  "required": -16,
                  "optional": 0,
                  "bool": true,
                  "short": "-l",
                  "long": "--location",
                  "description": "the location"
                },
                {
                  "flags": "--type <type>",
                  "required": -8,
                  "optional": 0,
                  "bool": true,
                  "long": "--type",
                  "description": "the account type(LRS/ZRS/GRS/RAGRS/PLRS)"
                },
                {
                  "flags": "-g, --resource-group <resourceGroup>",
                  "required": -22,
                  "optional": 0,
                  "bool": true,
                  "short": "-g",
                  "long": "--resource-group",
                  "description": "the resource group name"
                },
                {
                  "flags": "-s, --subscription <id>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "short": "-s",
                  "long": "--subscription",
                  "description": "the subscription id"
                }
              ]
            },
            {
              "name": "set",
              "description": "Update a storage account (Only one property can be updated at a time)",
              "fullName": "storage account set",
              "usage": "[options] <name>",
              "filePath": "commands/storage/storage.account._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "--custom-domain <customDomain>",
                  "required": -17,
                  "optional": 0,
                  "bool": true,
                  "long": "--custom-domain",
                  "description": "the custom domain"
                },
                {
                  "flags": "--subdomain",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--subdomain",
                  "description": "whether uses the 'asverify' subdomain to preregister the custom domain"
                },
                {
                  "flags": "--tags <tags>",
                  "required": -8,
                  "optional": 0,
                  "bool": true,
                  "long": "--tags",
                  "description": "the account tags. Tags are key=value pairs and separated with semicolon(;)"
                },
                {
                  "flags": "--type <type>",
                  "required": -8,
                  "optional": 0,
                  "bool": true,
                  "long": "--type",
                  "description": "the account type(LRS/GRS/RAGRS)"
                },
                {
                  "flags": "-g, --resource-group <resourceGroup>",
                  "required": -22,
                  "optional": 0,
                  "bool": true,
                  "short": "-g",
                  "long": "--resource-group",
                  "description": "the resource group name"
                },
                {
                  "flags": "-s, --subscription <id>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "short": "-s",
                  "long": "--subscription",
                  "description": "the subscription id"
                }
              ]
            },
            {
              "name": "delete",
              "description": "Delete a storage account",
              "fullName": "storage account delete",
              "usage": "[options] <name>",
              "filePath": "commands/storage/storage.account._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "-g, --resource-group <resourceGroup>",
                  "required": -22,
                  "optional": 0,
                  "bool": true,
                  "short": "-g",
                  "long": "--resource-group",
                  "description": "the resource group name"
                },
                {
                  "flags": "-s, --subscription <id>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "short": "-s",
                  "long": "--subscription",
                  "description": "the subscription id"
                },
                {
                  "flags": "-q, --quiet",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-q",
                  "long": "--quiet",
                  "description": "quiet mode, do not ask for delete confirmation"
                }
              ]
            },
            {
              "name": "check",
              "description": "Check whether the account name is valid and is not in use.",
              "fullName": "storage account check",
              "usage": "[options] <name>",
              "filePath": "commands/storage/storage.account._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                }
              ]
            }
          ],
          "categories": {
            "keys": {
              "name": "keys",
              "description": "Commands to manage your Storage account keys",
              "fullName": "storage account keys",
              "usage": "[options] [command]",
              "options": [],
              "commands": [
                {
                  "name": "list",
                  "description": "List the keys for a storage account",
                  "fullName": "storage account keys list",
                  "usage": "[options] <name>",
                  "filePath": "commands/storage/storage.account._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "-g, --resource-group <resourceGroup>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "short": "-g",
                      "long": "--resource-group",
                      "description": "the resource group name"
                    },
                    {
                      "flags": "-s, --subscription <id>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-s",
                      "long": "--subscription",
                      "description": "the subscription id"
                    }
                  ]
                },
                {
                  "name": "renew",
                  "description": "Renew a key for a storage account from your account",
                  "fullName": "storage account keys renew",
                  "usage": "[options] <name>",
                  "filePath": "commands/storage/storage.account._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--primary",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--primary",
                      "description": "Update the primary key"
                    },
                    {
                      "flags": "--secondary",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--secondary",
                      "description": "Update the secondary key"
                    },
                    {
                      "flags": "-g, --resource-group <resourceGroup>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "short": "-g",
                      "long": "--resource-group",
                      "description": "the resource group name"
                    },
                    {
                      "flags": "-s, --subscription <id>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-s",
                      "long": "--subscription",
                      "description": "the subscription id"
                    }
                  ]
                }
              ],
              "categories": {}
            },
            "usage": {
              "name": "usage",
              "description": "Commands to manage your Storage accounts usage",
              "fullName": "storage account usage",
              "usage": "[options] [command]",
              "options": [],
              "commands": [
                {
                  "name": "show",
                  "description": "Show the current count and the limit of the storage accounts under the subscription.",
                  "fullName": "storage account usage show",
                  "usage": "[options] [subscription]",
                  "filePath": "commands/storage/storage.account._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "-s, --subscription <id>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-s",
                      "long": "--subscription",
                      "description": "the subscription id"
                    }
                  ]
                }
              ],
              "categories": {}
            },
            "connectionstring": {
              "name": "connectionstring",
              "description": "Commands to show your Storage connection string",
              "fullName": "storage account connectionstring",
              "usage": "[options] [command]",
              "options": [],
              "commands": [
                {
                  "name": "show",
                  "description": "Show the connection string for your account",
                  "fullName": "storage account connectionstring show",
                  "usage": "[options] <name>",
                  "filePath": "commands/storage/storage.account._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "-g, --resource-group <resourceGroup>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "short": "-g",
                      "long": "--resource-group",
                      "description": "the resource group name"
                    },
                    {
                      "flags": "-s, --subscription <id>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-s",
                      "long": "--subscription",
                      "description": "the subscription id"
                    },
                    {
                      "flags": "--use-http",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--use-http",
                      "description": "Use http as default endpoints protocol"
                    },
                    {
                      "flags": "--blob-endpoint <blobEndpoint>",
                      "required": -17,
                      "optional": 0,
                      "bool": true,
                      "long": "--blob-endpoint",
                      "description": "the blob endpoint"
                    },
                    {
                      "flags": "--queue-endpoint <queueEndpoint>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--queue-endpoint",
                      "description": "the queue endpoint"
                    },
                    {
                      "flags": "--table-endpoint <tableEndpoint>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--table-endpoint",
                      "description": "the table endpoint"
                    },
                    {
                      "flags": "--file-endpoint <fileEndpoint>",
                      "required": -17,
                      "optional": 0,
                      "bool": true,
                      "long": "--file-endpoint",
                      "description": "the file endpoint"
                    }
                  ]
                }
              ],
              "categories": {}
            }
          }
        },
        "container": {
          "name": "container",
          "description": "Commands to manage your Storage containers",
          "fullName": "storage container",
          "usage": "[options] [command]",
          "options": [],
          "commands": [
            {
              "name": "list",
              "description": "List storage containers with wildcard",
              "fullName": "storage container list",
              "usage": "[options] [prefix]",
              "filePath": "commands/storage/storage.blob._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "-p, --prefix <prefix>",
                  "required": -14,
                  "optional": 0,
                  "bool": true,
                  "short": "-p",
                  "long": "--prefix",
                  "description": "the storage container name prefix"
                },
                {
                  "flags": "-a, --account-name <accountName>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "short": "-a",
                  "long": "--account-name",
                  "description": "the storage account name"
                },
                {
                  "flags": "-k, --account-key <accountKey>",
                  "required": -19,
                  "optional": 0,
                  "bool": true,
                  "short": "-k",
                  "long": "--account-key",
                  "description": "the storage account key"
                },
                {
                  "flags": "-c, --connection-string <connectionString>",
                  "required": -25,
                  "optional": 0,
                  "bool": true,
                  "short": "-c",
                  "long": "--connection-string",
                  "description": "the storage connection string"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "run storage command in debug mode"
                }
              ]
            },
            {
              "name": "show",
              "description": "Show details of the specified storage container",
              "fullName": "storage container show",
              "usage": "[options] [container]",
              "filePath": "commands/storage/storage.blob._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "--container <container>",
                  "required": -13,
                  "optional": 0,
                  "bool": true,
                  "long": "--container",
                  "description": "the storage container name"
                },
                {
                  "flags": "-a, --account-name <accountName>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "short": "-a",
                  "long": "--account-name",
                  "description": "the storage account name"
                },
                {
                  "flags": "-k, --account-key <accountKey>",
                  "required": -19,
                  "optional": 0,
                  "bool": true,
                  "short": "-k",
                  "long": "--account-key",
                  "description": "the storage account key"
                },
                {
                  "flags": "-c, --connection-string <connectionString>",
                  "required": -25,
                  "optional": 0,
                  "bool": true,
                  "short": "-c",
                  "long": "--connection-string",
                  "description": "the storage connection string"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "run storage command in debug mode"
                }
              ]
            },
            {
              "name": "create",
              "description": "Create a storage container",
              "fullName": "storage container create",
              "usage": "[options] [container]",
              "filePath": "commands/storage/storage.blob._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "--container <container>",
                  "required": -13,
                  "optional": 0,
                  "bool": true,
                  "long": "--container",
                  "description": "the storage container name"
                },
                {
                  "flags": "-p, --permission <permission>",
                  "required": -18,
                  "optional": 0,
                  "bool": true,
                  "short": "-p",
                  "long": "--permission",
                  "description": "the storage container ACL permission(Off/Blob/Container)"
                },
                {
                  "flags": "-a, --account-name <accountName>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "short": "-a",
                  "long": "--account-name",
                  "description": "the storage account name"
                },
                {
                  "flags": "-k, --account-key <accountKey>",
                  "required": -19,
                  "optional": 0,
                  "bool": true,
                  "short": "-k",
                  "long": "--account-key",
                  "description": "the storage account key"
                },
                {
                  "flags": "-c, --connection-string <connectionString>",
                  "required": -25,
                  "optional": 0,
                  "bool": true,
                  "short": "-c",
                  "long": "--connection-string",
                  "description": "the storage connection string"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "run storage command in debug mode"
                }
              ]
            },
            {
              "name": "delete",
              "description": "Delete the specified storage container",
              "fullName": "storage container delete",
              "usage": "[options] [container]",
              "filePath": "commands/storage/storage.blob._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "--container <container>",
                  "required": -13,
                  "optional": 0,
                  "bool": true,
                  "long": "--container",
                  "description": "the storage container name"
                },
                {
                  "flags": "-q, --quiet",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-q",
                  "long": "--quiet",
                  "description": "remove the specified Storage container without confirmation"
                },
                {
                  "flags": "-a, --account-name <accountName>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "short": "-a",
                  "long": "--account-name",
                  "description": "the storage account name"
                },
                {
                  "flags": "-k, --account-key <accountKey>",
                  "required": -19,
                  "optional": 0,
                  "bool": true,
                  "short": "-k",
                  "long": "--account-key",
                  "description": "the storage account key"
                },
                {
                  "flags": "-c, --connection-string <connectionString>",
                  "required": -25,
                  "optional": 0,
                  "bool": true,
                  "short": "-c",
                  "long": "--connection-string",
                  "description": "the storage connection string"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "run storage command in debug mode"
                }
              ]
            },
            {
              "name": "set",
              "description": "Set storage container ACL",
              "fullName": "storage container set",
              "usage": "[options] [container]",
              "filePath": "commands/storage/storage.blob._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "--container <container>",
                  "required": -13,
                  "optional": 0,
                  "bool": true,
                  "long": "--container",
                  "description": "the storage container name"
                },
                {
                  "flags": "-p, --permission <permission>",
                  "required": -18,
                  "optional": 0,
                  "bool": true,
                  "short": "-p",
                  "long": "--permission",
                  "description": "the storage container ACL permission(Off/Blob/Container)"
                },
                {
                  "flags": "-a, --account-name <accountName>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "short": "-a",
                  "long": "--account-name",
                  "description": "the storage account name"
                },
                {
                  "flags": "-k, --account-key <accountKey>",
                  "required": -19,
                  "optional": 0,
                  "bool": true,
                  "short": "-k",
                  "long": "--account-key",
                  "description": "the storage account key"
                },
                {
                  "flags": "-c, --connection-string <connectionString>",
                  "required": -25,
                  "optional": 0,
                  "bool": true,
                  "short": "-c",
                  "long": "--connection-string",
                  "description": "the storage connection string"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "run storage command in debug mode"
                }
              ]
            }
          ],
          "categories": {
            "sas": {
              "name": "sas",
              "description": "Commands to manage shared access signatures of your Storage container",
              "fullName": "storage container sas",
              "usage": "[options] [command]",
              "options": [],
              "commands": [
                {
                  "name": "create",
                  "description": "Generate shared access signature of storage container",
                  "fullName": "storage container sas create",
                  "usage": "[options] [container] [permissions] [expiry]",
                  "filePath": "commands/storage/storage.blob._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--container <container>",
                      "required": -13,
                      "optional": 0,
                      "bool": true,
                      "long": "--container",
                      "description": "the storage container name"
                    },
                    {
                      "flags": "--permissions <permissions>",
                      "required": -15,
                      "optional": 0,
                      "bool": true,
                      "long": "--permissions",
                      "description": "the operation permissions combining symbols of r(Read)/w(Write)/d(Delete)/l(List)"
                    },
                    {
                      "flags": "--start <start>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--start",
                      "description": "the UTC time at which the SAS becomes valid"
                    },
                    {
                      "flags": "--expiry <expiry>",
                      "required": -10,
                      "optional": 0,
                      "bool": true,
                      "long": "--expiry",
                      "description": "the UTC time at which the SAS expires"
                    },
                    {
                      "flags": "--policy <policy>",
                      "required": -10,
                      "optional": 0,
                      "bool": true,
                      "long": "--policy",
                      "description": "the stored access policy identifier"
                    },
                    {
                      "flags": "-a, --account-name <accountName>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-a",
                      "long": "--account-name",
                      "description": "the storage account name"
                    },
                    {
                      "flags": "-k, --account-key <accountKey>",
                      "required": -19,
                      "optional": 0,
                      "bool": true,
                      "short": "-k",
                      "long": "--account-key",
                      "description": "the storage account key"
                    },
                    {
                      "flags": "-c, --connection-string <connectionString>",
                      "required": -25,
                      "optional": 0,
                      "bool": true,
                      "short": "-c",
                      "long": "--connection-string",
                      "description": "the storage connection string"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "run storage command in debug mode"
                    }
                  ]
                }
              ],
              "categories": {}
            },
            "policy": {
              "name": "policy",
              "description": "Commands to manage stored access policies of your Storage container",
              "fullName": "storage container policy",
              "usage": "[options] [command]",
              "options": [],
              "commands": [
                {
                  "name": "create",
                  "description": "Create a stored access policy on the container",
                  "fullName": "storage container policy create",
                  "usage": "[options] [container] [name]",
                  "filePath": "commands/storage/storage.blob._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--container <container>",
                      "required": -13,
                      "optional": 0,
                      "bool": true,
                      "long": "--container",
                      "description": "the storage container name"
                    },
                    {
                      "flags": "--name <name>",
                      "required": -8,
                      "optional": 0,
                      "bool": true,
                      "long": "--name",
                      "description": "the policy name"
                    },
                    {
                      "flags": "--start <start>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--start",
                      "description": "the UTC time at which the policy becomes valid"
                    },
                    {
                      "flags": "--expiry <expiry>",
                      "required": -10,
                      "optional": 0,
                      "bool": true,
                      "long": "--expiry",
                      "description": "the UTC time at which the policy expires"
                    },
                    {
                      "flags": "--permissions <permissions>",
                      "required": -15,
                      "optional": 0,
                      "bool": true,
                      "long": "--permissions",
                      "description": "the operation permissions combining symbols of r(Read)/w(Write)/d(Delete)/l(List)"
                    },
                    {
                      "flags": "-a, --account-name <accountName>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-a",
                      "long": "--account-name",
                      "description": "the storage account name"
                    },
                    {
                      "flags": "-k, --account-key <accountKey>",
                      "required": -19,
                      "optional": 0,
                      "bool": true,
                      "short": "-k",
                      "long": "--account-key",
                      "description": "the storage account key"
                    },
                    {
                      "flags": "-c, --connection-string <connectionString>",
                      "required": -25,
                      "optional": 0,
                      "bool": true,
                      "short": "-c",
                      "long": "--connection-string",
                      "description": "the storage connection string"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "run storage command in debug mode"
                    }
                  ]
                },
                {
                  "name": "show",
                  "description": "Show a stored access policy on the container",
                  "fullName": "storage container policy show",
                  "usage": "[options] [container] [name]",
                  "filePath": "commands/storage/storage.blob._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--container <container>",
                      "required": -13,
                      "optional": 0,
                      "bool": true,
                      "long": "--container",
                      "description": "the storage container name"
                    },
                    {
                      "flags": "--name <name>",
                      "required": -8,
                      "optional": 0,
                      "bool": true,
                      "long": "--name",
                      "description": "the policy name"
                    },
                    {
                      "flags": "-a, --account-name <accountName>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-a",
                      "long": "--account-name",
                      "description": "the storage account name"
                    },
                    {
                      "flags": "-k, --account-key <accountKey>",
                      "required": -19,
                      "optional": 0,
                      "bool": true,
                      "short": "-k",
                      "long": "--account-key",
                      "description": "the storage account key"
                    },
                    {
                      "flags": "-c, --connection-string <connectionString>",
                      "required": -25,
                      "optional": 0,
                      "bool": true,
                      "short": "-c",
                      "long": "--connection-string",
                      "description": "the storage connection string"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "run storage command in debug mode"
                    }
                  ]
                },
                {
                  "name": "list",
                  "description": "List stored access policies on the container",
                  "fullName": "storage container policy list",
                  "usage": "[options] [container]",
                  "filePath": "commands/storage/storage.blob._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--container <container>",
                      "required": -13,
                      "optional": 0,
                      "bool": true,
                      "long": "--container",
                      "description": "the storage container name"
                    },
                    {
                      "flags": "-a, --account-name <accountName>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-a",
                      "long": "--account-name",
                      "description": "the storage account name"
                    },
                    {
                      "flags": "-k, --account-key <accountKey>",
                      "required": -19,
                      "optional": 0,
                      "bool": true,
                      "short": "-k",
                      "long": "--account-key",
                      "description": "the storage account key"
                    },
                    {
                      "flags": "-c, --connection-string <connectionString>",
                      "required": -25,
                      "optional": 0,
                      "bool": true,
                      "short": "-c",
                      "long": "--connection-string",
                      "description": "the storage connection string"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "run storage command in debug mode"
                    }
                  ]
                },
                {
                  "name": "set",
                  "description": "Set a stored access policy on the container",
                  "fullName": "storage container policy set",
                  "usage": "[options] [container] [name]",
                  "filePath": "commands/storage/storage.blob._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--container <container>",
                      "required": -13,
                      "optional": 0,
                      "bool": true,
                      "long": "--container",
                      "description": "the storage container name"
                    },
                    {
                      "flags": "--name <name>",
                      "required": -8,
                      "optional": 0,
                      "bool": true,
                      "long": "--name",
                      "description": "the policy name"
                    },
                    {
                      "flags": "--start <start>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--start",
                      "description": "the UTC time at which the policy becomes valid and passing two spaces means to remove the existing setting"
                    },
                    {
                      "flags": "--expiry <expiry>",
                      "required": -10,
                      "optional": 0,
                      "bool": true,
                      "long": "--expiry",
                      "description": "the UTC time at which the policy expires and passing two spaces means to remove the existing setting"
                    },
                    {
                      "flags": "--permissions <permissions>",
                      "required": -15,
                      "optional": 0,
                      "bool": true,
                      "long": "--permissions",
                      "description": "the operation permissions combining symbols of r(Read)/w(Write)/d(Delete)/l(List) and passing two spaces means to remove the existing setting"
                    },
                    {
                      "flags": "-a, --account-name <accountName>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-a",
                      "long": "--account-name",
                      "description": "the storage account name"
                    },
                    {
                      "flags": "-k, --account-key <accountKey>",
                      "required": -19,
                      "optional": 0,
                      "bool": true,
                      "short": "-k",
                      "long": "--account-key",
                      "description": "the storage account key"
                    },
                    {
                      "flags": "-c, --connection-string <connectionString>",
                      "required": -25,
                      "optional": 0,
                      "bool": true,
                      "short": "-c",
                      "long": "--connection-string",
                      "description": "the storage connection string"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "run storage command in debug mode"
                    }
                  ]
                },
                {
                  "name": "delete",
                  "description": "Delete a stored access policy on the container",
                  "fullName": "storage container policy delete",
                  "usage": "[options] [container] [name]",
                  "filePath": "commands/storage/storage.blob._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--container <container>",
                      "required": -13,
                      "optional": 0,
                      "bool": true,
                      "long": "--container",
                      "description": "the storage container name"
                    },
                    {
                      "flags": "--name <name>",
                      "required": -8,
                      "optional": 0,
                      "bool": true,
                      "long": "--name",
                      "description": "the policy name"
                    },
                    {
                      "flags": "-a, --account-name <accountName>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-a",
                      "long": "--account-name",
                      "description": "the storage account name"
                    },
                    {
                      "flags": "-k, --account-key <accountKey>",
                      "required": -19,
                      "optional": 0,
                      "bool": true,
                      "short": "-k",
                      "long": "--account-key",
                      "description": "the storage account key"
                    },
                    {
                      "flags": "-c, --connection-string <connectionString>",
                      "required": -25,
                      "optional": 0,
                      "bool": true,
                      "short": "-c",
                      "long": "--connection-string",
                      "description": "the storage connection string"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "run storage command in debug mode"
                    }
                  ]
                }
              ],
              "categories": {}
            }
          }
        },
        "blob": {
          "name": "blob",
          "description": "Commands to manage your Storage blobs",
          "fullName": "storage blob",
          "usage": "[options] [command]",
          "options": [],
          "commands": [
            {
              "name": "list",
              "description": "List storage blob in the specified storage container use wildcard and blob name prefix",
              "fullName": "storage blob list",
              "usage": "[options] [container] [prefix]",
              "filePath": "commands/storage/storage.blob._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "--container <container>",
                  "required": -13,
                  "optional": 0,
                  "bool": true,
                  "long": "--container",
                  "description": "the storage container name"
                },
                {
                  "flags": "-p, --prefix <prefix>",
                  "required": -14,
                  "optional": 0,
                  "bool": true,
                  "short": "-p",
                  "long": "--prefix",
                  "description": "the blob name prefix"
                },
                {
                  "flags": "--sas <sas>",
                  "required": -7,
                  "optional": 0,
                  "bool": true,
                  "long": "--sas",
                  "description": "the shared access signature of the storage container"
                },
                {
                  "flags": "-a, --account-name <accountName>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "short": "-a",
                  "long": "--account-name",
                  "description": "the storage account name"
                },
                {
                  "flags": "-k, --account-key <accountKey>",
                  "required": -19,
                  "optional": 0,
                  "bool": true,
                  "short": "-k",
                  "long": "--account-key",
                  "description": "the storage account key"
                },
                {
                  "flags": "-c, --connection-string <connectionString>",
                  "required": -25,
                  "optional": 0,
                  "bool": true,
                  "short": "-c",
                  "long": "--connection-string",
                  "description": "the storage connection string"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "run storage command in debug mode"
                }
              ]
            },
            {
              "name": "show",
              "description": "Show details of the specified storage blob",
              "fullName": "storage blob show",
              "usage": "[options] [container] [blob]",
              "filePath": "commands/storage/storage.blob._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "--container <container>",
                  "required": -13,
                  "optional": 0,
                  "bool": true,
                  "long": "--container",
                  "description": "the storage container name"
                },
                {
                  "flags": "-b, --blob <blobName>",
                  "required": -12,
                  "optional": 0,
                  "bool": true,
                  "short": "-b",
                  "long": "--blob",
                  "description": "the storage blob name"
                },
                {
                  "flags": "--sas <sas>",
                  "required": -7,
                  "optional": 0,
                  "bool": true,
                  "long": "--sas",
                  "description": "the shared access signature of the storage container or blob"
                },
                {
                  "flags": "-a, --account-name <accountName>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "short": "-a",
                  "long": "--account-name",
                  "description": "the storage account name"
                },
                {
                  "flags": "-k, --account-key <accountKey>",
                  "required": -19,
                  "optional": 0,
                  "bool": true,
                  "short": "-k",
                  "long": "--account-key",
                  "description": "the storage account key"
                },
                {
                  "flags": "-c, --connection-string <connectionString>",
                  "required": -25,
                  "optional": 0,
                  "bool": true,
                  "short": "-c",
                  "long": "--connection-string",
                  "description": "the storage connection string"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "run storage command in debug mode"
                }
              ]
            },
            {
              "name": "delete",
              "description": "Delete the specified storage blob",
              "fullName": "storage blob delete",
              "usage": "[options] [container] [blob]",
              "filePath": "commands/storage/storage.blob._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "--container <container>",
                  "required": -13,
                  "optional": 0,
                  "bool": true,
                  "long": "--container",
                  "description": "the storage container name"
                },
                {
                  "flags": "-b, --blob <blobName>",
                  "required": -12,
                  "optional": 0,
                  "bool": true,
                  "short": "-b",
                  "long": "--blob",
                  "description": "the storage blob name"
                },
                {
                  "flags": "--sas <sas>",
                  "required": -7,
                  "optional": 0,
                  "bool": true,
                  "long": "--sas",
                  "description": "the shared access signature of the storage container or blob"
                },
                {
                  "flags": "-q, --quiet",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-q",
                  "long": "--quiet",
                  "description": "remove the specified Storage blob without confirmation"
                },
                {
                  "flags": "-a, --account-name <accountName>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "short": "-a",
                  "long": "--account-name",
                  "description": "the storage account name"
                },
                {
                  "flags": "-k, --account-key <accountKey>",
                  "required": -19,
                  "optional": 0,
                  "bool": true,
                  "short": "-k",
                  "long": "--account-key",
                  "description": "the storage account key"
                },
                {
                  "flags": "-c, --connection-string <connectionString>",
                  "required": -25,
                  "optional": 0,
                  "bool": true,
                  "short": "-c",
                  "long": "--connection-string",
                  "description": "the storage connection string"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "run storage command in debug mode"
                }
              ]
            },
            {
              "name": "upload",
              "description": "Upload the specified file to storage blob",
              "fullName": "storage blob upload",
              "usage": "[options] [file] [container] [blob]",
              "filePath": "commands/storage/storage.blob._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "-f, --file <file>",
                  "required": -12,
                  "optional": 0,
                  "bool": true,
                  "short": "-f",
                  "long": "--file",
                  "description": "the local file path"
                },
                {
                  "flags": "--container <container>",
                  "required": -13,
                  "optional": 0,
                  "bool": true,
                  "long": "--container",
                  "description": "the storage container name"
                },
                {
                  "flags": "-b, --blob <blobName>",
                  "required": -12,
                  "optional": 0,
                  "bool": true,
                  "short": "-b",
                  "long": "--blob",
                  "description": "the storage blob name"
                },
                {
                  "flags": "-t, --blobtype <blobtype>",
                  "required": -16,
                  "optional": 0,
                  "bool": true,
                  "short": "-t",
                  "long": "--blobtype",
                  "description": "the storage blob type(block, page, append)"
                },
                {
                  "flags": "-p, --properties <properties>",
                  "required": -18,
                  "optional": 0,
                  "bool": true,
                  "short": "-p",
                  "long": "--properties",
                  "description": "the storage blob properties for uploaded file. Properties are key=value pairs and separated with semicolon(;). Available properties are contentType, contentEncoding, contentLanguage, cacheControl"
                },
                {
                  "flags": "-m, --metadata <metadata>",
                  "required": -16,
                  "optional": 0,
                  "bool": true,
                  "short": "-m",
                  "long": "--metadata",
                  "description": "the storage blob metadata for uploaded file. Metadata are key=value pairs and separated with semicolon(;)"
                },
                {
                  "flags": "--concurrenttaskcount <concurrenttaskcount>",
                  "required": -23,
                  "optional": 0,
                  "bool": true,
                  "long": "--concurrenttaskcount",
                  "description": "the maximum number of concurrent upload requests"
                },
                {
                  "flags": "-q, --quiet",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-q",
                  "long": "--quiet",
                  "description": "overwrite the specified Storage blob without confirmation"
                },
                {
                  "flags": "-a, --account-name <accountName>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "short": "-a",
                  "long": "--account-name",
                  "description": "the storage account name"
                },
                {
                  "flags": "-k, --account-key <accountKey>",
                  "required": -19,
                  "optional": 0,
                  "bool": true,
                  "short": "-k",
                  "long": "--account-key",
                  "description": "the storage account key"
                },
                {
                  "flags": "-c, --connection-string <connectionString>",
                  "required": -25,
                  "optional": 0,
                  "bool": true,
                  "short": "-c",
                  "long": "--connection-string",
                  "description": "the storage connection string"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "run storage command in debug mode"
                }
              ]
            },
            {
              "name": "download",
              "description": "Download the specified storage blob",
              "fullName": "storage blob download",
              "usage": "[options] [container] [blob] [destination]",
              "filePath": "commands/storage/storage.blob._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "--container <container>",
                  "required": -13,
                  "optional": 0,
                  "bool": true,
                  "long": "--container",
                  "description": "the storage container name"
                },
                {
                  "flags": "-b, --blob <blobName>",
                  "required": -12,
                  "optional": 0,
                  "bool": true,
                  "short": "-b",
                  "long": "--blob",
                  "description": "the storage blob name"
                },
                {
                  "flags": "-d, --destination [destination]",
                  "required": 0,
                  "optional": -19,
                  "bool": true,
                  "short": "-d",
                  "long": "--destination",
                  "description": "download destination file or directory path"
                },
                {
                  "flags": "-m, --checkmd5",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-m",
                  "long": "--checkmd5",
                  "description": "check md5sum for the downloaded file"
                },
                {
                  "flags": "--concurrenttaskcount <concurrenttaskcount>",
                  "required": -23,
                  "optional": 0,
                  "bool": true,
                  "long": "--concurrenttaskcount",
                  "description": "the maximum number of concurrent download requests"
                },
                {
                  "flags": "--sas <sas>",
                  "required": -7,
                  "optional": 0,
                  "bool": true,
                  "long": "--sas",
                  "description": "the shared access signature of the storage container or blob"
                },
                {
                  "flags": "-q, --quiet",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-q",
                  "long": "--quiet",
                  "description": "overwrite the destination file without confirmation"
                },
                {
                  "flags": "-a, --account-name <accountName>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "short": "-a",
                  "long": "--account-name",
                  "description": "the storage account name"
                },
                {
                  "flags": "-k, --account-key <accountKey>",
                  "required": -19,
                  "optional": 0,
                  "bool": true,
                  "short": "-k",
                  "long": "--account-key",
                  "description": "the storage account key"
                },
                {
                  "flags": "-c, --connection-string <connectionString>",
                  "required": -25,
                  "optional": 0,
                  "bool": true,
                  "short": "-c",
                  "long": "--connection-string",
                  "description": "the storage connection string"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "run storage command in debug mode"
                }
              ]
            }
          ],
          "categories": {
            "copy": {
              "name": "copy",
              "description": "Commands to manage your blob copy operations",
              "fullName": "storage blob copy",
              "usage": "[options] [command]",
              "options": [],
              "commands": [
                {
                  "name": "start",
                  "description": "Start to copy the resource to the specified storage blob which completes asynchronously",
                  "fullName": "storage blob copy start",
                  "usage": "[options] [sourceUri] [destContainer]",
                  "filePath": "commands/storage/storage.blob._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--source-sas <sourceSas>",
                      "required": -14,
                      "optional": 0,
                      "bool": true,
                      "long": "--source-sas",
                      "description": "the shared access signature of the source storage"
                    },
                    {
                      "flags": "--source-uri <sourceUri>",
                      "required": -14,
                      "optional": 0,
                      "bool": true,
                      "long": "--source-uri",
                      "description": "the source storage blob or file absolute uri"
                    },
                    {
                      "flags": "--source-container <sourceContainer>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "long": "--source-container",
                      "description": "the source storage container name when copies a blob to a blob"
                    },
                    {
                      "flags": "--source-blob <sourceBlob>",
                      "required": -15,
                      "optional": 0,
                      "bool": true,
                      "long": "--source-blob",
                      "description": "the source storage blob name when copies a blob to a blob"
                    },
                    {
                      "flags": "--source-share <sourceShare>",
                      "required": -16,
                      "optional": 0,
                      "bool": true,
                      "long": "--source-share",
                      "description": "the source storage share name when copies a file to a blob"
                    },
                    {
                      "flags": "--source-path <sourcePath>",
                      "required": -15,
                      "optional": 0,
                      "bool": true,
                      "long": "--source-path",
                      "description": "the source storage file path when copies a file to a blob"
                    },
                    {
                      "flags": "--dest-account-name <destAccountName>",
                      "required": -21,
                      "optional": 0,
                      "bool": true,
                      "long": "--dest-account-name",
                      "description": "the destination storage account name"
                    },
                    {
                      "flags": "--dest-account-key <destAccountKey>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "long": "--dest-account-key",
                      "description": "the destination storage account key"
                    },
                    {
                      "flags": "--dest-connection-string <destConnectionString>",
                      "required": -26,
                      "optional": 0,
                      "bool": true,
                      "long": "--dest-connection-string",
                      "description": "the destination storage connection string"
                    },
                    {
                      "flags": "--dest-sas <destSas>",
                      "required": -12,
                      "optional": 0,
                      "bool": true,
                      "long": "--dest-sas",
                      "description": "the shared access signature of the destination storage container or blob"
                    },
                    {
                      "flags": "--dest-container <destContainer>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--dest-container",
                      "description": "the destination storage container name"
                    },
                    {
                      "flags": "--dest-blob <destBlob>",
                      "required": -13,
                      "optional": 0,
                      "bool": true,
                      "long": "--dest-blob",
                      "description": "the destination storage blob name"
                    },
                    {
                      "flags": "-q, --quiet",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-q",
                      "long": "--quiet",
                      "description": "overwrite the destination blob without confirmation"
                    },
                    {
                      "flags": "-a, --account-name <accountName>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-a",
                      "long": "--account-name",
                      "description": "the storage account name"
                    },
                    {
                      "flags": "-k, --account-key <accountKey>",
                      "required": -19,
                      "optional": 0,
                      "bool": true,
                      "short": "-k",
                      "long": "--account-key",
                      "description": "the storage account key"
                    },
                    {
                      "flags": "-c, --connection-string <connectionString>",
                      "required": -25,
                      "optional": 0,
                      "bool": true,
                      "short": "-c",
                      "long": "--connection-string",
                      "description": "the storage connection string"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "run storage command in debug mode"
                    }
                  ]
                },
                {
                  "name": "show",
                  "description": "Show the copy status",
                  "fullName": "storage blob copy show",
                  "usage": "[options] [container] [blob]",
                  "filePath": "commands/storage/storage.blob._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--container <container>",
                      "required": -13,
                      "optional": 0,
                      "bool": true,
                      "long": "--container",
                      "description": "the destination container in the blob copy start operation"
                    },
                    {
                      "flags": "--blob <blob>",
                      "required": -8,
                      "optional": 0,
                      "bool": true,
                      "long": "--blob",
                      "description": "the destination blob in the blob copy start operation"
                    },
                    {
                      "flags": "--sas <sas>",
                      "required": -7,
                      "optional": 0,
                      "bool": true,
                      "long": "--sas",
                      "description": "the shared access signature of the destination storage container or blob"
                    },
                    {
                      "flags": "-a, --account-name <accountName>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-a",
                      "long": "--account-name",
                      "description": "the storage account name"
                    },
                    {
                      "flags": "-k, --account-key <accountKey>",
                      "required": -19,
                      "optional": 0,
                      "bool": true,
                      "short": "-k",
                      "long": "--account-key",
                      "description": "the storage account key"
                    },
                    {
                      "flags": "-c, --connection-string <connectionString>",
                      "required": -25,
                      "optional": 0,
                      "bool": true,
                      "short": "-c",
                      "long": "--connection-string",
                      "description": "the storage connection string"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "run storage command in debug mode"
                    }
                  ]
                },
                {
                  "name": "stop",
                  "description": "Stop the copy operation",
                  "fullName": "storage blob copy stop",
                  "usage": "[options] [container] [blob] [copyid]",
                  "filePath": "commands/storage/storage.blob._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--container <container>",
                      "required": -13,
                      "optional": 0,
                      "bool": true,
                      "long": "--container",
                      "description": "the destination container in the blob copy start operation"
                    },
                    {
                      "flags": "--blob <blob>",
                      "required": -8,
                      "optional": 0,
                      "bool": true,
                      "long": "--blob",
                      "description": "the destination blob in the blob copy start operation"
                    },
                    {
                      "flags": "--copyid <copyid>",
                      "required": -10,
                      "optional": 0,
                      "bool": true,
                      "long": "--copyid",
                      "description": "the copy ID which is returned from blob copy start operation"
                    },
                    {
                      "flags": "-a, --account-name <accountName>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-a",
                      "long": "--account-name",
                      "description": "the storage account name"
                    },
                    {
                      "flags": "-k, --account-key <accountKey>",
                      "required": -19,
                      "optional": 0,
                      "bool": true,
                      "short": "-k",
                      "long": "--account-key",
                      "description": "the storage account key"
                    },
                    {
                      "flags": "-c, --connection-string <connectionString>",
                      "required": -25,
                      "optional": 0,
                      "bool": true,
                      "short": "-c",
                      "long": "--connection-string",
                      "description": "the storage connection string"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "run storage command in debug mode"
                    }
                  ]
                }
              ],
              "categories": {}
            },
            "sas": {
              "name": "sas",
              "description": "Commands to manage shared access signature of your Storage blob",
              "fullName": "storage blob sas",
              "usage": "[options] [command]",
              "options": [],
              "commands": [
                {
                  "name": "create",
                  "description": "Generate shared access signature of storage blob",
                  "fullName": "storage blob sas create",
                  "usage": "[options] [container] [blob] [permissions] [expiry]",
                  "filePath": "commands/storage/storage.blob._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--container <container>",
                      "required": -13,
                      "optional": 0,
                      "bool": true,
                      "long": "--container",
                      "description": "the storage container name"
                    },
                    {
                      "flags": "--blob <blobName>",
                      "required": -8,
                      "optional": 0,
                      "bool": true,
                      "long": "--blob",
                      "description": "the storage blob name"
                    },
                    {
                      "flags": "--permissions <permissions>",
                      "required": -15,
                      "optional": 0,
                      "bool": true,
                      "long": "--permissions",
                      "description": "the operation permissions combining symbols of r(Read)/w(Write)/d(Delete)"
                    },
                    {
                      "flags": "--start <start>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--start",
                      "description": "the UTC time at which the SAS becomes valid"
                    },
                    {
                      "flags": "--expiry <expiry>",
                      "required": -10,
                      "optional": 0,
                      "bool": true,
                      "long": "--expiry",
                      "description": "the UTC time at which the SAS expires"
                    },
                    {
                      "flags": "--policy <policy>",
                      "required": -10,
                      "optional": 0,
                      "bool": true,
                      "long": "--policy",
                      "description": "the stored access policy identifier"
                    },
                    {
                      "flags": "-a, --account-name <accountName>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-a",
                      "long": "--account-name",
                      "description": "the storage account name"
                    },
                    {
                      "flags": "-k, --account-key <accountKey>",
                      "required": -19,
                      "optional": 0,
                      "bool": true,
                      "short": "-k",
                      "long": "--account-key",
                      "description": "the storage account key"
                    },
                    {
                      "flags": "-c, --connection-string <connectionString>",
                      "required": -25,
                      "optional": 0,
                      "bool": true,
                      "short": "-c",
                      "long": "--connection-string",
                      "description": "the storage connection string"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "run storage command in debug mode"
                    }
                  ]
                }
              ],
              "categories": {}
            }
          }
        },
        "share": {
          "name": "share",
          "description": "Commands to manage your Storage file shares",
          "fullName": "storage share",
          "usage": "[options] [command]",
          "options": [],
          "commands": [
            {
              "name": "create",
              "description": "Create a storage file share",
              "fullName": "storage share create",
              "usage": "[options] [share]",
              "filePath": "commands/storage/storage.file._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "--share <share>",
                  "required": -9,
                  "optional": 0,
                  "bool": true,
                  "long": "--share",
                  "description": "the storage file share name"
                },
                {
                  "flags": "--quota <quota>",
                  "required": -9,
                  "optional": 0,
                  "bool": true,
                  "long": "--quota",
                  "description": "the storage file share quota (in GB)"
                },
                {
                  "flags": "-a, --account-name <accountName>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "short": "-a",
                  "long": "--account-name",
                  "description": "the storage account name"
                },
                {
                  "flags": "-k, --account-key <accountKey>",
                  "required": -19,
                  "optional": 0,
                  "bool": true,
                  "short": "-k",
                  "long": "--account-key",
                  "description": "the storage account key"
                },
                {
                  "flags": "-c, --connection-string <connectionString>",
                  "required": -25,
                  "optional": 0,
                  "bool": true,
                  "short": "-c",
                  "long": "--connection-string",
                  "description": "the storage connection string"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "run storage command in debug mode"
                }
              ]
            },
            {
              "name": "show",
              "description": "Show details of the storage file share",
              "fullName": "storage share show",
              "usage": "[options] [share]",
              "filePath": "commands/storage/storage.file._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "--share <share>",
                  "required": -9,
                  "optional": 0,
                  "bool": true,
                  "long": "--share",
                  "description": "the storage file share name"
                },
                {
                  "flags": "-a, --account-name <accountName>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "short": "-a",
                  "long": "--account-name",
                  "description": "the storage account name"
                },
                {
                  "flags": "-k, --account-key <accountKey>",
                  "required": -19,
                  "optional": 0,
                  "bool": true,
                  "short": "-k",
                  "long": "--account-key",
                  "description": "the storage account key"
                },
                {
                  "flags": "-c, --connection-string <connectionString>",
                  "required": -25,
                  "optional": 0,
                  "bool": true,
                  "short": "-c",
                  "long": "--connection-string",
                  "description": "the storage connection string"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "run storage command in debug mode"
                }
              ]
            },
            {
              "name": "set",
              "description": "Set properties of the storage file share",
              "fullName": "storage share set",
              "usage": "[options] [share]",
              "filePath": "commands/storage/storage.file._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "--share <share>",
                  "required": -9,
                  "optional": 0,
                  "bool": true,
                  "long": "--share",
                  "description": "the storage file share name"
                },
                {
                  "flags": "--quota <quota>",
                  "required": -9,
                  "optional": 0,
                  "bool": true,
                  "long": "--quota",
                  "description": "the storage file share quota (in GB)"
                },
                {
                  "flags": "-a, --account-name <accountName>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "short": "-a",
                  "long": "--account-name",
                  "description": "the storage account name"
                },
                {
                  "flags": "-k, --account-key <accountKey>",
                  "required": -19,
                  "optional": 0,
                  "bool": true,
                  "short": "-k",
                  "long": "--account-key",
                  "description": "the storage account key"
                },
                {
                  "flags": "-c, --connection-string <connectionString>",
                  "required": -25,
                  "optional": 0,
                  "bool": true,
                  "short": "-c",
                  "long": "--connection-string",
                  "description": "the storage connection string"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "run storage command in debug mode"
                }
              ]
            },
            {
              "name": "delete",
              "description": "Delete the specified storage file share",
              "fullName": "storage share delete",
              "usage": "[options] [share]",
              "filePath": "commands/storage/storage.file._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "--share <share>",
                  "required": -9,
                  "optional": 0,
                  "bool": true,
                  "long": "--share",
                  "description": "the storage file share name"
                },
                {
                  "flags": "-q, --quiet",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-q",
                  "long": "--quiet",
                  "description": "remove the specified storage file share without confirmation"
                },
                {
                  "flags": "-a, --account-name <accountName>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "short": "-a",
                  "long": "--account-name",
                  "description": "the storage account name"
                },
                {
                  "flags": "-k, --account-key <accountKey>",
                  "required": -19,
                  "optional": 0,
                  "bool": true,
                  "short": "-k",
                  "long": "--account-key",
                  "description": "the storage account key"
                },
                {
                  "flags": "-c, --connection-string <connectionString>",
                  "required": -25,
                  "optional": 0,
                  "bool": true,
                  "short": "-c",
                  "long": "--connection-string",
                  "description": "the storage connection string"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "run storage command in debug mode"
                }
              ]
            },
            {
              "name": "list",
              "description": "List storage shares with prefix",
              "fullName": "storage share list",
              "usage": "[options] [prefix]",
              "filePath": "commands/storage/storage.file._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "-p, --prefix <prefix>",
                  "required": -14,
                  "optional": 0,
                  "bool": true,
                  "short": "-p",
                  "long": "--prefix",
                  "description": "the storage share name prefix"
                },
                {
                  "flags": "-a, --account-name <accountName>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "short": "-a",
                  "long": "--account-name",
                  "description": "the storage account name"
                },
                {
                  "flags": "-k, --account-key <accountKey>",
                  "required": -19,
                  "optional": 0,
                  "bool": true,
                  "short": "-k",
                  "long": "--account-key",
                  "description": "the storage account key"
                },
                {
                  "flags": "-c, --connection-string <connectionString>",
                  "required": -25,
                  "optional": 0,
                  "bool": true,
                  "short": "-c",
                  "long": "--connection-string",
                  "description": "the storage connection string"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "run storage command in debug mode"
                }
              ]
            }
          ],
          "categories": {
            "sas": {
              "name": "sas",
              "description": "Commands to manage shared access signatures of your Storage file shares",
              "fullName": "storage share sas",
              "usage": "[options] [command]",
              "options": [],
              "commands": [
                {
                  "name": "create",
                  "description": "Generate shared access signature of storage share",
                  "fullName": "storage share sas create",
                  "usage": "[options] [share] [permissions] [expiry]",
                  "filePath": "commands/storage/storage.file._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--share <share>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--share",
                      "description": "the storage share name"
                    },
                    {
                      "flags": "--permissions <permissions>",
                      "required": -15,
                      "optional": 0,
                      "bool": true,
                      "long": "--permissions",
                      "description": "the operation permissions combining symbols of r(Read)/w(Write)/d(Delete)/l(List)"
                    },
                    {
                      "flags": "--start <start>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--start",
                      "description": "the UTC time at which the SAS becomes valid"
                    },
                    {
                      "flags": "--expiry <expiry>",
                      "required": -10,
                      "optional": 0,
                      "bool": true,
                      "long": "--expiry",
                      "description": "the UTC time at which the SAS expires"
                    },
                    {
                      "flags": "--policy <policy>",
                      "required": -10,
                      "optional": 0,
                      "bool": true,
                      "long": "--policy",
                      "description": "the stored access policy identifier"
                    },
                    {
                      "flags": "-a, --account-name <accountName>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-a",
                      "long": "--account-name",
                      "description": "the storage account name"
                    },
                    {
                      "flags": "-k, --account-key <accountKey>",
                      "required": -19,
                      "optional": 0,
                      "bool": true,
                      "short": "-k",
                      "long": "--account-key",
                      "description": "the storage account key"
                    },
                    {
                      "flags": "-c, --connection-string <connectionString>",
                      "required": -25,
                      "optional": 0,
                      "bool": true,
                      "short": "-c",
                      "long": "--connection-string",
                      "description": "the storage connection string"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "run storage command in debug mode"
                    }
                  ]
                }
              ],
              "categories": {}
            },
            "policy": {
              "name": "policy",
              "description": "Commands to manage stored access policies of your Storage file share",
              "fullName": "storage share policy",
              "usage": "[options] [command]",
              "options": [],
              "commands": [
                {
                  "name": "create",
                  "description": "Create a stored access policy on the share",
                  "fullName": "storage share policy create",
                  "usage": "[options] [share] [name]",
                  "filePath": "commands/storage/storage.file._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--share <share>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--share",
                      "description": "the storage share name"
                    },
                    {
                      "flags": "--name <name>",
                      "required": -8,
                      "optional": 0,
                      "bool": true,
                      "long": "--name",
                      "description": "the policy name"
                    },
                    {
                      "flags": "--start <start>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--start",
                      "description": "the UTC time at which the policy becomes valid"
                    },
                    {
                      "flags": "--expiry <expiry>",
                      "required": -10,
                      "optional": 0,
                      "bool": true,
                      "long": "--expiry",
                      "description": "the UTC time at which the policy expires"
                    },
                    {
                      "flags": "--permissions <permissions>",
                      "required": -15,
                      "optional": 0,
                      "bool": true,
                      "long": "--permissions",
                      "description": "the operation permissions combining symbols of r(Read)/w(Write)/d(Delete)/l(List)"
                    },
                    {
                      "flags": "-a, --account-name <accountName>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-a",
                      "long": "--account-name",
                      "description": "the storage account name"
                    },
                    {
                      "flags": "-k, --account-key <accountKey>",
                      "required": -19,
                      "optional": 0,
                      "bool": true,
                      "short": "-k",
                      "long": "--account-key",
                      "description": "the storage account key"
                    },
                    {
                      "flags": "-c, --connection-string <connectionString>",
                      "required": -25,
                      "optional": 0,
                      "bool": true,
                      "short": "-c",
                      "long": "--connection-string",
                      "description": "the storage connection string"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "run storage command in debug mode"
                    }
                  ]
                },
                {
                  "name": "show",
                  "description": "Show a stored access policy on the share",
                  "fullName": "storage share policy show",
                  "usage": "[options] [share] [name]",
                  "filePath": "commands/storage/storage.file._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--share <share>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--share",
                      "description": "the storage share name"
                    },
                    {
                      "flags": "--name <name>",
                      "required": -8,
                      "optional": 0,
                      "bool": true,
                      "long": "--name",
                      "description": "the policy name"
                    },
                    {
                      "flags": "-a, --account-name <accountName>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-a",
                      "long": "--account-name",
                      "description": "the storage account name"
                    },
                    {
                      "flags": "-k, --account-key <accountKey>",
                      "required": -19,
                      "optional": 0,
                      "bool": true,
                      "short": "-k",
                      "long": "--account-key",
                      "description": "the storage account key"
                    },
                    {
                      "flags": "-c, --connection-string <connectionString>",
                      "required": -25,
                      "optional": 0,
                      "bool": true,
                      "short": "-c",
                      "long": "--connection-string",
                      "description": "the storage connection string"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "run storage command in debug mode"
                    }
                  ]
                },
                {
                  "name": "list",
                  "description": "List stored access policies on the share",
                  "fullName": "storage share policy list",
                  "usage": "[options] [share]",
                  "filePath": "commands/storage/storage.file._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--share <share>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--share",
                      "description": "the storage share name"
                    },
                    {
                      "flags": "-a, --account-name <accountName>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-a",
                      "long": "--account-name",
                      "description": "the storage account name"
                    },
                    {
                      "flags": "-k, --account-key <accountKey>",
                      "required": -19,
                      "optional": 0,
                      "bool": true,
                      "short": "-k",
                      "long": "--account-key",
                      "description": "the storage account key"
                    },
                    {
                      "flags": "-c, --connection-string <connectionString>",
                      "required": -25,
                      "optional": 0,
                      "bool": true,
                      "short": "-c",
                      "long": "--connection-string",
                      "description": "the storage connection string"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "run storage command in debug mode"
                    }
                  ]
                },
                {
                  "name": "set",
                  "description": "Set a stored access policy on the share",
                  "fullName": "storage share policy set",
                  "usage": "[options] [share] [name]",
                  "filePath": "commands/storage/storage.file._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--share <share>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--share",
                      "description": "the storage share name"
                    },
                    {
                      "flags": "--name <name>",
                      "required": -8,
                      "optional": 0,
                      "bool": true,
                      "long": "--name",
                      "description": "the policy name"
                    },
                    {
                      "flags": "--start <start>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--start",
                      "description": "the UTC time at which the policy becomes valid and passing two spaces means to remove the existing setting"
                    },
                    {
                      "flags": "--expiry <expiry>",
                      "required": -10,
                      "optional": 0,
                      "bool": true,
                      "long": "--expiry",
                      "description": "the UTC time at which the policy expires and passing two spaces means to remove the existing setting"
                    },
                    {
                      "flags": "--permissions <permissions>",
                      "required": -15,
                      "optional": 0,
                      "bool": true,
                      "long": "--permissions",
                      "description": "the operation permissions combining symbols of r(Read)/w(Write)/d(Delete)/l(List) and passing two spaces means to remove the existing setting"
                    },
                    {
                      "flags": "-a, --account-name <accountName>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-a",
                      "long": "--account-name",
                      "description": "the storage account name"
                    },
                    {
                      "flags": "-k, --account-key <accountKey>",
                      "required": -19,
                      "optional": 0,
                      "bool": true,
                      "short": "-k",
                      "long": "--account-key",
                      "description": "the storage account key"
                    },
                    {
                      "flags": "-c, --connection-string <connectionString>",
                      "required": -25,
                      "optional": 0,
                      "bool": true,
                      "short": "-c",
                      "long": "--connection-string",
                      "description": "the storage connection string"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "run storage command in debug mode"
                    }
                  ]
                },
                {
                  "name": "delete",
                  "description": "Delete a stored access policy on the share",
                  "fullName": "storage share policy delete",
                  "usage": "[options] [share] [name]",
                  "filePath": "commands/storage/storage.file._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--share <share>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--share",
                      "description": "the storage share name"
                    },
                    {
                      "flags": "--name <name>",
                      "required": -8,
                      "optional": 0,
                      "bool": true,
                      "long": "--name",
                      "description": "the policy name"
                    },
                    {
                      "flags": "-a, --account-name <accountName>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-a",
                      "long": "--account-name",
                      "description": "the storage account name"
                    },
                    {
                      "flags": "-k, --account-key <accountKey>",
                      "required": -19,
                      "optional": 0,
                      "bool": true,
                      "short": "-k",
                      "long": "--account-key",
                      "description": "the storage account key"
                    },
                    {
                      "flags": "-c, --connection-string <connectionString>",
                      "required": -25,
                      "optional": 0,
                      "bool": true,
                      "short": "-c",
                      "long": "--connection-string",
                      "description": "the storage connection string"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "run storage command in debug mode"
                    }
                  ]
                }
              ],
              "categories": {}
            }
          }
        },
        "file": {
          "name": "file",
          "description": "Commands to manage your Storage files",
          "fullName": "storage file",
          "usage": "[options] [command]",
          "options": [],
          "commands": [
            {
              "name": "list",
              "description": "List storage files in the specified share under specific path",
              "fullName": "storage file list",
              "usage": "[options] [share] [path]",
              "filePath": "commands/storage/storage.file._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "--share <share>",
                  "required": -9,
                  "optional": 0,
                  "bool": true,
                  "long": "--share",
                  "description": "the storage share name"
                },
                {
                  "flags": "-p, --path <path>",
                  "required": -12,
                  "optional": 0,
                  "bool": true,
                  "short": "-p",
                  "long": "--path",
                  "description": "the path to be listed"
                },
                {
                  "flags": "--sas <sas>",
                  "required": -7,
                  "optional": 0,
                  "bool": true,
                  "long": "--sas",
                  "description": "the shared access signature of the storage file share"
                },
                {
                  "flags": "-a, --account-name <accountName>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "short": "-a",
                  "long": "--account-name",
                  "description": "the storage account name"
                },
                {
                  "flags": "-k, --account-key <accountKey>",
                  "required": -19,
                  "optional": 0,
                  "bool": true,
                  "short": "-k",
                  "long": "--account-key",
                  "description": "the storage account key"
                },
                {
                  "flags": "-c, --connection-string <connectionString>",
                  "required": -25,
                  "optional": 0,
                  "bool": true,
                  "short": "-c",
                  "long": "--connection-string",
                  "description": "the storage connection string"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "run storage command in debug mode"
                }
              ]
            },
            {
              "name": "delete",
              "description": "Delete the specified storage file",
              "fullName": "storage file delete",
              "usage": "[options] [share] [path]",
              "filePath": "commands/storage/storage.file._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "--share <share>",
                  "required": -9,
                  "optional": 0,
                  "bool": true,
                  "long": "--share",
                  "description": "the storage share name"
                },
                {
                  "flags": "-p, --path <path>",
                  "required": -12,
                  "optional": 0,
                  "bool": true,
                  "short": "-p",
                  "long": "--path",
                  "description": "the path to the storage file"
                },
                {
                  "flags": "-q, --quiet",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-q",
                  "long": "--quiet",
                  "description": "remove the specified storage file without confirmation"
                },
                {
                  "flags": "--sas <sas>",
                  "required": -7,
                  "optional": 0,
                  "bool": true,
                  "long": "--sas",
                  "description": "the shared access signature of the storage file share"
                },
                {
                  "flags": "-a, --account-name <accountName>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "short": "-a",
                  "long": "--account-name",
                  "description": "the storage account name"
                },
                {
                  "flags": "-k, --account-key <accountKey>",
                  "required": -19,
                  "optional": 0,
                  "bool": true,
                  "short": "-k",
                  "long": "--account-key",
                  "description": "the storage account key"
                },
                {
                  "flags": "-c, --connection-string <connectionString>",
                  "required": -25,
                  "optional": 0,
                  "bool": true,
                  "short": "-c",
                  "long": "--connection-string",
                  "description": "the storage connection string"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "run storage command in debug mode"
                }
              ]
            },
            {
              "name": "upload",
              "description": "Upload the specified local file to storage",
              "fullName": "storage file upload",
              "usage": "[options] [source] [share] [path]",
              "filePath": "commands/storage/storage.file._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "-s, --source <source>",
                  "required": -14,
                  "optional": 0,
                  "bool": true,
                  "short": "-s",
                  "long": "--source",
                  "description": "the local file path"
                },
                {
                  "flags": "--share <share>",
                  "required": -9,
                  "optional": 0,
                  "bool": true,
                  "long": "--share",
                  "description": "the storage share name"
                },
                {
                  "flags": "-p, --path <path>",
                  "required": -12,
                  "optional": 0,
                  "bool": true,
                  "short": "-p",
                  "long": "--path",
                  "description": "the path to the storage file"
                },
                {
                  "flags": "--concurrenttaskcount <concurrenttaskcount>",
                  "required": -23,
                  "optional": 0,
                  "bool": true,
                  "long": "--concurrenttaskcount",
                  "description": "the maximum number of concurrent upload requests"
                },
                {
                  "flags": "-q, --quiet",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-q",
                  "long": "--quiet",
                  "description": "overwrite the specified storage file without confirmation"
                },
                {
                  "flags": "--sas <sas>",
                  "required": -7,
                  "optional": 0,
                  "bool": true,
                  "long": "--sas",
                  "description": "the shared access signature of the storage file share"
                },
                {
                  "flags": "-a, --account-name <accountName>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "short": "-a",
                  "long": "--account-name",
                  "description": "the storage account name"
                },
                {
                  "flags": "-k, --account-key <accountKey>",
                  "required": -19,
                  "optional": 0,
                  "bool": true,
                  "short": "-k",
                  "long": "--account-key",
                  "description": "the storage account key"
                },
                {
                  "flags": "-c, --connection-string <connectionString>",
                  "required": -25,
                  "optional": 0,
                  "bool": true,
                  "short": "-c",
                  "long": "--connection-string",
                  "description": "the storage connection string"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "run storage command in debug mode"
                }
              ]
            },
            {
              "name": "download",
              "description": "Download the specified storage file",
              "fullName": "storage file download",
              "usage": "[options] [share] [path] [destination]",
              "filePath": "commands/storage/storage.file._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "--share <share>",
                  "required": -9,
                  "optional": 0,
                  "bool": true,
                  "long": "--share",
                  "description": "the storage share name"
                },
                {
                  "flags": "-p, --path <path>",
                  "required": -12,
                  "optional": 0,
                  "bool": true,
                  "short": "-p",
                  "long": "--path",
                  "description": "the path to the storage file"
                },
                {
                  "flags": "-d, --destination <destination>",
                  "required": -19,
                  "optional": 0,
                  "bool": true,
                  "short": "-d",
                  "long": "--destination",
                  "description": "path to the destination file or directory"
                },
                {
                  "flags": "-m, --checkmd5",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-m",
                  "long": "--checkmd5",
                  "description": "check md5sum for the downloaded file"
                },
                {
                  "flags": "-q, --quiet",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-q",
                  "long": "--quiet",
                  "description": "overwrite the destination file without confirmation"
                },
                {
                  "flags": "--sas <sas>",
                  "required": -7,
                  "optional": 0,
                  "bool": true,
                  "long": "--sas",
                  "description": "the shared access signature of the storage file share"
                },
                {
                  "flags": "-a, --account-name <accountName>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "short": "-a",
                  "long": "--account-name",
                  "description": "the storage account name"
                },
                {
                  "flags": "-k, --account-key <accountKey>",
                  "required": -19,
                  "optional": 0,
                  "bool": true,
                  "short": "-k",
                  "long": "--account-key",
                  "description": "the storage account key"
                },
                {
                  "flags": "-c, --connection-string <connectionString>",
                  "required": -25,
                  "optional": 0,
                  "bool": true,
                  "short": "-c",
                  "long": "--connection-string",
                  "description": "the storage connection string"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "run storage command in debug mode"
                }
              ]
            }
          ],
          "categories": {
            "copy": {
              "name": "copy",
              "description": "Commands to manage your file copy operations",
              "fullName": "storage file copy",
              "usage": "[options] [command]",
              "options": [],
              "commands": [
                {
                  "name": "start",
                  "description": "Start to copy the resource to the specified storage file which completes asynchronously",
                  "fullName": "storage file copy start",
                  "usage": "[options] [sourceUri] [destShare]",
                  "filePath": "commands/storage/storage.file._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--source-sas <sourceSas>",
                      "required": -14,
                      "optional": 0,
                      "bool": true,
                      "long": "--source-sas",
                      "description": "the shared access signature of the source storage"
                    },
                    {
                      "flags": "--source-uri <sourceUri>",
                      "required": -14,
                      "optional": 0,
                      "bool": true,
                      "long": "--source-uri",
                      "description": "the source storage blob or file absolute uri"
                    },
                    {
                      "flags": "--source-share <sourceShare>",
                      "required": -16,
                      "optional": 0,
                      "bool": true,
                      "long": "--source-share",
                      "description": "the source storage share name when copies a file to a blob"
                    },
                    {
                      "flags": "--source-path <sourcePath>",
                      "required": -15,
                      "optional": 0,
                      "bool": true,
                      "long": "--source-path",
                      "description": "the source storage file path when copies a file to a blob"
                    },
                    {
                      "flags": "--source-container <sourceContainer>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "long": "--source-container",
                      "description": "the source storage container name when copies a blob to a blob"
                    },
                    {
                      "flags": "--source-blob <sourceBlob>",
                      "required": -15,
                      "optional": 0,
                      "bool": true,
                      "long": "--source-blob",
                      "description": "the source storage blob name when copies a blob to a blob"
                    },
                    {
                      "flags": "--dest-account-name <destAccountName>",
                      "required": -21,
                      "optional": 0,
                      "bool": true,
                      "long": "--dest-account-name",
                      "description": "the destination storage account name"
                    },
                    {
                      "flags": "--dest-account-key <destAccountKey>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "long": "--dest-account-key",
                      "description": "the destination storage account key"
                    },
                    {
                      "flags": "--dest-connection-string <destConnectionString>",
                      "required": -26,
                      "optional": 0,
                      "bool": true,
                      "long": "--dest-connection-string",
                      "description": "the destination storage connection string"
                    },
                    {
                      "flags": "--dest-sas <destSas>",
                      "required": -12,
                      "optional": 0,
                      "bool": true,
                      "long": "--dest-sas",
                      "description": "the shared access signature of the destination storage share or file"
                    },
                    {
                      "flags": "--dest-share <destShare>",
                      "required": -14,
                      "optional": 0,
                      "bool": true,
                      "long": "--dest-share",
                      "description": "the destination storage share name"
                    },
                    {
                      "flags": "--dest-path <destPath>",
                      "required": -13,
                      "optional": 0,
                      "bool": true,
                      "long": "--dest-path",
                      "description": "the destination storage file path"
                    },
                    {
                      "flags": "-q, --quiet",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-q",
                      "long": "--quiet",
                      "description": "overwrite the destination file without confirmation"
                    },
                    {
                      "flags": "-a, --account-name <accountName>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-a",
                      "long": "--account-name",
                      "description": "the storage account name"
                    },
                    {
                      "flags": "-k, --account-key <accountKey>",
                      "required": -19,
                      "optional": 0,
                      "bool": true,
                      "short": "-k",
                      "long": "--account-key",
                      "description": "the storage account key"
                    },
                    {
                      "flags": "-c, --connection-string <connectionString>",
                      "required": -25,
                      "optional": 0,
                      "bool": true,
                      "short": "-c",
                      "long": "--connection-string",
                      "description": "the storage connection string"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "run storage command in debug mode"
                    }
                  ]
                },
                {
                  "name": "show",
                  "description": "Show the copy status",
                  "fullName": "storage file copy show",
                  "usage": "[options] [share] [path]",
                  "filePath": "commands/storage/storage.file._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--share <share>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--share",
                      "description": "the destination share in the file copy start operation"
                    },
                    {
                      "flags": "--path <path>",
                      "required": -8,
                      "optional": 0,
                      "bool": true,
                      "long": "--path",
                      "description": "the destination file path in the file copy start operation"
                    },
                    {
                      "flags": "--sas <sas>",
                      "required": -7,
                      "optional": 0,
                      "bool": true,
                      "long": "--sas",
                      "description": "the shared access signature of the destination storage share or file"
                    },
                    {
                      "flags": "-a, --account-name <accountName>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-a",
                      "long": "--account-name",
                      "description": "the storage account name"
                    },
                    {
                      "flags": "-k, --account-key <accountKey>",
                      "required": -19,
                      "optional": 0,
                      "bool": true,
                      "short": "-k",
                      "long": "--account-key",
                      "description": "the storage account key"
                    },
                    {
                      "flags": "-c, --connection-string <connectionString>",
                      "required": -25,
                      "optional": 0,
                      "bool": true,
                      "short": "-c",
                      "long": "--connection-string",
                      "description": "the storage connection string"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "run storage command in debug mode"
                    }
                  ]
                },
                {
                  "name": "stop",
                  "description": "Stop the copy operation",
                  "fullName": "storage file copy stop",
                  "usage": "[options] [share] [path] [copyid]",
                  "filePath": "commands/storage/storage.file._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--share <share>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--share",
                      "description": "the destination share in the file copy start operation"
                    },
                    {
                      "flags": "--path <path>",
                      "required": -8,
                      "optional": 0,
                      "bool": true,
                      "long": "--path",
                      "description": "the destination file path in the file copy start operation"
                    },
                    {
                      "flags": "--copyid <copyid>",
                      "required": -10,
                      "optional": 0,
                      "bool": true,
                      "long": "--copyid",
                      "description": "the copy ID which is returned from file copy start operation"
                    },
                    {
                      "flags": "-a, --account-name <accountName>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-a",
                      "long": "--account-name",
                      "description": "the storage account name"
                    },
                    {
                      "flags": "-k, --account-key <accountKey>",
                      "required": -19,
                      "optional": 0,
                      "bool": true,
                      "short": "-k",
                      "long": "--account-key",
                      "description": "the storage account key"
                    },
                    {
                      "flags": "-c, --connection-string <connectionString>",
                      "required": -25,
                      "optional": 0,
                      "bool": true,
                      "short": "-c",
                      "long": "--connection-string",
                      "description": "the storage connection string"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "run storage command in debug mode"
                    }
                  ]
                }
              ],
              "categories": {}
            },
            "sas": {
              "name": "sas",
              "description": "Commands to manage shared access signatures of your Storage file",
              "fullName": "storage file sas",
              "usage": "[options] [command]",
              "options": [],
              "commands": [
                {
                  "name": "create",
                  "description": "Generate shared access signature of storage file",
                  "fullName": "storage file sas create",
                  "usage": "[options] [share] [path] [permissions] [expiry]",
                  "filePath": "commands/storage/storage.file._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--share <share>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--share",
                      "description": "the storage share name"
                    },
                    {
                      "flags": "-p, --path <path>",
                      "required": -12,
                      "optional": 0,
                      "bool": true,
                      "short": "-p",
                      "long": "--path",
                      "description": "the path to the storage file"
                    },
                    {
                      "flags": "--permissions <permissions>",
                      "required": -15,
                      "optional": 0,
                      "bool": true,
                      "long": "--permissions",
                      "description": "the operation permissions combining symbols of r(Read)/w(Write)/d(Delete)"
                    },
                    {
                      "flags": "--start <start>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--start",
                      "description": "the UTC time at which the SAS becomes valid"
                    },
                    {
                      "flags": "--expiry <expiry>",
                      "required": -10,
                      "optional": 0,
                      "bool": true,
                      "long": "--expiry",
                      "description": "the UTC time at which the SAS expires"
                    },
                    {
                      "flags": "--policy <policy>",
                      "required": -10,
                      "optional": 0,
                      "bool": true,
                      "long": "--policy",
                      "description": "the stored access policy identifier"
                    },
                    {
                      "flags": "-a, --account-name <accountName>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-a",
                      "long": "--account-name",
                      "description": "the storage account name"
                    },
                    {
                      "flags": "-k, --account-key <accountKey>",
                      "required": -19,
                      "optional": 0,
                      "bool": true,
                      "short": "-k",
                      "long": "--account-key",
                      "description": "the storage account key"
                    },
                    {
                      "flags": "-c, --connection-string <connectionString>",
                      "required": -25,
                      "optional": 0,
                      "bool": true,
                      "short": "-c",
                      "long": "--connection-string",
                      "description": "the storage connection string"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "run storage command in debug mode"
                    }
                  ]
                }
              ],
              "categories": {}
            }
          }
        },
        "directory": {
          "name": "directory",
          "description": "Commands to manage your Storage file directory",
          "fullName": "storage directory",
          "usage": "[options] [command]",
          "options": [],
          "commands": [
            {
              "name": "create",
              "description": "Create a storage file directory",
              "fullName": "storage directory create",
              "usage": "[options] [share] [path]",
              "filePath": "commands/storage/storage.file._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "--share <share>",
                  "required": -9,
                  "optional": 0,
                  "bool": true,
                  "long": "--share",
                  "description": "the storage file share name"
                },
                {
                  "flags": "-p, --path <path>",
                  "required": -12,
                  "optional": 0,
                  "bool": true,
                  "short": "-p",
                  "long": "--path",
                  "description": "the path to the storage file directory to be created"
                },
                {
                  "flags": "--sas <sas>",
                  "required": -7,
                  "optional": 0,
                  "bool": true,
                  "long": "--sas",
                  "description": "the shared access signature of the storage file share"
                },
                {
                  "flags": "-a, --account-name <accountName>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "short": "-a",
                  "long": "--account-name",
                  "description": "the storage account name"
                },
                {
                  "flags": "-k, --account-key <accountKey>",
                  "required": -19,
                  "optional": 0,
                  "bool": true,
                  "short": "-k",
                  "long": "--account-key",
                  "description": "the storage account key"
                },
                {
                  "flags": "-c, --connection-string <connectionString>",
                  "required": -25,
                  "optional": 0,
                  "bool": true,
                  "short": "-c",
                  "long": "--connection-string",
                  "description": "the storage connection string"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "run storage command in debug mode"
                }
              ]
            },
            {
              "name": "delete",
              "description": "Delete the specified storage file directory",
              "fullName": "storage directory delete",
              "usage": "[options] [share] [path]",
              "filePath": "commands/storage/storage.file._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "--share <share>",
                  "required": -9,
                  "optional": 0,
                  "bool": true,
                  "long": "--share",
                  "description": "the storage share name"
                },
                {
                  "flags": "-p, --path <path>",
                  "required": -12,
                  "optional": 0,
                  "bool": true,
                  "short": "-p",
                  "long": "--path",
                  "description": "the path to the storage file directory to be deleted"
                },
                {
                  "flags": "-q, --quiet",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-q",
                  "long": "--quiet",
                  "description": "remove the specified storage file directory without confirmation"
                },
                {
                  "flags": "--sas <sas>",
                  "required": -7,
                  "optional": 0,
                  "bool": true,
                  "long": "--sas",
                  "description": "the shared access signature of the storage file share"
                },
                {
                  "flags": "-a, --account-name <accountName>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "short": "-a",
                  "long": "--account-name",
                  "description": "the storage account name"
                },
                {
                  "flags": "-k, --account-key <accountKey>",
                  "required": -19,
                  "optional": 0,
                  "bool": true,
                  "short": "-k",
                  "long": "--account-key",
                  "description": "the storage account key"
                },
                {
                  "flags": "-c, --connection-string <connectionString>",
                  "required": -25,
                  "optional": 0,
                  "bool": true,
                  "short": "-c",
                  "long": "--connection-string",
                  "description": "the storage connection string"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "run storage command in debug mode"
                }
              ]
            }
          ],
          "categories": {}
        },
        "queue": {
          "name": "queue",
          "description": "Commands to manage your Storage queues",
          "fullName": "storage queue",
          "usage": "[options] [command]",
          "options": [],
          "commands": [
            {
              "name": "create",
              "description": "Create a storage queue",
              "fullName": "storage queue create",
              "usage": "[options] [queue]",
              "filePath": "commands/storage/storage.queue._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "--queue <queue>",
                  "required": -9,
                  "optional": 0,
                  "bool": true,
                  "long": "--queue",
                  "description": "the storage queue name"
                },
                {
                  "flags": "-a, --account-name <accountName>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "short": "-a",
                  "long": "--account-name",
                  "description": "the storage account name"
                },
                {
                  "flags": "-k, --account-key <accountKey>",
                  "required": -19,
                  "optional": 0,
                  "bool": true,
                  "short": "-k",
                  "long": "--account-key",
                  "description": "the storage account key"
                },
                {
                  "flags": "-c, --connection-string <connectionString>",
                  "required": -25,
                  "optional": 0,
                  "bool": true,
                  "short": "-c",
                  "long": "--connection-string",
                  "description": "the storage connection string"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "run storage command in debug mode"
                }
              ]
            },
            {
              "name": "list",
              "description": "List storage queues with wildcard",
              "fullName": "storage queue list",
              "usage": "[options] [prefix]",
              "filePath": "commands/storage/storage.queue._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "-p, --prefix <prefix>",
                  "required": -14,
                  "optional": 0,
                  "bool": true,
                  "short": "-p",
                  "long": "--prefix",
                  "description": "the storage queue name prefix"
                },
                {
                  "flags": "-a, --account-name <accountName>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "short": "-a",
                  "long": "--account-name",
                  "description": "the storage account name"
                },
                {
                  "flags": "-k, --account-key <accountKey>",
                  "required": -19,
                  "optional": 0,
                  "bool": true,
                  "short": "-k",
                  "long": "--account-key",
                  "description": "the storage account key"
                },
                {
                  "flags": "-c, --connection-string <connectionString>",
                  "required": -25,
                  "optional": 0,
                  "bool": true,
                  "short": "-c",
                  "long": "--connection-string",
                  "description": "the storage connection string"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "run storage command in debug mode"
                }
              ]
            },
            {
              "name": "show",
              "description": "Show details of the storage able",
              "fullName": "storage queue show",
              "usage": "[options] [queue]",
              "filePath": "commands/storage/storage.queue._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "--queue <queue>",
                  "required": -9,
                  "optional": 0,
                  "bool": true,
                  "long": "--queue",
                  "description": "the storage queue name"
                },
                {
                  "flags": "--sas <sas>",
                  "required": -7,
                  "optional": 0,
                  "bool": true,
                  "long": "--sas",
                  "description": "the shared access signature of the storage queue"
                },
                {
                  "flags": "-a, --account-name <accountName>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "short": "-a",
                  "long": "--account-name",
                  "description": "the storage account name"
                },
                {
                  "flags": "-k, --account-key <accountKey>",
                  "required": -19,
                  "optional": 0,
                  "bool": true,
                  "short": "-k",
                  "long": "--account-key",
                  "description": "the storage account key"
                },
                {
                  "flags": "-c, --connection-string <connectionString>",
                  "required": -25,
                  "optional": 0,
                  "bool": true,
                  "short": "-c",
                  "long": "--connection-string",
                  "description": "the storage connection string"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "run storage command in debug mode"
                }
              ]
            },
            {
              "name": "delete",
              "description": "Delete the specified storage queue",
              "fullName": "storage queue delete",
              "usage": "[options] [queue]",
              "filePath": "commands/storage/storage.queue._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "--queue <queue>",
                  "required": -9,
                  "optional": 0,
                  "bool": true,
                  "long": "--queue",
                  "description": "the storage queue name"
                },
                {
                  "flags": "-q, --quiet",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-q",
                  "long": "--quiet",
                  "description": "remove the specified storage queue without confirmation"
                },
                {
                  "flags": "-a, --account-name <accountName>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "short": "-a",
                  "long": "--account-name",
                  "description": "the storage account name"
                },
                {
                  "flags": "-k, --account-key <accountKey>",
                  "required": -19,
                  "optional": 0,
                  "bool": true,
                  "short": "-k",
                  "long": "--account-key",
                  "description": "the storage account key"
                },
                {
                  "flags": "-c, --connection-string <connectionString>",
                  "required": -25,
                  "optional": 0,
                  "bool": true,
                  "short": "-c",
                  "long": "--connection-string",
                  "description": "the storage connection string"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "run storage command in debug mode"
                }
              ]
            }
          ],
          "categories": {
            "sas": {
              "name": "sas",
              "description": "Commands to manage shared access signatures of your Storage queue",
              "fullName": "storage queue sas",
              "usage": "[options] [command]",
              "options": [],
              "commands": [
                {
                  "name": "create",
                  "description": "Generate shared access signature of storage queue",
                  "fullName": "storage queue sas create",
                  "usage": "[options] [queue] [permissions] [expiry]",
                  "filePath": "commands/storage/storage.queue._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--queue <queue>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--queue",
                      "description": "the storage queue name"
                    },
                    {
                      "flags": "--permissions <permissions>",
                      "required": -15,
                      "optional": 0,
                      "bool": true,
                      "long": "--permissions",
                      "description": "the operation permissions combining symbols of r(Read)/a(Add)/u(Update)/p(Process)"
                    },
                    {
                      "flags": "--start <start>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--start",
                      "description": "the UTC time at which the SAS becomes valid"
                    },
                    {
                      "flags": "--expiry <expiry>",
                      "required": -10,
                      "optional": 0,
                      "bool": true,
                      "long": "--expiry",
                      "description": "the UTC time at which the SAS expires"
                    },
                    {
                      "flags": "--policy <policy>",
                      "required": -10,
                      "optional": 0,
                      "bool": true,
                      "long": "--policy",
                      "description": "the stored access policy identifier"
                    },
                    {
                      "flags": "-a, --account-name <accountName>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-a",
                      "long": "--account-name",
                      "description": "the storage account name"
                    },
                    {
                      "flags": "-k, --account-key <accountKey>",
                      "required": -19,
                      "optional": 0,
                      "bool": true,
                      "short": "-k",
                      "long": "--account-key",
                      "description": "the storage account key"
                    },
                    {
                      "flags": "-c, --connection-string <connectionString>",
                      "required": -25,
                      "optional": 0,
                      "bool": true,
                      "short": "-c",
                      "long": "--connection-string",
                      "description": "the storage connection string"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "run storage command in debug mode"
                    }
                  ]
                }
              ],
              "categories": {}
            },
            "policy": {
              "name": "policy",
              "description": "Commands to manage stored access policies of your Storage queue",
              "fullName": "storage queue policy",
              "usage": "[options] [command]",
              "options": [],
              "commands": [
                {
                  "name": "create",
                  "description": "Create a stored access policy on the queue",
                  "fullName": "storage queue policy create",
                  "usage": "[options] [queue] [name]",
                  "filePath": "commands/storage/storage.queue._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--queue <queue>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--queue",
                      "description": "the storage queue name"
                    },
                    {
                      "flags": "--name <name>",
                      "required": -8,
                      "optional": 0,
                      "bool": true,
                      "long": "--name",
                      "description": "the policy name"
                    },
                    {
                      "flags": "--start <start>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--start",
                      "description": "the UTC time at which the policy becomes valid"
                    },
                    {
                      "flags": "--expiry <expiry>",
                      "required": -10,
                      "optional": 0,
                      "bool": true,
                      "long": "--expiry",
                      "description": "the UTC time at which the policy expires"
                    },
                    {
                      "flags": "--permissions <permissions>",
                      "required": -15,
                      "optional": 0,
                      "bool": true,
                      "long": "--permissions",
                      "description": "the operation permissions combining symbols of r(Read)/a(Add)/u(Update)/p(Process)"
                    },
                    {
                      "flags": "-a, --account-name <accountName>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-a",
                      "long": "--account-name",
                      "description": "the storage account name"
                    },
                    {
                      "flags": "-k, --account-key <accountKey>",
                      "required": -19,
                      "optional": 0,
                      "bool": true,
                      "short": "-k",
                      "long": "--account-key",
                      "description": "the storage account key"
                    },
                    {
                      "flags": "-c, --connection-string <connectionString>",
                      "required": -25,
                      "optional": 0,
                      "bool": true,
                      "short": "-c",
                      "long": "--connection-string",
                      "description": "the storage connection string"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "run storage command in debug mode"
                    }
                  ]
                },
                {
                  "name": "show",
                  "description": "Show a stored access policy on the queue",
                  "fullName": "storage queue policy show",
                  "usage": "[options] [queue] [name]",
                  "filePath": "commands/storage/storage.queue._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--queue <queue>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--queue",
                      "description": "the storage queue name"
                    },
                    {
                      "flags": "--name <name>",
                      "required": -8,
                      "optional": 0,
                      "bool": true,
                      "long": "--name",
                      "description": "the policy name"
                    },
                    {
                      "flags": "-a, --account-name <accountName>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-a",
                      "long": "--account-name",
                      "description": "the storage account name"
                    },
                    {
                      "flags": "-k, --account-key <accountKey>",
                      "required": -19,
                      "optional": 0,
                      "bool": true,
                      "short": "-k",
                      "long": "--account-key",
                      "description": "the storage account key"
                    },
                    {
                      "flags": "-c, --connection-string <connectionString>",
                      "required": -25,
                      "optional": 0,
                      "bool": true,
                      "short": "-c",
                      "long": "--connection-string",
                      "description": "the storage connection string"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "run storage command in debug mode"
                    }
                  ]
                },
                {
                  "name": "list",
                  "description": "List stored access policies on the queue",
                  "fullName": "storage queue policy list",
                  "usage": "[options] [queue]",
                  "filePath": "commands/storage/storage.queue._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--queue <queue>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--queue",
                      "description": "the storage queue name"
                    },
                    {
                      "flags": "-a, --account-name <accountName>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-a",
                      "long": "--account-name",
                      "description": "the storage account name"
                    },
                    {
                      "flags": "-k, --account-key <accountKey>",
                      "required": -19,
                      "optional": 0,
                      "bool": true,
                      "short": "-k",
                      "long": "--account-key",
                      "description": "the storage account key"
                    },
                    {
                      "flags": "-c, --connection-string <connectionString>",
                      "required": -25,
                      "optional": 0,
                      "bool": true,
                      "short": "-c",
                      "long": "--connection-string",
                      "description": "the storage connection string"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "run storage command in debug mode"
                    }
                  ]
                },
                {
                  "name": "set",
                  "description": "Set a stored access policy on the queue",
                  "fullName": "storage queue policy set",
                  "usage": "[options] [queue] [name]",
                  "filePath": "commands/storage/storage.queue._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--queue <queue>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--queue",
                      "description": "the storage queue name"
                    },
                    {
                      "flags": "--name <name>",
                      "required": -8,
                      "optional": 0,
                      "bool": true,
                      "long": "--name",
                      "description": "the policy name"
                    },
                    {
                      "flags": "--start <start>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--start",
                      "description": "the UTC time at which the policy becomes valid and passing two spaces means to remove the existing setting"
                    },
                    {
                      "flags": "--expiry <expiry>",
                      "required": -10,
                      "optional": 0,
                      "bool": true,
                      "long": "--expiry",
                      "description": "the UTC time at which the policy expires and passing two spaces means to remove the existing setting"
                    },
                    {
                      "flags": "--permissions <permissions>",
                      "required": -15,
                      "optional": 0,
                      "bool": true,
                      "long": "--permissions",
                      "description": "the operation permissions combining symbols of r(Read)/a(Add)/u(Update)/p(Process) and passing two spaces means to remove the existing setting"
                    },
                    {
                      "flags": "-a, --account-name <accountName>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-a",
                      "long": "--account-name",
                      "description": "the storage account name"
                    },
                    {
                      "flags": "-k, --account-key <accountKey>",
                      "required": -19,
                      "optional": 0,
                      "bool": true,
                      "short": "-k",
                      "long": "--account-key",
                      "description": "the storage account key"
                    },
                    {
                      "flags": "-c, --connection-string <connectionString>",
                      "required": -25,
                      "optional": 0,
                      "bool": true,
                      "short": "-c",
                      "long": "--connection-string",
                      "description": "the storage connection string"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "run storage command in debug mode"
                    }
                  ]
                },
                {
                  "name": "delete",
                  "description": "Delete a stored access policy on the queue",
                  "fullName": "storage queue policy delete",
                  "usage": "[options] [queue] [name]",
                  "filePath": "commands/storage/storage.queue._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--queue <queue>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--queue",
                      "description": "the storage queue name"
                    },
                    {
                      "flags": "--name <name>",
                      "required": -8,
                      "optional": 0,
                      "bool": true,
                      "long": "--name",
                      "description": "the policy name"
                    },
                    {
                      "flags": "-a, --account-name <accountName>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-a",
                      "long": "--account-name",
                      "description": "the storage account name"
                    },
                    {
                      "flags": "-k, --account-key <accountKey>",
                      "required": -19,
                      "optional": 0,
                      "bool": true,
                      "short": "-k",
                      "long": "--account-key",
                      "description": "the storage account key"
                    },
                    {
                      "flags": "-c, --connection-string <connectionString>",
                      "required": -25,
                      "optional": 0,
                      "bool": true,
                      "short": "-c",
                      "long": "--connection-string",
                      "description": "the storage connection string"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "run storage command in debug mode"
                    }
                  ]
                }
              ],
              "categories": {}
            }
          }
        },
        "logging": {
          "name": "logging",
          "description": "Commands to manage your Storage logging properties",
          "fullName": "storage logging",
          "usage": "[options] [command]",
          "options": [],
          "commands": [
            {
              "name": "show",
              "description": "Show the logging properties of the storage services ",
              "fullName": "storage logging show",
              "usage": "[options]",
              "filePath": "commands/storage/storage.service._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "--blob",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--blob",
                  "description": "show logging properties for blob service"
                },
                {
                  "flags": "--table",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--table",
                  "description": "show logging properties for table service"
                },
                {
                  "flags": "--queue",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--queue",
                  "description": "show logging properties for queue service"
                },
                {
                  "flags": "-a, --account-name <accountName>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "short": "-a",
                  "long": "--account-name",
                  "description": "the storage account name"
                },
                {
                  "flags": "-k, --account-key <accountKey>",
                  "required": -19,
                  "optional": 0,
                  "bool": true,
                  "short": "-k",
                  "long": "--account-key",
                  "description": "the storage account key"
                },
                {
                  "flags": "-c, --connection-string <connectionString>",
                  "required": -25,
                  "optional": 0,
                  "bool": true,
                  "short": "-c",
                  "long": "--connection-string",
                  "description": "the storage connection string"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "run storage command in debug mode"
                }
              ]
            },
            {
              "name": "set",
              "description": "Set the logging properties of the storage service",
              "fullName": "storage logging set",
              "usage": "[options]",
              "filePath": "commands/storage/storage.service._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "--blob",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--blob",
                  "description": "set logging properties for blob service"
                },
                {
                  "flags": "--table",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--table",
                  "description": "set logging properties for table service"
                },
                {
                  "flags": "--queue",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--queue",
                  "description": "set logging properties for queue service"
                },
                {
                  "flags": "--version <version>",
                  "required": -11,
                  "optional": 0,
                  "bool": true,
                  "long": "--version",
                  "description": "the version string"
                },
                {
                  "flags": "--retention <retention>",
                  "required": -13,
                  "optional": 0,
                  "bool": true,
                  "long": "--retention",
                  "description": "set logging retention in days"
                },
                {
                  "flags": "--read",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--read",
                  "description": "enable logging for read requests"
                },
                {
                  "flags": "--read-off",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--read-off",
                  "description": "disable logging for read requests"
                },
                {
                  "flags": "--write",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--write",
                  "description": "enable logging for write requests"
                },
                {
                  "flags": "--write-off",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--write-off",
                  "description": "disable logging for write requests"
                },
                {
                  "flags": "--delete",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--delete",
                  "description": "enable logging for delete requests"
                },
                {
                  "flags": "--delete-off",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--delete-off",
                  "description": "disable logging for delete requests"
                },
                {
                  "flags": "-a, --account-name <accountName>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "short": "-a",
                  "long": "--account-name",
                  "description": "the storage account name"
                },
                {
                  "flags": "-k, --account-key <accountKey>",
                  "required": -19,
                  "optional": 0,
                  "bool": true,
                  "short": "-k",
                  "long": "--account-key",
                  "description": "the storage account key"
                },
                {
                  "flags": "-c, --connection-string <connectionString>",
                  "required": -25,
                  "optional": 0,
                  "bool": true,
                  "short": "-c",
                  "long": "--connection-string",
                  "description": "the storage connection string"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "run storage command in debug mode"
                }
              ]
            }
          ],
          "categories": {}
        },
        "metrics": {
          "name": "metrics",
          "description": "Commands to manage your Storage metrics properties",
          "fullName": "storage metrics",
          "usage": "[options] [command]",
          "options": [],
          "commands": [
            {
              "name": "show",
              "description": "Show the metrics properties of the storage services ",
              "fullName": "storage metrics show",
              "usage": "[options]",
              "filePath": "commands/storage/storage.service._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "--blob",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--blob",
                  "description": "show metrics properties for blob service"
                },
                {
                  "flags": "--table",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--table",
                  "description": "show metrics properties for table service"
                },
                {
                  "flags": "--queue",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--queue",
                  "description": "show metrics properties for queue service"
                },
                {
                  "flags": "-a, --account-name <accountName>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "short": "-a",
                  "long": "--account-name",
                  "description": "the storage account name"
                },
                {
                  "flags": "-k, --account-key <accountKey>",
                  "required": -19,
                  "optional": 0,
                  "bool": true,
                  "short": "-k",
                  "long": "--account-key",
                  "description": "the storage account key"
                },
                {
                  "flags": "-c, --connection-string <connectionString>",
                  "required": -25,
                  "optional": 0,
                  "bool": true,
                  "short": "-c",
                  "long": "--connection-string",
                  "description": "the storage connection string"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "run storage command in debug mode"
                }
              ]
            },
            {
              "name": "set",
              "description": "Set the metrics properties of the storage service",
              "fullName": "storage metrics set",
              "usage": "[options]",
              "filePath": "commands/storage/storage.service._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "--blob",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--blob",
                  "description": "set metrics properties for blob service"
                },
                {
                  "flags": "--table",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--table",
                  "description": "set metrics properties for table service"
                },
                {
                  "flags": "--queue",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--queue",
                  "description": "set metrics properties for queue service"
                },
                {
                  "flags": "--version <version>",
                  "required": -11,
                  "optional": 0,
                  "bool": true,
                  "long": "--version",
                  "description": "the version string"
                },
                {
                  "flags": "--retention <retention>",
                  "required": -13,
                  "optional": 0,
                  "bool": true,
                  "long": "--retention",
                  "description": "set metrics retention in days"
                },
                {
                  "flags": "--hour",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--hour",
                  "description": "set hourly metrics properties"
                },
                {
                  "flags": "--hour-off",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--hour-off",
                  "description": "turn off hourly metrics properties"
                },
                {
                  "flags": "--minute",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--minute",
                  "description": "set minute metrics properties"
                },
                {
                  "flags": "--minute-off",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--minute-off",
                  "description": "turn off minute metrics properties"
                },
                {
                  "flags": "--api",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--api",
                  "description": "include API in metrics "
                },
                {
                  "flags": "--api-off",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--api-off",
                  "description": "exclude API from metrics"
                },
                {
                  "flags": "-a, --account-name <accountName>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "short": "-a",
                  "long": "--account-name",
                  "description": "the storage account name"
                },
                {
                  "flags": "-k, --account-key <accountKey>",
                  "required": -19,
                  "optional": 0,
                  "bool": true,
                  "short": "-k",
                  "long": "--account-key",
                  "description": "the storage account key"
                },
                {
                  "flags": "-c, --connection-string <connectionString>",
                  "required": -25,
                  "optional": 0,
                  "bool": true,
                  "short": "-c",
                  "long": "--connection-string",
                  "description": "the storage connection string"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "run storage command in debug mode"
                }
              ]
            }
          ],
          "categories": {}
        },
        "cors": {
          "name": "cors",
          "description": "Commands to manage your Storage CORS (Cross-Origin Resource Sharing)",
          "fullName": "storage cors",
          "usage": "[options] [command]",
          "options": [],
          "commands": [
            {
              "name": "set",
              "description": "Set the CORS rules of the storage service",
              "fullName": "storage cors set",
              "usage": "[options]",
              "filePath": "commands/storage/storage.service._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "--blob",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--blob",
                  "description": "set CORS rules for blob service"
                },
                {
                  "flags": "--table",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--table",
                  "description": "set CORS rules for table service"
                },
                {
                  "flags": "--queue",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--queue",
                  "description": "set CORS rules for queue service"
                },
                {
                  "flags": "--file",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--file",
                  "description": "set CORS rules for file service"
                },
                {
                  "flags": "--cors <cors>",
                  "required": -8,
                  "optional": 0,
                  "bool": true,
                  "long": "--cors",
                  "description": "the CORS rules array in json format"
                },
                {
                  "flags": "-a, --account-name <accountName>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "short": "-a",
                  "long": "--account-name",
                  "description": "the storage account name"
                },
                {
                  "flags": "-k, --account-key <accountKey>",
                  "required": -19,
                  "optional": 0,
                  "bool": true,
                  "short": "-k",
                  "long": "--account-key",
                  "description": "the storage account key"
                },
                {
                  "flags": "-c, --connection-string <connectionString>",
                  "required": -25,
                  "optional": 0,
                  "bool": true,
                  "short": "-c",
                  "long": "--connection-string",
                  "description": "the storage connection string"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "run storage command in debug mode"
                }
              ]
            },
            {
              "name": "show",
              "description": "Show the CORS rules of the storage service",
              "fullName": "storage cors show",
              "usage": "[options]",
              "filePath": "commands/storage/storage.service._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "--blob",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--blob",
                  "description": "show CORS rules for blob service"
                },
                {
                  "flags": "--table",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--table",
                  "description": "show CORS rules for table service"
                },
                {
                  "flags": "--queue",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--queue",
                  "description": "show CORS rules for queue service"
                },
                {
                  "flags": "--file",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--file",
                  "description": "show CORS rules for file service"
                },
                {
                  "flags": "-a, --account-name <accountName>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "short": "-a",
                  "long": "--account-name",
                  "description": "the storage account name"
                },
                {
                  "flags": "-k, --account-key <accountKey>",
                  "required": -19,
                  "optional": 0,
                  "bool": true,
                  "short": "-k",
                  "long": "--account-key",
                  "description": "the storage account key"
                },
                {
                  "flags": "-c, --connection-string <connectionString>",
                  "required": -25,
                  "optional": 0,
                  "bool": true,
                  "short": "-c",
                  "long": "--connection-string",
                  "description": "the storage connection string"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "run storage command in debug mode"
                }
              ]
            },
            {
              "name": "delete",
              "description": "Delete all the CORS rules of the storage service",
              "fullName": "storage cors delete",
              "usage": "[options]",
              "filePath": "commands/storage/storage.service._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "--blob",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--blob",
                  "description": "delete CORS rules for blob service"
                },
                {
                  "flags": "--table",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--table",
                  "description": "delete CORS rules for table service"
                },
                {
                  "flags": "--queue",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--queue",
                  "description": "delete CORS rules for queue service"
                },
                {
                  "flags": "--file",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--file",
                  "description": "delete CORS rules for file service"
                },
                {
                  "flags": "-q, --quiet",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-q",
                  "long": "--quiet",
                  "description": "delete the CORS rules without confirmation"
                },
                {
                  "flags": "-a, --account-name <accountName>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "short": "-a",
                  "long": "--account-name",
                  "description": "the storage account name"
                },
                {
                  "flags": "-k, --account-key <accountKey>",
                  "required": -19,
                  "optional": 0,
                  "bool": true,
                  "short": "-k",
                  "long": "--account-key",
                  "description": "the storage account key"
                },
                {
                  "flags": "-c, --connection-string <connectionString>",
                  "required": -25,
                  "optional": 0,
                  "bool": true,
                  "short": "-c",
                  "long": "--connection-string",
                  "description": "the storage connection string"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "run storage command in debug mode"
                }
              ]
            }
          ],
          "categories": {}
        },
        "table": {
          "name": "table",
          "description": "Commands to manage your Storage tables",
          "fullName": "storage table",
          "usage": "[options] [command]",
          "options": [],
          "commands": [
            {
              "name": "create",
              "description": "Create a storage table",
              "fullName": "storage table create",
              "usage": "[options] [table]",
              "filePath": "commands/storage/storage.table._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "--table <table>",
                  "required": -9,
                  "optional": 0,
                  "bool": true,
                  "long": "--table",
                  "description": "the storage table name"
                },
                {
                  "flags": "-a, --account-name <accountName>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "short": "-a",
                  "long": "--account-name",
                  "description": "the storage account name"
                },
                {
                  "flags": "-k, --account-key <accountKey>",
                  "required": -19,
                  "optional": 0,
                  "bool": true,
                  "short": "-k",
                  "long": "--account-key",
                  "description": "the storage account key"
                },
                {
                  "flags": "-c, --connection-string <connectionString>",
                  "required": -25,
                  "optional": 0,
                  "bool": true,
                  "short": "-c",
                  "long": "--connection-string",
                  "description": "the storage connection string"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "run storage command in debug mode"
                }
              ]
            },
            {
              "name": "list",
              "description": "List storage tables with wildcard",
              "fullName": "storage table list",
              "usage": "[options] [prefix]",
              "filePath": "commands/storage/storage.table._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "-p, --prefix <prefix>",
                  "required": -14,
                  "optional": 0,
                  "bool": true,
                  "short": "-p",
                  "long": "--prefix",
                  "description": "the storage table name prefix"
                },
                {
                  "flags": "-a, --account-name <accountName>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "short": "-a",
                  "long": "--account-name",
                  "description": "the storage account name"
                },
                {
                  "flags": "-k, --account-key <accountKey>",
                  "required": -19,
                  "optional": 0,
                  "bool": true,
                  "short": "-k",
                  "long": "--account-key",
                  "description": "the storage account key"
                },
                {
                  "flags": "-c, --connection-string <connectionString>",
                  "required": -25,
                  "optional": 0,
                  "bool": true,
                  "short": "-c",
                  "long": "--connection-string",
                  "description": "the storage connection string"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "run storage command in debug mode"
                }
              ]
            },
            {
              "name": "show",
              "description": "Show details of the storage able",
              "fullName": "storage table show",
              "usage": "[options] [table]",
              "filePath": "commands/storage/storage.table._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "--table <table>",
                  "required": -9,
                  "optional": 0,
                  "bool": true,
                  "long": "--table",
                  "description": "the storage table name"
                },
                {
                  "flags": "-a, --account-name <accountName>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "short": "-a",
                  "long": "--account-name",
                  "description": "the storage account name"
                },
                {
                  "flags": "-k, --account-key <accountKey>",
                  "required": -19,
                  "optional": 0,
                  "bool": true,
                  "short": "-k",
                  "long": "--account-key",
                  "description": "the storage account key"
                },
                {
                  "flags": "-c, --connection-string <connectionString>",
                  "required": -25,
                  "optional": 0,
                  "bool": true,
                  "short": "-c",
                  "long": "--connection-string",
                  "description": "the storage connection string"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "run storage command in debug mode"
                }
              ]
            },
            {
              "name": "delete",
              "description": "Delete the specified storage table",
              "fullName": "storage table delete",
              "usage": "[options] [table]",
              "filePath": "commands/storage/storage.table._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "--table <table>",
                  "required": -9,
                  "optional": 0,
                  "bool": true,
                  "long": "--table",
                  "description": "the storage table name"
                },
                {
                  "flags": "-q, --quiet",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-q",
                  "long": "--quiet",
                  "description": "remove the specified storage table without confirmation"
                },
                {
                  "flags": "-a, --account-name <accountName>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "short": "-a",
                  "long": "--account-name",
                  "description": "the storage account name"
                },
                {
                  "flags": "-k, --account-key <accountKey>",
                  "required": -19,
                  "optional": 0,
                  "bool": true,
                  "short": "-k",
                  "long": "--account-key",
                  "description": "the storage account key"
                },
                {
                  "flags": "-c, --connection-string <connectionString>",
                  "required": -25,
                  "optional": 0,
                  "bool": true,
                  "short": "-c",
                  "long": "--connection-string",
                  "description": "the storage connection string"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "run storage command in debug mode"
                }
              ]
            }
          ],
          "categories": {
            "sas": {
              "name": "sas",
              "description": "Commands to manage shared access signatures of your Storage table",
              "fullName": "storage table sas",
              "usage": "[options] [command]",
              "options": [],
              "commands": [
                {
                  "name": "create",
                  "description": "Generate a shared access signature of storage table",
                  "fullName": "storage table sas create",
                  "usage": "[options] [table] [permissions] [expiry]",
                  "filePath": "commands/storage/storage.table._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--table <table>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--table",
                      "description": "the storage table name"
                    },
                    {
                      "flags": "--permissions <permissions>",
                      "required": -15,
                      "optional": 0,
                      "bool": true,
                      "long": "--permissions",
                      "description": "the operation permissions combining symbols of r(Query)/a(Add)/u(Update)/d(Delete)"
                    },
                    {
                      "flags": "--start <start>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--start",
                      "description": "the UTC time at which the SAS becomes valid"
                    },
                    {
                      "flags": "--expiry <expiry>",
                      "required": -10,
                      "optional": 0,
                      "bool": true,
                      "long": "--expiry",
                      "description": "the UTC time at which the SAS expires"
                    },
                    {
                      "flags": "--policy <policy>",
                      "required": -10,
                      "optional": 0,
                      "bool": true,
                      "long": "--policy",
                      "description": "the stored access policy identifier"
                    },
                    {
                      "flags": "--start-pk <startPk>",
                      "required": -12,
                      "optional": 0,
                      "bool": true,
                      "long": "--start-pk",
                      "description": "the inclusive starting partition key"
                    },
                    {
                      "flags": "--end-pk <endPk>",
                      "required": -10,
                      "optional": 0,
                      "bool": true,
                      "long": "--end-pk",
                      "description": "the inclusive ending partition key"
                    },
                    {
                      "flags": "--start-rk <startRk>",
                      "required": -12,
                      "optional": 0,
                      "bool": true,
                      "long": "--start-rk",
                      "description": "the inclusive starting row key"
                    },
                    {
                      "flags": "--end-rk <endRk>",
                      "required": -10,
                      "optional": 0,
                      "bool": true,
                      "long": "--end-rk",
                      "description": "the inclusive ending row key"
                    },
                    {
                      "flags": "-a, --account-name <accountName>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-a",
                      "long": "--account-name",
                      "description": "the storage account name"
                    },
                    {
                      "flags": "-k, --account-key <accountKey>",
                      "required": -19,
                      "optional": 0,
                      "bool": true,
                      "short": "-k",
                      "long": "--account-key",
                      "description": "the storage account key"
                    },
                    {
                      "flags": "-c, --connection-string <connectionString>",
                      "required": -25,
                      "optional": 0,
                      "bool": true,
                      "short": "-c",
                      "long": "--connection-string",
                      "description": "the storage connection string"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "run storage command in debug mode"
                    }
                  ]
                }
              ],
              "categories": {}
            },
            "policy": {
              "name": "policy",
              "description": "Commands to manage stored access policies of your Storage table",
              "fullName": "storage table policy",
              "usage": "[options] [command]",
              "options": [],
              "commands": [
                {
                  "name": "create",
                  "description": "Create a stored access policy on the table",
                  "fullName": "storage table policy create",
                  "usage": "[options] [table] [name]",
                  "filePath": "commands/storage/storage.table._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--table <table>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--table",
                      "description": "the storage table name"
                    },
                    {
                      "flags": "--name <name>",
                      "required": -8,
                      "optional": 0,
                      "bool": true,
                      "long": "--name",
                      "description": "the policy name"
                    },
                    {
                      "flags": "--start <start>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--start",
                      "description": "the UTC time at which the policy becomes valid"
                    },
                    {
                      "flags": "--expiry <expiry>",
                      "required": -10,
                      "optional": 0,
                      "bool": true,
                      "long": "--expiry",
                      "description": "the UTC time at which the policy expires"
                    },
                    {
                      "flags": "--permissions <permissions>",
                      "required": -15,
                      "optional": 0,
                      "bool": true,
                      "long": "--permissions",
                      "description": "the operation permissions combining symbols of r(Query)/a(Add)/u(Update)/d(Delete)"
                    },
                    {
                      "flags": "-a, --account-name <accountName>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-a",
                      "long": "--account-name",
                      "description": "the storage account name"
                    },
                    {
                      "flags": "-k, --account-key <accountKey>",
                      "required": -19,
                      "optional": 0,
                      "bool": true,
                      "short": "-k",
                      "long": "--account-key",
                      "description": "the storage account key"
                    },
                    {
                      "flags": "-c, --connection-string <connectionString>",
                      "required": -25,
                      "optional": 0,
                      "bool": true,
                      "short": "-c",
                      "long": "--connection-string",
                      "description": "the storage connection string"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "run storage command in debug mode"
                    }
                  ]
                },
                {
                  "name": "show",
                  "description": "Show a stored access policy on the table",
                  "fullName": "storage table policy show",
                  "usage": "[options] [table] [name]",
                  "filePath": "commands/storage/storage.table._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--table <table>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--table",
                      "description": "the storage table name"
                    },
                    {
                      "flags": "--name <name>",
                      "required": -8,
                      "optional": 0,
                      "bool": true,
                      "long": "--name",
                      "description": "the policy name"
                    },
                    {
                      "flags": "-a, --account-name <accountName>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-a",
                      "long": "--account-name",
                      "description": "the storage account name"
                    },
                    {
                      "flags": "-k, --account-key <accountKey>",
                      "required": -19,
                      "optional": 0,
                      "bool": true,
                      "short": "-k",
                      "long": "--account-key",
                      "description": "the storage account key"
                    },
                    {
                      "flags": "-c, --connection-string <connectionString>",
                      "required": -25,
                      "optional": 0,
                      "bool": true,
                      "short": "-c",
                      "long": "--connection-string",
                      "description": "the storage connection string"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "run storage command in debug mode"
                    }
                  ]
                },
                {
                  "name": "list",
                  "description": "List stored access policies on the table",
                  "fullName": "storage table policy list",
                  "usage": "[options] [table]",
                  "filePath": "commands/storage/storage.table._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--table <table>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--table",
                      "description": "the storage table name"
                    },
                    {
                      "flags": "-a, --account-name <accountName>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-a",
                      "long": "--account-name",
                      "description": "the storage account name"
                    },
                    {
                      "flags": "-k, --account-key <accountKey>",
                      "required": -19,
                      "optional": 0,
                      "bool": true,
                      "short": "-k",
                      "long": "--account-key",
                      "description": "the storage account key"
                    },
                    {
                      "flags": "-c, --connection-string <connectionString>",
                      "required": -25,
                      "optional": 0,
                      "bool": true,
                      "short": "-c",
                      "long": "--connection-string",
                      "description": "the storage connection string"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "run storage command in debug mode"
                    }
                  ]
                },
                {
                  "name": "set",
                  "description": "Set a stored access policy on the table",
                  "fullName": "storage table policy set",
                  "usage": "[options] [table] [name]",
                  "filePath": "commands/storage/storage.table._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--table <table>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--table",
                      "description": "the storage table name"
                    },
                    {
                      "flags": "--name <name>",
                      "required": -8,
                      "optional": 0,
                      "bool": true,
                      "long": "--name",
                      "description": "the policy name"
                    },
                    {
                      "flags": "--start <start>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--start",
                      "description": "the UTC time at which the policy becomes valid and passing two spaces means to remove the existing setting"
                    },
                    {
                      "flags": "--expiry <expiry>",
                      "required": -10,
                      "optional": 0,
                      "bool": true,
                      "long": "--expiry",
                      "description": "the UTC time at which the policy expires and passing two spaces means to remove the existing setting"
                    },
                    {
                      "flags": "--permissions <permissions>",
                      "required": -15,
                      "optional": 0,
                      "bool": true,
                      "long": "--permissions",
                      "description": "the operation permissions combining symbols of r(Query)/a(Add)/u(Update)/d(Delete) and passing two spaces means to remove the existing setting"
                    },
                    {
                      "flags": "-a, --account-name <accountName>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-a",
                      "long": "--account-name",
                      "description": "the storage account name"
                    },
                    {
                      "flags": "-k, --account-key <accountKey>",
                      "required": -19,
                      "optional": 0,
                      "bool": true,
                      "short": "-k",
                      "long": "--account-key",
                      "description": "the storage account key"
                    },
                    {
                      "flags": "-c, --connection-string <connectionString>",
                      "required": -25,
                      "optional": 0,
                      "bool": true,
                      "short": "-c",
                      "long": "--connection-string",
                      "description": "the storage connection string"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "run storage command in debug mode"
                    }
                  ]
                },
                {
                  "name": "delete",
                  "description": "Delete a stored access policy on the table",
                  "fullName": "storage table policy delete",
                  "usage": "[options] [table] [name]",
                  "filePath": "commands/storage/storage.table._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--table <table>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--table",
                      "description": "the storage table name"
                    },
                    {
                      "flags": "--name <name>",
                      "required": -8,
                      "optional": 0,
                      "bool": true,
                      "long": "--name",
                      "description": "the policy name"
                    },
                    {
                      "flags": "-a, --account-name <accountName>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-a",
                      "long": "--account-name",
                      "description": "the storage account name"
                    },
                    {
                      "flags": "-k, --account-key <accountKey>",
                      "required": -19,
                      "optional": 0,
                      "bool": true,
                      "short": "-k",
                      "long": "--account-key",
                      "description": "the storage account key"
                    },
                    {
                      "flags": "-c, --connection-string <connectionString>",
                      "required": -25,
                      "optional": 0,
                      "bool": true,
                      "short": "-c",
                      "long": "--connection-string",
                      "description": "the storage connection string"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "run storage command in debug mode"
                    }
                  ]
                }
              ],
              "categories": {}
            }
          }
        }
      }
    },
    "ad": {
      "name": "ad",
      "description": "Commands to display active directory objects",
      "fullName": "ad",
      "usage": "[options]",
      "options": [],
      "commands": [],
      "categories": {
        "app": {
          "name": "app",
          "description": "Commands to display active directory applications",
          "fullName": "ad app",
          "usage": "[options] [command]",
          "options": [],
          "commands": [
            {
              "name": "create",
              "description": "Creates a new active directory application",
              "fullName": "ad app create",
              "usage": "[options]",
              "filePath": "commands/arm/ad/ad.application._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "-n --name <name>",
                  "required": -11,
                  "optional": 0,
                  "bool": true,
                  "short": "-n",
                  "long": "--name",
                  "description": "the display name for the application"
                },
                {
                  "flags": "--home-page <home-page>",
                  "required": -13,
                  "optional": 0,
                  "bool": true,
                  "long": "--home-page",
                  "description": "the URL to the application homepage"
                },
                {
                  "flags": "-a --available",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-a",
                  "long": "--available",
                  "description": "indicates if the application will be available to other tenants"
                },
                {
                  "flags": "-p --password <password>",
                  "required": -15,
                  "optional": 0,
                  "bool": true,
                  "short": "-p",
                  "long": "--password",
                  "description": "the value for the password credential associated with the application that will be valid for one year by default"
                },
                {
                  "flags": "-i --identifier-uris <identifier-uris>",
                  "required": -22,
                  "optional": 0,
                  "bool": true,
                  "short": "-i",
                  "long": "--identifier-uris",
                  "description": "the comma-delimitied URIs that identify the application"
                },
                {
                  "flags": "--key-value <key-value>",
                  "required": -13,
                  "optional": 0,
                  "bool": true,
                  "long": "--key-value",
                  "description": "the value for the key credentials associated with the application that will be valid for one year by default"
                },
                {
                  "flags": "--key-type <key-type>",
                  "required": -12,
                  "optional": 0,
                  "bool": true,
                  "long": "--key-type",
                  "description": "the type of the key credentials associated with the application. Acceptable values are AsymmetricX509Cert, Password and Symmetric"
                },
                {
                  "flags": "--key-usage <key-usage>",
                  "required": -13,
                  "optional": 0,
                  "bool": true,
                  "long": "--key-usage",
                  "description": "the usage of the key credentials associated with the application. Acceptable values are Sign and Verify"
                },
                {
                  "flags": "--start-date <start-date>",
                  "required": -14,
                  "optional": 0,
                  "bool": true,
                  "long": "--start-date",
                  "description": "the start date after which password or key would be valid. Default value is current time"
                },
                {
                  "flags": "--end-date <end-date>",
                  "required": -12,
                  "optional": 0,
                  "bool": true,
                  "long": "--end-date",
                  "description": "the end date till which password or key is valid. Default value is one year after current time"
                }
              ]
            },
            {
              "name": "delete",
              "description": "Deletes the active directory application",
              "fullName": "ad app delete",
              "usage": "[options] <object-id>",
              "filePath": "commands/arm/ad/ad.application._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "--objectId <objectId>",
                  "required": -12,
                  "optional": 0,
                  "bool": true,
                  "long": "--objectId",
                  "description": "the object id of the application to remove"
                },
                {
                  "flags": "-q, --quiet",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-q",
                  "long": "--quiet",
                  "description": "quiet mode (do not ask for delete confirmation)"
                }
              ]
            },
            {
              "name": "list",
              "description": "Get all active directory applications in current subscription's tenant",
              "fullName": "ad app list",
              "usage": "[options]",
              "filePath": "commands/arm/ad/ad.application._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                }
              ]
            },
            {
              "name": "show",
              "description": "Get active directory applications",
              "fullName": "ad app show",
              "usage": "[options]",
              "filePath": "commands/arm/ad/ad.application._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "--appId <appId>",
                  "required": -9,
                  "optional": 0,
                  "bool": true,
                  "long": "--appId",
                  "description": "the name of the application to return"
                },
                {
                  "flags": "--objectId <objectId>",
                  "required": -12,
                  "optional": 0,
                  "bool": true,
                  "long": "--objectId",
                  "description": "the object id of the application to return"
                },
                {
                  "flags": "--identifierUri <identifierUri>",
                  "required": -17,
                  "optional": 0,
                  "bool": true,
                  "long": "--identifierUri",
                  "description": "the identifier uri of the application to return"
                },
                {
                  "flags": "--search <search>",
                  "required": -10,
                  "optional": 0,
                  "bool": true,
                  "long": "--search",
                  "description": "search display name of the application starting with the provided value"
                }
              ]
            }
          ],
          "categories": {}
        },
        "group": {
          "name": "group",
          "description": "Commands to display active directory groups",
          "fullName": "ad group",
          "usage": "[options] [command]",
          "options": [],
          "commands": [
            {
              "name": "list",
              "description": "Get active directory groups in current subscription's tenant",
              "fullName": "ad group list",
              "usage": "[options]",
              "filePath": "commands/arm/ad/ad.groups._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "| more",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "",
                  "long": "more",
                  "description": "Provides paging support. Press 'Enter' for more information."
                }
              ]
            },
            {
              "name": "show",
              "description": "Get active directory groups",
              "fullName": "ad group show",
              "usage": "[options]",
              "filePath": "commands/arm/ad/ad.groups._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "--objectId <objectId>",
                  "required": -12,
                  "optional": 0,
                  "bool": true,
                  "long": "--objectId",
                  "description": "the object Id of the group to return"
                },
                {
                  "flags": "--search <search>",
                  "required": -10,
                  "optional": 0,
                  "bool": true,
                  "long": "--search",
                  "description": "Search by display name which starts with the provided value"
                }
              ]
            }
          ],
          "categories": {
            "member": {
              "name": "member",
              "description": "Commands to provide an active directory sub group or member info",
              "fullName": "ad group member",
              "usage": "[options] [command]",
              "options": [],
              "commands": [
                {
                  "name": "list",
                  "description": "Provides an active directory sub group or member info",
                  "fullName": "ad group member list",
                  "usage": "[options] [objectId]",
                  "filePath": "commands/arm/ad/ad.groups._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--objectId <objectId>",
                      "required": -12,
                      "optional": 0,
                      "bool": true,
                      "long": "--objectId",
                      "description": "Object id of group whose members to return."
                    }
                  ]
                }
              ],
              "categories": {}
            }
          }
        },
        "sp": {
          "name": "sp",
          "description": "Commands to display active directory service principals",
          "fullName": "ad sp",
          "usage": "[options] [command]",
          "options": [],
          "commands": [
            {
              "name": "list",
              "description": "Get all active directory service principals in current subscription's tenant",
              "fullName": "ad sp list",
              "usage": "[options]",
              "filePath": "commands/arm/ad/ad.servicePrincipals._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "| more",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "",
                  "long": "more",
                  "description": "Provides paging support. Press 'Enter' for more information."
                }
              ]
            },
            {
              "name": "show",
              "description": "Get active directory service principals",
              "fullName": "ad sp show",
              "usage": "[options]",
              "filePath": "commands/arm/ad/ad.servicePrincipals._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "--spn <spn>",
                  "required": -7,
                  "optional": 0,
                  "bool": true,
                  "long": "--spn",
                  "description": "the name of the service principal to return"
                },
                {
                  "flags": "--objectId <objectId>",
                  "required": -12,
                  "optional": 0,
                  "bool": true,
                  "long": "--objectId",
                  "description": "the object id of the service principal to return"
                },
                {
                  "flags": "--search <search>",
                  "required": -10,
                  "optional": 0,
                  "bool": true,
                  "long": "--search",
                  "description": "search display name of the service principal starting with the provided value"
                }
              ]
            },
            {
              "name": "create",
              "description": "Create active directory service principal",
              "fullName": "ad sp create",
              "usage": "[options] <applicationId>",
              "filePath": "commands/arm/ad/ad.servicePrincipals._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "--applicationId <applicationId>",
                  "required": -17,
                  "optional": 0,
                  "bool": true,
                  "long": "--applicationId",
                  "description": "the application Id for which service principal is created"
                }
              ]
            },
            {
              "name": "delete",
              "description": "Deletes active directory service principal",
              "fullName": "ad sp delete",
              "usage": "[options] <objectId>",
              "filePath": "commands/arm/ad/ad.servicePrincipals._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "--objectId <objectId>",
                  "required": -12,
                  "optional": 0,
                  "bool": true,
                  "long": "--objectId",
                  "description": "the object id of the service principal to delete"
                },
                {
                  "flags": "-q, --quiet",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-q",
                  "long": "--quiet",
                  "description": "quiet mode (do not ask for delete confirmation)"
                }
              ]
            }
          ],
          "categories": {}
        },
        "user": {
          "name": "user",
          "description": "Commands to display active directory users",
          "fullName": "ad user",
          "usage": "[options] [command]",
          "options": [],
          "commands": [
            {
              "name": "list",
              "description": "Get all active directory users in current subscription's tenant",
              "fullName": "ad user list",
              "usage": "[options]",
              "filePath": "commands/arm/ad/ad.users._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "| more",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "",
                  "long": "more",
                  "description": "Provides paging support. Press 'Enter' for more information."
                }
              ]
            },
            {
              "name": "show",
              "description": "Get an active directory user",
              "fullName": "ad user show",
              "usage": "[options]",
              "filePath": "commands/arm/ad/ad.users._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "--upn <upn>",
                  "required": -7,
                  "optional": 0,
                  "bool": true,
                  "long": "--upn",
                  "description": "the principal name of the user to return"
                },
                {
                  "flags": "--objectId <objectId>",
                  "required": -12,
                  "optional": 0,
                  "bool": true,
                  "long": "--objectId",
                  "description": "the object id of the user to return"
                },
                {
                  "flags": "--search <search>",
                  "required": -10,
                  "optional": 0,
                  "bool": true,
                  "long": "--search",
                  "description": "search users with display name starting with the provided value"
                }
              ]
            }
          ],
          "categories": {}
        }
      }
    },
    "apiapp": {
      "name": "apiapp",
      "description": "Commands to manage ApiApps",
      "fullName": "apiapp",
      "usage": "[options] [command]",
      "options": [],
      "commands": [
        {
          "name": "list",
          "description": "List currently deployed ApiApps in a subscription or resource group",
          "fullName": "apiapp list",
          "usage": "[options] [resource-group]",
          "filePath": "commands/arm/apiapp/apiapp._js",
          "options": [
            {
              "flags": "-v, --verbose",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-v",
              "long": "--verbose",
              "description": "use verbose output"
            },
            {
              "flags": "-vv",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "-vv",
              "description": "more verbose with debug output"
            },
            {
              "flags": "--json",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--json",
              "description": "use json output"
            },
            {
              "flags": "-g --resource-group <resource-group>",
              "required": -21,
              "optional": 0,
              "bool": true,
              "short": "-g",
              "long": "--resource-group",
              "description": "the resource group name, if not given list all ApiApps in subscription"
            },
            {
              "flags": "-s --subscription <subscription>",
              "required": -19,
              "optional": 0,
              "bool": true,
              "short": "-s",
              "long": "--subscription",
              "description": "The subscription identifier"
            },
            {
              "flags": "-d --detailed",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-d",
              "long": "--detailed",
              "description": "Include ApiApp package version and auth setting (call will be slower)"
            }
          ]
        },
        {
          "name": "show",
          "description": "Get detailed information about a deployed ApiApp",
          "fullName": "apiapp show",
          "usage": "[options] [resource-group] [name]",
          "filePath": "commands/arm/apiapp/apiapp._js",
          "options": [
            {
              "flags": "-v, --verbose",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-v",
              "long": "--verbose",
              "description": "use verbose output"
            },
            {
              "flags": "-vv",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "-vv",
              "description": "more verbose with debug output"
            },
            {
              "flags": "--json",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--json",
              "description": "use json output"
            },
            {
              "flags": "-g --resource-group <resource-group>",
              "required": -21,
              "optional": 0,
              "bool": true,
              "short": "-g",
              "long": "--resource-group",
              "description": "Name of the resource group containing the ApiApp"
            },
            {
              "flags": "-n --name <name>",
              "required": -11,
              "optional": 0,
              "bool": true,
              "short": "-n",
              "long": "--name",
              "description": "Name of the ApiApp"
            },
            {
              "flags": "-s --subscription <subscription>",
              "required": -19,
              "optional": 0,
              "bool": true,
              "short": "-s",
              "long": "--subscription",
              "description": "The subscription identifier"
            }
          ]
        },
        {
          "name": "create",
          "description": "Create a new ApiApp instance",
          "fullName": "apiapp create",
          "usage": "[options] [resource-group] [name] [plan]",
          "filePath": "commands/arm/apiapp/apiapp._js",
          "options": [
            {
              "flags": "-v, --verbose",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-v",
              "long": "--verbose",
              "description": "use verbose output"
            },
            {
              "flags": "-vv",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "-vv",
              "description": "more verbose with debug output"
            },
            {
              "flags": "--json",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--json",
              "description": "use json output"
            },
            {
              "flags": "-n --name <name>",
              "required": -11,
              "optional": 0,
              "bool": true,
              "short": "-n",
              "long": "--name",
              "description": "Name of the ApiApp instance"
            },
            {
              "flags": "-g --resource-group <resource-group>",
              "required": -21,
              "optional": 0,
              "bool": true,
              "short": "-g",
              "long": "--resource-group",
              "description": "Name of the resource group"
            },
            {
              "flags": "-p --plan <plan>",
              "required": -11,
              "optional": 0,
              "bool": true,
              "short": "-p",
              "long": "--plan",
              "description": "Name or Resource Id of the App Service Plan to use"
            },
            {
              "flags": "-u --nuget-package <package>",
              "required": -20,
              "optional": 0,
              "bool": true,
              "short": "-u",
              "long": "--nuget-package",
              "description": "Package name and version to deploy (optional)"
            },
            {
              "flags": "--parameters <parameters>",
              "required": -14,
              "optional": 0,
              "bool": true,
              "long": "--parameters",
              "description": "A JSON-formatted string containing parameters"
            },
            {
              "flags": "--parameters-file <parametersFile>",
              "required": -19,
              "optional": 0,
              "bool": true,
              "long": "--parameters-file",
              "description": "A file containing parameters in JSON format"
            },
            {
              "flags": "-s --subscription <subscription>",
              "required": -19,
              "optional": 0,
              "bool": true,
              "short": "-s",
              "long": "--subscription",
              "description": "The subscription identifier"
            },
            {
              "flags": "--nowait",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--nowait",
              "description": "Do not wait for the deployment to complete"
            }
          ]
        }
      ],
      "categories": {
        "package": {
          "name": "package",
          "description": "Commands to create and publish ApiApp packages",
          "fullName": "apiapp package",
          "usage": "[options] [command]",
          "options": [],
          "commands": [
            {
              "name": "create",
              "description": "Create an ApiApp package that can be published",
              "fullName": "apiapp package create",
              "usage": "[options] [packageSource]",
              "filePath": "commands/arm/apiapp/apiapp.package._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "-p, --package-source <packageSource>",
                  "required": -22,
                  "optional": 0,
                  "bool": true,
                  "short": "-p",
                  "long": "--package-source",
                  "description": "Directory containing source to be packaged"
                },
                {
                  "flags": "-o, --output <dest>",
                  "required": -14,
                  "optional": 0,
                  "bool": true,
                  "short": "-o",
                  "long": "--output",
                  "description": "Directory or filename to generate"
                }
              ]
            }
          ],
          "categories": {}
        }
      }
    },
    "availset": {
      "name": "availset",
      "description": "Commands to manage your availablilty sets",
      "fullName": "availset",
      "usage": "[options] [command]",
      "options": [],
      "commands": [
        {
          "name": "create",
          "description": "Creates an availability set within a resource group",
          "fullName": "availset create",
          "usage": "[options] <resource-group> <name> <location> [tags]",
          "filePath": "commands/arm/availabilityset/availset._js",
          "options": [
            {
              "flags": "-v, --verbose",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-v",
              "long": "--verbose",
              "description": "use verbose output"
            },
            {
              "flags": "-vv",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "-vv",
              "description": "more verbose with debug output"
            },
            {
              "flags": "--json",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--json",
              "description": "use json output"
            },
            {
              "flags": "-g, --resource-group <resource-group>",
              "required": -22,
              "optional": 0,
              "bool": true,
              "short": "-g",
              "long": "--resource-group",
              "description": "the resource group name"
            },
            {
              "flags": "-n, --name <name>",
              "required": -12,
              "optional": 0,
              "bool": true,
              "short": "-n",
              "long": "--name",
              "description": "the availability set name"
            },
            {
              "flags": "-l, --location <location>",
              "required": -16,
              "optional": 0,
              "bool": true,
              "short": "-l",
              "long": "--location",
              "description": "the location"
            },
            {
              "flags": "-t, --tags <tags>",
              "required": -12,
              "optional": 0,
              "bool": true,
              "short": "-t",
              "long": "--tags",
              "description": "the semicolon separated list of tags"
            },
            {
              "flags": "-s, --subscription <subscription>",
              "required": -20,
              "optional": 0,
              "bool": true,
              "short": "-s",
              "long": "--subscription",
              "description": "the subscription identifier"
            }
          ]
        },
        {
          "name": "list",
          "description": "Lists the availability sets within a resource group",
          "fullName": "availset list",
          "usage": "[options] <resource-group>",
          "filePath": "commands/arm/availabilityset/availset._js",
          "options": [
            {
              "flags": "-v, --verbose",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-v",
              "long": "--verbose",
              "description": "use verbose output"
            },
            {
              "flags": "-vv",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "-vv",
              "description": "more verbose with debug output"
            },
            {
              "flags": "--json",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--json",
              "description": "use json output"
            },
            {
              "flags": "-g, --resource-group <resource-group>",
              "required": -22,
              "optional": 0,
              "bool": true,
              "short": "-g",
              "long": "--resource-group",
              "description": "the resource group name"
            },
            {
              "flags": "-s, --subscription <subscription>",
              "required": -20,
              "optional": 0,
              "bool": true,
              "short": "-s",
              "long": "--subscription",
              "description": "the subscription identifier"
            }
          ]
        },
        {
          "name": "show",
          "description": "Gets one availability set within a resource group",
          "fullName": "availset show",
          "usage": "[options] <resource-group> <name>",
          "filePath": "commands/arm/availabilityset/availset._js",
          "options": [
            {
              "flags": "-v, --verbose",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-v",
              "long": "--verbose",
              "description": "use verbose output"
            },
            {
              "flags": "-vv",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "-vv",
              "description": "more verbose with debug output"
            },
            {
              "flags": "--json",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--json",
              "description": "use json output"
            },
            {
              "flags": "-g, --resource-group <resourceGroup>",
              "required": -22,
              "optional": 0,
              "bool": true,
              "short": "-g",
              "long": "--resource-group",
              "description": "the resource group name"
            },
            {
              "flags": "-n, --name <name>",
              "required": -12,
              "optional": 0,
              "bool": true,
              "short": "-n",
              "long": "--name",
              "description": "the availability set name"
            },
            {
              "flags": "-d, --depth <depth>",
              "required": -13,
              "optional": 0,
              "bool": true,
              "short": "-d",
              "long": "--depth",
              "description": "the number of times to recurse, to recurse indefinitely pass \"full\". (valid only with --json option)"
            },
            {
              "flags": "-s, --subscription <subscription>",
              "required": -20,
              "optional": 0,
              "bool": true,
              "short": "-s",
              "long": "--subscription",
              "description": "the subscription identifier"
            }
          ]
        },
        {
          "name": "delete",
          "description": "Deletes one availability set within a resource group",
          "fullName": "availset delete",
          "usage": "[options] <resource-group> <name>",
          "filePath": "commands/arm/availabilityset/availset._js",
          "options": [
            {
              "flags": "-v, --verbose",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-v",
              "long": "--verbose",
              "description": "use verbose output"
            },
            {
              "flags": "-vv",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "-vv",
              "description": "more verbose with debug output"
            },
            {
              "flags": "--json",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--json",
              "description": "use json output"
            },
            {
              "flags": "-g, --resource-group <resource-group>",
              "required": -22,
              "optional": 0,
              "bool": true,
              "short": "-g",
              "long": "--resource-group",
              "description": "the resource group name"
            },
            {
              "flags": "-n, --name <name>",
              "required": -12,
              "optional": 0,
              "bool": true,
              "short": "-n",
              "long": "--name",
              "description": "the virtual machine name"
            },
            {
              "flags": "-q, --quiet",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-q",
              "long": "--quiet",
              "description": "quiet mode, do not ask for delete confirmation"
            },
            {
              "flags": "-s, --subscription <subscription>",
              "required": -20,
              "optional": 0,
              "bool": true,
              "short": "-s",
              "long": "--subscription",
              "description": "the subscription identifier"
            }
          ]
        }
      ],
      "categories": {}
    },
    "vmss": {
      "name": "vmss",
      "description": "Commands to manage your virtual machine scale sets.  ",
      "fullName": "vmss",
      "usage": "[options] [command]",
      "options": [],
      "commands": [
        {
          "name": "create-or-update",
          "description": "Commands to manage your virtual machine scale sets by the create-or-update method.",
          "fullName": "vmss create-or-update",
          "usage": "[options] <resource-group-name> <name> <parameters>",
          "filePath": "commands/arm/compute/compute._js",
          "options": [
            {
              "flags": "-v, --verbose",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-v",
              "long": "--verbose",
              "description": "use verbose output"
            },
            {
              "flags": "-vv",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "-vv",
              "description": "more verbose with debug output"
            },
            {
              "flags": "--json",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--json",
              "description": "use json output"
            },
            {
              "flags": "-g, --resource-group-name <resource-group-name>",
              "required": -27,
              "optional": 0,
              "bool": true,
              "short": "-g",
              "long": "--resource-group-name",
              "description": "resource-group-name"
            },
            {
              "flags": "-n, --name <name>",
              "required": -12,
              "optional": 0,
              "bool": true,
              "short": "-n",
              "long": "--name",
              "description": "name"
            },
            {
              "flags": "-p, --parameters <parameters>",
              "required": -18,
              "optional": 0,
              "bool": true,
              "short": "-p",
              "long": "--parameters",
              "description": "parameters"
            },
            {
              "flags": "--parameter-file <parameter-file>",
              "required": -18,
              "optional": 0,
              "bool": true,
              "long": "--parameter-file",
              "description": "the input parameter file"
            },
            {
              "flags": "-s, --subscription <subscription>",
              "required": -20,
              "optional": 0,
              "bool": true,
              "short": "-s",
              "long": "--subscription",
              "description": "the subscription identifier"
            }
          ]
        },
        {
          "name": "deallocate",
          "description": "Commands to manage your virtual machine scale sets by the deallocate method.",
          "fullName": "vmss deallocate",
          "usage": "[options] <resource-group-name> <vm-scale-set-name> <instance-ids>",
          "filePath": "commands/arm/compute/compute._js",
          "options": [
            {
              "flags": "-v, --verbose",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-v",
              "long": "--verbose",
              "description": "use verbose output"
            },
            {
              "flags": "-vv",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "-vv",
              "description": "more verbose with debug output"
            },
            {
              "flags": "--json",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--json",
              "description": "use json output"
            },
            {
              "flags": "-g, --resource-group-name <resource-group-name>",
              "required": -27,
              "optional": 0,
              "bool": true,
              "short": "-g",
              "long": "--resource-group-name",
              "description": "resource-group-name"
            },
            {
              "flags": "-n, --vm-scale-set-name <vm-scale-set-name>",
              "required": -25,
              "optional": 0,
              "bool": true,
              "short": "-n",
              "long": "--vm-scale-set-name",
              "description": "vm-scale-set-name"
            },
            {
              "flags": "--instance-ids <instance-ids>",
              "required": -16,
              "optional": 0,
              "bool": true,
              "long": "--instance-ids",
              "description": "instance-ids"
            },
            {
              "flags": "--parameter-file <parameter-file>",
              "required": -18,
              "optional": 0,
              "bool": true,
              "long": "--parameter-file",
              "description": "the input parameter file"
            },
            {
              "flags": "-s, --subscription <subscription>",
              "required": -20,
              "optional": 0,
              "bool": true,
              "short": "-s",
              "long": "--subscription",
              "description": "the subscription identifier"
            }
          ]
        },
        {
          "name": "delete",
          "description": "Commands to manage your virtual machine scale sets by the delete method.",
          "fullName": "vmss delete",
          "usage": "[options] <resource-group-name> <vm-scale-set-name>",
          "filePath": "commands/arm/compute/compute._js",
          "options": [
            {
              "flags": "-v, --verbose",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-v",
              "long": "--verbose",
              "description": "use verbose output"
            },
            {
              "flags": "-vv",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "-vv",
              "description": "more verbose with debug output"
            },
            {
              "flags": "--json",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--json",
              "description": "use json output"
            },
            {
              "flags": "-g, --resource-group-name <resource-group-name>",
              "required": -27,
              "optional": 0,
              "bool": true,
              "short": "-g",
              "long": "--resource-group-name",
              "description": "resource-group-name"
            },
            {
              "flags": "-n, --vm-scale-set-name <vm-scale-set-name>",
              "required": -25,
              "optional": 0,
              "bool": true,
              "short": "-n",
              "long": "--vm-scale-set-name",
              "description": "vm-scale-set-name"
            },
            {
              "flags": "--parameter-file <parameter-file>",
              "required": -18,
              "optional": 0,
              "bool": true,
              "long": "--parameter-file",
              "description": "the input parameter file"
            },
            {
              "flags": "-s, --subscription <subscription>",
              "required": -20,
              "optional": 0,
              "bool": true,
              "short": "-s",
              "long": "--subscription",
              "description": "the subscription identifier"
            }
          ]
        },
        {
          "name": "delete-instances",
          "description": "Commands to manage your virtual machine scale sets by the delete-instances method.",
          "fullName": "vmss delete-instances",
          "usage": "[options] <resource-group-name> <vm-scale-set-name> <instance-ids>",
          "filePath": "commands/arm/compute/compute._js",
          "options": [
            {
              "flags": "-v, --verbose",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-v",
              "long": "--verbose",
              "description": "use verbose output"
            },
            {
              "flags": "-vv",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "-vv",
              "description": "more verbose with debug output"
            },
            {
              "flags": "--json",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--json",
              "description": "use json output"
            },
            {
              "flags": "-g, --resource-group-name <resource-group-name>",
              "required": -27,
              "optional": 0,
              "bool": true,
              "short": "-g",
              "long": "--resource-group-name",
              "description": "resource-group-name"
            },
            {
              "flags": "-n, --vm-scale-set-name <vm-scale-set-name>",
              "required": -25,
              "optional": 0,
              "bool": true,
              "short": "-n",
              "long": "--vm-scale-set-name",
              "description": "vm-scale-set-name"
            },
            {
              "flags": "--instance-ids <instance-ids>",
              "required": -16,
              "optional": 0,
              "bool": true,
              "long": "--instance-ids",
              "description": "instance-ids"
            },
            {
              "flags": "--parameter-file <parameter-file>",
              "required": -18,
              "optional": 0,
              "bool": true,
              "long": "--parameter-file",
              "description": "the input parameter file"
            },
            {
              "flags": "-s, --subscription <subscription>",
              "required": -20,
              "optional": 0,
              "bool": true,
              "short": "-s",
              "long": "--subscription",
              "description": "the subscription identifier"
            }
          ]
        },
        {
          "name": "get",
          "description": "Commands to manage your virtual machine scale sets by the get method.",
          "fullName": "vmss get",
          "usage": "[options] <resource-group-name> <vm-scale-set-name>",
          "filePath": "commands/arm/compute/compute._js",
          "options": [
            {
              "flags": "-v, --verbose",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-v",
              "long": "--verbose",
              "description": "use verbose output"
            },
            {
              "flags": "-vv",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "-vv",
              "description": "more verbose with debug output"
            },
            {
              "flags": "--json",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--json",
              "description": "use json output"
            },
            {
              "flags": "-g, --resource-group-name <resource-group-name>",
              "required": -27,
              "optional": 0,
              "bool": true,
              "short": "-g",
              "long": "--resource-group-name",
              "description": "resource-group-name"
            },
            {
              "flags": "-n, --vm-scale-set-name <vm-scale-set-name>",
              "required": -25,
              "optional": 0,
              "bool": true,
              "short": "-n",
              "long": "--vm-scale-set-name",
              "description": "vm-scale-set-name"
            },
            {
              "flags": "--parameter-file <parameter-file>",
              "required": -18,
              "optional": 0,
              "bool": true,
              "long": "--parameter-file",
              "description": "the input parameter file"
            },
            {
              "flags": "-s, --subscription <subscription>",
              "required": -20,
              "optional": 0,
              "bool": true,
              "short": "-s",
              "long": "--subscription",
              "description": "the subscription identifier"
            }
          ]
        },
        {
          "name": "get-instance-view",
          "description": "Commands to manage your virtual machine scale sets by the get-instance-view method.",
          "fullName": "vmss get-instance-view",
          "usage": "[options] <resource-group-name> <vm-scale-set-name>",
          "filePath": "commands/arm/compute/compute._js",
          "options": [
            {
              "flags": "-v, --verbose",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-v",
              "long": "--verbose",
              "description": "use verbose output"
            },
            {
              "flags": "-vv",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "-vv",
              "description": "more verbose with debug output"
            },
            {
              "flags": "--json",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--json",
              "description": "use json output"
            },
            {
              "flags": "-g, --resource-group-name <resource-group-name>",
              "required": -27,
              "optional": 0,
              "bool": true,
              "short": "-g",
              "long": "--resource-group-name",
              "description": "resource-group-name"
            },
            {
              "flags": "-n, --vm-scale-set-name <vm-scale-set-name>",
              "required": -25,
              "optional": 0,
              "bool": true,
              "short": "-n",
              "long": "--vm-scale-set-name",
              "description": "vm-scale-set-name"
            },
            {
              "flags": "--parameter-file <parameter-file>",
              "required": -18,
              "optional": 0,
              "bool": true,
              "long": "--parameter-file",
              "description": "the input parameter file"
            },
            {
              "flags": "-s, --subscription <subscription>",
              "required": -20,
              "optional": 0,
              "bool": true,
              "short": "-s",
              "long": "--subscription",
              "description": "the subscription identifier"
            }
          ]
        },
        {
          "name": "list",
          "description": "Commands to manage your virtual machine scale sets by the list method.",
          "fullName": "vmss list",
          "usage": "[options] <resource-group-name>",
          "filePath": "commands/arm/compute/compute._js",
          "options": [
            {
              "flags": "-v, --verbose",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-v",
              "long": "--verbose",
              "description": "use verbose output"
            },
            {
              "flags": "-vv",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "-vv",
              "description": "more verbose with debug output"
            },
            {
              "flags": "--json",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--json",
              "description": "use json output"
            },
            {
              "flags": "-g, --resource-group-name <resource-group-name>",
              "required": -27,
              "optional": 0,
              "bool": true,
              "short": "-g",
              "long": "--resource-group-name",
              "description": "resource-group-name"
            },
            {
              "flags": "--parameter-file <parameter-file>",
              "required": -18,
              "optional": 0,
              "bool": true,
              "long": "--parameter-file",
              "description": "the input parameter file"
            },
            {
              "flags": "-s, --subscription <subscription>",
              "required": -20,
              "optional": 0,
              "bool": true,
              "short": "-s",
              "long": "--subscription",
              "description": "the subscription identifier"
            }
          ]
        },
        {
          "name": "list-all",
          "description": "Commands to manage your virtual machine scale sets by the list-all method.",
          "fullName": "vmss list-all",
          "usage": "[options]",
          "filePath": "commands/arm/compute/compute._js",
          "options": [
            {
              "flags": "-v, --verbose",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-v",
              "long": "--verbose",
              "description": "use verbose output"
            },
            {
              "flags": "-vv",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "-vv",
              "description": "more verbose with debug output"
            },
            {
              "flags": "--json",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--json",
              "description": "use json output"
            },
            {
              "flags": "--parameter-file <parameter-file>",
              "required": -18,
              "optional": 0,
              "bool": true,
              "long": "--parameter-file",
              "description": "the input parameter file"
            },
            {
              "flags": "-s, --subscription <subscription>",
              "required": -20,
              "optional": 0,
              "bool": true,
              "short": "-s",
              "long": "--subscription",
              "description": "the subscription identifier"
            }
          ]
        },
        {
          "name": "list-all-next",
          "description": "Commands to manage your virtual machine scale sets by the list-all-next method.",
          "fullName": "vmss list-all-next",
          "usage": "[options] <next-page-link>",
          "filePath": "commands/arm/compute/compute._js",
          "options": [
            {
              "flags": "-v, --verbose",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-v",
              "long": "--verbose",
              "description": "use verbose output"
            },
            {
              "flags": "-vv",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "-vv",
              "description": "more verbose with debug output"
            },
            {
              "flags": "--json",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--json",
              "description": "use json output"
            },
            {
              "flags": "--next-page-link <next-page-link>",
              "required": -18,
              "optional": 0,
              "bool": true,
              "long": "--next-page-link",
              "description": "next-page-link"
            },
            {
              "flags": "--parameter-file <parameter-file>",
              "required": -18,
              "optional": 0,
              "bool": true,
              "long": "--parameter-file",
              "description": "the input parameter file"
            },
            {
              "flags": "-s, --subscription <subscription>",
              "required": -20,
              "optional": 0,
              "bool": true,
              "short": "-s",
              "long": "--subscription",
              "description": "the subscription identifier"
            }
          ]
        },
        {
          "name": "list-next",
          "description": "Commands to manage your virtual machine scale sets by the list-next method.",
          "fullName": "vmss list-next",
          "usage": "[options] <next-page-link>",
          "filePath": "commands/arm/compute/compute._js",
          "options": [
            {
              "flags": "-v, --verbose",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-v",
              "long": "--verbose",
              "description": "use verbose output"
            },
            {
              "flags": "-vv",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "-vv",
              "description": "more verbose with debug output"
            },
            {
              "flags": "--json",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--json",
              "description": "use json output"
            },
            {
              "flags": "--next-page-link <next-page-link>",
              "required": -18,
              "optional": 0,
              "bool": true,
              "long": "--next-page-link",
              "description": "next-page-link"
            },
            {
              "flags": "--parameter-file <parameter-file>",
              "required": -18,
              "optional": 0,
              "bool": true,
              "long": "--parameter-file",
              "description": "the input parameter file"
            },
            {
              "flags": "-s, --subscription <subscription>",
              "required": -20,
              "optional": 0,
              "bool": true,
              "short": "-s",
              "long": "--subscription",
              "description": "the subscription identifier"
            }
          ]
        },
        {
          "name": "list-skus",
          "description": "Commands to manage your virtual machine scale sets by the list-skus method.",
          "fullName": "vmss list-skus",
          "usage": "[options] <resource-group-name> <vm-scale-set-name>",
          "filePath": "commands/arm/compute/compute._js",
          "options": [
            {
              "flags": "-v, --verbose",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-v",
              "long": "--verbose",
              "description": "use verbose output"
            },
            {
              "flags": "-vv",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "-vv",
              "description": "more verbose with debug output"
            },
            {
              "flags": "--json",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--json",
              "description": "use json output"
            },
            {
              "flags": "-g, --resource-group-name <resource-group-name>",
              "required": -27,
              "optional": 0,
              "bool": true,
              "short": "-g",
              "long": "--resource-group-name",
              "description": "resource-group-name"
            },
            {
              "flags": "-n, --vm-scale-set-name <vm-scale-set-name>",
              "required": -25,
              "optional": 0,
              "bool": true,
              "short": "-n",
              "long": "--vm-scale-set-name",
              "description": "vm-scale-set-name"
            },
            {
              "flags": "--parameter-file <parameter-file>",
              "required": -18,
              "optional": 0,
              "bool": true,
              "long": "--parameter-file",
              "description": "the input parameter file"
            },
            {
              "flags": "-s, --subscription <subscription>",
              "required": -20,
              "optional": 0,
              "bool": true,
              "short": "-s",
              "long": "--subscription",
              "description": "the subscription identifier"
            }
          ]
        },
        {
          "name": "list-skus-next",
          "description": "Commands to manage your virtual machine scale sets by the list-skus-next method.",
          "fullName": "vmss list-skus-next",
          "usage": "[options] <next-page-link>",
          "filePath": "commands/arm/compute/compute._js",
          "options": [
            {
              "flags": "-v, --verbose",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-v",
              "long": "--verbose",
              "description": "use verbose output"
            },
            {
              "flags": "-vv",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "-vv",
              "description": "more verbose with debug output"
            },
            {
              "flags": "--json",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--json",
              "description": "use json output"
            },
            {
              "flags": "--next-page-link <next-page-link>",
              "required": -18,
              "optional": 0,
              "bool": true,
              "long": "--next-page-link",
              "description": "next-page-link"
            },
            {
              "flags": "--parameter-file <parameter-file>",
              "required": -18,
              "optional": 0,
              "bool": true,
              "long": "--parameter-file",
              "description": "the input parameter file"
            },
            {
              "flags": "-s, --subscription <subscription>",
              "required": -20,
              "optional": 0,
              "bool": true,
              "short": "-s",
              "long": "--subscription",
              "description": "the subscription identifier"
            }
          ]
        },
        {
          "name": "power-off",
          "description": "Commands to manage your virtual machine scale sets by the power-off method.",
          "fullName": "vmss power-off",
          "usage": "[options] <resource-group-name> <vm-scale-set-name> <instance-ids>",
          "filePath": "commands/arm/compute/compute._js",
          "options": [
            {
              "flags": "-v, --verbose",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-v",
              "long": "--verbose",
              "description": "use verbose output"
            },
            {
              "flags": "-vv",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "-vv",
              "description": "more verbose with debug output"
            },
            {
              "flags": "--json",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--json",
              "description": "use json output"
            },
            {
              "flags": "-g, --resource-group-name <resource-group-name>",
              "required": -27,
              "optional": 0,
              "bool": true,
              "short": "-g",
              "long": "--resource-group-name",
              "description": "resource-group-name"
            },
            {
              "flags": "-n, --vm-scale-set-name <vm-scale-set-name>",
              "required": -25,
              "optional": 0,
              "bool": true,
              "short": "-n",
              "long": "--vm-scale-set-name",
              "description": "vm-scale-set-name"
            },
            {
              "flags": "--instance-ids <instance-ids>",
              "required": -16,
              "optional": 0,
              "bool": true,
              "long": "--instance-ids",
              "description": "instance-ids"
            },
            {
              "flags": "--parameter-file <parameter-file>",
              "required": -18,
              "optional": 0,
              "bool": true,
              "long": "--parameter-file",
              "description": "the input parameter file"
            },
            {
              "flags": "-s, --subscription <subscription>",
              "required": -20,
              "optional": 0,
              "bool": true,
              "short": "-s",
              "long": "--subscription",
              "description": "the subscription identifier"
            }
          ]
        },
        {
          "name": "restart",
          "description": "Commands to manage your virtual machine scale sets by the restart method.",
          "fullName": "vmss restart",
          "usage": "[options] <resource-group-name> <vm-scale-set-name> <instance-ids>",
          "filePath": "commands/arm/compute/compute._js",
          "options": [
            {
              "flags": "-v, --verbose",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-v",
              "long": "--verbose",
              "description": "use verbose output"
            },
            {
              "flags": "-vv",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "-vv",
              "description": "more verbose with debug output"
            },
            {
              "flags": "--json",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--json",
              "description": "use json output"
            },
            {
              "flags": "-g, --resource-group-name <resource-group-name>",
              "required": -27,
              "optional": 0,
              "bool": true,
              "short": "-g",
              "long": "--resource-group-name",
              "description": "resource-group-name"
            },
            {
              "flags": "-n, --vm-scale-set-name <vm-scale-set-name>",
              "required": -25,
              "optional": 0,
              "bool": true,
              "short": "-n",
              "long": "--vm-scale-set-name",
              "description": "vm-scale-set-name"
            },
            {
              "flags": "--instance-ids <instance-ids>",
              "required": -16,
              "optional": 0,
              "bool": true,
              "long": "--instance-ids",
              "description": "instance-ids"
            },
            {
              "flags": "--parameter-file <parameter-file>",
              "required": -18,
              "optional": 0,
              "bool": true,
              "long": "--parameter-file",
              "description": "the input parameter file"
            },
            {
              "flags": "-s, --subscription <subscription>",
              "required": -20,
              "optional": 0,
              "bool": true,
              "short": "-s",
              "long": "--subscription",
              "description": "the subscription identifier"
            }
          ]
        },
        {
          "name": "start",
          "description": "Commands to manage your virtual machine scale sets by the start method.",
          "fullName": "vmss start",
          "usage": "[options] <resource-group-name> <vm-scale-set-name> <instance-ids>",
          "filePath": "commands/arm/compute/compute._js",
          "options": [
            {
              "flags": "-v, --verbose",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-v",
              "long": "--verbose",
              "description": "use verbose output"
            },
            {
              "flags": "-vv",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "-vv",
              "description": "more verbose with debug output"
            },
            {
              "flags": "--json",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--json",
              "description": "use json output"
            },
            {
              "flags": "-g, --resource-group-name <resource-group-name>",
              "required": -27,
              "optional": 0,
              "bool": true,
              "short": "-g",
              "long": "--resource-group-name",
              "description": "resource-group-name"
            },
            {
              "flags": "-n, --vm-scale-set-name <vm-scale-set-name>",
              "required": -25,
              "optional": 0,
              "bool": true,
              "short": "-n",
              "long": "--vm-scale-set-name",
              "description": "vm-scale-set-name"
            },
            {
              "flags": "--instance-ids <instance-ids>",
              "required": -16,
              "optional": 0,
              "bool": true,
              "long": "--instance-ids",
              "description": "instance-ids"
            },
            {
              "flags": "--parameter-file <parameter-file>",
              "required": -18,
              "optional": 0,
              "bool": true,
              "long": "--parameter-file",
              "description": "the input parameter file"
            },
            {
              "flags": "-s, --subscription <subscription>",
              "required": -20,
              "optional": 0,
              "bool": true,
              "short": "-s",
              "long": "--subscription",
              "description": "the subscription identifier"
            }
          ]
        },
        {
          "name": "update-instances",
          "description": "Commands to manage your virtual machine scale sets by the update-instances method.",
          "fullName": "vmss update-instances",
          "usage": "[options] <resource-group-name> <vm-scale-set-name> <instance-ids>",
          "filePath": "commands/arm/compute/compute._js",
          "options": [
            {
              "flags": "-v, --verbose",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-v",
              "long": "--verbose",
              "description": "use verbose output"
            },
            {
              "flags": "-vv",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "-vv",
              "description": "more verbose with debug output"
            },
            {
              "flags": "--json",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--json",
              "description": "use json output"
            },
            {
              "flags": "-g, --resource-group-name <resource-group-name>",
              "required": -27,
              "optional": 0,
              "bool": true,
              "short": "-g",
              "long": "--resource-group-name",
              "description": "resource-group-name"
            },
            {
              "flags": "-n, --vm-scale-set-name <vm-scale-set-name>",
              "required": -25,
              "optional": 0,
              "bool": true,
              "short": "-n",
              "long": "--vm-scale-set-name",
              "description": "vm-scale-set-name"
            },
            {
              "flags": "--instance-ids <instance-ids>",
              "required": -16,
              "optional": 0,
              "bool": true,
              "long": "--instance-ids",
              "description": "instance-ids"
            },
            {
              "flags": "--parameter-file <parameter-file>",
              "required": -18,
              "optional": 0,
              "bool": true,
              "long": "--parameter-file",
              "description": "the input parameter file"
            },
            {
              "flags": "-s, --subscription <subscription>",
              "required": -20,
              "optional": 0,
              "bool": true,
              "short": "-s",
              "long": "--subscription",
              "description": "the subscription identifier"
            }
          ]
        },
        {
          "name": "quick-create",
          "description": "Commands to create a virtual machine scale set with default resources in a group.",
          "fullName": "vmss quick-create",
          "usage": "[options] <resource-group-name> <name> <location> <image-urn> <admin-username> <admin-password>",
          "filePath": "commands/arm/vmss/vmss._js",
          "options": [
            {
              "flags": "-v, --verbose",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-v",
              "long": "--verbose",
              "description": "use verbose output"
            },
            {
              "flags": "-vv",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "-vv",
              "description": "more verbose with debug output"
            },
            {
              "flags": "--json",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--json",
              "description": "use json output"
            },
            {
              "flags": "-g, --resource-group-name <resource-group-name>",
              "required": -27,
              "optional": 0,
              "bool": true,
              "short": "-g",
              "long": "--resource-group-name",
              "description": "the resource group name"
            },
            {
              "flags": "-n, --name <name>",
              "required": -12,
              "optional": 0,
              "bool": true,
              "short": "-n",
              "long": "--name",
              "description": "the virtual machine name"
            },
            {
              "flags": "-l, --location <location>",
              "required": -16,
              "optional": 0,
              "bool": true,
              "short": "-l",
              "long": "--location",
              "description": "the location"
            },
            {
              "flags": "-Q, --image-urn <image-urn>",
              "required": -17,
              "optional": 0,
              "bool": true,
              "short": "-Q",
              "long": "--image-urn",
              "description": "the image reference, e.g. \"publisher:offer:skus:version\""
            },
            {
              "flags": "-u, --admin-username <admin-username>",
              "required": -22,
              "optional": 0,
              "bool": true,
              "short": "-u",
              "long": "--admin-username",
              "description": "the user name"
            },
            {
              "flags": "-p, --admin-password <admin-password>",
              "required": -22,
              "optional": 0,
              "bool": true,
              "short": "-p",
              "long": "--admin-password",
              "description": "the password"
            },
            {
              "flags": "-z, --vm-size <vm-size>",
              "required": -15,
              "optional": 0,
              "bool": true,
              "short": "-z",
              "long": "--vm-size",
              "description": "the virtual machine size [Standard_D1]"
            },
            {
              "flags": "-M, --ssh-publickey-file <ssh-publickey-file>",
              "required": -26,
              "optional": 0,
              "bool": true,
              "short": "-M",
              "long": "--ssh-publickey-file",
              "description": "the path to public key file for SSH authentication,\n                                               & this parameter is valid only when os-type is Linux."
            },
            {
              "flags": "-s, --subscription <subscription>",
              "required": -20,
              "optional": 0,
              "bool": true,
              "short": "-s",
              "long": "--subscription",
              "description": "the subscription identifier"
            }
          ]
        }
      ],
      "categories": {
        "create-or-update-parameters": {
          "name": "create-or-update-parameters",
          "description": "Commands to manage the parameter input file for your virtual-machine-scale-sets.",
          "fullName": "vmss create-or-update-parameters",
          "usage": "[options] [command]",
          "options": [],
          "commands": [
            {
              "name": "generate",
              "description": "Generate virtualMachineScaleSetsCreateOrUpdate parameter string or files.",
              "fullName": "vmss create-or-update-parameters generate",
              "usage": "[options]",
              "filePath": "commands/arm/compute/compute._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "--parameter-file <parameter-file>",
                  "required": -18,
                  "optional": 0,
                  "bool": true,
                  "long": "--parameter-file",
                  "description": "The parameter file path."
                }
              ]
            },
            {
              "name": "patch",
              "description": "Command to patch virtualMachineScaleSetsCreateOrUpdate parameter JSON file.",
              "fullName": "vmss create-or-update-parameters patch",
              "usage": "[options]",
              "filePath": "commands/arm/compute/compute._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "--parameter-file <parameter-file>",
                  "required": -18,
                  "optional": 0,
                  "bool": true,
                  "long": "--parameter-file",
                  "description": "The parameter file path."
                },
                {
                  "flags": "--operation <operation>",
                  "required": -13,
                  "optional": 0,
                  "bool": true,
                  "long": "--operation",
                  "description": "The JSON patch operation: add, remove, or replace."
                },
                {
                  "flags": "--path <path>",
                  "required": -8,
                  "optional": 0,
                  "bool": true,
                  "long": "--path",
                  "description": "The JSON data path, e.g.: \"foo/1\"."
                },
                {
                  "flags": "--value <value>",
                  "required": -9,
                  "optional": 0,
                  "bool": true,
                  "long": "--value",
                  "description": "The JSON value."
                },
                {
                  "flags": "--parse",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--parse",
                  "description": "Parse the JSON value to object."
                }
              ]
            }
          ],
          "categories": {
            "virtual-machine-scale-set": {
              "name": "virtual-machine-scale-set",
              "description": "Commands to set/remove/add virtual-machine-scale-set of virtual-machine-scale-sets in create-or-update-parameters file.",
              "fullName": "vmss create-or-update-parameters virtual-machine-scale-set",
              "usage": "[options] [command]",
              "options": [],
              "commands": [
                {
                  "name": "set",
                  "description": "Set virtual-machine-scale-set in create-or-update-parameters string or files, e.g. \r\n{\r\n  \"sku\":{\r\n    \"name\":\"\",\r\n    \"tier\":\"\",\r\n    \"capacity\":null\r\n  },\r\n  \"upgradePolicy\":{\r\n    \"mode\":\"\"\r\n  },\r\n  \"virtualMachineProfile\":{\r\n    \"osProfile\":{\r\n      \"computerNamePrefix\":\"\",\r\n      \"adminUsername\":\"\",\r\n      \"adminPassword\":\"\",\r\n      \"customData\":\"\",\r\n      \"windowsConfiguration\":{\r\n        \"provisionVMAgent\":null,\r\n        \"enableAutomaticUpdates\":null,\r\n        \"timeZone\":\"\",\r\n        \"additionalUnattendContent\":[\r\n          {\r\n            \"passName\":\"\",\r\n            \"componentName\":\"\",\r\n            \"settingName\":\"\",\r\n            \"content\":\"\"\r\n          }\r\n        ],\r\n        \"winRM\":{\r\n          \"listeners\":[\r\n            {\r\n              \"protocol\":\"\",\r\n              \"certificateUrl\":\"\"\r\n            }\r\n          ]\r\n        }\r\n      },\r\n      \"linuxConfiguration\":{\r\n        \"disablePasswordAuthentication\":null,\r\n        \"ssh\":{\r\n          \"publicKeys\":[\r\n            {\r\n              \"path\":\"\",\r\n              \"keyData\":\"\"\r\n            }\r\n          ]\r\n        }\r\n      },\r\n      \"secrets\":[\r\n        {\r\n          \"sourceVault\":{\r\n            \"id\":\"\"\r\n          },\r\n          \"vaultCertificates\":[\r\n            {\r\n              \"certificateUrl\":\"\",\r\n              \"certificateStore\":\"\"\r\n            }\r\n          ]\r\n        }\r\n      ]\r\n    },\r\n    \"storageProfile\":{\r\n      \"imageReference\":{\r\n        \"publisher\":\"\",\r\n        \"offer\":\"\",\r\n        \"sku\":\"\",\r\n        \"version\":\"\"\r\n      },\r\n      \"osDisk\":{\r\n        \"name\":\"\",\r\n        \"caching\":\"\",\r\n        \"createOption\":\"\",\r\n        \"osType\":\"\",\r\n        \"image\":{\r\n          \"uri\":\"\"\r\n        },\r\n        \"vhdContainers\":[\r\n          \"\"\r\n        ]\r\n      }\r\n    },\r\n    \"networkProfile\":{\r\n      \"networkInterfaceConfigurations\":[\r\n        {\r\n          \"name\":\"\",\r\n          \"primary\":null,\r\n          \"ipConfigurations\":[\r\n            {\r\n              \"name\":\"\",\r\n              \"subnet\":{\r\n                \"id\":\"\"\r\n              },\r\n              \"loadBalancerBackendAddressPools\":[\r\n                {\r\n                  \"id\":\"\"\r\n                }\r\n              ],\r\n              \"id\":\"\"\r\n            }\r\n          ],\r\n          \"id\":\"\"\r\n        }\r\n      ]\r\n    },\r\n    \"extensionProfile\":{\r\n      \"extensions\":[\r\n        {\r\n          \"name\":\"\",\r\n          \"publisher\":\"\",\r\n          \"virtualMachineScaleSetExtensionType\":\"\",\r\n          \"typeHandlerVersion\":\"\",\r\n          \"autoUpgradeMinorVersion\":null,\r\n          \"settings\":{\r\n          },\r\n          \"protectedSettings\":{\r\n          },\r\n          \"provisioningState\":\"\",\r\n          \"id\":\"\"\r\n        }\r\n      ]\r\n    }\r\n  },\r\n  \"provisioningState\":\"\",\r\n  \"id\":null,\r\n  \"name\":null,\r\n  \"type\":null,\r\n  \"location\":\"\",\r\n  \"tags\":{\r\n  }\r\n}\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "vmss create-or-update-parameters virtual-machine-scale-set set",
                  "usage": "[options]",
                  "filePath": "commands/arm/compute/compute._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--parse",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--parse",
                      "description": "Parse the input value string to a JSON object."
                    },
                    {
                      "flags": "--sku <sku>",
                      "required": -7,
                      "optional": 0,
                      "bool": true,
                      "long": "--sku",
                      "description": "Set the sku value."
                    },
                    {
                      "flags": "--upgrade-policy <upgradePolicy>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--upgrade-policy",
                      "description": "Set the upgrade-policy value."
                    },
                    {
                      "flags": "--virtual-machine-profile <virtualMachineProfile>",
                      "required": -27,
                      "optional": 0,
                      "bool": true,
                      "long": "--virtual-machine-profile",
                      "description": "Set the virtual-machine-profile value."
                    },
                    {
                      "flags": "--provisioning-state <provisioningState>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "long": "--provisioning-state",
                      "description": "Set the provisioning-state value."
                    },
                    {
                      "flags": "--id <id>",
                      "required": -6,
                      "optional": 0,
                      "bool": true,
                      "long": "--id",
                      "description": "Set the id value."
                    },
                    {
                      "flags": "--name <name>",
                      "required": -8,
                      "optional": 0,
                      "bool": true,
                      "long": "--name",
                      "description": "Set the name value."
                    },
                    {
                      "flags": "--type <type>",
                      "required": -8,
                      "optional": 0,
                      "bool": true,
                      "long": "--type",
                      "description": "Set the type value."
                    },
                    {
                      "flags": "--location <location>",
                      "required": -12,
                      "optional": 0,
                      "bool": true,
                      "long": "--location",
                      "description": "Set the location value."
                    },
                    {
                      "flags": "--tags <tags>",
                      "required": -8,
                      "optional": 0,
                      "bool": true,
                      "long": "--tags",
                      "description": "Set the tags value."
                    }
                  ]
                },
                {
                  "name": "remove",
                  "description": "Remove virtual-machine-scale-set in create-or-update-parameters string or files, e.g. \r\n{\r\n  \"sku\":{\r\n    \"name\":\"\",\r\n    \"tier\":\"\",\r\n    \"capacity\":null\r\n  },\r\n  \"upgradePolicy\":{\r\n    \"mode\":\"\"\r\n  },\r\n  \"virtualMachineProfile\":{\r\n    \"osProfile\":{\r\n      \"computerNamePrefix\":\"\",\r\n      \"adminUsername\":\"\",\r\n      \"adminPassword\":\"\",\r\n      \"customData\":\"\",\r\n      \"windowsConfiguration\":{\r\n        \"provisionVMAgent\":null,\r\n        \"enableAutomaticUpdates\":null,\r\n        \"timeZone\":\"\",\r\n        \"additionalUnattendContent\":[\r\n          {\r\n            \"passName\":\"\",\r\n            \"componentName\":\"\",\r\n            \"settingName\":\"\",\r\n            \"content\":\"\"\r\n          }\r\n        ],\r\n        \"winRM\":{\r\n          \"listeners\":[\r\n            {\r\n              \"protocol\":\"\",\r\n              \"certificateUrl\":\"\"\r\n            }\r\n          ]\r\n        }\r\n      },\r\n      \"linuxConfiguration\":{\r\n        \"disablePasswordAuthentication\":null,\r\n        \"ssh\":{\r\n          \"publicKeys\":[\r\n            {\r\n              \"path\":\"\",\r\n              \"keyData\":\"\"\r\n            }\r\n          ]\r\n        }\r\n      },\r\n      \"secrets\":[\r\n        {\r\n          \"sourceVault\":{\r\n            \"id\":\"\"\r\n          },\r\n          \"vaultCertificates\":[\r\n            {\r\n              \"certificateUrl\":\"\",\r\n              \"certificateStore\":\"\"\r\n            }\r\n          ]\r\n        }\r\n      ]\r\n    },\r\n    \"storageProfile\":{\r\n      \"imageReference\":{\r\n        \"publisher\":\"\",\r\n        \"offer\":\"\",\r\n        \"sku\":\"\",\r\n        \"version\":\"\"\r\n      },\r\n      \"osDisk\":{\r\n        \"name\":\"\",\r\n        \"caching\":\"\",\r\n        \"createOption\":\"\",\r\n        \"osType\":\"\",\r\n        \"image\":{\r\n          \"uri\":\"\"\r\n        },\r\n        \"vhdContainers\":[\r\n          \"\"\r\n        ]\r\n      }\r\n    },\r\n    \"networkProfile\":{\r\n      \"networkInterfaceConfigurations\":[\r\n        {\r\n          \"name\":\"\",\r\n          \"primary\":null,\r\n          \"ipConfigurations\":[\r\n            {\r\n              \"name\":\"\",\r\n              \"subnet\":{\r\n                \"id\":\"\"\r\n              },\r\n              \"loadBalancerBackendAddressPools\":[\r\n                {\r\n                  \"id\":\"\"\r\n                }\r\n              ],\r\n              \"id\":\"\"\r\n            }\r\n          ],\r\n          \"id\":\"\"\r\n        }\r\n      ]\r\n    },\r\n    \"extensionProfile\":{\r\n      \"extensions\":[\r\n        {\r\n          \"name\":\"\",\r\n          \"publisher\":\"\",\r\n          \"virtualMachineScaleSetExtensionType\":\"\",\r\n          \"typeHandlerVersion\":\"\",\r\n          \"autoUpgradeMinorVersion\":null,\r\n          \"settings\":{\r\n          },\r\n          \"protectedSettings\":{\r\n          },\r\n          \"provisioningState\":\"\",\r\n          \"id\":\"\"\r\n        }\r\n      ]\r\n    }\r\n  },\r\n  \"provisioningState\":\"\",\r\n  \"id\":null,\r\n  \"name\":null,\r\n  \"type\":null,\r\n  \"location\":\"\",\r\n  \"tags\":{\r\n  }\r\n}\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "vmss create-or-update-parameters virtual-machine-scale-set remove",
                  "usage": "[options]",
                  "filePath": "commands/arm/compute/compute._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--sku",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--sku",
                      "description": "Remove the sku value."
                    },
                    {
                      "flags": "--upgrade-policy",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--upgrade-policy",
                      "description": "Remove the upgrade-policy value."
                    },
                    {
                      "flags": "--virtual-machine-profile",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--virtual-machine-profile",
                      "description": "Remove the virtual-machine-profile value."
                    },
                    {
                      "flags": "--provisioning-state",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--provisioning-state",
                      "description": "Remove the provisioning-state value."
                    },
                    {
                      "flags": "--id",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--id",
                      "description": "Remove the id value."
                    },
                    {
                      "flags": "--name",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--name",
                      "description": "Remove the name value."
                    },
                    {
                      "flags": "--type",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--type",
                      "description": "Remove the type value."
                    },
                    {
                      "flags": "--location",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--location",
                      "description": "Remove the location value."
                    },
                    {
                      "flags": "--tags",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--tags",
                      "description": "Remove the tags value."
                    }
                  ]
                },
                {
                  "name": "add",
                  "description": "Add virtual-machine-scale-set in create-or-update-parameters string or files, e.g. \r\n{\r\n  \"sku\":{\r\n    \"name\":\"\",\r\n    \"tier\":\"\",\r\n    \"capacity\":null\r\n  },\r\n  \"upgradePolicy\":{\r\n    \"mode\":\"\"\r\n  },\r\n  \"virtualMachineProfile\":{\r\n    \"osProfile\":{\r\n      \"computerNamePrefix\":\"\",\r\n      \"adminUsername\":\"\",\r\n      \"adminPassword\":\"\",\r\n      \"customData\":\"\",\r\n      \"windowsConfiguration\":{\r\n        \"provisionVMAgent\":null,\r\n        \"enableAutomaticUpdates\":null,\r\n        \"timeZone\":\"\",\r\n        \"additionalUnattendContent\":[\r\n          {\r\n            \"passName\":\"\",\r\n            \"componentName\":\"\",\r\n            \"settingName\":\"\",\r\n            \"content\":\"\"\r\n          }\r\n        ],\r\n        \"winRM\":{\r\n          \"listeners\":[\r\n            {\r\n              \"protocol\":\"\",\r\n              \"certificateUrl\":\"\"\r\n            }\r\n          ]\r\n        }\r\n      },\r\n      \"linuxConfiguration\":{\r\n        \"disablePasswordAuthentication\":null,\r\n        \"ssh\":{\r\n          \"publicKeys\":[\r\n            {\r\n              \"path\":\"\",\r\n              \"keyData\":\"\"\r\n            }\r\n          ]\r\n        }\r\n      },\r\n      \"secrets\":[\r\n        {\r\n          \"sourceVault\":{\r\n            \"id\":\"\"\r\n          },\r\n          \"vaultCertificates\":[\r\n            {\r\n              \"certificateUrl\":\"\",\r\n              \"certificateStore\":\"\"\r\n            }\r\n          ]\r\n        }\r\n      ]\r\n    },\r\n    \"storageProfile\":{\r\n      \"imageReference\":{\r\n        \"publisher\":\"\",\r\n        \"offer\":\"\",\r\n        \"sku\":\"\",\r\n        \"version\":\"\"\r\n      },\r\n      \"osDisk\":{\r\n        \"name\":\"\",\r\n        \"caching\":\"\",\r\n        \"createOption\":\"\",\r\n        \"osType\":\"\",\r\n        \"image\":{\r\n          \"uri\":\"\"\r\n        },\r\n        \"vhdContainers\":[\r\n          \"\"\r\n        ]\r\n      }\r\n    },\r\n    \"networkProfile\":{\r\n      \"networkInterfaceConfigurations\":[\r\n        {\r\n          \"name\":\"\",\r\n          \"primary\":null,\r\n          \"ipConfigurations\":[\r\n            {\r\n              \"name\":\"\",\r\n              \"subnet\":{\r\n                \"id\":\"\"\r\n              },\r\n              \"loadBalancerBackendAddressPools\":[\r\n                {\r\n                  \"id\":\"\"\r\n                }\r\n              ],\r\n              \"id\":\"\"\r\n            }\r\n          ],\r\n          \"id\":\"\"\r\n        }\r\n      ]\r\n    },\r\n    \"extensionProfile\":{\r\n      \"extensions\":[\r\n        {\r\n          \"name\":\"\",\r\n          \"publisher\":\"\",\r\n          \"virtualMachineScaleSetExtensionType\":\"\",\r\n          \"typeHandlerVersion\":\"\",\r\n          \"autoUpgradeMinorVersion\":null,\r\n          \"settings\":{\r\n          },\r\n          \"protectedSettings\":{\r\n          },\r\n          \"provisioningState\":\"\",\r\n          \"id\":\"\"\r\n        }\r\n      ]\r\n    }\r\n  },\r\n  \"provisioningState\":\"\",\r\n  \"id\":null,\r\n  \"name\":null,\r\n  \"type\":null,\r\n  \"location\":\"\",\r\n  \"tags\":{\r\n  }\r\n}\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "vmss create-or-update-parameters virtual-machine-scale-set add",
                  "usage": "[options]",
                  "filePath": "commands/arm/compute/compute._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--key <key>",
                      "required": -7,
                      "optional": 0,
                      "bool": true,
                      "long": "--key",
                      "description": "The JSON key."
                    },
                    {
                      "flags": "--value <value>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--value",
                      "description": "The JSON value."
                    },
                    {
                      "flags": "--parse",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--parse",
                      "description": "Parse the input value string to a JSON object."
                    },
                    {
                      "flags": "--sku <sku>",
                      "required": -7,
                      "optional": 0,
                      "bool": true,
                      "long": "--sku",
                      "description": "Add the sku value."
                    },
                    {
                      "flags": "--upgrade-policy <upgradePolicy>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--upgrade-policy",
                      "description": "Add the upgrade-policy value."
                    },
                    {
                      "flags": "--virtual-machine-profile <virtualMachineProfile>",
                      "required": -27,
                      "optional": 0,
                      "bool": true,
                      "long": "--virtual-machine-profile",
                      "description": "Add the virtual-machine-profile value."
                    },
                    {
                      "flags": "--provisioning-state <provisioningState>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "long": "--provisioning-state",
                      "description": "Add the provisioning-state value."
                    },
                    {
                      "flags": "--id <id>",
                      "required": -6,
                      "optional": 0,
                      "bool": true,
                      "long": "--id",
                      "description": "Add the id value."
                    },
                    {
                      "flags": "--name <name>",
                      "required": -8,
                      "optional": 0,
                      "bool": true,
                      "long": "--name",
                      "description": "Add the name value."
                    },
                    {
                      "flags": "--type <type>",
                      "required": -8,
                      "optional": 0,
                      "bool": true,
                      "long": "--type",
                      "description": "Add the type value."
                    },
                    {
                      "flags": "--location <location>",
                      "required": -12,
                      "optional": 0,
                      "bool": true,
                      "long": "--location",
                      "description": "Add the location value."
                    },
                    {
                      "flags": "--tags <tags>",
                      "required": -8,
                      "optional": 0,
                      "bool": true,
                      "long": "--tags",
                      "description": "Add the tags value."
                    }
                  ]
                }
              ],
              "categories": {}
            },
            "sku": {
              "name": "sku",
              "description": "Commands to set/remove/add sku of virtual-machine-scale-sets in create-or-update-parameters file.",
              "fullName": "vmss create-or-update-parameters sku",
              "usage": "[options] [command]",
              "options": [],
              "commands": [
                {
                  "name": "set",
                  "description": "Set sku in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"sku\" : {\r\n             \"name\":\"\",\r\n             \"tier\":\"\",\r\n             \"capacity\":null\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "vmss create-or-update-parameters sku set",
                  "usage": "[options]",
                  "filePath": "commands/arm/compute/compute._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--parse",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--parse",
                      "description": "Parse the input value string to a JSON object."
                    },
                    {
                      "flags": "--name <name>",
                      "required": -8,
                      "optional": 0,
                      "bool": true,
                      "long": "--name",
                      "description": "Set the name value."
                    },
                    {
                      "flags": "--tier <tier>",
                      "required": -8,
                      "optional": 0,
                      "bool": true,
                      "long": "--tier",
                      "description": "Set the tier value."
                    },
                    {
                      "flags": "--capacity <capacity>",
                      "required": -12,
                      "optional": 0,
                      "bool": true,
                      "long": "--capacity",
                      "description": "Set the capacity value."
                    }
                  ]
                },
                {
                  "name": "remove",
                  "description": "Remove sku in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"sku\" : {\r\n             \"name\":\"\",\r\n             \"tier\":\"\",\r\n             \"capacity\":null\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "vmss create-or-update-parameters sku remove",
                  "usage": "[options]",
                  "filePath": "commands/arm/compute/compute._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--name",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--name",
                      "description": "Remove the name value."
                    },
                    {
                      "flags": "--tier",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--tier",
                      "description": "Remove the tier value."
                    },
                    {
                      "flags": "--capacity",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--capacity",
                      "description": "Remove the capacity value."
                    }
                  ]
                },
                {
                  "name": "add",
                  "description": "Add sku in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"sku\" : {\r\n             \"name\":\"\",\r\n             \"tier\":\"\",\r\n             \"capacity\":null\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "vmss create-or-update-parameters sku add",
                  "usage": "[options]",
                  "filePath": "commands/arm/compute/compute._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--key <key>",
                      "required": -7,
                      "optional": 0,
                      "bool": true,
                      "long": "--key",
                      "description": "The JSON key."
                    },
                    {
                      "flags": "--value <value>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--value",
                      "description": "The JSON value."
                    },
                    {
                      "flags": "--parse",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--parse",
                      "description": "Parse the input value string to a JSON object."
                    },
                    {
                      "flags": "--name <name>",
                      "required": -8,
                      "optional": 0,
                      "bool": true,
                      "long": "--name",
                      "description": "Add the name value."
                    },
                    {
                      "flags": "--tier <tier>",
                      "required": -8,
                      "optional": 0,
                      "bool": true,
                      "long": "--tier",
                      "description": "Add the tier value."
                    },
                    {
                      "flags": "--capacity <capacity>",
                      "required": -12,
                      "optional": 0,
                      "bool": true,
                      "long": "--capacity",
                      "description": "Add the capacity value."
                    }
                  ]
                }
              ],
              "categories": {}
            },
            "upgrade-policy": {
              "name": "upgrade-policy",
              "description": "Commands to set/remove/add upgrade-policy of virtual-machine-scale-sets in create-or-update-parameters file.",
              "fullName": "vmss create-or-update-parameters upgrade-policy",
              "usage": "[options] [command]",
              "options": [],
              "commands": [
                {
                  "name": "set",
                  "description": "Set upgrade-policy in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"upgradePolicy\" : {\r\n             \"mode\":\"\"\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "vmss create-or-update-parameters upgrade-policy set",
                  "usage": "[options]",
                  "filePath": "commands/arm/compute/compute._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--parse",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--parse",
                      "description": "Parse the input value string to a JSON object."
                    },
                    {
                      "flags": "--mode <mode>",
                      "required": -8,
                      "optional": 0,
                      "bool": true,
                      "long": "--mode",
                      "description": "Set the mode value."
                    }
                  ]
                },
                {
                  "name": "remove",
                  "description": "Remove upgrade-policy in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"upgradePolicy\" : {\r\n             \"mode\":\"\"\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "vmss create-or-update-parameters upgrade-policy remove",
                  "usage": "[options]",
                  "filePath": "commands/arm/compute/compute._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--mode",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--mode",
                      "description": "Remove the mode value."
                    }
                  ]
                },
                {
                  "name": "add",
                  "description": "Add upgrade-policy in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"upgradePolicy\" : {\r\n             \"mode\":\"\"\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "vmss create-or-update-parameters upgrade-policy add",
                  "usage": "[options]",
                  "filePath": "commands/arm/compute/compute._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--key <key>",
                      "required": -7,
                      "optional": 0,
                      "bool": true,
                      "long": "--key",
                      "description": "The JSON key."
                    },
                    {
                      "flags": "--value <value>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--value",
                      "description": "The JSON value."
                    },
                    {
                      "flags": "--parse",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--parse",
                      "description": "Parse the input value string to a JSON object."
                    },
                    {
                      "flags": "--mode <mode>",
                      "required": -8,
                      "optional": 0,
                      "bool": true,
                      "long": "--mode",
                      "description": "Add the mode value."
                    }
                  ]
                }
              ],
              "categories": {}
            },
            "virtual-machine-profile": {
              "name": "virtual-machine-profile",
              "description": "Commands to set/remove/add virtual-machine-profile of virtual-machine-scale-sets in create-or-update-parameters file.",
              "fullName": "vmss create-or-update-parameters virtual-machine-profile",
              "usage": "[options] [command]",
              "options": [],
              "commands": [
                {
                  "name": "set",
                  "description": "Set virtual-machine-profile in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"virtualMachineProfile\" : {\r\n             \"osProfile\":{\r\n               \"computerNamePrefix\":\"\",\r\n               \"adminUsername\":\"\",\r\n               \"adminPassword\":\"\",\r\n               \"customData\":\"\",\r\n               \"windowsConfiguration\":{\r\n                 \"provisionVMAgent\":null,\r\n                 \"enableAutomaticUpdates\":null,\r\n                 \"timeZone\":\"\",\r\n                 \"additionalUnattendContent\":[\r\n                   {\r\n                     \"passName\":\"\",\r\n                     \"componentName\":\"\",\r\n                     \"settingName\":\"\",\r\n                     \"content\":\"\"\r\n                   }\r\n                 ],\r\n                 \"winRM\":{\r\n                   \"listeners\":[\r\n                     {\r\n                       \"protocol\":\"\",\r\n                       \"certificateUrl\":\"\"\r\n                     }\r\n                   ]\r\n                 }\r\n               },\r\n               \"linuxConfiguration\":{\r\n                 \"disablePasswordAuthentication\":null,\r\n                 \"ssh\":{\r\n                   \"publicKeys\":[\r\n                     {\r\n                       \"path\":\"\",\r\n                       \"keyData\":\"\"\r\n                     }\r\n                   ]\r\n                 }\r\n               },\r\n               \"secrets\":[\r\n                 {\r\n                   \"sourceVault\":{\r\n                     \"id\":\"\"\r\n                   },\r\n                   \"vaultCertificates\":[\r\n                     {\r\n                       \"certificateUrl\":\"\",\r\n                       \"certificateStore\":\"\"\r\n                     }\r\n                   ]\r\n                 }\r\n               ]\r\n             },\r\n             \"storageProfile\":{\r\n               \"imageReference\":{\r\n                 \"publisher\":\"\",\r\n                 \"offer\":\"\",\r\n                 \"sku\":\"\",\r\n                 \"version\":\"\"\r\n               },\r\n               \"osDisk\":{\r\n                 \"name\":\"\",\r\n                 \"caching\":\"\",\r\n                 \"createOption\":\"\",\r\n                 \"osType\":\"\",\r\n                 \"image\":{\r\n                   \"uri\":\"\"\r\n                 },\r\n                 \"vhdContainers\":[\r\n                   \"\"\r\n                 ]\r\n               }\r\n             },\r\n             \"networkProfile\":{\r\n               \"networkInterfaceConfigurations\":[\r\n                 {\r\n                   \"name\":\"\",\r\n                   \"primary\":null,\r\n                   \"ipConfigurations\":[\r\n                     {\r\n                       \"name\":\"\",\r\n                       \"subnet\":{\r\n                         \"id\":\"\"\r\n                       },\r\n                       \"loadBalancerBackendAddressPools\":[\r\n                         {\r\n                           \"id\":\"\"\r\n                         }\r\n                       ],\r\n                       \"id\":\"\"\r\n                     }\r\n                   ],\r\n                   \"id\":\"\"\r\n                 }\r\n               ]\r\n             },\r\n             \"extensionProfile\":{\r\n               \"extensions\":[\r\n                 {\r\n                   \"name\":\"\",\r\n                   \"publisher\":\"\",\r\n                   \"virtualMachineScaleSetExtensionType\":\"\",\r\n                   \"typeHandlerVersion\":\"\",\r\n                   \"autoUpgradeMinorVersion\":null,\r\n                   \"settings\":{\r\n                   },\r\n                   \"protectedSettings\":{\r\n                   },\r\n                   \"provisioningState\":\"\",\r\n                   \"id\":\"\"\r\n                 }\r\n               ]\r\n             }\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "vmss create-or-update-parameters virtual-machine-profile set",
                  "usage": "[options]",
                  "filePath": "commands/arm/compute/compute._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--parse",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--parse",
                      "description": "Parse the input value string to a JSON object."
                    },
                    {
                      "flags": "--os-profile <osProfile>",
                      "required": -14,
                      "optional": 0,
                      "bool": true,
                      "long": "--os-profile",
                      "description": "Set the os-profile value."
                    },
                    {
                      "flags": "--storage-profile <storageProfile>",
                      "required": -19,
                      "optional": 0,
                      "bool": true,
                      "long": "--storage-profile",
                      "description": "Set the storage-profile value."
                    },
                    {
                      "flags": "--network-profile <networkProfile>",
                      "required": -19,
                      "optional": 0,
                      "bool": true,
                      "long": "--network-profile",
                      "description": "Set the network-profile value."
                    },
                    {
                      "flags": "--extension-profile <extensionProfile>",
                      "required": -21,
                      "optional": 0,
                      "bool": true,
                      "long": "--extension-profile",
                      "description": "Set the extension-profile value."
                    }
                  ]
                },
                {
                  "name": "remove",
                  "description": "Remove virtual-machine-profile in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"virtualMachineProfile\" : {\r\n             \"osProfile\":{\r\n               \"computerNamePrefix\":\"\",\r\n               \"adminUsername\":\"\",\r\n               \"adminPassword\":\"\",\r\n               \"customData\":\"\",\r\n               \"windowsConfiguration\":{\r\n                 \"provisionVMAgent\":null,\r\n                 \"enableAutomaticUpdates\":null,\r\n                 \"timeZone\":\"\",\r\n                 \"additionalUnattendContent\":[\r\n                   {\r\n                     \"passName\":\"\",\r\n                     \"componentName\":\"\",\r\n                     \"settingName\":\"\",\r\n                     \"content\":\"\"\r\n                   }\r\n                 ],\r\n                 \"winRM\":{\r\n                   \"listeners\":[\r\n                     {\r\n                       \"protocol\":\"\",\r\n                       \"certificateUrl\":\"\"\r\n                     }\r\n                   ]\r\n                 }\r\n               },\r\n               \"linuxConfiguration\":{\r\n                 \"disablePasswordAuthentication\":null,\r\n                 \"ssh\":{\r\n                   \"publicKeys\":[\r\n                     {\r\n                       \"path\":\"\",\r\n                       \"keyData\":\"\"\r\n                     }\r\n                   ]\r\n                 }\r\n               },\r\n               \"secrets\":[\r\n                 {\r\n                   \"sourceVault\":{\r\n                     \"id\":\"\"\r\n                   },\r\n                   \"vaultCertificates\":[\r\n                     {\r\n                       \"certificateUrl\":\"\",\r\n                       \"certificateStore\":\"\"\r\n                     }\r\n                   ]\r\n                 }\r\n               ]\r\n             },\r\n             \"storageProfile\":{\r\n               \"imageReference\":{\r\n                 \"publisher\":\"\",\r\n                 \"offer\":\"\",\r\n                 \"sku\":\"\",\r\n                 \"version\":\"\"\r\n               },\r\n               \"osDisk\":{\r\n                 \"name\":\"\",\r\n                 \"caching\":\"\",\r\n                 \"createOption\":\"\",\r\n                 \"osType\":\"\",\r\n                 \"image\":{\r\n                   \"uri\":\"\"\r\n                 },\r\n                 \"vhdContainers\":[\r\n                   \"\"\r\n                 ]\r\n               }\r\n             },\r\n             \"networkProfile\":{\r\n               \"networkInterfaceConfigurations\":[\r\n                 {\r\n                   \"name\":\"\",\r\n                   \"primary\":null,\r\n                   \"ipConfigurations\":[\r\n                     {\r\n                       \"name\":\"\",\r\n                       \"subnet\":{\r\n                         \"id\":\"\"\r\n                       },\r\n                       \"loadBalancerBackendAddressPools\":[\r\n                         {\r\n                           \"id\":\"\"\r\n                         }\r\n                       ],\r\n                       \"id\":\"\"\r\n                     }\r\n                   ],\r\n                   \"id\":\"\"\r\n                 }\r\n               ]\r\n             },\r\n             \"extensionProfile\":{\r\n               \"extensions\":[\r\n                 {\r\n                   \"name\":\"\",\r\n                   \"publisher\":\"\",\r\n                   \"virtualMachineScaleSetExtensionType\":\"\",\r\n                   \"typeHandlerVersion\":\"\",\r\n                   \"autoUpgradeMinorVersion\":null,\r\n                   \"settings\":{\r\n                   },\r\n                   \"protectedSettings\":{\r\n                   },\r\n                   \"provisioningState\":\"\",\r\n                   \"id\":\"\"\r\n                 }\r\n               ]\r\n             }\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "vmss create-or-update-parameters virtual-machine-profile remove",
                  "usage": "[options]",
                  "filePath": "commands/arm/compute/compute._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--os-profile",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--os-profile",
                      "description": "Remove the os-profile value."
                    },
                    {
                      "flags": "--storage-profile",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--storage-profile",
                      "description": "Remove the storage-profile value."
                    },
                    {
                      "flags": "--network-profile",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--network-profile",
                      "description": "Remove the network-profile value."
                    },
                    {
                      "flags": "--extension-profile",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--extension-profile",
                      "description": "Remove the extension-profile value."
                    }
                  ]
                },
                {
                  "name": "add",
                  "description": "Add virtual-machine-profile in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"virtualMachineProfile\" : {\r\n             \"osProfile\":{\r\n               \"computerNamePrefix\":\"\",\r\n               \"adminUsername\":\"\",\r\n               \"adminPassword\":\"\",\r\n               \"customData\":\"\",\r\n               \"windowsConfiguration\":{\r\n                 \"provisionVMAgent\":null,\r\n                 \"enableAutomaticUpdates\":null,\r\n                 \"timeZone\":\"\",\r\n                 \"additionalUnattendContent\":[\r\n                   {\r\n                     \"passName\":\"\",\r\n                     \"componentName\":\"\",\r\n                     \"settingName\":\"\",\r\n                     \"content\":\"\"\r\n                   }\r\n                 ],\r\n                 \"winRM\":{\r\n                   \"listeners\":[\r\n                     {\r\n                       \"protocol\":\"\",\r\n                       \"certificateUrl\":\"\"\r\n                     }\r\n                   ]\r\n                 }\r\n               },\r\n               \"linuxConfiguration\":{\r\n                 \"disablePasswordAuthentication\":null,\r\n                 \"ssh\":{\r\n                   \"publicKeys\":[\r\n                     {\r\n                       \"path\":\"\",\r\n                       \"keyData\":\"\"\r\n                     }\r\n                   ]\r\n                 }\r\n               },\r\n               \"secrets\":[\r\n                 {\r\n                   \"sourceVault\":{\r\n                     \"id\":\"\"\r\n                   },\r\n                   \"vaultCertificates\":[\r\n                     {\r\n                       \"certificateUrl\":\"\",\r\n                       \"certificateStore\":\"\"\r\n                     }\r\n                   ]\r\n                 }\r\n               ]\r\n             },\r\n             \"storageProfile\":{\r\n               \"imageReference\":{\r\n                 \"publisher\":\"\",\r\n                 \"offer\":\"\",\r\n                 \"sku\":\"\",\r\n                 \"version\":\"\"\r\n               },\r\n               \"osDisk\":{\r\n                 \"name\":\"\",\r\n                 \"caching\":\"\",\r\n                 \"createOption\":\"\",\r\n                 \"osType\":\"\",\r\n                 \"image\":{\r\n                   \"uri\":\"\"\r\n                 },\r\n                 \"vhdContainers\":[\r\n                   \"\"\r\n                 ]\r\n               }\r\n             },\r\n             \"networkProfile\":{\r\n               \"networkInterfaceConfigurations\":[\r\n                 {\r\n                   \"name\":\"\",\r\n                   \"primary\":null,\r\n                   \"ipConfigurations\":[\r\n                     {\r\n                       \"name\":\"\",\r\n                       \"subnet\":{\r\n                         \"id\":\"\"\r\n                       },\r\n                       \"loadBalancerBackendAddressPools\":[\r\n                         {\r\n                           \"id\":\"\"\r\n                         }\r\n                       ],\r\n                       \"id\":\"\"\r\n                     }\r\n                   ],\r\n                   \"id\":\"\"\r\n                 }\r\n               ]\r\n             },\r\n             \"extensionProfile\":{\r\n               \"extensions\":[\r\n                 {\r\n                   \"name\":\"\",\r\n                   \"publisher\":\"\",\r\n                   \"virtualMachineScaleSetExtensionType\":\"\",\r\n                   \"typeHandlerVersion\":\"\",\r\n                   \"autoUpgradeMinorVersion\":null,\r\n                   \"settings\":{\r\n                   },\r\n                   \"protectedSettings\":{\r\n                   },\r\n                   \"provisioningState\":\"\",\r\n                   \"id\":\"\"\r\n                 }\r\n               ]\r\n             }\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "vmss create-or-update-parameters virtual-machine-profile add",
                  "usage": "[options]",
                  "filePath": "commands/arm/compute/compute._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--key <key>",
                      "required": -7,
                      "optional": 0,
                      "bool": true,
                      "long": "--key",
                      "description": "The JSON key."
                    },
                    {
                      "flags": "--value <value>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--value",
                      "description": "The JSON value."
                    },
                    {
                      "flags": "--parse",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--parse",
                      "description": "Parse the input value string to a JSON object."
                    },
                    {
                      "flags": "--os-profile <osProfile>",
                      "required": -14,
                      "optional": 0,
                      "bool": true,
                      "long": "--os-profile",
                      "description": "Add the os-profile value."
                    },
                    {
                      "flags": "--storage-profile <storageProfile>",
                      "required": -19,
                      "optional": 0,
                      "bool": true,
                      "long": "--storage-profile",
                      "description": "Add the storage-profile value."
                    },
                    {
                      "flags": "--network-profile <networkProfile>",
                      "required": -19,
                      "optional": 0,
                      "bool": true,
                      "long": "--network-profile",
                      "description": "Add the network-profile value."
                    },
                    {
                      "flags": "--extension-profile <extensionProfile>",
                      "required": -21,
                      "optional": 0,
                      "bool": true,
                      "long": "--extension-profile",
                      "description": "Add the extension-profile value."
                    }
                  ]
                }
              ],
              "categories": {}
            },
            "os-profile": {
              "name": "os-profile",
              "description": "Commands to set/remove/add os-profile of virtual-machine-scale-sets in create-or-update-parameters file.",
              "fullName": "vmss create-or-update-parameters os-profile",
              "usage": "[options] [command]",
              "options": [],
              "commands": [
                {
                  "name": "set",
                  "description": "Set os-profile in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"osProfile\" : {\r\n             \"computerNamePrefix\":\"\",\r\n             \"adminUsername\":\"\",\r\n             \"adminPassword\":\"\",\r\n             \"customData\":\"\",\r\n             \"windowsConfiguration\":{\r\n               \"provisionVMAgent\":null,\r\n               \"enableAutomaticUpdates\":null,\r\n               \"timeZone\":\"\",\r\n               \"additionalUnattendContent\":[\r\n                 {\r\n                   \"passName\":\"\",\r\n                   \"componentName\":\"\",\r\n                   \"settingName\":\"\",\r\n                   \"content\":\"\"\r\n                 }\r\n               ],\r\n               \"winRM\":{\r\n                 \"listeners\":[\r\n                   {\r\n                     \"protocol\":\"\",\r\n                     \"certificateUrl\":\"\"\r\n                   }\r\n                 ]\r\n               }\r\n             },\r\n             \"linuxConfiguration\":{\r\n               \"disablePasswordAuthentication\":null,\r\n               \"ssh\":{\r\n                 \"publicKeys\":[\r\n                   {\r\n                     \"path\":\"\",\r\n                     \"keyData\":\"\"\r\n                   }\r\n                 ]\r\n               }\r\n             },\r\n             \"secrets\":[\r\n               {\r\n                 \"sourceVault\":{\r\n                   \"id\":\"\"\r\n                 },\r\n                 \"vaultCertificates\":[\r\n                   {\r\n                     \"certificateUrl\":\"\",\r\n                     \"certificateStore\":\"\"\r\n                   }\r\n                 ]\r\n               }\r\n             ]\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "vmss create-or-update-parameters os-profile set",
                  "usage": "[options]",
                  "filePath": "commands/arm/compute/compute._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--parse",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--parse",
                      "description": "Parse the input value string to a JSON object."
                    },
                    {
                      "flags": "--computer-name-prefix <computerNamePrefix>",
                      "required": -24,
                      "optional": 0,
                      "bool": true,
                      "long": "--computer-name-prefix",
                      "description": "Set the computer-name-prefix value."
                    },
                    {
                      "flags": "--admin-username <adminUsername>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--admin-username",
                      "description": "Set the admin-username value."
                    },
                    {
                      "flags": "--admin-password <adminPassword>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--admin-password",
                      "description": "Set the admin-password value."
                    },
                    {
                      "flags": "--custom-data <customData>",
                      "required": -15,
                      "optional": 0,
                      "bool": true,
                      "long": "--custom-data",
                      "description": "Set the custom-data value."
                    },
                    {
                      "flags": "--windows-configuration <windowsConfiguration>",
                      "required": -25,
                      "optional": 0,
                      "bool": true,
                      "long": "--windows-configuration",
                      "description": "Set the windows-configuration value."
                    },
                    {
                      "flags": "--linux-configuration <linuxConfiguration>",
                      "required": -23,
                      "optional": 0,
                      "bool": true,
                      "long": "--linux-configuration",
                      "description": "Set the linux-configuration value."
                    },
                    {
                      "flags": "--secrets <secrets>",
                      "required": -11,
                      "optional": 0,
                      "bool": true,
                      "long": "--secrets",
                      "description": "Set the secrets value."
                    }
                  ]
                },
                {
                  "name": "remove",
                  "description": "Remove os-profile in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"osProfile\" : {\r\n             \"computerNamePrefix\":\"\",\r\n             \"adminUsername\":\"\",\r\n             \"adminPassword\":\"\",\r\n             \"customData\":\"\",\r\n             \"windowsConfiguration\":{\r\n               \"provisionVMAgent\":null,\r\n               \"enableAutomaticUpdates\":null,\r\n               \"timeZone\":\"\",\r\n               \"additionalUnattendContent\":[\r\n                 {\r\n                   \"passName\":\"\",\r\n                   \"componentName\":\"\",\r\n                   \"settingName\":\"\",\r\n                   \"content\":\"\"\r\n                 }\r\n               ],\r\n               \"winRM\":{\r\n                 \"listeners\":[\r\n                   {\r\n                     \"protocol\":\"\",\r\n                     \"certificateUrl\":\"\"\r\n                   }\r\n                 ]\r\n               }\r\n             },\r\n             \"linuxConfiguration\":{\r\n               \"disablePasswordAuthentication\":null,\r\n               \"ssh\":{\r\n                 \"publicKeys\":[\r\n                   {\r\n                     \"path\":\"\",\r\n                     \"keyData\":\"\"\r\n                   }\r\n                 ]\r\n               }\r\n             },\r\n             \"secrets\":[\r\n               {\r\n                 \"sourceVault\":{\r\n                   \"id\":\"\"\r\n                 },\r\n                 \"vaultCertificates\":[\r\n                   {\r\n                     \"certificateUrl\":\"\",\r\n                     \"certificateStore\":\"\"\r\n                   }\r\n                 ]\r\n               }\r\n             ]\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "vmss create-or-update-parameters os-profile remove",
                  "usage": "[options]",
                  "filePath": "commands/arm/compute/compute._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--computer-name-prefix",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--computer-name-prefix",
                      "description": "Remove the computer-name-prefix value."
                    },
                    {
                      "flags": "--admin-username",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--admin-username",
                      "description": "Remove the admin-username value."
                    },
                    {
                      "flags": "--admin-password",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--admin-password",
                      "description": "Remove the admin-password value."
                    },
                    {
                      "flags": "--custom-data",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--custom-data",
                      "description": "Remove the custom-data value."
                    },
                    {
                      "flags": "--windows-configuration",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--windows-configuration",
                      "description": "Remove the windows-configuration value."
                    },
                    {
                      "flags": "--linux-configuration",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--linux-configuration",
                      "description": "Remove the linux-configuration value."
                    },
                    {
                      "flags": "--secrets",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--secrets",
                      "description": "Remove the secrets value."
                    }
                  ]
                },
                {
                  "name": "add",
                  "description": "Add os-profile in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"osProfile\" : {\r\n             \"computerNamePrefix\":\"\",\r\n             \"adminUsername\":\"\",\r\n             \"adminPassword\":\"\",\r\n             \"customData\":\"\",\r\n             \"windowsConfiguration\":{\r\n               \"provisionVMAgent\":null,\r\n               \"enableAutomaticUpdates\":null,\r\n               \"timeZone\":\"\",\r\n               \"additionalUnattendContent\":[\r\n                 {\r\n                   \"passName\":\"\",\r\n                   \"componentName\":\"\",\r\n                   \"settingName\":\"\",\r\n                   \"content\":\"\"\r\n                 }\r\n               ],\r\n               \"winRM\":{\r\n                 \"listeners\":[\r\n                   {\r\n                     \"protocol\":\"\",\r\n                     \"certificateUrl\":\"\"\r\n                   }\r\n                 ]\r\n               }\r\n             },\r\n             \"linuxConfiguration\":{\r\n               \"disablePasswordAuthentication\":null,\r\n               \"ssh\":{\r\n                 \"publicKeys\":[\r\n                   {\r\n                     \"path\":\"\",\r\n                     \"keyData\":\"\"\r\n                   }\r\n                 ]\r\n               }\r\n             },\r\n             \"secrets\":[\r\n               {\r\n                 \"sourceVault\":{\r\n                   \"id\":\"\"\r\n                 },\r\n                 \"vaultCertificates\":[\r\n                   {\r\n                     \"certificateUrl\":\"\",\r\n                     \"certificateStore\":\"\"\r\n                   }\r\n                 ]\r\n               }\r\n             ]\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "vmss create-or-update-parameters os-profile add",
                  "usage": "[options]",
                  "filePath": "commands/arm/compute/compute._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--key <key>",
                      "required": -7,
                      "optional": 0,
                      "bool": true,
                      "long": "--key",
                      "description": "The JSON key."
                    },
                    {
                      "flags": "--value <value>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--value",
                      "description": "The JSON value."
                    },
                    {
                      "flags": "--parse",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--parse",
                      "description": "Parse the input value string to a JSON object."
                    },
                    {
                      "flags": "--computer-name-prefix <computerNamePrefix>",
                      "required": -24,
                      "optional": 0,
                      "bool": true,
                      "long": "--computer-name-prefix",
                      "description": "Add the computer-name-prefix value."
                    },
                    {
                      "flags": "--admin-username <adminUsername>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--admin-username",
                      "description": "Add the admin-username value."
                    },
                    {
                      "flags": "--admin-password <adminPassword>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--admin-password",
                      "description": "Add the admin-password value."
                    },
                    {
                      "flags": "--custom-data <customData>",
                      "required": -15,
                      "optional": 0,
                      "bool": true,
                      "long": "--custom-data",
                      "description": "Add the custom-data value."
                    },
                    {
                      "flags": "--windows-configuration <windowsConfiguration>",
                      "required": -25,
                      "optional": 0,
                      "bool": true,
                      "long": "--windows-configuration",
                      "description": "Add the windows-configuration value."
                    },
                    {
                      "flags": "--linux-configuration <linuxConfiguration>",
                      "required": -23,
                      "optional": 0,
                      "bool": true,
                      "long": "--linux-configuration",
                      "description": "Add the linux-configuration value."
                    },
                    {
                      "flags": "--secrets <secrets>",
                      "required": -11,
                      "optional": 0,
                      "bool": true,
                      "long": "--secrets",
                      "description": "Add the secrets value."
                    }
                  ]
                }
              ],
              "categories": {}
            },
            "windows-configuration": {
              "name": "windows-configuration",
              "description": "Commands to set/remove/add windows-configuration of virtual-machine-scale-sets in create-or-update-parameters file.",
              "fullName": "vmss create-or-update-parameters windows-configuration",
              "usage": "[options] [command]",
              "options": [],
              "commands": [
                {
                  "name": "set",
                  "description": "Set windows-configuration in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"windowsConfiguration\" : {\r\n             \"provisionVMAgent\":null,\r\n             \"enableAutomaticUpdates\":null,\r\n             \"timeZone\":\"\",\r\n             \"additionalUnattendContent\":[\r\n               {\r\n                 \"passName\":\"\",\r\n                 \"componentName\":\"\",\r\n                 \"settingName\":\"\",\r\n                 \"content\":\"\"\r\n               }\r\n             ],\r\n             \"winRM\":{\r\n               \"listeners\":[\r\n                 {\r\n                   \"protocol\":\"\",\r\n                   \"certificateUrl\":\"\"\r\n                 }\r\n               ]\r\n             }\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "vmss create-or-update-parameters windows-configuration set",
                  "usage": "[options]",
                  "filePath": "commands/arm/compute/compute._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--parse",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--parse",
                      "description": "Parse the input value string to a JSON object."
                    },
                    {
                      "flags": "--provision-vm-agent <provisionVMAgent>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "long": "--provision-vm-agent",
                      "description": "Set the provision-vm-agent value."
                    },
                    {
                      "flags": "--enable-automatic-updates <enableAutomaticUpdates>",
                      "required": -28,
                      "optional": 0,
                      "bool": true,
                      "long": "--enable-automatic-updates",
                      "description": "Set the enable-automatic-updates value."
                    },
                    {
                      "flags": "--time-zone <timeZone>",
                      "required": -13,
                      "optional": 0,
                      "bool": true,
                      "long": "--time-zone",
                      "description": "Set the time-zone value."
                    },
                    {
                      "flags": "--additional-unattend-content <additionalUnattendContent>",
                      "required": -31,
                      "optional": 0,
                      "bool": true,
                      "long": "--additional-unattend-content",
                      "description": "Set the additional-unattend-content value."
                    },
                    {
                      "flags": "--win-rm <winRM>",
                      "required": -10,
                      "optional": 0,
                      "bool": true,
                      "long": "--win-rm",
                      "description": "Set the win-rm value."
                    }
                  ]
                },
                {
                  "name": "remove",
                  "description": "Remove windows-configuration in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"windowsConfiguration\" : {\r\n             \"provisionVMAgent\":null,\r\n             \"enableAutomaticUpdates\":null,\r\n             \"timeZone\":\"\",\r\n             \"additionalUnattendContent\":[\r\n               {\r\n                 \"passName\":\"\",\r\n                 \"componentName\":\"\",\r\n                 \"settingName\":\"\",\r\n                 \"content\":\"\"\r\n               }\r\n             ],\r\n             \"winRM\":{\r\n               \"listeners\":[\r\n                 {\r\n                   \"protocol\":\"\",\r\n                   \"certificateUrl\":\"\"\r\n                 }\r\n               ]\r\n             }\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "vmss create-or-update-parameters windows-configuration remove",
                  "usage": "[options]",
                  "filePath": "commands/arm/compute/compute._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--provision-vm-agent",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--provision-vm-agent",
                      "description": "Remove the provision-vm-agent value."
                    },
                    {
                      "flags": "--enable-automatic-updates",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--enable-automatic-updates",
                      "description": "Remove the enable-automatic-updates value."
                    },
                    {
                      "flags": "--time-zone",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--time-zone",
                      "description": "Remove the time-zone value."
                    },
                    {
                      "flags": "--additional-unattend-content",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--additional-unattend-content",
                      "description": "Remove the additional-unattend-content value."
                    },
                    {
                      "flags": "--win-rm",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--win-rm",
                      "description": "Remove the win-rm value."
                    }
                  ]
                },
                {
                  "name": "add",
                  "description": "Add windows-configuration in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"windowsConfiguration\" : {\r\n             \"provisionVMAgent\":null,\r\n             \"enableAutomaticUpdates\":null,\r\n             \"timeZone\":\"\",\r\n             \"additionalUnattendContent\":[\r\n               {\r\n                 \"passName\":\"\",\r\n                 \"componentName\":\"\",\r\n                 \"settingName\":\"\",\r\n                 \"content\":\"\"\r\n               }\r\n             ],\r\n             \"winRM\":{\r\n               \"listeners\":[\r\n                 {\r\n                   \"protocol\":\"\",\r\n                   \"certificateUrl\":\"\"\r\n                 }\r\n               ]\r\n             }\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "vmss create-or-update-parameters windows-configuration add",
                  "usage": "[options]",
                  "filePath": "commands/arm/compute/compute._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--key <key>",
                      "required": -7,
                      "optional": 0,
                      "bool": true,
                      "long": "--key",
                      "description": "The JSON key."
                    },
                    {
                      "flags": "--value <value>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--value",
                      "description": "The JSON value."
                    },
                    {
                      "flags": "--parse",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--parse",
                      "description": "Parse the input value string to a JSON object."
                    },
                    {
                      "flags": "--provision-vm-agent <provisionVMAgent>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "long": "--provision-vm-agent",
                      "description": "Add the provision-vm-agent value."
                    },
                    {
                      "flags": "--enable-automatic-updates <enableAutomaticUpdates>",
                      "required": -28,
                      "optional": 0,
                      "bool": true,
                      "long": "--enable-automatic-updates",
                      "description": "Add the enable-automatic-updates value."
                    },
                    {
                      "flags": "--time-zone <timeZone>",
                      "required": -13,
                      "optional": 0,
                      "bool": true,
                      "long": "--time-zone",
                      "description": "Add the time-zone value."
                    },
                    {
                      "flags": "--additional-unattend-content <additionalUnattendContent>",
                      "required": -31,
                      "optional": 0,
                      "bool": true,
                      "long": "--additional-unattend-content",
                      "description": "Add the additional-unattend-content value."
                    },
                    {
                      "flags": "--win-rm <winRM>",
                      "required": -10,
                      "optional": 0,
                      "bool": true,
                      "long": "--win-rm",
                      "description": "Add the win-rm value."
                    }
                  ]
                }
              ],
              "categories": {}
            },
            "additional-unattend-content": {
              "name": "additional-unattend-content",
              "description": "Commands to set/remove/add additional-unattend-content of virtual-machine-scale-sets in create-or-update-parameters file.",
              "fullName": "vmss create-or-update-parameters additional-unattend-content",
              "usage": "[options] [command]",
              "options": [],
              "commands": [
                {
                  "name": "set",
                  "description": "Set additional-unattend-content in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"additionalUnattendContent\" : {\r\n             \"passName\":\"\",\r\n             \"componentName\":\"\",\r\n             \"settingName\":\"\",\r\n             \"content\":\"\"\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "vmss create-or-update-parameters additional-unattend-content set",
                  "usage": "[options]",
                  "filePath": "commands/arm/compute/compute._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--index <index>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--index",
                      "description": "Indexer: index."
                    },
                    {
                      "flags": "--value <value>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--value",
                      "description": "The input string value for the indexed item."
                    },
                    {
                      "flags": "--parse",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--parse",
                      "description": "Parse the input value string to a JSON object."
                    },
                    {
                      "flags": "--pass-name <passName>",
                      "required": -13,
                      "optional": 0,
                      "bool": true,
                      "long": "--pass-name",
                      "description": "Set the pass-name value."
                    },
                    {
                      "flags": "--component-name <componentName>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--component-name",
                      "description": "Set the component-name value."
                    },
                    {
                      "flags": "--setting-name <settingName>",
                      "required": -16,
                      "optional": 0,
                      "bool": true,
                      "long": "--setting-name",
                      "description": "Set the setting-name value."
                    },
                    {
                      "flags": "--content <content>",
                      "required": -11,
                      "optional": 0,
                      "bool": true,
                      "long": "--content",
                      "description": "Set the content value."
                    }
                  ]
                },
                {
                  "name": "remove",
                  "description": "Remove additional-unattend-content in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"additionalUnattendContent\" : {\r\n             \"passName\":\"\",\r\n             \"componentName\":\"\",\r\n             \"settingName\":\"\",\r\n             \"content\":\"\"\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "vmss create-or-update-parameters additional-unattend-content remove",
                  "usage": "[options]",
                  "filePath": "commands/arm/compute/compute._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--index <index>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--index",
                      "description": "Indexer: index."
                    },
                    {
                      "flags": "--pass-name",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--pass-name",
                      "description": "Remove the pass-name value."
                    },
                    {
                      "flags": "--component-name",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--component-name",
                      "description": "Remove the component-name value."
                    },
                    {
                      "flags": "--setting-name",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--setting-name",
                      "description": "Remove the setting-name value."
                    },
                    {
                      "flags": "--content",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--content",
                      "description": "Remove the content value."
                    }
                  ]
                },
                {
                  "name": "add",
                  "description": "Add additional-unattend-content in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"additionalUnattendContent\" : {\r\n             \"passName\":\"\",\r\n             \"componentName\":\"\",\r\n             \"settingName\":\"\",\r\n             \"content\":\"\"\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "vmss create-or-update-parameters additional-unattend-content add",
                  "usage": "[options]",
                  "filePath": "commands/arm/compute/compute._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--key <key>",
                      "required": -7,
                      "optional": 0,
                      "bool": true,
                      "long": "--key",
                      "description": "The JSON key."
                    },
                    {
                      "flags": "--value <value>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--value",
                      "description": "The JSON value."
                    },
                    {
                      "flags": "--parse",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--parse",
                      "description": "Parse the input value string to a JSON object."
                    },
                    {
                      "flags": "--pass-name <passName>",
                      "required": -13,
                      "optional": 0,
                      "bool": true,
                      "long": "--pass-name",
                      "description": "Add the pass-name value."
                    },
                    {
                      "flags": "--component-name <componentName>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--component-name",
                      "description": "Add the component-name value."
                    },
                    {
                      "flags": "--setting-name <settingName>",
                      "required": -16,
                      "optional": 0,
                      "bool": true,
                      "long": "--setting-name",
                      "description": "Add the setting-name value."
                    },
                    {
                      "flags": "--content <content>",
                      "required": -11,
                      "optional": 0,
                      "bool": true,
                      "long": "--content",
                      "description": "Add the content value."
                    }
                  ]
                }
              ],
              "categories": {}
            },
            "win-rm": {
              "name": "win-rm",
              "description": "Commands to set/remove/add win-rm of virtual-machine-scale-sets in create-or-update-parameters file.",
              "fullName": "vmss create-or-update-parameters win-rm",
              "usage": "[options] [command]",
              "options": [],
              "commands": [
                {
                  "name": "set",
                  "description": "Set win-rm in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"winRM\" : {\r\n             \"listeners\":[\r\n               {\r\n                 \"protocol\":\"\",\r\n                 \"certificateUrl\":\"\"\r\n               }\r\n             ]\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "vmss create-or-update-parameters win-rm set",
                  "usage": "[options]",
                  "filePath": "commands/arm/compute/compute._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--parse",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--parse",
                      "description": "Parse the input value string to a JSON object."
                    },
                    {
                      "flags": "--listeners <listeners>",
                      "required": -13,
                      "optional": 0,
                      "bool": true,
                      "long": "--listeners",
                      "description": "Set the listeners value."
                    }
                  ]
                },
                {
                  "name": "remove",
                  "description": "Remove win-rm in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"winRM\" : {\r\n             \"listeners\":[\r\n               {\r\n                 \"protocol\":\"\",\r\n                 \"certificateUrl\":\"\"\r\n               }\r\n             ]\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "vmss create-or-update-parameters win-rm remove",
                  "usage": "[options]",
                  "filePath": "commands/arm/compute/compute._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--listeners",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--listeners",
                      "description": "Remove the listeners value."
                    }
                  ]
                },
                {
                  "name": "add",
                  "description": "Add win-rm in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"winRM\" : {\r\n             \"listeners\":[\r\n               {\r\n                 \"protocol\":\"\",\r\n                 \"certificateUrl\":\"\"\r\n               }\r\n             ]\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "vmss create-or-update-parameters win-rm add",
                  "usage": "[options]",
                  "filePath": "commands/arm/compute/compute._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--key <key>",
                      "required": -7,
                      "optional": 0,
                      "bool": true,
                      "long": "--key",
                      "description": "The JSON key."
                    },
                    {
                      "flags": "--value <value>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--value",
                      "description": "The JSON value."
                    },
                    {
                      "flags": "--parse",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--parse",
                      "description": "Parse the input value string to a JSON object."
                    },
                    {
                      "flags": "--listeners <listeners>",
                      "required": -13,
                      "optional": 0,
                      "bool": true,
                      "long": "--listeners",
                      "description": "Add the listeners value."
                    }
                  ]
                }
              ],
              "categories": {}
            },
            "listeners": {
              "name": "listeners",
              "description": "Commands to set/remove/add listeners of virtual-machine-scale-sets in create-or-update-parameters file.",
              "fullName": "vmss create-or-update-parameters listeners",
              "usage": "[options] [command]",
              "options": [],
              "commands": [
                {
                  "name": "set",
                  "description": "Set listeners in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"listeners\" : {\r\n             \"protocol\":\"\",\r\n             \"certificateUrl\":\"\"\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "vmss create-or-update-parameters listeners set",
                  "usage": "[options]",
                  "filePath": "commands/arm/compute/compute._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--index <index>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--index",
                      "description": "Indexer: index."
                    },
                    {
                      "flags": "--value <value>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--value",
                      "description": "The input string value for the indexed item."
                    },
                    {
                      "flags": "--parse",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--parse",
                      "description": "Parse the input value string to a JSON object."
                    },
                    {
                      "flags": "--protocol <protocol>",
                      "required": -12,
                      "optional": 0,
                      "bool": true,
                      "long": "--protocol",
                      "description": "Set the protocol value."
                    },
                    {
                      "flags": "--certificate-url <certificateUrl>",
                      "required": -19,
                      "optional": 0,
                      "bool": true,
                      "long": "--certificate-url",
                      "description": "Set the certificate-url value."
                    }
                  ]
                },
                {
                  "name": "remove",
                  "description": "Remove listeners in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"listeners\" : {\r\n             \"protocol\":\"\",\r\n             \"certificateUrl\":\"\"\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "vmss create-or-update-parameters listeners remove",
                  "usage": "[options]",
                  "filePath": "commands/arm/compute/compute._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--index <index>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--index",
                      "description": "Indexer: index."
                    },
                    {
                      "flags": "--protocol",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--protocol",
                      "description": "Remove the protocol value."
                    },
                    {
                      "flags": "--certificate-url",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--certificate-url",
                      "description": "Remove the certificate-url value."
                    }
                  ]
                },
                {
                  "name": "add",
                  "description": "Add listeners in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"listeners\" : {\r\n             \"protocol\":\"\",\r\n             \"certificateUrl\":\"\"\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "vmss create-or-update-parameters listeners add",
                  "usage": "[options]",
                  "filePath": "commands/arm/compute/compute._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--key <key>",
                      "required": -7,
                      "optional": 0,
                      "bool": true,
                      "long": "--key",
                      "description": "The JSON key."
                    },
                    {
                      "flags": "--value <value>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--value",
                      "description": "The JSON value."
                    },
                    {
                      "flags": "--parse",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--parse",
                      "description": "Parse the input value string to a JSON object."
                    },
                    {
                      "flags": "--protocol <protocol>",
                      "required": -12,
                      "optional": 0,
                      "bool": true,
                      "long": "--protocol",
                      "description": "Add the protocol value."
                    },
                    {
                      "flags": "--certificate-url <certificateUrl>",
                      "required": -19,
                      "optional": 0,
                      "bool": true,
                      "long": "--certificate-url",
                      "description": "Add the certificate-url value."
                    }
                  ]
                }
              ],
              "categories": {}
            },
            "linux-configuration": {
              "name": "linux-configuration",
              "description": "Commands to set/remove/add linux-configuration of virtual-machine-scale-sets in create-or-update-parameters file.",
              "fullName": "vmss create-or-update-parameters linux-configuration",
              "usage": "[options] [command]",
              "options": [],
              "commands": [
                {
                  "name": "set",
                  "description": "Set linux-configuration in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"linuxConfiguration\" : {\r\n             \"disablePasswordAuthentication\":null,\r\n             \"ssh\":{\r\n               \"publicKeys\":[\r\n                 {\r\n                   \"path\":\"\",\r\n                   \"keyData\":\"\"\r\n                 }\r\n               ]\r\n             }\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "vmss create-or-update-parameters linux-configuration set",
                  "usage": "[options]",
                  "filePath": "commands/arm/compute/compute._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--parse",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--parse",
                      "description": "Parse the input value string to a JSON object."
                    },
                    {
                      "flags": "--disable-password-authentication <disablePasswordAuthentication>",
                      "required": -35,
                      "optional": 0,
                      "bool": true,
                      "long": "--disable-password-authentication",
                      "description": "Set the disable-password-authentication value."
                    },
                    {
                      "flags": "--ssh <ssh>",
                      "required": -7,
                      "optional": 0,
                      "bool": true,
                      "long": "--ssh",
                      "description": "Set the ssh value."
                    }
                  ]
                },
                {
                  "name": "remove",
                  "description": "Remove linux-configuration in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"linuxConfiguration\" : {\r\n             \"disablePasswordAuthentication\":null,\r\n             \"ssh\":{\r\n               \"publicKeys\":[\r\n                 {\r\n                   \"path\":\"\",\r\n                   \"keyData\":\"\"\r\n                 }\r\n               ]\r\n             }\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "vmss create-or-update-parameters linux-configuration remove",
                  "usage": "[options]",
                  "filePath": "commands/arm/compute/compute._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--disable-password-authentication",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--disable-password-authentication",
                      "description": "Remove the disable-password-authentication value."
                    },
                    {
                      "flags": "--ssh",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--ssh",
                      "description": "Remove the ssh value."
                    }
                  ]
                },
                {
                  "name": "add",
                  "description": "Add linux-configuration in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"linuxConfiguration\" : {\r\n             \"disablePasswordAuthentication\":null,\r\n             \"ssh\":{\r\n               \"publicKeys\":[\r\n                 {\r\n                   \"path\":\"\",\r\n                   \"keyData\":\"\"\r\n                 }\r\n               ]\r\n             }\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "vmss create-or-update-parameters linux-configuration add",
                  "usage": "[options]",
                  "filePath": "commands/arm/compute/compute._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--key <key>",
                      "required": -7,
                      "optional": 0,
                      "bool": true,
                      "long": "--key",
                      "description": "The JSON key."
                    },
                    {
                      "flags": "--value <value>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--value",
                      "description": "The JSON value."
                    },
                    {
                      "flags": "--parse",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--parse",
                      "description": "Parse the input value string to a JSON object."
                    },
                    {
                      "flags": "--disable-password-authentication <disablePasswordAuthentication>",
                      "required": -35,
                      "optional": 0,
                      "bool": true,
                      "long": "--disable-password-authentication",
                      "description": "Add the disable-password-authentication value."
                    },
                    {
                      "flags": "--ssh <ssh>",
                      "required": -7,
                      "optional": 0,
                      "bool": true,
                      "long": "--ssh",
                      "description": "Add the ssh value."
                    }
                  ]
                }
              ],
              "categories": {}
            },
            "ssh": {
              "name": "ssh",
              "description": "Commands to set/remove/add ssh of virtual-machine-scale-sets in create-or-update-parameters file.",
              "fullName": "vmss create-or-update-parameters ssh",
              "usage": "[options] [command]",
              "options": [],
              "commands": [
                {
                  "name": "set",
                  "description": "Set ssh in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"ssh\" : {\r\n             \"publicKeys\":[\r\n               {\r\n                 \"path\":\"\",\r\n                 \"keyData\":\"\"\r\n               }\r\n             ]\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "vmss create-or-update-parameters ssh set",
                  "usage": "[options]",
                  "filePath": "commands/arm/compute/compute._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--parse",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--parse",
                      "description": "Parse the input value string to a JSON object."
                    },
                    {
                      "flags": "--public-keys <publicKeys>",
                      "required": -15,
                      "optional": 0,
                      "bool": true,
                      "long": "--public-keys",
                      "description": "Set the public-keys value."
                    }
                  ]
                },
                {
                  "name": "remove",
                  "description": "Remove ssh in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"ssh\" : {\r\n             \"publicKeys\":[\r\n               {\r\n                 \"path\":\"\",\r\n                 \"keyData\":\"\"\r\n               }\r\n             ]\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "vmss create-or-update-parameters ssh remove",
                  "usage": "[options]",
                  "filePath": "commands/arm/compute/compute._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--public-keys",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--public-keys",
                      "description": "Remove the public-keys value."
                    }
                  ]
                },
                {
                  "name": "add",
                  "description": "Add ssh in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"ssh\" : {\r\n             \"publicKeys\":[\r\n               {\r\n                 \"path\":\"\",\r\n                 \"keyData\":\"\"\r\n               }\r\n             ]\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "vmss create-or-update-parameters ssh add",
                  "usage": "[options]",
                  "filePath": "commands/arm/compute/compute._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--key <key>",
                      "required": -7,
                      "optional": 0,
                      "bool": true,
                      "long": "--key",
                      "description": "The JSON key."
                    },
                    {
                      "flags": "--value <value>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--value",
                      "description": "The JSON value."
                    },
                    {
                      "flags": "--parse",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--parse",
                      "description": "Parse the input value string to a JSON object."
                    },
                    {
                      "flags": "--public-keys <publicKeys>",
                      "required": -15,
                      "optional": 0,
                      "bool": true,
                      "long": "--public-keys",
                      "description": "Add the public-keys value."
                    }
                  ]
                }
              ],
              "categories": {}
            },
            "public-keys": {
              "name": "public-keys",
              "description": "Commands to set/remove/add public-keys of virtual-machine-scale-sets in create-or-update-parameters file.",
              "fullName": "vmss create-or-update-parameters public-keys",
              "usage": "[options] [command]",
              "options": [],
              "commands": [
                {
                  "name": "set",
                  "description": "Set public-keys in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"publicKeys\" : {\r\n             \"path\":\"\",\r\n             \"keyData\":\"\"\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "vmss create-or-update-parameters public-keys set",
                  "usage": "[options]",
                  "filePath": "commands/arm/compute/compute._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--index <index>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--index",
                      "description": "Indexer: index."
                    },
                    {
                      "flags": "--value <value>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--value",
                      "description": "The input string value for the indexed item."
                    },
                    {
                      "flags": "--parse",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--parse",
                      "description": "Parse the input value string to a JSON object."
                    },
                    {
                      "flags": "--path <path>",
                      "required": -8,
                      "optional": 0,
                      "bool": true,
                      "long": "--path",
                      "description": "Set the path value."
                    },
                    {
                      "flags": "--key-data <keyData>",
                      "required": -12,
                      "optional": 0,
                      "bool": true,
                      "long": "--key-data",
                      "description": "Set the key-data value."
                    }
                  ]
                },
                {
                  "name": "remove",
                  "description": "Remove public-keys in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"publicKeys\" : {\r\n             \"path\":\"\",\r\n             \"keyData\":\"\"\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "vmss create-or-update-parameters public-keys remove",
                  "usage": "[options]",
                  "filePath": "commands/arm/compute/compute._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--index <index>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--index",
                      "description": "Indexer: index."
                    },
                    {
                      "flags": "--path",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--path",
                      "description": "Remove the path value."
                    },
                    {
                      "flags": "--key-data",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--key-data",
                      "description": "Remove the key-data value."
                    }
                  ]
                },
                {
                  "name": "add",
                  "description": "Add public-keys in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"publicKeys\" : {\r\n             \"path\":\"\",\r\n             \"keyData\":\"\"\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "vmss create-or-update-parameters public-keys add",
                  "usage": "[options]",
                  "filePath": "commands/arm/compute/compute._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--key <key>",
                      "required": -7,
                      "optional": 0,
                      "bool": true,
                      "long": "--key",
                      "description": "The JSON key."
                    },
                    {
                      "flags": "--value <value>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--value",
                      "description": "The JSON value."
                    },
                    {
                      "flags": "--parse",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--parse",
                      "description": "Parse the input value string to a JSON object."
                    },
                    {
                      "flags": "--path <path>",
                      "required": -8,
                      "optional": 0,
                      "bool": true,
                      "long": "--path",
                      "description": "Add the path value."
                    },
                    {
                      "flags": "--key-data <keyData>",
                      "required": -12,
                      "optional": 0,
                      "bool": true,
                      "long": "--key-data",
                      "description": "Add the key-data value."
                    }
                  ]
                }
              ],
              "categories": {}
            },
            "secrets": {
              "name": "secrets",
              "description": "Commands to set/remove/add secrets of virtual-machine-scale-sets in create-or-update-parameters file.",
              "fullName": "vmss create-or-update-parameters secrets",
              "usage": "[options] [command]",
              "options": [],
              "commands": [
                {
                  "name": "set",
                  "description": "Set secrets in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"secrets\" : {\r\n             \"sourceVault\":{\r\n               \"id\":\"\"\r\n             },\r\n             \"vaultCertificates\":[\r\n               {\r\n                 \"certificateUrl\":\"\",\r\n                 \"certificateStore\":\"\"\r\n               }\r\n             ]\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "vmss create-or-update-parameters secrets set",
                  "usage": "[options]",
                  "filePath": "commands/arm/compute/compute._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--index <index>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--index",
                      "description": "Indexer: index."
                    },
                    {
                      "flags": "--value <value>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--value",
                      "description": "The input string value for the indexed item."
                    },
                    {
                      "flags": "--parse",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--parse",
                      "description": "Parse the input value string to a JSON object."
                    },
                    {
                      "flags": "--source-vault <sourceVault>",
                      "required": -16,
                      "optional": 0,
                      "bool": true,
                      "long": "--source-vault",
                      "description": "Set the source-vault value."
                    },
                    {
                      "flags": "--vault-certificates <vaultCertificates>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "long": "--vault-certificates",
                      "description": "Set the vault-certificates value."
                    }
                  ]
                },
                {
                  "name": "remove",
                  "description": "Remove secrets in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"secrets\" : {\r\n             \"sourceVault\":{\r\n               \"id\":\"\"\r\n             },\r\n             \"vaultCertificates\":[\r\n               {\r\n                 \"certificateUrl\":\"\",\r\n                 \"certificateStore\":\"\"\r\n               }\r\n             ]\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "vmss create-or-update-parameters secrets remove",
                  "usage": "[options]",
                  "filePath": "commands/arm/compute/compute._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--index <index>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--index",
                      "description": "Indexer: index."
                    },
                    {
                      "flags": "--source-vault",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--source-vault",
                      "description": "Remove the source-vault value."
                    },
                    {
                      "flags": "--vault-certificates",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--vault-certificates",
                      "description": "Remove the vault-certificates value."
                    }
                  ]
                },
                {
                  "name": "add",
                  "description": "Add secrets in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"secrets\" : {\r\n             \"sourceVault\":{\r\n               \"id\":\"\"\r\n             },\r\n             \"vaultCertificates\":[\r\n               {\r\n                 \"certificateUrl\":\"\",\r\n                 \"certificateStore\":\"\"\r\n               }\r\n             ]\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "vmss create-or-update-parameters secrets add",
                  "usage": "[options]",
                  "filePath": "commands/arm/compute/compute._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--key <key>",
                      "required": -7,
                      "optional": 0,
                      "bool": true,
                      "long": "--key",
                      "description": "The JSON key."
                    },
                    {
                      "flags": "--value <value>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--value",
                      "description": "The JSON value."
                    },
                    {
                      "flags": "--parse",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--parse",
                      "description": "Parse the input value string to a JSON object."
                    },
                    {
                      "flags": "--source-vault <sourceVault>",
                      "required": -16,
                      "optional": 0,
                      "bool": true,
                      "long": "--source-vault",
                      "description": "Add the source-vault value."
                    },
                    {
                      "flags": "--vault-certificates <vaultCertificates>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "long": "--vault-certificates",
                      "description": "Add the vault-certificates value."
                    }
                  ]
                }
              ],
              "categories": {}
            },
            "source-vault": {
              "name": "source-vault",
              "description": "Commands to set/remove/add source-vault of virtual-machine-scale-sets in create-or-update-parameters file.",
              "fullName": "vmss create-or-update-parameters source-vault",
              "usage": "[options] [command]",
              "options": [],
              "commands": [
                {
                  "name": "set",
                  "description": "Set source-vault in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"sourceVault\" : {\r\n             \"id\":\"\"\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "vmss create-or-update-parameters source-vault set",
                  "usage": "[options]",
                  "filePath": "commands/arm/compute/compute._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--secrets-index <secrets-index>",
                      "required": -17,
                      "optional": 0,
                      "bool": true,
                      "long": "--secrets-index",
                      "description": "Indexer: secrets-index."
                    },
                    {
                      "flags": "--parse",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--parse",
                      "description": "Parse the input value string to a JSON object."
                    },
                    {
                      "flags": "--id <id>",
                      "required": -6,
                      "optional": 0,
                      "bool": true,
                      "long": "--id",
                      "description": "Set the id value."
                    }
                  ]
                },
                {
                  "name": "remove",
                  "description": "Remove source-vault in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"sourceVault\" : {\r\n             \"id\":\"\"\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "vmss create-or-update-parameters source-vault remove",
                  "usage": "[options]",
                  "filePath": "commands/arm/compute/compute._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--secrets-index <secrets-index>",
                      "required": -17,
                      "optional": 0,
                      "bool": true,
                      "long": "--secrets-index",
                      "description": "Indexer: secrets-index."
                    },
                    {
                      "flags": "--id",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--id",
                      "description": "Remove the id value."
                    }
                  ]
                },
                {
                  "name": "add",
                  "description": "Add source-vault in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"sourceVault\" : {\r\n             \"id\":\"\"\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "vmss create-or-update-parameters source-vault add",
                  "usage": "[options]",
                  "filePath": "commands/arm/compute/compute._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--key <key>",
                      "required": -7,
                      "optional": 0,
                      "bool": true,
                      "long": "--key",
                      "description": "The JSON key."
                    },
                    {
                      "flags": "--value <value>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--value",
                      "description": "The JSON value."
                    },
                    {
                      "flags": "--parse",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--parse",
                      "description": "Parse the input value string to a JSON object."
                    },
                    {
                      "flags": "--id <id>",
                      "required": -6,
                      "optional": 0,
                      "bool": true,
                      "long": "--id",
                      "description": "Add the id value."
                    }
                  ]
                }
              ],
              "categories": {}
            },
            "vault-certificates": {
              "name": "vault-certificates",
              "description": "Commands to set/remove/add vault-certificates of virtual-machine-scale-sets in create-or-update-parameters file.",
              "fullName": "vmss create-or-update-parameters vault-certificates",
              "usage": "[options] [command]",
              "options": [],
              "commands": [
                {
                  "name": "set",
                  "description": "Set vault-certificates in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"vaultCertificates\" : {\r\n             \"certificateUrl\":\"\",\r\n             \"certificateStore\":\"\"\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "vmss create-or-update-parameters vault-certificates set",
                  "usage": "[options]",
                  "filePath": "commands/arm/compute/compute._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--index <index>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--index",
                      "description": "Indexer: index."
                    },
                    {
                      "flags": "--secrets-index <secrets-index>",
                      "required": -17,
                      "optional": 0,
                      "bool": true,
                      "long": "--secrets-index",
                      "description": "Indexer: secrets-index."
                    },
                    {
                      "flags": "--value <value>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--value",
                      "description": "The input string value for the indexed item."
                    },
                    {
                      "flags": "--parse",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--parse",
                      "description": "Parse the input value string to a JSON object."
                    },
                    {
                      "flags": "--certificate-url <certificateUrl>",
                      "required": -19,
                      "optional": 0,
                      "bool": true,
                      "long": "--certificate-url",
                      "description": "Set the certificate-url value."
                    },
                    {
                      "flags": "--certificate-store <certificateStore>",
                      "required": -21,
                      "optional": 0,
                      "bool": true,
                      "long": "--certificate-store",
                      "description": "Set the certificate-store value."
                    }
                  ]
                },
                {
                  "name": "remove",
                  "description": "Remove vault-certificates in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"vaultCertificates\" : {\r\n             \"certificateUrl\":\"\",\r\n             \"certificateStore\":\"\"\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "vmss create-or-update-parameters vault-certificates remove",
                  "usage": "[options]",
                  "filePath": "commands/arm/compute/compute._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--index <index>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--index",
                      "description": "Indexer: index."
                    },
                    {
                      "flags": "--secrets-index <secrets-index>",
                      "required": -17,
                      "optional": 0,
                      "bool": true,
                      "long": "--secrets-index",
                      "description": "Indexer: secrets-index."
                    },
                    {
                      "flags": "--certificate-url",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--certificate-url",
                      "description": "Remove the certificate-url value."
                    },
                    {
                      "flags": "--certificate-store",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--certificate-store",
                      "description": "Remove the certificate-store value."
                    }
                  ]
                },
                {
                  "name": "add",
                  "description": "Add vault-certificates in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"vaultCertificates\" : {\r\n             \"certificateUrl\":\"\",\r\n             \"certificateStore\":\"\"\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "vmss create-or-update-parameters vault-certificates add",
                  "usage": "[options]",
                  "filePath": "commands/arm/compute/compute._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--key <key>",
                      "required": -7,
                      "optional": 0,
                      "bool": true,
                      "long": "--key",
                      "description": "The JSON key."
                    },
                    {
                      "flags": "--value <value>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--value",
                      "description": "The JSON value."
                    },
                    {
                      "flags": "--parse",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--parse",
                      "description": "Parse the input value string to a JSON object."
                    },
                    {
                      "flags": "--certificate-url <certificateUrl>",
                      "required": -19,
                      "optional": 0,
                      "bool": true,
                      "long": "--certificate-url",
                      "description": "Add the certificate-url value."
                    },
                    {
                      "flags": "--certificate-store <certificateStore>",
                      "required": -21,
                      "optional": 0,
                      "bool": true,
                      "long": "--certificate-store",
                      "description": "Add the certificate-store value."
                    }
                  ]
                }
              ],
              "categories": {}
            },
            "storage-profile": {
              "name": "storage-profile",
              "description": "Commands to set/remove/add storage-profile of virtual-machine-scale-sets in create-or-update-parameters file.",
              "fullName": "vmss create-or-update-parameters storage-profile",
              "usage": "[options] [command]",
              "options": [],
              "commands": [
                {
                  "name": "set",
                  "description": "Set storage-profile in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"storageProfile\" : {\r\n             \"imageReference\":{\r\n               \"publisher\":\"\",\r\n               \"offer\":\"\",\r\n               \"sku\":\"\",\r\n               \"version\":\"\"\r\n             },\r\n             \"osDisk\":{\r\n               \"name\":\"\",\r\n               \"caching\":\"\",\r\n               \"createOption\":\"\",\r\n               \"osType\":\"\",\r\n               \"image\":{\r\n                 \"uri\":\"\"\r\n               },\r\n               \"vhdContainers\":[\r\n                 \"\"\r\n               ]\r\n             }\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "vmss create-or-update-parameters storage-profile set",
                  "usage": "[options]",
                  "filePath": "commands/arm/compute/compute._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--parse",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--parse",
                      "description": "Parse the input value string to a JSON object."
                    },
                    {
                      "flags": "--image-reference <imageReference>",
                      "required": -19,
                      "optional": 0,
                      "bool": true,
                      "long": "--image-reference",
                      "description": "Set the image-reference value."
                    },
                    {
                      "flags": "--os-disk <osDisk>",
                      "required": -11,
                      "optional": 0,
                      "bool": true,
                      "long": "--os-disk",
                      "description": "Set the os-disk value."
                    }
                  ]
                },
                {
                  "name": "remove",
                  "description": "Remove storage-profile in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"storageProfile\" : {\r\n             \"imageReference\":{\r\n               \"publisher\":\"\",\r\n               \"offer\":\"\",\r\n               \"sku\":\"\",\r\n               \"version\":\"\"\r\n             },\r\n             \"osDisk\":{\r\n               \"name\":\"\",\r\n               \"caching\":\"\",\r\n               \"createOption\":\"\",\r\n               \"osType\":\"\",\r\n               \"image\":{\r\n                 \"uri\":\"\"\r\n               },\r\n               \"vhdContainers\":[\r\n                 \"\"\r\n               ]\r\n             }\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "vmss create-or-update-parameters storage-profile remove",
                  "usage": "[options]",
                  "filePath": "commands/arm/compute/compute._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--image-reference",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--image-reference",
                      "description": "Remove the image-reference value."
                    },
                    {
                      "flags": "--os-disk",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--os-disk",
                      "description": "Remove the os-disk value."
                    }
                  ]
                },
                {
                  "name": "add",
                  "description": "Add storage-profile in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"storageProfile\" : {\r\n             \"imageReference\":{\r\n               \"publisher\":\"\",\r\n               \"offer\":\"\",\r\n               \"sku\":\"\",\r\n               \"version\":\"\"\r\n             },\r\n             \"osDisk\":{\r\n               \"name\":\"\",\r\n               \"caching\":\"\",\r\n               \"createOption\":\"\",\r\n               \"osType\":\"\",\r\n               \"image\":{\r\n                 \"uri\":\"\"\r\n               },\r\n               \"vhdContainers\":[\r\n                 \"\"\r\n               ]\r\n             }\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "vmss create-or-update-parameters storage-profile add",
                  "usage": "[options]",
                  "filePath": "commands/arm/compute/compute._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--key <key>",
                      "required": -7,
                      "optional": 0,
                      "bool": true,
                      "long": "--key",
                      "description": "The JSON key."
                    },
                    {
                      "flags": "--value <value>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--value",
                      "description": "The JSON value."
                    },
                    {
                      "flags": "--parse",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--parse",
                      "description": "Parse the input value string to a JSON object."
                    },
                    {
                      "flags": "--image-reference <imageReference>",
                      "required": -19,
                      "optional": 0,
                      "bool": true,
                      "long": "--image-reference",
                      "description": "Add the image-reference value."
                    },
                    {
                      "flags": "--os-disk <osDisk>",
                      "required": -11,
                      "optional": 0,
                      "bool": true,
                      "long": "--os-disk",
                      "description": "Add the os-disk value."
                    }
                  ]
                }
              ],
              "categories": {}
            },
            "image-reference": {
              "name": "image-reference",
              "description": "Commands to set/remove/add image-reference of virtual-machine-scale-sets in create-or-update-parameters file.",
              "fullName": "vmss create-or-update-parameters image-reference",
              "usage": "[options] [command]",
              "options": [],
              "commands": [
                {
                  "name": "set",
                  "description": "Set image-reference in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"imageReference\" : {\r\n             \"publisher\":\"\",\r\n             \"offer\":\"\",\r\n             \"sku\":\"\",\r\n             \"version\":\"\"\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "vmss create-or-update-parameters image-reference set",
                  "usage": "[options]",
                  "filePath": "commands/arm/compute/compute._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--parse",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--parse",
                      "description": "Parse the input value string to a JSON object."
                    },
                    {
                      "flags": "--publisher <publisher>",
                      "required": -13,
                      "optional": 0,
                      "bool": true,
                      "long": "--publisher",
                      "description": "Set the publisher value."
                    },
                    {
                      "flags": "--offer <offer>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--offer",
                      "description": "Set the offer value."
                    },
                    {
                      "flags": "--sku <sku>",
                      "required": -7,
                      "optional": 0,
                      "bool": true,
                      "long": "--sku",
                      "description": "Set the sku value."
                    },
                    {
                      "flags": "--version <version>",
                      "required": -11,
                      "optional": 0,
                      "bool": true,
                      "long": "--version",
                      "description": "Set the version value."
                    }
                  ]
                },
                {
                  "name": "remove",
                  "description": "Remove image-reference in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"imageReference\" : {\r\n             \"publisher\":\"\",\r\n             \"offer\":\"\",\r\n             \"sku\":\"\",\r\n             \"version\":\"\"\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "vmss create-or-update-parameters image-reference remove",
                  "usage": "[options]",
                  "filePath": "commands/arm/compute/compute._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--publisher",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--publisher",
                      "description": "Remove the publisher value."
                    },
                    {
                      "flags": "--offer",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--offer",
                      "description": "Remove the offer value."
                    },
                    {
                      "flags": "--sku",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--sku",
                      "description": "Remove the sku value."
                    },
                    {
                      "flags": "--version",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--version",
                      "description": "Remove the version value."
                    }
                  ]
                },
                {
                  "name": "add",
                  "description": "Add image-reference in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"imageReference\" : {\r\n             \"publisher\":\"\",\r\n             \"offer\":\"\",\r\n             \"sku\":\"\",\r\n             \"version\":\"\"\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "vmss create-or-update-parameters image-reference add",
                  "usage": "[options]",
                  "filePath": "commands/arm/compute/compute._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--key <key>",
                      "required": -7,
                      "optional": 0,
                      "bool": true,
                      "long": "--key",
                      "description": "The JSON key."
                    },
                    {
                      "flags": "--value <value>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--value",
                      "description": "The JSON value."
                    },
                    {
                      "flags": "--parse",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--parse",
                      "description": "Parse the input value string to a JSON object."
                    },
                    {
                      "flags": "--publisher <publisher>",
                      "required": -13,
                      "optional": 0,
                      "bool": true,
                      "long": "--publisher",
                      "description": "Add the publisher value."
                    },
                    {
                      "flags": "--offer <offer>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--offer",
                      "description": "Add the offer value."
                    },
                    {
                      "flags": "--sku <sku>",
                      "required": -7,
                      "optional": 0,
                      "bool": true,
                      "long": "--sku",
                      "description": "Add the sku value."
                    },
                    {
                      "flags": "--version <version>",
                      "required": -11,
                      "optional": 0,
                      "bool": true,
                      "long": "--version",
                      "description": "Add the version value."
                    }
                  ]
                }
              ],
              "categories": {}
            },
            "os-disk": {
              "name": "os-disk",
              "description": "Commands to set/remove/add os-disk of virtual-machine-scale-sets in create-or-update-parameters file.",
              "fullName": "vmss create-or-update-parameters os-disk",
              "usage": "[options] [command]",
              "options": [],
              "commands": [
                {
                  "name": "set",
                  "description": "Set os-disk in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"osDisk\" : {\r\n             \"name\":\"\",\r\n             \"caching\":\"\",\r\n             \"createOption\":\"\",\r\n             \"osType\":\"\",\r\n             \"image\":{\r\n               \"uri\":\"\"\r\n             },\r\n             \"vhdContainers\":[\r\n               \"\"\r\n             ]\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "vmss create-or-update-parameters os-disk set",
                  "usage": "[options]",
                  "filePath": "commands/arm/compute/compute._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--parse",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--parse",
                      "description": "Parse the input value string to a JSON object."
                    },
                    {
                      "flags": "--name <name>",
                      "required": -8,
                      "optional": 0,
                      "bool": true,
                      "long": "--name",
                      "description": "Set the name value."
                    },
                    {
                      "flags": "--caching <caching>",
                      "required": -11,
                      "optional": 0,
                      "bool": true,
                      "long": "--caching",
                      "description": "Set the caching value."
                    },
                    {
                      "flags": "--create-option <createOption>",
                      "required": -17,
                      "optional": 0,
                      "bool": true,
                      "long": "--create-option",
                      "description": "Set the create-option value."
                    },
                    {
                      "flags": "--os-type <osType>",
                      "required": -11,
                      "optional": 0,
                      "bool": true,
                      "long": "--os-type",
                      "description": "Set the os-type value."
                    },
                    {
                      "flags": "--image <image>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--image",
                      "description": "Set the image value."
                    },
                    {
                      "flags": "--vhd-containers <vhdContainers>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--vhd-containers",
                      "description": "Set the vhd-containers value."
                    }
                  ]
                },
                {
                  "name": "remove",
                  "description": "Remove os-disk in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"osDisk\" : {\r\n             \"name\":\"\",\r\n             \"caching\":\"\",\r\n             \"createOption\":\"\",\r\n             \"osType\":\"\",\r\n             \"image\":{\r\n               \"uri\":\"\"\r\n             },\r\n             \"vhdContainers\":[\r\n               \"\"\r\n             ]\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "vmss create-or-update-parameters os-disk remove",
                  "usage": "[options]",
                  "filePath": "commands/arm/compute/compute._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--name",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--name",
                      "description": "Remove the name value."
                    },
                    {
                      "flags": "--caching",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--caching",
                      "description": "Remove the caching value."
                    },
                    {
                      "flags": "--create-option",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--create-option",
                      "description": "Remove the create-option value."
                    },
                    {
                      "flags": "--os-type",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--os-type",
                      "description": "Remove the os-type value."
                    },
                    {
                      "flags": "--image",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--image",
                      "description": "Remove the image value."
                    },
                    {
                      "flags": "--vhd-containers",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--vhd-containers",
                      "description": "Remove the vhd-containers value."
                    }
                  ]
                },
                {
                  "name": "add",
                  "description": "Add os-disk in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"osDisk\" : {\r\n             \"name\":\"\",\r\n             \"caching\":\"\",\r\n             \"createOption\":\"\",\r\n             \"osType\":\"\",\r\n             \"image\":{\r\n               \"uri\":\"\"\r\n             },\r\n             \"vhdContainers\":[\r\n               \"\"\r\n             ]\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "vmss create-or-update-parameters os-disk add",
                  "usage": "[options]",
                  "filePath": "commands/arm/compute/compute._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--key <key>",
                      "required": -7,
                      "optional": 0,
                      "bool": true,
                      "long": "--key",
                      "description": "The JSON key."
                    },
                    {
                      "flags": "--value <value>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--value",
                      "description": "The JSON value."
                    },
                    {
                      "flags": "--parse",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--parse",
                      "description": "Parse the input value string to a JSON object."
                    },
                    {
                      "flags": "--name <name>",
                      "required": -8,
                      "optional": 0,
                      "bool": true,
                      "long": "--name",
                      "description": "Add the name value."
                    },
                    {
                      "flags": "--caching <caching>",
                      "required": -11,
                      "optional": 0,
                      "bool": true,
                      "long": "--caching",
                      "description": "Add the caching value."
                    },
                    {
                      "flags": "--create-option <createOption>",
                      "required": -17,
                      "optional": 0,
                      "bool": true,
                      "long": "--create-option",
                      "description": "Add the create-option value."
                    },
                    {
                      "flags": "--os-type <osType>",
                      "required": -11,
                      "optional": 0,
                      "bool": true,
                      "long": "--os-type",
                      "description": "Add the os-type value."
                    },
                    {
                      "flags": "--image <image>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--image",
                      "description": "Add the image value."
                    },
                    {
                      "flags": "--vhd-containers <vhdContainers>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--vhd-containers",
                      "description": "Add the vhd-containers value."
                    }
                  ]
                }
              ],
              "categories": {}
            },
            "image": {
              "name": "image",
              "description": "Commands to set/remove/add image of virtual-machine-scale-sets in create-or-update-parameters file.",
              "fullName": "vmss create-or-update-parameters image",
              "usage": "[options] [command]",
              "options": [],
              "commands": [
                {
                  "name": "set",
                  "description": "Set image in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"image\" : {\r\n             \"uri\":\"\"\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "vmss create-or-update-parameters image set",
                  "usage": "[options]",
                  "filePath": "commands/arm/compute/compute._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--parse",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--parse",
                      "description": "Parse the input value string to a JSON object."
                    },
                    {
                      "flags": "--uri <uri>",
                      "required": -7,
                      "optional": 0,
                      "bool": true,
                      "long": "--uri",
                      "description": "Set the uri value."
                    }
                  ]
                },
                {
                  "name": "remove",
                  "description": "Remove image in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"image\" : {\r\n             \"uri\":\"\"\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "vmss create-or-update-parameters image remove",
                  "usage": "[options]",
                  "filePath": "commands/arm/compute/compute._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--uri",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--uri",
                      "description": "Remove the uri value."
                    }
                  ]
                },
                {
                  "name": "add",
                  "description": "Add image in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"image\" : {\r\n             \"uri\":\"\"\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "vmss create-or-update-parameters image add",
                  "usage": "[options]",
                  "filePath": "commands/arm/compute/compute._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--key <key>",
                      "required": -7,
                      "optional": 0,
                      "bool": true,
                      "long": "--key",
                      "description": "The JSON key."
                    },
                    {
                      "flags": "--value <value>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--value",
                      "description": "The JSON value."
                    },
                    {
                      "flags": "--parse",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--parse",
                      "description": "Parse the input value string to a JSON object."
                    },
                    {
                      "flags": "--uri <uri>",
                      "required": -7,
                      "optional": 0,
                      "bool": true,
                      "long": "--uri",
                      "description": "Add the uri value."
                    }
                  ]
                }
              ],
              "categories": {}
            },
            "vhd-containers": {
              "name": "vhd-containers",
              "description": "Commands to set/remove/add vhd-containers of virtual-machine-scale-sets in create-or-update-parameters file.",
              "fullName": "vmss create-or-update-parameters vhd-containers",
              "usage": "[options] [command]",
              "options": [],
              "commands": [
                {
                  "name": "set",
                  "description": "Set vhd-containers in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"vhdContainers\" : \"\"\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "vmss create-or-update-parameters vhd-containers set",
                  "usage": "[options]",
                  "filePath": "commands/arm/compute/compute._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--index <index>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--index",
                      "description": "Indexer: index."
                    },
                    {
                      "flags": "--value <value>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--value",
                      "description": "The input string value for the indexed item."
                    },
                    {
                      "flags": "--parse",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--parse",
                      "description": "Parse the input value string to a JSON object."
                    }
                  ]
                },
                {
                  "name": "remove",
                  "description": "Remove vhd-containers in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"vhdContainers\" : \"\"\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "vmss create-or-update-parameters vhd-containers remove",
                  "usage": "[options]",
                  "filePath": "commands/arm/compute/compute._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--index <index>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--index",
                      "description": "Indexer: index."
                    }
                  ]
                },
                {
                  "name": "add",
                  "description": "Add vhd-containers in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"vhdContainers\" : \"\"\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "vmss create-or-update-parameters vhd-containers add",
                  "usage": "[options]",
                  "filePath": "commands/arm/compute/compute._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--key <key>",
                      "required": -7,
                      "optional": 0,
                      "bool": true,
                      "long": "--key",
                      "description": "The JSON key."
                    },
                    {
                      "flags": "--value <value>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--value",
                      "description": "The JSON value."
                    },
                    {
                      "flags": "--parse",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--parse",
                      "description": "Parse the input value string to a JSON object."
                    }
                  ]
                }
              ],
              "categories": {}
            },
            "network-profile": {
              "name": "network-profile",
              "description": "Commands to set/remove/add network-profile of virtual-machine-scale-sets in create-or-update-parameters file.",
              "fullName": "vmss create-or-update-parameters network-profile",
              "usage": "[options] [command]",
              "options": [],
              "commands": [
                {
                  "name": "set",
                  "description": "Set network-profile in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"networkProfile\" : {\r\n             \"networkInterfaceConfigurations\":[\r\n               {\r\n                 \"name\":\"\",\r\n                 \"primary\":null,\r\n                 \"ipConfigurations\":[\r\n                   {\r\n                     \"name\":\"\",\r\n                     \"subnet\":{\r\n                       \"id\":\"\"\r\n                     },\r\n                     \"loadBalancerBackendAddressPools\":[\r\n                       {\r\n                         \"id\":\"\"\r\n                       }\r\n                     ],\r\n                     \"id\":\"\"\r\n                   }\r\n                 ],\r\n                 \"id\":\"\"\r\n               }\r\n             ]\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "vmss create-or-update-parameters network-profile set",
                  "usage": "[options]",
                  "filePath": "commands/arm/compute/compute._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--parse",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--parse",
                      "description": "Parse the input value string to a JSON object."
                    },
                    {
                      "flags": "--network-interface-configurations <networkInterfaceConfigurations>",
                      "required": -36,
                      "optional": 0,
                      "bool": true,
                      "long": "--network-interface-configurations",
                      "description": "Set the network-interface-configurations value."
                    }
                  ]
                },
                {
                  "name": "remove",
                  "description": "Remove network-profile in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"networkProfile\" : {\r\n             \"networkInterfaceConfigurations\":[\r\n               {\r\n                 \"name\":\"\",\r\n                 \"primary\":null,\r\n                 \"ipConfigurations\":[\r\n                   {\r\n                     \"name\":\"\",\r\n                     \"subnet\":{\r\n                       \"id\":\"\"\r\n                     },\r\n                     \"loadBalancerBackendAddressPools\":[\r\n                       {\r\n                         \"id\":\"\"\r\n                       }\r\n                     ],\r\n                     \"id\":\"\"\r\n                   }\r\n                 ],\r\n                 \"id\":\"\"\r\n               }\r\n             ]\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "vmss create-or-update-parameters network-profile remove",
                  "usage": "[options]",
                  "filePath": "commands/arm/compute/compute._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--network-interface-configurations",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--network-interface-configurations",
                      "description": "Remove the network-interface-configurations value."
                    }
                  ]
                },
                {
                  "name": "add",
                  "description": "Add network-profile in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"networkProfile\" : {\r\n             \"networkInterfaceConfigurations\":[\r\n               {\r\n                 \"name\":\"\",\r\n                 \"primary\":null,\r\n                 \"ipConfigurations\":[\r\n                   {\r\n                     \"name\":\"\",\r\n                     \"subnet\":{\r\n                       \"id\":\"\"\r\n                     },\r\n                     \"loadBalancerBackendAddressPools\":[\r\n                       {\r\n                         \"id\":\"\"\r\n                       }\r\n                     ],\r\n                     \"id\":\"\"\r\n                   }\r\n                 ],\r\n                 \"id\":\"\"\r\n               }\r\n             ]\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "vmss create-or-update-parameters network-profile add",
                  "usage": "[options]",
                  "filePath": "commands/arm/compute/compute._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--key <key>",
                      "required": -7,
                      "optional": 0,
                      "bool": true,
                      "long": "--key",
                      "description": "The JSON key."
                    },
                    {
                      "flags": "--value <value>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--value",
                      "description": "The JSON value."
                    },
                    {
                      "flags": "--parse",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--parse",
                      "description": "Parse the input value string to a JSON object."
                    },
                    {
                      "flags": "--network-interface-configurations <networkInterfaceConfigurations>",
                      "required": -36,
                      "optional": 0,
                      "bool": true,
                      "long": "--network-interface-configurations",
                      "description": "Add the network-interface-configurations value."
                    }
                  ]
                }
              ],
              "categories": {}
            },
            "network-interface-configurations": {
              "name": "network-interface-configurations",
              "description": "Commands to set/remove/add network-interface-configurations of virtual-machine-scale-sets in create-or-update-parameters file.",
              "fullName": "vmss create-or-update-parameters network-interface-configurations",
              "usage": "[options] [command]",
              "options": [],
              "commands": [
                {
                  "name": "set",
                  "description": "Set network-interface-configurations in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"networkInterfaceConfigurations\" : {\r\n             \"name\":\"\",\r\n             \"primary\":null,\r\n             \"ipConfigurations\":[\r\n               {\r\n                 \"name\":\"\",\r\n                 \"subnet\":{\r\n                   \"id\":\"\"\r\n                 },\r\n                 \"loadBalancerBackendAddressPools\":[\r\n                   {\r\n                     \"id\":\"\"\r\n                   }\r\n                 ],\r\n                 \"id\":\"\"\r\n               }\r\n             ],\r\n             \"id\":\"\"\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "vmss create-or-update-parameters network-interface-configurations set",
                  "usage": "[options]",
                  "filePath": "commands/arm/compute/compute._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--index <index>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--index",
                      "description": "Indexer: index."
                    },
                    {
                      "flags": "--value <value>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--value",
                      "description": "The input string value for the indexed item."
                    },
                    {
                      "flags": "--parse",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--parse",
                      "description": "Parse the input value string to a JSON object."
                    },
                    {
                      "flags": "--name <name>",
                      "required": -8,
                      "optional": 0,
                      "bool": true,
                      "long": "--name",
                      "description": "Set the name value."
                    },
                    {
                      "flags": "--primary <primary>",
                      "required": -11,
                      "optional": 0,
                      "bool": true,
                      "long": "--primary",
                      "description": "Set the primary value."
                    },
                    {
                      "flags": "--ip-configurations <ipConfigurations>",
                      "required": -21,
                      "optional": 0,
                      "bool": true,
                      "long": "--ip-configurations",
                      "description": "Set the ip-configurations value."
                    },
                    {
                      "flags": "--id <id>",
                      "required": -6,
                      "optional": 0,
                      "bool": true,
                      "long": "--id",
                      "description": "Set the id value."
                    }
                  ]
                },
                {
                  "name": "remove",
                  "description": "Remove network-interface-configurations in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"networkInterfaceConfigurations\" : {\r\n             \"name\":\"\",\r\n             \"primary\":null,\r\n             \"ipConfigurations\":[\r\n               {\r\n                 \"name\":\"\",\r\n                 \"subnet\":{\r\n                   \"id\":\"\"\r\n                 },\r\n                 \"loadBalancerBackendAddressPools\":[\r\n                   {\r\n                     \"id\":\"\"\r\n                   }\r\n                 ],\r\n                 \"id\":\"\"\r\n               }\r\n             ],\r\n             \"id\":\"\"\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "vmss create-or-update-parameters network-interface-configurations remove",
                  "usage": "[options]",
                  "filePath": "commands/arm/compute/compute._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--index <index>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--index",
                      "description": "Indexer: index."
                    },
                    {
                      "flags": "--name",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--name",
                      "description": "Remove the name value."
                    },
                    {
                      "flags": "--primary",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--primary",
                      "description": "Remove the primary value."
                    },
                    {
                      "flags": "--ip-configurations",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--ip-configurations",
                      "description": "Remove the ip-configurations value."
                    },
                    {
                      "flags": "--id",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--id",
                      "description": "Remove the id value."
                    }
                  ]
                },
                {
                  "name": "add",
                  "description": "Add network-interface-configurations in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"networkInterfaceConfigurations\" : {\r\n             \"name\":\"\",\r\n             \"primary\":null,\r\n             \"ipConfigurations\":[\r\n               {\r\n                 \"name\":\"\",\r\n                 \"subnet\":{\r\n                   \"id\":\"\"\r\n                 },\r\n                 \"loadBalancerBackendAddressPools\":[\r\n                   {\r\n                     \"id\":\"\"\r\n                   }\r\n                 ],\r\n                 \"id\":\"\"\r\n               }\r\n             ],\r\n             \"id\":\"\"\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "vmss create-or-update-parameters network-interface-configurations add",
                  "usage": "[options]",
                  "filePath": "commands/arm/compute/compute._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--key <key>",
                      "required": -7,
                      "optional": 0,
                      "bool": true,
                      "long": "--key",
                      "description": "The JSON key."
                    },
                    {
                      "flags": "--value <value>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--value",
                      "description": "The JSON value."
                    },
                    {
                      "flags": "--parse",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--parse",
                      "description": "Parse the input value string to a JSON object."
                    },
                    {
                      "flags": "--name <name>",
                      "required": -8,
                      "optional": 0,
                      "bool": true,
                      "long": "--name",
                      "description": "Add the name value."
                    },
                    {
                      "flags": "--primary <primary>",
                      "required": -11,
                      "optional": 0,
                      "bool": true,
                      "long": "--primary",
                      "description": "Add the primary value."
                    },
                    {
                      "flags": "--ip-configurations <ipConfigurations>",
                      "required": -21,
                      "optional": 0,
                      "bool": true,
                      "long": "--ip-configurations",
                      "description": "Add the ip-configurations value."
                    },
                    {
                      "flags": "--id <id>",
                      "required": -6,
                      "optional": 0,
                      "bool": true,
                      "long": "--id",
                      "description": "Add the id value."
                    }
                  ]
                }
              ],
              "categories": {}
            },
            "ip-configurations": {
              "name": "ip-configurations",
              "description": "Commands to set/remove/add ip-configurations of virtual-machine-scale-sets in create-or-update-parameters file.",
              "fullName": "vmss create-or-update-parameters ip-configurations",
              "usage": "[options] [command]",
              "options": [],
              "commands": [
                {
                  "name": "set",
                  "description": "Set ip-configurations in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"ipConfigurations\" : {\r\n             \"name\":\"\",\r\n             \"subnet\":{\r\n               \"id\":\"\"\r\n             },\r\n             \"loadBalancerBackendAddressPools\":[\r\n               {\r\n                 \"id\":\"\"\r\n               }\r\n             ],\r\n             \"id\":\"\"\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "vmss create-or-update-parameters ip-configurations set",
                  "usage": "[options]",
                  "filePath": "commands/arm/compute/compute._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--index <index>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--index",
                      "description": "Indexer: index."
                    },
                    {
                      "flags": "--network-interface-configurations-index <network-interface-configurations-index>",
                      "required": -42,
                      "optional": 0,
                      "bool": true,
                      "long": "--network-interface-configurations-index",
                      "description": "Indexer: network-interface-configurations-index."
                    },
                    {
                      "flags": "--value <value>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--value",
                      "description": "The input string value for the indexed item."
                    },
                    {
                      "flags": "--parse",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--parse",
                      "description": "Parse the input value string to a JSON object."
                    },
                    {
                      "flags": "--name <name>",
                      "required": -8,
                      "optional": 0,
                      "bool": true,
                      "long": "--name",
                      "description": "Set the name value."
                    },
                    {
                      "flags": "--subnet <subnet>",
                      "required": -10,
                      "optional": 0,
                      "bool": true,
                      "long": "--subnet",
                      "description": "Set the subnet value."
                    },
                    {
                      "flags": "--load-balancer-backend-address-pools <loadBalancerBackendAddressPools>",
                      "required": -39,
                      "optional": 0,
                      "bool": true,
                      "long": "--load-balancer-backend-address-pools",
                      "description": "Set the load-balancer-backend-address-pools value."
                    },
                    {
                      "flags": "--id <id>",
                      "required": -6,
                      "optional": 0,
                      "bool": true,
                      "long": "--id",
                      "description": "Set the id value."
                    }
                  ]
                },
                {
                  "name": "remove",
                  "description": "Remove ip-configurations in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"ipConfigurations\" : {\r\n             \"name\":\"\",\r\n             \"subnet\":{\r\n               \"id\":\"\"\r\n             },\r\n             \"loadBalancerBackendAddressPools\":[\r\n               {\r\n                 \"id\":\"\"\r\n               }\r\n             ],\r\n             \"id\":\"\"\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "vmss create-or-update-parameters ip-configurations remove",
                  "usage": "[options]",
                  "filePath": "commands/arm/compute/compute._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--index <index>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--index",
                      "description": "Indexer: index."
                    },
                    {
                      "flags": "--network-interface-configurations-index <network-interface-configurations-index>",
                      "required": -42,
                      "optional": 0,
                      "bool": true,
                      "long": "--network-interface-configurations-index",
                      "description": "Indexer: network-interface-configurations-index."
                    },
                    {
                      "flags": "--name",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--name",
                      "description": "Remove the name value."
                    },
                    {
                      "flags": "--subnet",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--subnet",
                      "description": "Remove the subnet value."
                    },
                    {
                      "flags": "--load-balancer-backend-address-pools",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--load-balancer-backend-address-pools",
                      "description": "Remove the load-balancer-backend-address-pools value."
                    },
                    {
                      "flags": "--id",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--id",
                      "description": "Remove the id value."
                    }
                  ]
                },
                {
                  "name": "add",
                  "description": "Add ip-configurations in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"ipConfigurations\" : {\r\n             \"name\":\"\",\r\n             \"subnet\":{\r\n               \"id\":\"\"\r\n             },\r\n             \"loadBalancerBackendAddressPools\":[\r\n               {\r\n                 \"id\":\"\"\r\n               }\r\n             ],\r\n             \"id\":\"\"\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "vmss create-or-update-parameters ip-configurations add",
                  "usage": "[options]",
                  "filePath": "commands/arm/compute/compute._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--key <key>",
                      "required": -7,
                      "optional": 0,
                      "bool": true,
                      "long": "--key",
                      "description": "The JSON key."
                    },
                    {
                      "flags": "--value <value>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--value",
                      "description": "The JSON value."
                    },
                    {
                      "flags": "--parse",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--parse",
                      "description": "Parse the input value string to a JSON object."
                    },
                    {
                      "flags": "--name <name>",
                      "required": -8,
                      "optional": 0,
                      "bool": true,
                      "long": "--name",
                      "description": "Add the name value."
                    },
                    {
                      "flags": "--subnet <subnet>",
                      "required": -10,
                      "optional": 0,
                      "bool": true,
                      "long": "--subnet",
                      "description": "Add the subnet value."
                    },
                    {
                      "flags": "--load-balancer-backend-address-pools <loadBalancerBackendAddressPools>",
                      "required": -39,
                      "optional": 0,
                      "bool": true,
                      "long": "--load-balancer-backend-address-pools",
                      "description": "Add the load-balancer-backend-address-pools value."
                    },
                    {
                      "flags": "--id <id>",
                      "required": -6,
                      "optional": 0,
                      "bool": true,
                      "long": "--id",
                      "description": "Add the id value."
                    }
                  ]
                }
              ],
              "categories": {}
            },
            "subnet": {
              "name": "subnet",
              "description": "Commands to set/remove/add subnet of virtual-machine-scale-sets in create-or-update-parameters file.",
              "fullName": "vmss create-or-update-parameters subnet",
              "usage": "[options] [command]",
              "options": [],
              "commands": [
                {
                  "name": "set",
                  "description": "Set subnet in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"subnet\" : {\r\n             \"id\":\"\"\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "vmss create-or-update-parameters subnet set",
                  "usage": "[options]",
                  "filePath": "commands/arm/compute/compute._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--ip-configurations-index <ip-configurations-index>",
                      "required": -27,
                      "optional": 0,
                      "bool": true,
                      "long": "--ip-configurations-index",
                      "description": "Indexer: ip-configurations-index."
                    },
                    {
                      "flags": "--network-interface-configurations-index <network-interface-configurations-index>",
                      "required": -42,
                      "optional": 0,
                      "bool": true,
                      "long": "--network-interface-configurations-index",
                      "description": "Indexer: network-interface-configurations-index."
                    },
                    {
                      "flags": "--parse",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--parse",
                      "description": "Parse the input value string to a JSON object."
                    },
                    {
                      "flags": "--id <id>",
                      "required": -6,
                      "optional": 0,
                      "bool": true,
                      "long": "--id",
                      "description": "Set the id value."
                    }
                  ]
                },
                {
                  "name": "remove",
                  "description": "Remove subnet in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"subnet\" : {\r\n             \"id\":\"\"\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "vmss create-or-update-parameters subnet remove",
                  "usage": "[options]",
                  "filePath": "commands/arm/compute/compute._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--ip-configurations-index <ip-configurations-index>",
                      "required": -27,
                      "optional": 0,
                      "bool": true,
                      "long": "--ip-configurations-index",
                      "description": "Indexer: ip-configurations-index."
                    },
                    {
                      "flags": "--network-interface-configurations-index <network-interface-configurations-index>",
                      "required": -42,
                      "optional": 0,
                      "bool": true,
                      "long": "--network-interface-configurations-index",
                      "description": "Indexer: network-interface-configurations-index."
                    },
                    {
                      "flags": "--id",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--id",
                      "description": "Remove the id value."
                    }
                  ]
                },
                {
                  "name": "add",
                  "description": "Add subnet in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"subnet\" : {\r\n             \"id\":\"\"\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "vmss create-or-update-parameters subnet add",
                  "usage": "[options]",
                  "filePath": "commands/arm/compute/compute._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--key <key>",
                      "required": -7,
                      "optional": 0,
                      "bool": true,
                      "long": "--key",
                      "description": "The JSON key."
                    },
                    {
                      "flags": "--value <value>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--value",
                      "description": "The JSON value."
                    },
                    {
                      "flags": "--parse",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--parse",
                      "description": "Parse the input value string to a JSON object."
                    },
                    {
                      "flags": "--id <id>",
                      "required": -6,
                      "optional": 0,
                      "bool": true,
                      "long": "--id",
                      "description": "Add the id value."
                    }
                  ]
                }
              ],
              "categories": {}
            },
            "load-balancer-backend-address-pools": {
              "name": "load-balancer-backend-address-pools",
              "description": "Commands to set/remove/add load-balancer-backend-address-pools of virtual-machine-scale-sets in create-or-update-parameters file.",
              "fullName": "vmss create-or-update-parameters load-balancer-backend-address-pools",
              "usage": "[options] [command]",
              "options": [],
              "commands": [
                {
                  "name": "set",
                  "description": "Set load-balancer-backend-address-pools in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"loadBalancerBackendAddressPools\" : {\r\n             \"id\":\"\"\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "vmss create-or-update-parameters load-balancer-backend-address-pools set",
                  "usage": "[options]",
                  "filePath": "commands/arm/compute/compute._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--index <index>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--index",
                      "description": "Indexer: index."
                    },
                    {
                      "flags": "--ip-configurations-index <ip-configurations-index>",
                      "required": -27,
                      "optional": 0,
                      "bool": true,
                      "long": "--ip-configurations-index",
                      "description": "Indexer: ip-configurations-index."
                    },
                    {
                      "flags": "--network-interface-configurations-index <network-interface-configurations-index>",
                      "required": -42,
                      "optional": 0,
                      "bool": true,
                      "long": "--network-interface-configurations-index",
                      "description": "Indexer: network-interface-configurations-index."
                    },
                    {
                      "flags": "--value <value>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--value",
                      "description": "The input string value for the indexed item."
                    },
                    {
                      "flags": "--parse",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--parse",
                      "description": "Parse the input value string to a JSON object."
                    },
                    {
                      "flags": "--id <id>",
                      "required": -6,
                      "optional": 0,
                      "bool": true,
                      "long": "--id",
                      "description": "Set the id value."
                    }
                  ]
                },
                {
                  "name": "remove",
                  "description": "Remove load-balancer-backend-address-pools in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"loadBalancerBackendAddressPools\" : {\r\n             \"id\":\"\"\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "vmss create-or-update-parameters load-balancer-backend-address-pools remove",
                  "usage": "[options]",
                  "filePath": "commands/arm/compute/compute._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--index <index>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--index",
                      "description": "Indexer: index."
                    },
                    {
                      "flags": "--ip-configurations-index <ip-configurations-index>",
                      "required": -27,
                      "optional": 0,
                      "bool": true,
                      "long": "--ip-configurations-index",
                      "description": "Indexer: ip-configurations-index."
                    },
                    {
                      "flags": "--network-interface-configurations-index <network-interface-configurations-index>",
                      "required": -42,
                      "optional": 0,
                      "bool": true,
                      "long": "--network-interface-configurations-index",
                      "description": "Indexer: network-interface-configurations-index."
                    },
                    {
                      "flags": "--id",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--id",
                      "description": "Remove the id value."
                    }
                  ]
                },
                {
                  "name": "add",
                  "description": "Add load-balancer-backend-address-pools in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"loadBalancerBackendAddressPools\" : {\r\n             \"id\":\"\"\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "vmss create-or-update-parameters load-balancer-backend-address-pools add",
                  "usage": "[options]",
                  "filePath": "commands/arm/compute/compute._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--key <key>",
                      "required": -7,
                      "optional": 0,
                      "bool": true,
                      "long": "--key",
                      "description": "The JSON key."
                    },
                    {
                      "flags": "--value <value>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--value",
                      "description": "The JSON value."
                    },
                    {
                      "flags": "--parse",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--parse",
                      "description": "Parse the input value string to a JSON object."
                    },
                    {
                      "flags": "--id <id>",
                      "required": -6,
                      "optional": 0,
                      "bool": true,
                      "long": "--id",
                      "description": "Add the id value."
                    }
                  ]
                }
              ],
              "categories": {}
            },
            "extension-profile": {
              "name": "extension-profile",
              "description": "Commands to set/remove/add extension-profile of virtual-machine-scale-sets in create-or-update-parameters file.",
              "fullName": "vmss create-or-update-parameters extension-profile",
              "usage": "[options] [command]",
              "options": [],
              "commands": [
                {
                  "name": "set",
                  "description": "Set extension-profile in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"extensionProfile\" : {\r\n             \"extensions\":[\r\n               {\r\n                 \"name\":\"\",\r\n                 \"publisher\":\"\",\r\n                 \"virtualMachineScaleSetExtensionType\":\"\",\r\n                 \"typeHandlerVersion\":\"\",\r\n                 \"autoUpgradeMinorVersion\":null,\r\n                 \"settings\":{\r\n                 },\r\n                 \"protectedSettings\":{\r\n                 },\r\n                 \"provisioningState\":\"\",\r\n                 \"id\":\"\"\r\n               }\r\n             ]\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "vmss create-or-update-parameters extension-profile set",
                  "usage": "[options]",
                  "filePath": "commands/arm/compute/compute._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--parse",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--parse",
                      "description": "Parse the input value string to a JSON object."
                    },
                    {
                      "flags": "--extensions <extensions>",
                      "required": -14,
                      "optional": 0,
                      "bool": true,
                      "long": "--extensions",
                      "description": "Set the extensions value."
                    }
                  ]
                },
                {
                  "name": "remove",
                  "description": "Remove extension-profile in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"extensionProfile\" : {\r\n             \"extensions\":[\r\n               {\r\n                 \"name\":\"\",\r\n                 \"publisher\":\"\",\r\n                 \"virtualMachineScaleSetExtensionType\":\"\",\r\n                 \"typeHandlerVersion\":\"\",\r\n                 \"autoUpgradeMinorVersion\":null,\r\n                 \"settings\":{\r\n                 },\r\n                 \"protectedSettings\":{\r\n                 },\r\n                 \"provisioningState\":\"\",\r\n                 \"id\":\"\"\r\n               }\r\n             ]\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "vmss create-or-update-parameters extension-profile remove",
                  "usage": "[options]",
                  "filePath": "commands/arm/compute/compute._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--extensions",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--extensions",
                      "description": "Remove the extensions value."
                    }
                  ]
                },
                {
                  "name": "add",
                  "description": "Add extension-profile in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"extensionProfile\" : {\r\n             \"extensions\":[\r\n               {\r\n                 \"name\":\"\",\r\n                 \"publisher\":\"\",\r\n                 \"virtualMachineScaleSetExtensionType\":\"\",\r\n                 \"typeHandlerVersion\":\"\",\r\n                 \"autoUpgradeMinorVersion\":null,\r\n                 \"settings\":{\r\n                 },\r\n                 \"protectedSettings\":{\r\n                 },\r\n                 \"provisioningState\":\"\",\r\n                 \"id\":\"\"\r\n               }\r\n             ]\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "vmss create-or-update-parameters extension-profile add",
                  "usage": "[options]",
                  "filePath": "commands/arm/compute/compute._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--key <key>",
                      "required": -7,
                      "optional": 0,
                      "bool": true,
                      "long": "--key",
                      "description": "The JSON key."
                    },
                    {
                      "flags": "--value <value>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--value",
                      "description": "The JSON value."
                    },
                    {
                      "flags": "--parse",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--parse",
                      "description": "Parse the input value string to a JSON object."
                    },
                    {
                      "flags": "--extensions <extensions>",
                      "required": -14,
                      "optional": 0,
                      "bool": true,
                      "long": "--extensions",
                      "description": "Add the extensions value."
                    }
                  ]
                }
              ],
              "categories": {}
            },
            "extensions": {
              "name": "extensions",
              "description": "Commands to set/remove/add extensions of virtual-machine-scale-sets in create-or-update-parameters file.",
              "fullName": "vmss create-or-update-parameters extensions",
              "usage": "[options] [command]",
              "options": [],
              "commands": [
                {
                  "name": "set",
                  "description": "Set extensions in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"extensions\" : {\r\n             \"name\":\"\",\r\n             \"publisher\":\"\",\r\n             \"virtualMachineScaleSetExtensionType\":\"\",\r\n             \"typeHandlerVersion\":\"\",\r\n             \"autoUpgradeMinorVersion\":null,\r\n             \"settings\":{\r\n             },\r\n             \"protectedSettings\":{\r\n             },\r\n             \"provisioningState\":\"\",\r\n             \"id\":\"\"\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "vmss create-or-update-parameters extensions set",
                  "usage": "[options]",
                  "filePath": "commands/arm/compute/compute._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--index <index>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--index",
                      "description": "Indexer: index."
                    },
                    {
                      "flags": "--value <value>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--value",
                      "description": "The input string value for the indexed item."
                    },
                    {
                      "flags": "--parse",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--parse",
                      "description": "Parse the input value string to a JSON object."
                    },
                    {
                      "flags": "--name <name>",
                      "required": -8,
                      "optional": 0,
                      "bool": true,
                      "long": "--name",
                      "description": "Set the name value."
                    },
                    {
                      "flags": "--publisher <publisher>",
                      "required": -13,
                      "optional": 0,
                      "bool": true,
                      "long": "--publisher",
                      "description": "Set the publisher value."
                    },
                    {
                      "flags": "--virtual-machine-scale-set-extension-type <virtualMachineScaleSetExtensionType>",
                      "required": -44,
                      "optional": 0,
                      "bool": true,
                      "long": "--virtual-machine-scale-set-extension-type",
                      "description": "Set the virtual-machine-scale-set-extension-type value."
                    },
                    {
                      "flags": "--type-handler-version <typeHandlerVersion>",
                      "required": -24,
                      "optional": 0,
                      "bool": true,
                      "long": "--type-handler-version",
                      "description": "Set the type-handler-version value."
                    },
                    {
                      "flags": "--auto-upgrade-minor-version <autoUpgradeMinorVersion>",
                      "required": -30,
                      "optional": 0,
                      "bool": true,
                      "long": "--auto-upgrade-minor-version",
                      "description": "Set the auto-upgrade-minor-version value."
                    },
                    {
                      "flags": "--settings <settings>",
                      "required": -12,
                      "optional": 0,
                      "bool": true,
                      "long": "--settings",
                      "description": "Set the settings value."
                    },
                    {
                      "flags": "--protected-settings <protectedSettings>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "long": "--protected-settings",
                      "description": "Set the protected-settings value."
                    },
                    {
                      "flags": "--provisioning-state <provisioningState>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "long": "--provisioning-state",
                      "description": "Set the provisioning-state value."
                    },
                    {
                      "flags": "--id <id>",
                      "required": -6,
                      "optional": 0,
                      "bool": true,
                      "long": "--id",
                      "description": "Set the id value."
                    }
                  ]
                },
                {
                  "name": "remove",
                  "description": "Remove extensions in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"extensions\" : {\r\n             \"name\":\"\",\r\n             \"publisher\":\"\",\r\n             \"virtualMachineScaleSetExtensionType\":\"\",\r\n             \"typeHandlerVersion\":\"\",\r\n             \"autoUpgradeMinorVersion\":null,\r\n             \"settings\":{\r\n             },\r\n             \"protectedSettings\":{\r\n             },\r\n             \"provisioningState\":\"\",\r\n             \"id\":\"\"\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "vmss create-or-update-parameters extensions remove",
                  "usage": "[options]",
                  "filePath": "commands/arm/compute/compute._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--index <index>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--index",
                      "description": "Indexer: index."
                    },
                    {
                      "flags": "--name",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--name",
                      "description": "Remove the name value."
                    },
                    {
                      "flags": "--publisher",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--publisher",
                      "description": "Remove the publisher value."
                    },
                    {
                      "flags": "--virtual-machine-scale-set-extension-type",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--virtual-machine-scale-set-extension-type",
                      "description": "Remove the virtual-machine-scale-set-extension-type value."
                    },
                    {
                      "flags": "--type-handler-version",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--type-handler-version",
                      "description": "Remove the type-handler-version value."
                    },
                    {
                      "flags": "--auto-upgrade-minor-version",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--auto-upgrade-minor-version",
                      "description": "Remove the auto-upgrade-minor-version value."
                    },
                    {
                      "flags": "--settings",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--settings",
                      "description": "Remove the settings value."
                    },
                    {
                      "flags": "--protected-settings",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--protected-settings",
                      "description": "Remove the protected-settings value."
                    },
                    {
                      "flags": "--provisioning-state",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--provisioning-state",
                      "description": "Remove the provisioning-state value."
                    },
                    {
                      "flags": "--id",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--id",
                      "description": "Remove the id value."
                    }
                  ]
                },
                {
                  "name": "add",
                  "description": "Add extensions in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"extensions\" : {\r\n             \"name\":\"\",\r\n             \"publisher\":\"\",\r\n             \"virtualMachineScaleSetExtensionType\":\"\",\r\n             \"typeHandlerVersion\":\"\",\r\n             \"autoUpgradeMinorVersion\":null,\r\n             \"settings\":{\r\n             },\r\n             \"protectedSettings\":{\r\n             },\r\n             \"provisioningState\":\"\",\r\n             \"id\":\"\"\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "vmss create-or-update-parameters extensions add",
                  "usage": "[options]",
                  "filePath": "commands/arm/compute/compute._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--key <key>",
                      "required": -7,
                      "optional": 0,
                      "bool": true,
                      "long": "--key",
                      "description": "The JSON key."
                    },
                    {
                      "flags": "--value <value>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--value",
                      "description": "The JSON value."
                    },
                    {
                      "flags": "--parse",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--parse",
                      "description": "Parse the input value string to a JSON object."
                    },
                    {
                      "flags": "--name <name>",
                      "required": -8,
                      "optional": 0,
                      "bool": true,
                      "long": "--name",
                      "description": "Add the name value."
                    },
                    {
                      "flags": "--publisher <publisher>",
                      "required": -13,
                      "optional": 0,
                      "bool": true,
                      "long": "--publisher",
                      "description": "Add the publisher value."
                    },
                    {
                      "flags": "--virtual-machine-scale-set-extension-type <virtualMachineScaleSetExtensionType>",
                      "required": -44,
                      "optional": 0,
                      "bool": true,
                      "long": "--virtual-machine-scale-set-extension-type",
                      "description": "Add the virtual-machine-scale-set-extension-type value."
                    },
                    {
                      "flags": "--type-handler-version <typeHandlerVersion>",
                      "required": -24,
                      "optional": 0,
                      "bool": true,
                      "long": "--type-handler-version",
                      "description": "Add the type-handler-version value."
                    },
                    {
                      "flags": "--auto-upgrade-minor-version <autoUpgradeMinorVersion>",
                      "required": -30,
                      "optional": 0,
                      "bool": true,
                      "long": "--auto-upgrade-minor-version",
                      "description": "Add the auto-upgrade-minor-version value."
                    },
                    {
                      "flags": "--settings <settings>",
                      "required": -12,
                      "optional": 0,
                      "bool": true,
                      "long": "--settings",
                      "description": "Add the settings value."
                    },
                    {
                      "flags": "--protected-settings <protectedSettings>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "long": "--protected-settings",
                      "description": "Add the protected-settings value."
                    },
                    {
                      "flags": "--provisioning-state <provisioningState>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "long": "--provisioning-state",
                      "description": "Add the provisioning-state value."
                    },
                    {
                      "flags": "--id <id>",
                      "required": -6,
                      "optional": 0,
                      "bool": true,
                      "long": "--id",
                      "description": "Add the id value."
                    }
                  ]
                }
              ],
              "categories": {}
            }
          }
        }
      }
    },
    "vmssvm": {
      "name": "vmssvm",
      "description": "Commands to manage your virtual machine scale set vm.  ",
      "fullName": "vmssvm",
      "usage": "[options] [command]",
      "options": [],
      "commands": [
        {
          "name": "deallocate",
          "description": "Commands to manage your virtual machine scale set vm by the deallocate method.",
          "fullName": "vmssvm deallocate",
          "usage": "[options] <resource-group-name> <vm-scale-set-name> <instance-id>",
          "filePath": "commands/arm/compute/compute._js",
          "options": [
            {
              "flags": "-v, --verbose",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-v",
              "long": "--verbose",
              "description": "use verbose output"
            },
            {
              "flags": "-vv",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "-vv",
              "description": "more verbose with debug output"
            },
            {
              "flags": "--json",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--json",
              "description": "use json output"
            },
            {
              "flags": "-g, --resource-group-name <resource-group-name>",
              "required": -27,
              "optional": 0,
              "bool": true,
              "short": "-g",
              "long": "--resource-group-name",
              "description": "resource-group-name"
            },
            {
              "flags": "-n, --vm-scale-set-name <vm-scale-set-name>",
              "required": -25,
              "optional": 0,
              "bool": true,
              "short": "-n",
              "long": "--vm-scale-set-name",
              "description": "vm-scale-set-name"
            },
            {
              "flags": "-d, --instance-id <instance-id>",
              "required": -19,
              "optional": 0,
              "bool": true,
              "short": "-d",
              "long": "--instance-id",
              "description": "instance-id"
            },
            {
              "flags": "--parameter-file <parameter-file>",
              "required": -18,
              "optional": 0,
              "bool": true,
              "long": "--parameter-file",
              "description": "the input parameter file"
            },
            {
              "flags": "-s, --subscription <subscription>",
              "required": -20,
              "optional": 0,
              "bool": true,
              "short": "-s",
              "long": "--subscription",
              "description": "the subscription identifier"
            }
          ]
        },
        {
          "name": "delete",
          "description": "Commands to manage your virtual machine scale set vm by the delete method.",
          "fullName": "vmssvm delete",
          "usage": "[options] <resource-group-name> <vm-scale-set-name> <instance-id>",
          "filePath": "commands/arm/compute/compute._js",
          "options": [
            {
              "flags": "-v, --verbose",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-v",
              "long": "--verbose",
              "description": "use verbose output"
            },
            {
              "flags": "-vv",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "-vv",
              "description": "more verbose with debug output"
            },
            {
              "flags": "--json",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--json",
              "description": "use json output"
            },
            {
              "flags": "-g, --resource-group-name <resource-group-name>",
              "required": -27,
              "optional": 0,
              "bool": true,
              "short": "-g",
              "long": "--resource-group-name",
              "description": "resource-group-name"
            },
            {
              "flags": "-n, --vm-scale-set-name <vm-scale-set-name>",
              "required": -25,
              "optional": 0,
              "bool": true,
              "short": "-n",
              "long": "--vm-scale-set-name",
              "description": "vm-scale-set-name"
            },
            {
              "flags": "-d, --instance-id <instance-id>",
              "required": -19,
              "optional": 0,
              "bool": true,
              "short": "-d",
              "long": "--instance-id",
              "description": "instance-id"
            },
            {
              "flags": "--parameter-file <parameter-file>",
              "required": -18,
              "optional": 0,
              "bool": true,
              "long": "--parameter-file",
              "description": "the input parameter file"
            },
            {
              "flags": "-s, --subscription <subscription>",
              "required": -20,
              "optional": 0,
              "bool": true,
              "short": "-s",
              "long": "--subscription",
              "description": "the subscription identifier"
            }
          ]
        },
        {
          "name": "get",
          "description": "Commands to manage your virtual machine scale set vm by the get method.",
          "fullName": "vmssvm get",
          "usage": "[options] <resource-group-name> <vm-scale-set-name> <instance-id>",
          "filePath": "commands/arm/compute/compute._js",
          "options": [
            {
              "flags": "-v, --verbose",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-v",
              "long": "--verbose",
              "description": "use verbose output"
            },
            {
              "flags": "-vv",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "-vv",
              "description": "more verbose with debug output"
            },
            {
              "flags": "--json",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--json",
              "description": "use json output"
            },
            {
              "flags": "-g, --resource-group-name <resource-group-name>",
              "required": -27,
              "optional": 0,
              "bool": true,
              "short": "-g",
              "long": "--resource-group-name",
              "description": "resource-group-name"
            },
            {
              "flags": "-n, --vm-scale-set-name <vm-scale-set-name>",
              "required": -25,
              "optional": 0,
              "bool": true,
              "short": "-n",
              "long": "--vm-scale-set-name",
              "description": "vm-scale-set-name"
            },
            {
              "flags": "-d, --instance-id <instance-id>",
              "required": -19,
              "optional": 0,
              "bool": true,
              "short": "-d",
              "long": "--instance-id",
              "description": "instance-id"
            },
            {
              "flags": "--parameter-file <parameter-file>",
              "required": -18,
              "optional": 0,
              "bool": true,
              "long": "--parameter-file",
              "description": "the input parameter file"
            },
            {
              "flags": "-s, --subscription <subscription>",
              "required": -20,
              "optional": 0,
              "bool": true,
              "short": "-s",
              "long": "--subscription",
              "description": "the subscription identifier"
            }
          ]
        },
        {
          "name": "get-instance-view",
          "description": "Commands to manage your virtual machine scale set vm by the get-instance-view method.",
          "fullName": "vmssvm get-instance-view",
          "usage": "[options] <resource-group-name> <vm-scale-set-name> <instance-id>",
          "filePath": "commands/arm/compute/compute._js",
          "options": [
            {
              "flags": "-v, --verbose",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-v",
              "long": "--verbose",
              "description": "use verbose output"
            },
            {
              "flags": "-vv",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "-vv",
              "description": "more verbose with debug output"
            },
            {
              "flags": "--json",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--json",
              "description": "use json output"
            },
            {
              "flags": "-g, --resource-group-name <resource-group-name>",
              "required": -27,
              "optional": 0,
              "bool": true,
              "short": "-g",
              "long": "--resource-group-name",
              "description": "resource-group-name"
            },
            {
              "flags": "-n, --vm-scale-set-name <vm-scale-set-name>",
              "required": -25,
              "optional": 0,
              "bool": true,
              "short": "-n",
              "long": "--vm-scale-set-name",
              "description": "vm-scale-set-name"
            },
            {
              "flags": "-d, --instance-id <instance-id>",
              "required": -19,
              "optional": 0,
              "bool": true,
              "short": "-d",
              "long": "--instance-id",
              "description": "instance-id"
            },
            {
              "flags": "--parameter-file <parameter-file>",
              "required": -18,
              "optional": 0,
              "bool": true,
              "long": "--parameter-file",
              "description": "the input parameter file"
            },
            {
              "flags": "-s, --subscription <subscription>",
              "required": -20,
              "optional": 0,
              "bool": true,
              "short": "-s",
              "long": "--subscription",
              "description": "the subscription identifier"
            }
          ]
        },
        {
          "name": "list",
          "description": "Commands to manage your virtual machine scale set vm by the list method.",
          "fullName": "vmssvm list",
          "usage": "[options] <resource-group-name> <virtual-machine-scale-set-name> <odata-query> <select>",
          "filePath": "commands/arm/compute/compute._js",
          "options": [
            {
              "flags": "-v, --verbose",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-v",
              "long": "--verbose",
              "description": "use verbose output"
            },
            {
              "flags": "-vv",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "-vv",
              "description": "more verbose with debug output"
            },
            {
              "flags": "--json",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--json",
              "description": "use json output"
            },
            {
              "flags": "-g, --resource-group-name <resource-group-name>",
              "required": -27,
              "optional": 0,
              "bool": true,
              "short": "-g",
              "long": "--resource-group-name",
              "description": "resource-group-name"
            },
            {
              "flags": "-n, --virtual-machine-scale-set-name <virtual-machine-scale-set-name>",
              "required": -38,
              "optional": 0,
              "bool": true,
              "short": "-n",
              "long": "--virtual-machine-scale-set-name",
              "description": "virtual-machine-scale-set-name"
            },
            {
              "flags": "--odata-query <odata-query>",
              "required": -15,
              "optional": 0,
              "bool": true,
              "long": "--odata-query",
              "description": "odata-query"
            },
            {
              "flags": "--select <select>",
              "required": -10,
              "optional": 0,
              "bool": true,
              "long": "--select",
              "description": "select"
            },
            {
              "flags": "--parameter-file <parameter-file>",
              "required": -18,
              "optional": 0,
              "bool": true,
              "long": "--parameter-file",
              "description": "the input parameter file"
            },
            {
              "flags": "-s, --subscription <subscription>",
              "required": -20,
              "optional": 0,
              "bool": true,
              "short": "-s",
              "long": "--subscription",
              "description": "the subscription identifier"
            }
          ]
        },
        {
          "name": "list-next",
          "description": "Commands to manage your virtual machine scale set vm by the list-next method.",
          "fullName": "vmssvm list-next",
          "usage": "[options] <next-page-link>",
          "filePath": "commands/arm/compute/compute._js",
          "options": [
            {
              "flags": "-v, --verbose",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-v",
              "long": "--verbose",
              "description": "use verbose output"
            },
            {
              "flags": "-vv",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "-vv",
              "description": "more verbose with debug output"
            },
            {
              "flags": "--json",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--json",
              "description": "use json output"
            },
            {
              "flags": "--next-page-link <next-page-link>",
              "required": -18,
              "optional": 0,
              "bool": true,
              "long": "--next-page-link",
              "description": "next-page-link"
            },
            {
              "flags": "--parameter-file <parameter-file>",
              "required": -18,
              "optional": 0,
              "bool": true,
              "long": "--parameter-file",
              "description": "the input parameter file"
            },
            {
              "flags": "-s, --subscription <subscription>",
              "required": -20,
              "optional": 0,
              "bool": true,
              "short": "-s",
              "long": "--subscription",
              "description": "the subscription identifier"
            }
          ]
        },
        {
          "name": "power-off",
          "description": "Commands to manage your virtual machine scale set vm by the power-off method.",
          "fullName": "vmssvm power-off",
          "usage": "[options] <resource-group-name> <vm-scale-set-name> <instance-id>",
          "filePath": "commands/arm/compute/compute._js",
          "options": [
            {
              "flags": "-v, --verbose",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-v",
              "long": "--verbose",
              "description": "use verbose output"
            },
            {
              "flags": "-vv",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "-vv",
              "description": "more verbose with debug output"
            },
            {
              "flags": "--json",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--json",
              "description": "use json output"
            },
            {
              "flags": "-g, --resource-group-name <resource-group-name>",
              "required": -27,
              "optional": 0,
              "bool": true,
              "short": "-g",
              "long": "--resource-group-name",
              "description": "resource-group-name"
            },
            {
              "flags": "-n, --vm-scale-set-name <vm-scale-set-name>",
              "required": -25,
              "optional": 0,
              "bool": true,
              "short": "-n",
              "long": "--vm-scale-set-name",
              "description": "vm-scale-set-name"
            },
            {
              "flags": "-d, --instance-id <instance-id>",
              "required": -19,
              "optional": 0,
              "bool": true,
              "short": "-d",
              "long": "--instance-id",
              "description": "instance-id"
            },
            {
              "flags": "--parameter-file <parameter-file>",
              "required": -18,
              "optional": 0,
              "bool": true,
              "long": "--parameter-file",
              "description": "the input parameter file"
            },
            {
              "flags": "-s, --subscription <subscription>",
              "required": -20,
              "optional": 0,
              "bool": true,
              "short": "-s",
              "long": "--subscription",
              "description": "the subscription identifier"
            }
          ]
        },
        {
          "name": "restart",
          "description": "Commands to manage your virtual machine scale set vm by the restart method.",
          "fullName": "vmssvm restart",
          "usage": "[options] <resource-group-name> <vm-scale-set-name> <instance-id>",
          "filePath": "commands/arm/compute/compute._js",
          "options": [
            {
              "flags": "-v, --verbose",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-v",
              "long": "--verbose",
              "description": "use verbose output"
            },
            {
              "flags": "-vv",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "-vv",
              "description": "more verbose with debug output"
            },
            {
              "flags": "--json",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--json",
              "description": "use json output"
            },
            {
              "flags": "-g, --resource-group-name <resource-group-name>",
              "required": -27,
              "optional": 0,
              "bool": true,
              "short": "-g",
              "long": "--resource-group-name",
              "description": "resource-group-name"
            },
            {
              "flags": "-n, --vm-scale-set-name <vm-scale-set-name>",
              "required": -25,
              "optional": 0,
              "bool": true,
              "short": "-n",
              "long": "--vm-scale-set-name",
              "description": "vm-scale-set-name"
            },
            {
              "flags": "-d, --instance-id <instance-id>",
              "required": -19,
              "optional": 0,
              "bool": true,
              "short": "-d",
              "long": "--instance-id",
              "description": "instance-id"
            },
            {
              "flags": "--parameter-file <parameter-file>",
              "required": -18,
              "optional": 0,
              "bool": true,
              "long": "--parameter-file",
              "description": "the input parameter file"
            },
            {
              "flags": "-s, --subscription <subscription>",
              "required": -20,
              "optional": 0,
              "bool": true,
              "short": "-s",
              "long": "--subscription",
              "description": "the subscription identifier"
            }
          ]
        },
        {
          "name": "start",
          "description": "Commands to manage your virtual machine scale set vm by the start method.",
          "fullName": "vmssvm start",
          "usage": "[options] <resource-group-name> <vm-scale-set-name> <instance-id>",
          "filePath": "commands/arm/compute/compute._js",
          "options": [
            {
              "flags": "-v, --verbose",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-v",
              "long": "--verbose",
              "description": "use verbose output"
            },
            {
              "flags": "-vv",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "-vv",
              "description": "more verbose with debug output"
            },
            {
              "flags": "--json",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--json",
              "description": "use json output"
            },
            {
              "flags": "-g, --resource-group-name <resource-group-name>",
              "required": -27,
              "optional": 0,
              "bool": true,
              "short": "-g",
              "long": "--resource-group-name",
              "description": "resource-group-name"
            },
            {
              "flags": "-n, --vm-scale-set-name <vm-scale-set-name>",
              "required": -25,
              "optional": 0,
              "bool": true,
              "short": "-n",
              "long": "--vm-scale-set-name",
              "description": "vm-scale-set-name"
            },
            {
              "flags": "-d, --instance-id <instance-id>",
              "required": -19,
              "optional": 0,
              "bool": true,
              "short": "-d",
              "long": "--instance-id",
              "description": "instance-id"
            },
            {
              "flags": "--parameter-file <parameter-file>",
              "required": -18,
              "optional": 0,
              "bool": true,
              "long": "--parameter-file",
              "description": "the input parameter file"
            },
            {
              "flags": "-s, --subscription <subscription>",
              "required": -20,
              "optional": 0,
              "bool": true,
              "short": "-s",
              "long": "--subscription",
              "description": "the subscription identifier"
            }
          ]
        }
      ],
      "categories": {}
    },
    "datalake": {
      "name": "datalake",
      "description": "Commands to manage your Data Lake objects",
      "fullName": "datalake",
      "usage": "[options]",
      "options": [],
      "commands": [],
      "categories": {
        "analytics": {
          "name": "analytics",
          "description": "Commands to manage your Data Lake Analytics objects",
          "fullName": "datalake analytics",
          "usage": "[options]",
          "options": [],
          "commands": [],
          "categories": {
            "job": {
              "name": "job",
              "description": "Commands to manage your Data Lake Analytics Jobs",
              "fullName": "datalake analytics job",
              "usage": "[options] [command]",
              "options": [],
              "commands": [
                {
                  "name": "create",
                  "description": "Submits a job to the specified Data Lake Analytics account.",
                  "fullName": "datalake analytics job create",
                  "usage": "[options] <accountName> <jobName> <script>",
                  "filePath": "commands/arm/datalakeanalytics/datalakeanalytics._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "-n --accountName <accountName>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "short": "-n",
                      "long": "--accountName",
                      "description": "the Data Lake Analytics account name to execute the action on"
                    },
                    {
                      "flags": "-j --jobName <jobName>",
                      "required": -14,
                      "optional": 0,
                      "bool": true,
                      "short": "-j",
                      "long": "--jobName",
                      "description": "the name for this job submission"
                    },
                    {
                      "flags": "-t --script <script>",
                      "required": -13,
                      "optional": 0,
                      "bool": true,
                      "short": "-t",
                      "long": "--script",
                      "description": "the script to run. This can be either the script contents, a relative path or the full path to a UTF-8 encoded script file"
                    },
                    {
                      "flags": "-r --runtime <runtime>",
                      "required": -14,
                      "optional": 0,
                      "bool": true,
                      "short": "-r",
                      "long": "--runtime",
                      "description": "optionally indicates the runtime to use. The default runtime is the currently deployed production runtime.Use this if you have uploaded a custom runtime to your account and want job execution to go through that one instead of the one deployed by Microsoft."
                    },
                    {
                      "flags": "-m --compileMode <compileMode>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "short": "-m",
                      "long": "--compileMode",
                      "description": "optionally specify the type of compilation to do. Valid values are 'Semantic', 'Full', and 'SingleBox' Default is Full."
                    },
                    {
                      "flags": "-c --compileOnly <compileOnly>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "short": "-c",
                      "long": "--compileOnly",
                      "description": "optionally indicates that this job should only be compiled and not run."
                    },
                    {
                      "flags": "-d --degreeOfParallelism <degreeOfParallelism>",
                      "required": -26,
                      "optional": 0,
                      "bool": true,
                      "short": "-d",
                      "long": "--degreeOfParallelism",
                      "description": "optionally specify the degree of parallelism for the job in a range from 1 to 50. Default value is 1."
                    },
                    {
                      "flags": "-p --priority <priority>",
                      "required": -15,
                      "optional": 0,
                      "bool": true,
                      "short": "-p",
                      "long": "--priority",
                      "description": "optionally specify the priority for the job. Default value is 1000, with lower, positive, non-zero values having higher priority. 1 is the highest priority and int.maxValue is the lowest."
                    },
                    {
                      "flags": "-g --resource-group <resource-group>",
                      "required": -21,
                      "optional": 0,
                      "bool": true,
                      "short": "-g",
                      "long": "--resource-group",
                      "description": "the optional resource group to force lookup of the Data Lake Analytics account in."
                    },
                    {
                      "flags": "-s, --subscription <id>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-s",
                      "long": "--subscription",
                      "description": "the subscription identifier"
                    }
                  ]
                },
                {
                  "name": "show",
                  "description": "shows the specified job and additional data if desired.",
                  "fullName": "datalake analytics job show",
                  "usage": "[options] <accountName> <jobId>",
                  "filePath": "commands/arm/datalakeanalytics/datalakeanalytics._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "-n --accountName <accountName>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "short": "-n",
                      "long": "--accountName",
                      "description": "the Data Lake Analytics account name to execute the action on"
                    },
                    {
                      "flags": "-j --jobId <jobId>",
                      "required": -12,
                      "optional": 0,
                      "bool": true,
                      "short": "-j",
                      "long": "--jobId",
                      "description": "the job ID of the job to retrieve."
                    },
                    {
                      "flags": "-d --includeDebugInfo",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-d",
                      "long": "--includeDebugInfo",
                      "description": "optionally indicates that debug info should be output for the job as well."
                    },
                    {
                      "flags": "-t --includeStatistics",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-t",
                      "long": "--includeStatistics",
                      "description": "optionally indicates that statistics for the job should be output as well."
                    },
                    {
                      "flags": "-g --resource-group <resource-group>",
                      "required": -21,
                      "optional": 0,
                      "bool": true,
                      "short": "-g",
                      "long": "--resource-group",
                      "description": "the optional resource group to force lookup of the Data Lake Analytics account in."
                    },
                    {
                      "flags": "-s, --subscription <id>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-s",
                      "long": "--subscription",
                      "description": "the subscription identifier"
                    }
                  ]
                },
                {
                  "name": "cancel",
                  "description": "cancels the specified job.",
                  "fullName": "datalake analytics job cancel",
                  "usage": "[options] <accountName> <jobId>",
                  "filePath": "commands/arm/datalakeanalytics/datalakeanalytics._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "-n --accountName <accountName>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "short": "-n",
                      "long": "--accountName",
                      "description": "the Data Lake Analytics account name to execute the action on"
                    },
                    {
                      "flags": "-j --jobId <jobId>",
                      "required": -12,
                      "optional": 0,
                      "bool": true,
                      "short": "-j",
                      "long": "--jobId",
                      "description": "the job ID of the job to retrieve."
                    },
                    {
                      "flags": "-q, --quiet",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-q",
                      "long": "--quiet",
                      "description": "quiet mode (do not ask for cancel confirmation)"
                    },
                    {
                      "flags": "-g --resource-group <resource-group>",
                      "required": -21,
                      "optional": 0,
                      "bool": true,
                      "short": "-g",
                      "long": "--resource-group",
                      "description": "the optional resource group to force lookup of the Data Lake Analytics account in."
                    },
                    {
                      "flags": "-s, --subscription <id>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-s",
                      "long": "--subscription",
                      "description": "the subscription identifier"
                    }
                  ]
                },
                {
                  "name": "list",
                  "description": "lists the jobs in the specified account given the specified filters and criteria.",
                  "fullName": "datalake analytics job list",
                  "usage": "[options] <accountName>",
                  "filePath": "commands/arm/datalakeanalytics/datalakeanalytics._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "-n --accountName <accountName>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "short": "-n",
                      "long": "--accountName",
                      "description": "the Data Lake Analytics account name to execute the action on"
                    },
                    {
                      "flags": "-j --jobName <jobName>",
                      "required": -14,
                      "optional": 0,
                      "bool": true,
                      "short": "-j",
                      "long": "--jobName",
                      "description": "An optional filter which returns jobs with only the specified friendly name."
                    },
                    {
                      "flags": "-u, --submitter <submitter>",
                      "required": -17,
                      "optional": 0,
                      "bool": true,
                      "short": "-u",
                      "long": "--submitter",
                      "description": "An optional filter which returns jobs only by the specified submitter in the format user@domain"
                    },
                    {
                      "flags": "-a, --submittedAfter <submittedAfter>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "short": "-a",
                      "long": "--submittedAfter",
                      "description": "An optional filter which returns jobs only submitted after the specified time (as a date time offset)."
                    },
                    {
                      "flags": "-b, --submittedBefore <submittedAfter>",
                      "required": -23,
                      "optional": 0,
                      "bool": true,
                      "short": "-b",
                      "long": "--submittedBefore",
                      "description": "An optional filter which returns jobs only submitted before the specified time (as a date time offset)."
                    },
                    {
                      "flags": "-t, --state <comma delmited string of states>",
                      "required": -13,
                      "optional": 0,
                      "bool": true,
                      "short": "-t",
                      "long": "--state",
                      "description": "An optional filter which returns jobs with only the specified states (as comma delmited string). Valid states are: accepted, compiling, ended, new, queued, running, scheduling, starting and paused"
                    },
                    {
                      "flags": "-r, --result <comma delmited string of results>",
                      "required": -14,
                      "optional": 0,
                      "bool": true,
                      "short": "-r",
                      "long": "--result",
                      "description": "An optional filter which returns jobs with only the specified results (as comma delmited string). Valid results are: none, succeeded, cancelled and failed"
                    },
                    {
                      "flags": "-g --resource-group <resource-group>",
                      "required": -21,
                      "optional": 0,
                      "bool": true,
                      "short": "-g",
                      "long": "--resource-group",
                      "description": "the optional resource group to force lookup of the Data Lake Analytics account in."
                    },
                    {
                      "flags": "-s, --subscription <id>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-s",
                      "long": "--subscription",
                      "description": "the subscription identifier"
                    }
                  ]
                }
              ],
              "categories": {}
            },
            "catalog": {
              "name": "catalog",
              "description": "Commands to manage your Data Lake Analytics Catalog",
              "fullName": "datalake analytics catalog",
              "usage": "[options] [command]",
              "options": [],
              "commands": [
                {
                  "name": "list",
                  "description": "Lists all of the specified catalog item types under the path or, if the full path is given, just the single catalog item at that path.",
                  "fullName": "datalake analytics catalog list",
                  "usage": "[options] <accountName> <itemType> <itemPath>",
                  "filePath": "commands/arm/datalakeanalytics/datalakeanalytics._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "-n --accountName <accountName>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "short": "-n",
                      "long": "--accountName",
                      "description": "The Data Lake Analytics account name to perform the action on."
                    },
                    {
                      "flags": "-t --itemType <itemType>",
                      "required": -15,
                      "optional": 0,
                      "bool": true,
                      "short": "-t",
                      "long": "--itemType",
                      "description": "The catalog item type to return. Valid values are (case insensitive): database, schema, secret, credential, assembly, externaldatasource, table, tablevaluedfunction, view, procedure, types or tablestatistics"
                    },
                    {
                      "flags": "-p --itemPath <itemPath>",
                      "required": -15,
                      "optional": 0,
                      "bool": true,
                      "short": "-p",
                      "long": "--itemPath",
                      "description": "The path to the catalog item(s) to get or list in the format: <FirstPart>.<OptionalSecondPart>.<OptionalThirdPart>.<OptionalFourthPart>. This MUST be null when listing all databases."
                    },
                    {
                      "flags": "-g --resource-group <resource-group>",
                      "required": -21,
                      "optional": 0,
                      "bool": true,
                      "short": "-g",
                      "long": "--resource-group",
                      "description": "the optional resource group to list the accounts in"
                    },
                    {
                      "flags": "-s, --subscription <id>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-s",
                      "long": "--subscription",
                      "description": "the subscription identifier"
                    }
                  ]
                }
              ],
              "categories": {
                "secret": {
                  "name": "secret",
                  "description": "Commands to manage your Data Lake Analytics Catalog secrets",
                  "fullName": "datalake analytics catalog secret",
                  "usage": "[options] [command]",
                  "options": [],
                  "commands": [
                    {
                      "name": "create",
                      "description": "Creates the specified secret for the specified database.",
                      "fullName": "datalake analytics catalog secret create",
                      "usage": "[options] <accountName> <databaseName> <hostUri> <secretName>",
                      "filePath": "commands/arm/datalakeanalytics/datalakeanalytics._js",
                      "options": [
                        {
                          "flags": "-v, --verbose",
                          "required": 0,
                          "optional": 0,
                          "bool": true,
                          "short": "-v",
                          "long": "--verbose",
                          "description": "use verbose output"
                        },
                        {
                          "flags": "-vv",
                          "required": 0,
                          "optional": 0,
                          "bool": true,
                          "long": "-vv",
                          "description": "more verbose with debug output"
                        },
                        {
                          "flags": "--json",
                          "required": 0,
                          "optional": 0,
                          "bool": true,
                          "long": "--json",
                          "description": "use json output"
                        },
                        {
                          "flags": "-n --accountName <accountName>",
                          "required": -18,
                          "optional": 0,
                          "bool": true,
                          "short": "-n",
                          "long": "--accountName",
                          "description": "The Data Lake Analytics account name to perform the action on."
                        },
                        {
                          "flags": "-d --databaseName <databaseName>",
                          "required": -19,
                          "optional": 0,
                          "bool": true,
                          "short": "-d",
                          "long": "--databaseName",
                          "description": "The name of the database in which the secret will be created."
                        },
                        {
                          "flags": "-u --hostUri <hostUri>",
                          "required": -14,
                          "optional": 0,
                          "bool": true,
                          "short": "-u",
                          "long": "--hostUri",
                          "description": "The full host URI associated with the external data source. The secret will be used with this host URI."
                        },
                        {
                          "flags": "-e --secretName <secretName>",
                          "required": -17,
                          "optional": 0,
                          "bool": true,
                          "short": "-e",
                          "long": "--secretName",
                          "description": "secret name, will prompt if not given"
                        },
                        {
                          "flags": "-p --password <password>",
                          "required": -15,
                          "optional": 0,
                          "bool": true,
                          "short": "-p",
                          "long": "--password",
                          "description": "secret password, will prompt if not given"
                        },
                        {
                          "flags": "-g --resource-group <resource-group>",
                          "required": -21,
                          "optional": 0,
                          "bool": true,
                          "short": "-g",
                          "long": "--resource-group",
                          "description": "the optional resource group to list the accounts in"
                        },
                        {
                          "flags": "-s, --subscription <id>",
                          "required": -20,
                          "optional": 0,
                          "bool": true,
                          "short": "-s",
                          "long": "--subscription",
                          "description": "the subscription identifier"
                        }
                      ]
                    },
                    {
                      "name": "set",
                      "description": "Updates the password and/or hostUri of the specified secret in the specified database.",
                      "fullName": "datalake analytics catalog secret set",
                      "usage": "[options] <accountName> <databaseName> <hostUri> <secretName>",
                      "filePath": "commands/arm/datalakeanalytics/datalakeanalytics._js",
                      "options": [
                        {
                          "flags": "-v, --verbose",
                          "required": 0,
                          "optional": 0,
                          "bool": true,
                          "short": "-v",
                          "long": "--verbose",
                          "description": "use verbose output"
                        },
                        {
                          "flags": "-vv",
                          "required": 0,
                          "optional": 0,
                          "bool": true,
                          "long": "-vv",
                          "description": "more verbose with debug output"
                        },
                        {
                          "flags": "--json",
                          "required": 0,
                          "optional": 0,
                          "bool": true,
                          "long": "--json",
                          "description": "use json output"
                        },
                        {
                          "flags": "-n --accountName <accountName>",
                          "required": -18,
                          "optional": 0,
                          "bool": true,
                          "short": "-n",
                          "long": "--accountName",
                          "description": "The Data Lake Analytics account name to perform the action on."
                        },
                        {
                          "flags": "-d --databaseName <databaseName>",
                          "required": -19,
                          "optional": 0,
                          "bool": true,
                          "short": "-d",
                          "long": "--databaseName",
                          "description": "The name of the database in which the secret will be updated."
                        },
                        {
                          "flags": "-u --hostUri <hostUri>",
                          "required": -14,
                          "optional": 0,
                          "bool": true,
                          "short": "-u",
                          "long": "--hostUri",
                          "description": "The full host URI associated with the external data source. The secret will be used with this host URI."
                        },
                        {
                          "flags": "-e --secretName <secretName>",
                          "required": -17,
                          "optional": 0,
                          "bool": true,
                          "short": "-e",
                          "long": "--secretName",
                          "description": "secret name, will prompt if not given"
                        },
                        {
                          "flags": "-p --password <password>",
                          "required": -15,
                          "optional": 0,
                          "bool": true,
                          "short": "-p",
                          "long": "--password",
                          "description": "secret password, will prompt if not given"
                        },
                        {
                          "flags": "-g --resource-group <resource-group>",
                          "required": -21,
                          "optional": 0,
                          "bool": true,
                          "short": "-g",
                          "long": "--resource-group",
                          "description": "the optional resource group to list the accounts in"
                        },
                        {
                          "flags": "-s, --subscription <id>",
                          "required": -20,
                          "optional": 0,
                          "bool": true,
                          "short": "-s",
                          "long": "--subscription",
                          "description": "the subscription identifier"
                        }
                      ]
                    },
                    {
                      "name": "delete",
                      "description": "Updates the password and/or hostUri of the specified secret in the specified database.",
                      "fullName": "datalake analytics catalog secret delete",
                      "usage": "[options] <accountName> <databaseName> <hostUri> <secretName>",
                      "filePath": "commands/arm/datalakeanalytics/datalakeanalytics._js",
                      "options": [
                        {
                          "flags": "-v, --verbose",
                          "required": 0,
                          "optional": 0,
                          "bool": true,
                          "short": "-v",
                          "long": "--verbose",
                          "description": "use verbose output"
                        },
                        {
                          "flags": "-vv",
                          "required": 0,
                          "optional": 0,
                          "bool": true,
                          "long": "-vv",
                          "description": "more verbose with debug output"
                        },
                        {
                          "flags": "--json",
                          "required": 0,
                          "optional": 0,
                          "bool": true,
                          "long": "--json",
                          "description": "use json output"
                        },
                        {
                          "flags": "-n --accountName <accountName>",
                          "required": -18,
                          "optional": 0,
                          "bool": true,
                          "short": "-n",
                          "long": "--accountName",
                          "description": "The Data Lake Analytics account name to perform the action on."
                        },
                        {
                          "flags": "-d --databaseName <databaseName>",
                          "required": -19,
                          "optional": 0,
                          "bool": true,
                          "short": "-d",
                          "long": "--databaseName",
                          "description": "The name of the database in which the secret(s) will be deleted."
                        },
                        {
                          "flags": "-e --secretName <secretName>",
                          "required": -17,
                          "optional": 0,
                          "bool": true,
                          "short": "-e",
                          "long": "--secretName",
                          "description": "Optional secret name to delete, if not specified will delete all secrets in the specified database"
                        },
                        {
                          "flags": "-q, --quiet",
                          "required": 0,
                          "optional": 0,
                          "bool": true,
                          "short": "-q",
                          "long": "--quiet",
                          "description": "quiet mode (do not ask for delete confirmation)"
                        },
                        {
                          "flags": "-g --resource-group <resource-group>",
                          "required": -21,
                          "optional": 0,
                          "bool": true,
                          "short": "-g",
                          "long": "--resource-group",
                          "description": "the optional resource group to list the accounts in"
                        },
                        {
                          "flags": "-s, --subscription <id>",
                          "required": -20,
                          "optional": 0,
                          "bool": true,
                          "short": "-s",
                          "long": "--subscription",
                          "description": "the subscription identifier"
                        }
                      ]
                    }
                  ],
                  "categories": {}
                }
              }
            },
            "account": {
              "name": "account",
              "description": "Commands to manage your Data Lake Analytics accounts",
              "fullName": "datalake analytics account",
              "usage": "[options] [command]",
              "options": [],
              "commands": [
                {
                  "name": "list",
                  "description": "List all Data Lake Analytics accounts available for your subscription or subscription and resource group",
                  "fullName": "datalake analytics account list",
                  "usage": "[options]",
                  "filePath": "commands/arm/datalakeanalytics/datalakeanalytics._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "-g --resource-group <resource-group>",
                      "required": -21,
                      "optional": 0,
                      "bool": true,
                      "short": "-g",
                      "long": "--resource-group",
                      "description": "the optional resource group to list the accounts in"
                    },
                    {
                      "flags": "-s, --subscription <id>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-s",
                      "long": "--subscription",
                      "description": "the subscription identifier"
                    }
                  ]
                },
                {
                  "name": "show",
                  "description": "Shows a Data Lake Analytics account based on account name",
                  "fullName": "datalake analytics account show",
                  "usage": "[options] <accountName>",
                  "filePath": "commands/arm/datalakeanalytics/datalakeanalytics._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "-n --accountName <accountName>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "short": "-n",
                      "long": "--accountName",
                      "description": "the Data Lake Analytics account name to retrieve"
                    },
                    {
                      "flags": "-g --resource-group <resource-group>",
                      "required": -21,
                      "optional": 0,
                      "bool": true,
                      "short": "-g",
                      "long": "--resource-group",
                      "description": "the optional resource group to list the accounts in"
                    },
                    {
                      "flags": "-s, --subscription <id>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-s",
                      "long": "--subscription",
                      "description": "the subscription identifier"
                    }
                  ]
                },
                {
                  "name": "delete",
                  "description": "Deletes a Data Lake Analytics Account based on account name",
                  "fullName": "datalake analytics account delete",
                  "usage": "[options] <accountName>",
                  "filePath": "commands/arm/datalakeanalytics/datalakeanalytics._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "-n --accountName <accountName>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "short": "-n",
                      "long": "--accountName",
                      "description": "the Data Lake Analytics account name to delete"
                    },
                    {
                      "flags": "-g --resource-group <resource-group>",
                      "required": -21,
                      "optional": 0,
                      "bool": true,
                      "short": "-g",
                      "long": "--resource-group",
                      "description": "the optional resource group to force the command to find the Data Lake Analytics account to delete in."
                    },
                    {
                      "flags": "-q, --quiet",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-q",
                      "long": "--quiet",
                      "description": "quiet mode (do not ask for delete confirmation)"
                    },
                    {
                      "flags": "-s, --subscription <id>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-s",
                      "long": "--subscription",
                      "description": "the subscription identifier"
                    }
                  ]
                },
                {
                  "name": "create",
                  "description": "Creates a Data Lake Analytics Account",
                  "fullName": "datalake analytics account create",
                  "usage": "[options] <accountName> <location> <resource-group> <defaultDataLakeStore>",
                  "filePath": "commands/arm/datalakeanalytics/datalakeanalytics._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "-n --accountName <accountName>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "short": "-n",
                      "long": "--accountName",
                      "description": "The Data Lake Analytics account name to create"
                    },
                    {
                      "flags": "-l --location <location>",
                      "required": -15,
                      "optional": 0,
                      "bool": true,
                      "short": "-l",
                      "long": "--location",
                      "description": "the location the Data Lake Analytics account will be created in. Valid values are: North Central US, South Central US, Central US, West Europe, North Europe, West US, East US, East US 2, Japan East, Japan West, Brazil South, Southeast Asia, East Asia, Australia East, Australia Southeast"
                    },
                    {
                      "flags": "-g --resource-group <resource-group>",
                      "required": -21,
                      "optional": 0,
                      "bool": true,
                      "short": "-g",
                      "long": "--resource-group",
                      "description": "the resource group to create the account in"
                    },
                    {
                      "flags": "-d --defaultDataLakeStore <defaultDataLakeStore>",
                      "required": -27,
                      "optional": 0,
                      "bool": true,
                      "short": "-d",
                      "long": "--defaultDataLakeStore",
                      "description": "the default Data Lake Store to associate with this account."
                    },
                    {
                      "flags": "-t --tags <tags>",
                      "required": -11,
                      "optional": 0,
                      "bool": true,
                      "short": "-t",
                      "long": "--tags",
                      "description": "Tags to set to the the Data Lake Analytics account. Can be mutliple. In the format of 'name=value'. Name is required and value is optional. For example, -t tag1=value1;tag2"
                    },
                    {
                      "flags": "-s, --subscription <id>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-s",
                      "long": "--subscription",
                      "description": "the subscription identifier"
                    }
                  ]
                },
                {
                  "name": "set",
                  "description": "Updates the properties of an existing Data Lake Analytics Account",
                  "fullName": "datalake analytics account set",
                  "usage": "[options] <accountName> <defaultDataLakeStore>",
                  "filePath": "commands/arm/datalakeanalytics/datalakeanalytics._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "-n --accountName <accountName>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "short": "-n",
                      "long": "--accountName",
                      "description": "The Data Lake Analytics Account name to perform the action on."
                    },
                    {
                      "flags": "-g --resource-group <resource-group>",
                      "required": -21,
                      "optional": 0,
                      "bool": true,
                      "short": "-g",
                      "long": "--resource-group",
                      "description": "the optional resource group to forcibly look for the account to update in"
                    },
                    {
                      "flags": "-d --defaultDataLakeStore <defaultDataLakeStore>",
                      "required": -27,
                      "optional": 0,
                      "bool": true,
                      "short": "-d",
                      "long": "--defaultDataLakeStore",
                      "description": "the optional new default Data Lake Store account to set for this account"
                    },
                    {
                      "flags": "-t --tags <tags>",
                      "required": -11,
                      "optional": 0,
                      "bool": true,
                      "short": "-t",
                      "long": "--tags",
                      "description": "Tags to set to the Data Lake Analytics account group. Can be mutliple. In the format of 'name=value'. Name is required and value is optional. For example, -t tag1=value1;tag2"
                    },
                    {
                      "flags": "--no-tags",
                      "required": 0,
                      "optional": 0,
                      "bool": false,
                      "long": "--no-tags",
                      "description": "remove all existing tags"
                    },
                    {
                      "flags": "-s, --subscription <id>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-s",
                      "long": "--subscription",
                      "description": "the subscription identifier"
                    }
                  ]
                }
              ],
              "categories": {
                "datasource": {
                  "name": "datasource",
                  "description": "Commands to manage your Data Lake Analytics account data sources",
                  "fullName": "datalake analytics account datasource",
                  "usage": "[options] [command]",
                  "options": [],
                  "commands": [
                    {
                      "name": "add",
                      "description": "Adds an existing data source (Data Lake Store or Azure Blob) to the Data Lake Analytics Account",
                      "fullName": "datalake analytics account datasource add",
                      "usage": "[options] <accountName>",
                      "filePath": "commands/arm/datalakeanalytics/datalakeanalytics._js",
                      "options": [
                        {
                          "flags": "-v, --verbose",
                          "required": 0,
                          "optional": 0,
                          "bool": true,
                          "short": "-v",
                          "long": "--verbose",
                          "description": "use verbose output"
                        },
                        {
                          "flags": "-vv",
                          "required": 0,
                          "optional": 0,
                          "bool": true,
                          "long": "-vv",
                          "description": "more verbose with debug output"
                        },
                        {
                          "flags": "--json",
                          "required": 0,
                          "optional": 0,
                          "bool": true,
                          "long": "--json",
                          "description": "use json output"
                        },
                        {
                          "flags": "-n --accountName <accountName>",
                          "required": -18,
                          "optional": 0,
                          "bool": true,
                          "short": "-n",
                          "long": "--accountName",
                          "description": "The Data Lake Analytics Account name to perform the action on."
                        },
                        {
                          "flags": "-l --dataLakeStore <dataLakeStore>",
                          "required": -20,
                          "optional": 0,
                          "bool": true,
                          "short": "-l",
                          "long": "--dataLakeStore",
                          "description": "the Data Lake Store account to add. NOTE: this argument and --isDefaultDataLakeStore are part of a parameter set, and cannot be specified with --azureBlob and --accessKey."
                        },
                        {
                          "flags": "-d --isDefaultDataLakeStore",
                          "required": 0,
                          "optional": 0,
                          "bool": true,
                          "short": "-d",
                          "long": "--isDefaultDataLakeStore",
                          "description": "the optional switch to indicate that the Data Lake being added should be the default Data Lake. NOTE: this argument and --dataLakeStore are part of a parameter set, and cannot be specified with --azureBlob and --accessKey."
                        },
                        {
                          "flags": "-b --azureBlob <azureBlob>",
                          "required": -16,
                          "optional": 0,
                          "bool": true,
                          "short": "-b",
                          "long": "--azureBlob",
                          "description": "the azure blob to add to the account. NOTE: this argument and --accessKey are part of a parameter set, and cannot be specified with --dataLakeStore and --isDefaultDataLakeStore."
                        },
                        {
                          "flags": "-k --accessKey <accessKey>",
                          "required": -16,
                          "optional": 0,
                          "bool": true,
                          "short": "-k",
                          "long": "--accessKey",
                          "description": "the access key associated with the azureBlob. NOTE: this argument and --azureBlob are part of a parameter set, and cannot be specified with --dataLakeStore and --isDefaultDataLakeStore."
                        },
                        {
                          "flags": "-g --resource-group <resource-group>",
                          "required": -21,
                          "optional": 0,
                          "bool": true,
                          "short": "-g",
                          "long": "--resource-group",
                          "description": "the optional resource group to forcibly look for the account to update in"
                        },
                        {
                          "flags": "-s, --subscription <id>",
                          "required": -20,
                          "optional": 0,
                          "bool": true,
                          "short": "-s",
                          "long": "--subscription",
                          "description": "the subscription identifier"
                        }
                      ]
                    },
                    {
                      "name": "delete",
                      "description": "removes a data source (Data Lake Store or Azure Blob) from the Data Lake Analytics Account",
                      "fullName": "datalake analytics account datasource delete",
                      "usage": "[options] <accountName>",
                      "filePath": "commands/arm/datalakeanalytics/datalakeanalytics._js",
                      "options": [
                        {
                          "flags": "-v, --verbose",
                          "required": 0,
                          "optional": 0,
                          "bool": true,
                          "short": "-v",
                          "long": "--verbose",
                          "description": "use verbose output"
                        },
                        {
                          "flags": "-vv",
                          "required": 0,
                          "optional": 0,
                          "bool": true,
                          "long": "-vv",
                          "description": "more verbose with debug output"
                        },
                        {
                          "flags": "--json",
                          "required": 0,
                          "optional": 0,
                          "bool": true,
                          "long": "--json",
                          "description": "use json output"
                        },
                        {
                          "flags": "-n --accountName <accountName>",
                          "required": -18,
                          "optional": 0,
                          "bool": true,
                          "short": "-n",
                          "long": "--accountName",
                          "description": "The Data Lake Analytics Account name to perform the action on."
                        },
                        {
                          "flags": "-l --dataLakeStore <dataLakeStore>",
                          "required": -20,
                          "optional": 0,
                          "bool": true,
                          "short": "-l",
                          "long": "--dataLakeStore",
                          "description": "the Data Lake to remove from the account. NOTE: this argument is part of a parameter set, and cannot be specified with --azureBlob."
                        },
                        {
                          "flags": "-b --azureBlob <azureBlob>",
                          "required": -16,
                          "optional": 0,
                          "bool": true,
                          "short": "-b",
                          "long": "--azureBlob",
                          "description": "the azure blob to remove from the account. NOTE: this argument is part of a parameter set, and cannot be specified with --dataLakeStore."
                        },
                        {
                          "flags": "-g --resource-group <resource-group>",
                          "required": -21,
                          "optional": 0,
                          "bool": true,
                          "short": "-g",
                          "long": "--resource-group",
                          "description": "the optional resource group to forcibly look for the account to update in"
                        },
                        {
                          "flags": "-s, --subscription <id>",
                          "required": -20,
                          "optional": 0,
                          "bool": true,
                          "short": "-s",
                          "long": "--subscription",
                          "description": "the subscription identifier"
                        }
                      ]
                    },
                    {
                      "name": "set",
                      "description": "Sets an existing data source (Data Lake Store or Azure Blob) in the Data Lake Analytics Account. Typically used to set the data source as default (for Data Lake) or update the access key (for Azure Blob)",
                      "fullName": "datalake analytics account datasource set",
                      "usage": "[options] <accountName>",
                      "filePath": "commands/arm/datalakeanalytics/datalakeanalytics._js",
                      "options": [
                        {
                          "flags": "-v, --verbose",
                          "required": 0,
                          "optional": 0,
                          "bool": true,
                          "short": "-v",
                          "long": "--verbose",
                          "description": "use verbose output"
                        },
                        {
                          "flags": "-vv",
                          "required": 0,
                          "optional": 0,
                          "bool": true,
                          "long": "-vv",
                          "description": "more verbose with debug output"
                        },
                        {
                          "flags": "--json",
                          "required": 0,
                          "optional": 0,
                          "bool": true,
                          "long": "--json",
                          "description": "use json output"
                        },
                        {
                          "flags": "-n --accountName <accountName>",
                          "required": -18,
                          "optional": 0,
                          "bool": true,
                          "short": "-n",
                          "long": "--accountName",
                          "description": "The Data Lake Analytics Account name to perform the action on."
                        },
                        {
                          "flags": "-l --dataLakeStore <dataLakeStore>",
                          "required": -20,
                          "optional": 0,
                          "bool": true,
                          "short": "-l",
                          "long": "--dataLakeStore",
                          "description": "the Data Lake Store account to set. NOTE: this argument and --isDefaultDataLakeStore are part of a parameter set, and cannot be specified with --azureBlob and --accessKey."
                        },
                        {
                          "flags": "-d --isDefaultDataLakeStore",
                          "required": 0,
                          "optional": 0,
                          "bool": true,
                          "short": "-d",
                          "long": "--isDefaultDataLakeStore",
                          "description": "the optional switch to indicate that the Data Lake being set should be the default Data Lake. NOTE: this argument and --dataLakeStore are part of a parameter set, and cannot be specified with --azureBlob and --accessKey."
                        },
                        {
                          "flags": "-b --azureBlob <azureBlob>",
                          "required": -16,
                          "optional": 0,
                          "bool": true,
                          "short": "-b",
                          "long": "--azureBlob",
                          "description": "the azure blob to set in the account. NOTE: this argument and --accessKey are part of a parameter set, and cannot be specified with --dataLakeStore and --isDefaultDataLakeStore."
                        },
                        {
                          "flags": "-k --accessKey <accessKey>",
                          "required": -16,
                          "optional": 0,
                          "bool": true,
                          "short": "-k",
                          "long": "--accessKey",
                          "description": "the access key associated with the azureBlob to update. NOTE: this argument and --azureBlob are part of a parameter set, and cannot be specified with --dataLakeStore and --isDefaultDataLakeStore."
                        },
                        {
                          "flags": "-g --resource-group <resource-group>",
                          "required": -21,
                          "optional": 0,
                          "bool": true,
                          "short": "-g",
                          "long": "--resource-group",
                          "description": "the optional resource group to forcibly look for the account to update in"
                        },
                        {
                          "flags": "-s, --subscription <id>",
                          "required": -20,
                          "optional": 0,
                          "bool": true,
                          "short": "-s",
                          "long": "--subscription",
                          "description": "the subscription identifier"
                        }
                      ]
                    }
                  ],
                  "categories": {}
                }
              }
            }
          }
        },
        "store": {
          "name": "store",
          "description": "Commands to manage your Data Lake Storage objects",
          "fullName": "datalake store",
          "usage": "[options]",
          "options": [],
          "commands": [],
          "categories": {
            "filesystem": {
              "name": "filesystem",
              "description": "Commands to manage your Data Lake Storage FileSystem",
              "fullName": "datalake store filesystem",
              "usage": "[options] [command]",
              "options": [],
              "commands": [
                {
                  "name": "list",
                  "description": "Lists the contents of the specified path (files and folders).",
                  "fullName": "datalake store filesystem list",
                  "usage": "[options] <accountName> <path>",
                  "filePath": "commands/arm/datalakestore/datalakestore._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "-n --accountName <accountName>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "short": "-n",
                      "long": "--accountName",
                      "description": "the Data Lake Store account name to execute the action on"
                    },
                    {
                      "flags": "-p --path <path>",
                      "required": -11,
                      "optional": 0,
                      "bool": true,
                      "short": "-p",
                      "long": "--path",
                      "description": "the full path to the folder to list (e.g. /someFolder or /someFolder/someNestedFolder)"
                    },
                    {
                      "flags": "-s, --subscription <id>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-s",
                      "long": "--subscription",
                      "description": "the subscription identifier"
                    }
                  ]
                },
                {
                  "name": "show",
                  "description": "Gets the specified Data Lake Store file or folder details",
                  "fullName": "datalake store filesystem show",
                  "usage": "[options] <accountName> <path>",
                  "filePath": "commands/arm/datalakestore/datalakestore._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "-n --accountName <accountName>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "short": "-n",
                      "long": "--accountName",
                      "description": "the Data Lake Store account name to execute the action on"
                    },
                    {
                      "flags": "-p --path <path>",
                      "required": -11,
                      "optional": 0,
                      "bool": true,
                      "short": "-p",
                      "long": "--path",
                      "description": "the full path to the folder or file to get (e.g. /someFolder or /someFolder/someFile.txt)"
                    },
                    {
                      "flags": "-s, --subscription <id>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-s",
                      "long": "--subscription",
                      "description": "the subscription identifier"
                    }
                  ]
                },
                {
                  "name": "delete",
                  "description": "deletes the specified Data Lake Store file or folder, with the option for recursive delete (if the folder has contents)",
                  "fullName": "datalake store filesystem delete",
                  "usage": "[options] <accountName> <path>",
                  "filePath": "commands/arm/datalakestore/datalakestore._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "-n --accountName <accountName>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "short": "-n",
                      "long": "--accountName",
                      "description": "the Data Lake Store account name to execute the action on"
                    },
                    {
                      "flags": "-p --path <path>",
                      "required": -11,
                      "optional": 0,
                      "bool": true,
                      "short": "-p",
                      "long": "--path",
                      "description": "the full path to the folder or file to get (e.g. /someFolder or /someFolder/someFile.txt)"
                    },
                    {
                      "flags": "-r --recurse",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-r",
                      "long": "--recurse",
                      "description": "optionally indicates that this should be a recursive delete, which will delete a folder and all contents underneath it."
                    },
                    {
                      "flags": "-q --quiet",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-q",
                      "long": "--quiet",
                      "description": "optionally indicates the delete should be immediately performed with no confirmation or prompting. Use carefully."
                    },
                    {
                      "flags": "-s, --subscription <id>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-s",
                      "long": "--subscription",
                      "description": "the subscription identifier"
                    }
                  ]
                },
                {
                  "name": "create",
                  "description": "Creates the specified folder or file, with the option to include content in file creation.",
                  "fullName": "datalake store filesystem create",
                  "usage": "[options] <accountName> <path>",
                  "filePath": "commands/arm/datalakestore/datalakestore._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "-n --accountName <accountName>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "short": "-n",
                      "long": "--accountName",
                      "description": "the Data Lake Store account name to execute the action on"
                    },
                    {
                      "flags": "-p --path <path>",
                      "required": -11,
                      "optional": 0,
                      "bool": true,
                      "short": "-p",
                      "long": "--path",
                      "description": "the full path to the file to add content to (e.g. /someFolder/someFile.txt)"
                    },
                    {
                      "flags": "-v --value <value>",
                      "required": -12,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--value",
                      "description": "optional indicates the contents (as a string) to create the file with. NOTE: This parameter cannot be specified with --folder (-d)"
                    },
                    {
                      "flags": "-d --folder",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-d",
                      "long": "--folder",
                      "description": "optionally specify that the item being created is a folder, not a file. If this is not specified, a file will be created. NOTE: This parameter cannot be specified with --encoding (-e) or --value (-v)"
                    },
                    {
                      "flags": "-f --force",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-f",
                      "long": "--force",
                      "description": "optionally indicates that the file or folder being created can overwrite the file or folder at path if it already exists (default is false). 'true' must be passed in for the overwrite to work"
                    },
                    {
                      "flags": "-s, --subscription <id>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-s",
                      "long": "--subscription",
                      "description": "the subscription identifier"
                    }
                  ]
                },
                {
                  "name": "import",
                  "description": "Uploads the specified the specified file, to the target destination in an Azure Data Lake. NOTE: Only text files are supported by this command at present.",
                  "fullName": "datalake store filesystem import",
                  "usage": "[options] <accountName> <path> <destination>",
                  "filePath": "commands/arm/datalakestore/datalakestore._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "-n --accountName <accountName>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "short": "-n",
                      "long": "--accountName",
                      "description": "the Data Lake Store account name to execute the action on"
                    },
                    {
                      "flags": "-p --path <path>",
                      "required": -11,
                      "optional": 0,
                      "bool": true,
                      "short": "-p",
                      "long": "--path",
                      "description": "the full local path to the file to import (e.g. /someFolder/someFile.txt or C:somefoldersomeFile.txt)"
                    },
                    {
                      "flags": "-d --destination <destination>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "short": "-d",
                      "long": "--destination",
                      "description": "the full path in the Data Lake Store where the file should be imported to (e.g. /someFolder/someFile.txt"
                    },
                    {
                      "flags": "-f --force",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-f",
                      "long": "--force",
                      "description": "optionally indicates that the file or folder being created can overwrite the file or folder at path if it already exists (default is false). 'true' must be passed in for the overwrite to work"
                    },
                    {
                      "flags": "-s, --subscription <id>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-s",
                      "long": "--subscription",
                      "description": "the subscription identifier"
                    }
                  ]
                },
                {
                  "name": "concat",
                  "description": "Concatenates the specified list of files into the specified destination file.",
                  "fullName": "datalake store filesystem concat",
                  "usage": "[options] <accountName> <paths> <destination>",
                  "filePath": "commands/arm/datalakestore/datalakestore._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "-n --accountName <accountName>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "short": "-n",
                      "long": "--accountName",
                      "description": "the Data Lake Store account name to execute the action on"
                    },
                    {
                      "flags": "-p --paths <paths>",
                      "required": -12,
                      "optional": 0,
                      "bool": true,
                      "short": "-p",
                      "long": "--paths",
                      "description": "a comma seperated list of full paths to concatenate (e.g. '/someFolder/someFile.txt,/somefolder/somefile2.txt,/anotherFolder/newFile.txt')"
                    },
                    {
                      "flags": "-d --destination <destination>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "short": "-d",
                      "long": "--destination",
                      "description": "specify the target file that all of the files in --paths should be concatenated into (e.g /someFolder/targetFile.txt)"
                    },
                    {
                      "flags": "-f --force",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-f",
                      "long": "--force",
                      "description": "optionally indicates that the file or folder being created can overwrite the file or folder at path if it already exists (default is false). 'true' must be passed in for the overwrite to work"
                    },
                    {
                      "flags": "-s, --subscription <id>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-s",
                      "long": "--subscription",
                      "description": "the subscription identifier"
                    }
                  ]
                },
                {
                  "name": "move",
                  "description": "Moves (renames) the specified file or folder into the specified destination file or folder.",
                  "fullName": "datalake store filesystem move",
                  "usage": "[options] <accountName> <path> <destination>",
                  "filePath": "commands/arm/datalakestore/datalakestore._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "-n --accountName <accountName>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "short": "-n",
                      "long": "--accountName",
                      "description": "the Data Lake Store account name to execute the action on"
                    },
                    {
                      "flags": "-p --path <path>",
                      "required": -11,
                      "optional": 0,
                      "bool": true,
                      "short": "-p",
                      "long": "--path",
                      "description": "the path to the file or folder to move (e.g. /someFolder or /someFolder/someFile.txt)"
                    },
                    {
                      "flags": "-d --destination <destination>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "short": "-d",
                      "long": "--destination",
                      "description": "specify the target location to move the file or folder to"
                    },
                    {
                      "flags": "-f --force",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-f",
                      "long": "--force",
                      "description": "optionally indicates that the file or folder being created can overwrite the file or folder at path if it already exists (default is false). 'true' must be passed in for the overwrite to work"
                    },
                    {
                      "flags": "-s, --subscription <id>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-s",
                      "long": "--subscription",
                      "description": "the subscription identifier"
                    }
                  ]
                },
                {
                  "name": "addcontent",
                  "description": "Appends the specified content to the end of the Data Lake Store file path specified.",
                  "fullName": "datalake store filesystem addcontent",
                  "usage": "[options] <accountName> <path> <value>",
                  "filePath": "commands/arm/datalakestore/datalakestore._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "-n --accountName <accountName>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "short": "-n",
                      "long": "--accountName",
                      "description": "the Data Lake Store account name to execute the action on"
                    },
                    {
                      "flags": "-p --path <path>",
                      "required": -11,
                      "optional": 0,
                      "bool": true,
                      "short": "-p",
                      "long": "--path",
                      "description": "the full path to the file to add content to (e.g. /someFolder/someFile.txt)"
                    },
                    {
                      "flags": "-v --value <value>",
                      "required": -12,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--value",
                      "description": "the contents to append to the file"
                    },
                    {
                      "flags": "-s, --subscription <id>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-s",
                      "long": "--subscription",
                      "description": "the subscription identifier"
                    }
                  ]
                },
                {
                  "name": "export",
                  "description": "Downloads the specified file to the target location. NOTE: Only text files are supported by this command at present.",
                  "fullName": "datalake store filesystem export",
                  "usage": "[options] <accountName> <path> <destination>",
                  "filePath": "commands/arm/datalakestore/datalakestore._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "-n --accountName <accountName>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "short": "-n",
                      "long": "--accountName",
                      "description": "the Data Lake Store account name to execute the action on"
                    },
                    {
                      "flags": "-p --path <path>",
                      "required": -11,
                      "optional": 0,
                      "bool": true,
                      "short": "-p",
                      "long": "--path",
                      "description": "the full path in the Data Lake Store where the file should be imported to (e.g. /someFolder/someFile.txt"
                    },
                    {
                      "flags": "-d --destination <destination>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "short": "-d",
                      "long": "--destination",
                      "description": "the full local path to the file to import (e.g. /someFolder/someFile.txt or C:somefoldersomeFile.txt)"
                    },
                    {
                      "flags": "-f --force",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-f",
                      "long": "--force",
                      "description": "optionally indicates that the file being created can overwrite the file at path if it already exists (default is false)."
                    },
                    {
                      "flags": "-s, --subscription <id>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-s",
                      "long": "--subscription",
                      "description": "the subscription identifier"
                    }
                  ]
                },
                {
                  "name": "read",
                  "description": "Previews the specified Data Lake Store file starting at index 0 (or the specified offset) until the length is reached, displaying the results to the console.",
                  "fullName": "datalake store filesystem read",
                  "usage": "[options] <accountName> <path> <length>",
                  "filePath": "commands/arm/datalakestore/datalakestore._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "-n --accountName <accountName>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "short": "-n",
                      "long": "--accountName",
                      "description": "the Data Lake Store account name to execute the action on"
                    },
                    {
                      "flags": "-p --path <path>",
                      "required": -11,
                      "optional": 0,
                      "bool": true,
                      "short": "-p",
                      "long": "--path",
                      "description": "the full path to the file to download (e.g. /someFolder/someFile.txt)"
                    },
                    {
                      "flags": "-l --length <length>",
                      "required": -13,
                      "optional": 0,
                      "bool": true,
                      "short": "-l",
                      "long": "--length",
                      "description": "the length, in bytes, to read from the file"
                    },
                    {
                      "flags": "-o --offset <offset>",
                      "required": -13,
                      "optional": 0,
                      "bool": true,
                      "short": "-o",
                      "long": "--offset",
                      "description": "the optional offset to begin reading at (default is 0)"
                    },
                    {
                      "flags": "-s, --subscription <id>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-s",
                      "long": "--subscription",
                      "description": "the subscription identifier"
                    }
                  ]
                }
              ],
              "categories": {}
            },
            "permissions": {
              "name": "permissions",
              "description": "Commands to manage your Data Lake Storage FileSystem Permissions",
              "fullName": "datalake store permissions",
              "usage": "[options] [command]",
              "options": [],
              "commands": [
                {
                  "name": "show",
                  "description": "Gets the specified Data Lake Store folder ACL",
                  "fullName": "datalake store permissions show",
                  "usage": "[options] <accountName> <path>",
                  "filePath": "commands/arm/datalakestore/datalakestore._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "-n --accountName <accountName>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "short": "-n",
                      "long": "--accountName",
                      "description": "the Data Lake Store account name to execute the action on"
                    },
                    {
                      "flags": "-p --path <path>",
                      "required": -11,
                      "optional": 0,
                      "bool": true,
                      "short": "-p",
                      "long": "--path",
                      "description": "the full path to the folder or file to get (e.g. /someFolder or /someFolder/someFile.txt)"
                    },
                    {
                      "flags": "-s, --subscription <id>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-s",
                      "long": "--subscription",
                      "description": "the subscription identifier"
                    }
                  ]
                },
                {
                  "name": "delete",
                  "description": "Deletes the entire ACL associated with a folder",
                  "fullName": "datalake store permissions delete",
                  "usage": "[options] <accountName> <path>",
                  "filePath": "commands/arm/datalakestore/datalakestore._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "-n --accountName <accountName>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "short": "-n",
                      "long": "--accountName",
                      "description": "the Data Lake Store account name to execute the action on"
                    },
                    {
                      "flags": "-p --path <path>",
                      "required": -11,
                      "optional": 0,
                      "bool": true,
                      "short": "-p",
                      "long": "--path",
                      "description": "the full path to the folder to remove ACLs from (e.g. /someFolder)"
                    },
                    {
                      "flags": "-d --defaultAcl",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-d",
                      "long": "--defaultAcl",
                      "description": "optionally indicates that the default ACL should be removed instead of the regular ACL. Default is false."
                    },
                    {
                      "flags": "-q, --quiet",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-q",
                      "long": "--quiet",
                      "description": "quiet mode (do not ask for delete confirmation)"
                    },
                    {
                      "flags": "-s, --subscription <id>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-s",
                      "long": "--subscription",
                      "description": "the subscription identifier"
                    }
                  ]
                },
                {
                  "name": "set",
                  "description": "sets the specified Data Lake Store folder ACL (overwriting the previous ACL entries)",
                  "fullName": "datalake store permissions set",
                  "usage": "[options] <accountName> <path> <aclSpec>",
                  "filePath": "commands/arm/datalakestore/datalakestore._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "-n --accountName <accountName>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "short": "-n",
                      "long": "--accountName",
                      "description": "the Data Lake Store account name to execute the action on"
                    },
                    {
                      "flags": "-p --path <path>",
                      "required": -11,
                      "optional": 0,
                      "bool": true,
                      "short": "-p",
                      "long": "--path",
                      "description": "the full path to the folder to remove ACLs from (e.g. /someFolder)"
                    },
                    {
                      "flags": "-a --aclSpec <aclSpec>",
                      "required": -14,
                      "optional": 0,
                      "bool": true,
                      "short": "-a",
                      "long": "--aclSpec",
                      "description": "a comma delimited list of fully qualified ACL entries to set in the format [default:]<user>|<group>:<object Id>:<permissions> (e.g 'user:5546499e-795f-4f5f-b411-8179051f8b0a:r-x' or 'default:group:5546499e-795f-4f5f-b411-8179051f8b0a:rwx'). This list must also include default entries (no object ID in the middle)"
                    },
                    {
                      "flags": "-q, --quiet",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-q",
                      "long": "--quiet",
                      "description": "quiet mode (do not ask for overwrite confirmation)"
                    },
                    {
                      "flags": "-s, --subscription <id>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-s",
                      "long": "--subscription",
                      "description": "the subscription identifier"
                    }
                  ]
                }
              ],
              "categories": {
                "entry": {
                  "name": "entry",
                  "description": "Commands to manage your Data Lake Storage FileSystem granular permissions entries",
                  "fullName": "datalake store permissions entry",
                  "usage": "[options] [command]",
                  "options": [],
                  "commands": [
                    {
                      "name": "delete",
                      "description": "deletes the specific ACE entry or entries from the path",
                      "fullName": "datalake store permissions entry delete",
                      "usage": "[options] <accountName> <path> <aclEntries>",
                      "filePath": "commands/arm/datalakestore/datalakestore._js",
                      "options": [
                        {
                          "flags": "-v, --verbose",
                          "required": 0,
                          "optional": 0,
                          "bool": true,
                          "short": "-v",
                          "long": "--verbose",
                          "description": "use verbose output"
                        },
                        {
                          "flags": "-vv",
                          "required": 0,
                          "optional": 0,
                          "bool": true,
                          "long": "-vv",
                          "description": "more verbose with debug output"
                        },
                        {
                          "flags": "--json",
                          "required": 0,
                          "optional": 0,
                          "bool": true,
                          "long": "--json",
                          "description": "use json output"
                        },
                        {
                          "flags": "-n --accountName <accountName>",
                          "required": -18,
                          "optional": 0,
                          "bool": true,
                          "short": "-n",
                          "long": "--accountName",
                          "description": "the Data Lake Store account name to execute the action on"
                        },
                        {
                          "flags": "-p --path <path>",
                          "required": -11,
                          "optional": 0,
                          "bool": true,
                          "short": "-p",
                          "long": "--path",
                          "description": "the full path to the folder to remove ACEs from (e.g. /someFolder)"
                        },
                        {
                          "flags": "-a --aclEntries <aclEntries>",
                          "required": -17,
                          "optional": 0,
                          "bool": true,
                          "short": "-a",
                          "long": "--aclEntries",
                          "description": "a comma delimited list of the fully qualified ACE entry or entries to delete in the format [default:]<user>|<group>:<object Id> (e.g 'user:5546499e-795f-4f5f-b411-8179051f8b0a' or 'default:group:5546499e-795f-4f5f-b411-8179051f8b0a')"
                        },
                        {
                          "flags": "-q, --quiet",
                          "required": 0,
                          "optional": 0,
                          "bool": true,
                          "short": "-q",
                          "long": "--quiet",
                          "description": "quiet mode (do not ask for delete confirmation)"
                        },
                        {
                          "flags": "-s, --subscription <id>",
                          "required": -20,
                          "optional": 0,
                          "bool": true,
                          "short": "-s",
                          "long": "--subscription",
                          "description": "the subscription identifier"
                        }
                      ]
                    },
                    {
                      "name": "set",
                      "description": "sets the specified Data Lake Store folder ACE entry or entries",
                      "fullName": "datalake store permissions entry set",
                      "usage": "[options] <accountName> <path> <aclEntries>",
                      "filePath": "commands/arm/datalakestore/datalakestore._js",
                      "options": [
                        {
                          "flags": "-v, --verbose",
                          "required": 0,
                          "optional": 0,
                          "bool": true,
                          "short": "-v",
                          "long": "--verbose",
                          "description": "use verbose output"
                        },
                        {
                          "flags": "-vv",
                          "required": 0,
                          "optional": 0,
                          "bool": true,
                          "long": "-vv",
                          "description": "more verbose with debug output"
                        },
                        {
                          "flags": "--json",
                          "required": 0,
                          "optional": 0,
                          "bool": true,
                          "long": "--json",
                          "description": "use json output"
                        },
                        {
                          "flags": "-n --accountName <accountName>",
                          "required": -18,
                          "optional": 0,
                          "bool": true,
                          "short": "-n",
                          "long": "--accountName",
                          "description": "the Data Lake Store account name to execute the action on"
                        },
                        {
                          "flags": "-p --path <path>",
                          "required": -11,
                          "optional": 0,
                          "bool": true,
                          "short": "-p",
                          "long": "--path",
                          "description": "the full path to the folder to set ACEs on (e.g. /someFolder)"
                        },
                        {
                          "flags": "-a --aclEntries <aclEntries>",
                          "required": -17,
                          "optional": 0,
                          "bool": true,
                          "short": "-a",
                          "long": "--aclEntries",
                          "description": "a comma delimited list of the fully qualified ACE entries to set in the format [default:]<user>|<group>:<object Id>:<permissions> (e.g 'user:5546499e-795f-4f5f-b411-8179051f8b0a:r-x' or 'default:group:5546499e-795f-4f5f-b411-8179051f8b0a:rwx')"
                        },
                        {
                          "flags": "-q, --quiet",
                          "required": 0,
                          "optional": 0,
                          "bool": true,
                          "short": "-q",
                          "long": "--quiet",
                          "description": "quiet mode (do not ask for overwrite confirmation)"
                        },
                        {
                          "flags": "-s, --subscription <id>",
                          "required": -20,
                          "optional": 0,
                          "bool": true,
                          "short": "-s",
                          "long": "--subscription",
                          "description": "the subscription identifier"
                        }
                      ]
                    }
                  ],
                  "categories": {}
                }
              }
            },
            "account": {
              "name": "account",
              "description": "Commands to manage your Data Lake Storage accounts",
              "fullName": "datalake store account",
              "usage": "[options] [command]",
              "options": [],
              "commands": [
                {
                  "name": "list",
                  "description": "List all Data Lake Store accounts available for your subscription or subscription and resource group",
                  "fullName": "datalake store account list",
                  "usage": "[options]",
                  "filePath": "commands/arm/datalakestore/datalakestore._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "-g --resource-group <resource-group>",
                      "required": -21,
                      "optional": 0,
                      "bool": true,
                      "short": "-g",
                      "long": "--resource-group",
                      "description": "the optional resource group to list the accounts in"
                    },
                    {
                      "flags": "-s, --subscription <id>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-s",
                      "long": "--subscription",
                      "description": "the subscription identifier"
                    }
                  ]
                },
                {
                  "name": "show",
                  "description": "Shows a Data Lake Store Account based on account name",
                  "fullName": "datalake store account show",
                  "usage": "[options] <accountName>",
                  "filePath": "commands/arm/datalakestore/datalakestore._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "-n --accountName <accountName>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "short": "-n",
                      "long": "--accountName",
                      "description": "the Data Lake Store account name"
                    },
                    {
                      "flags": "-g --resource-group <resource-group>",
                      "required": -21,
                      "optional": 0,
                      "bool": true,
                      "short": "-g",
                      "long": "--resource-group",
                      "description": "the optional resource group to list the accounts in"
                    },
                    {
                      "flags": "-s, --subscription <id>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-s",
                      "long": "--subscription",
                      "description": "the subscription identifier"
                    }
                  ]
                },
                {
                  "name": "delete",
                  "description": "Deletes a Data Lake Store Account based on account name",
                  "fullName": "datalake store account delete",
                  "usage": "[options] <accountName>",
                  "filePath": "commands/arm/datalakestore/datalakestore._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "-n --accountName <accountName>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "short": "-n",
                      "long": "--accountName",
                      "description": "the Data Lake Store account name"
                    },
                    {
                      "flags": "-g --resource-group <resource-group>",
                      "required": -21,
                      "optional": 0,
                      "bool": true,
                      "short": "-g",
                      "long": "--resource-group",
                      "description": "the optional resource group to force the command to find the Data Lake Store account to delete in."
                    },
                    {
                      "flags": "-q, --quiet",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-q",
                      "long": "--quiet",
                      "description": "quiet mode (do not ask for delete confirmation)"
                    },
                    {
                      "flags": "-s, --subscription <id>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-s",
                      "long": "--subscription",
                      "description": "the subscription identifier"
                    }
                  ]
                },
                {
                  "name": "create",
                  "description": "Creates a Data Lake Store Account",
                  "fullName": "datalake store account create",
                  "usage": "[options] <accountName> <location> <resource-group>",
                  "filePath": "commands/arm/datalakestore/datalakestore._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "-n --accountName <accountName>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "short": "-n",
                      "long": "--accountName",
                      "description": "The Data Lake Store account name to create"
                    },
                    {
                      "flags": "-l --location <location>",
                      "required": -15,
                      "optional": 0,
                      "bool": true,
                      "short": "-l",
                      "long": "--location",
                      "description": "the location the Data Lake Store account will be created in. Valid values are: North Central US, South Central US, Central US, West Europe, North Europe, West US, East US, East US 2, Japan East, Japan West, Brazil South, Southeast Asia, East Asia, Australia East, Australia Southeast"
                    },
                    {
                      "flags": "-g --resource-group <resource-group>",
                      "required": -21,
                      "optional": 0,
                      "bool": true,
                      "short": "-g",
                      "long": "--resource-group",
                      "description": "the resource group to create the account in"
                    },
                    {
                      "flags": "-d --defaultGroup <defaultGroup>",
                      "required": -19,
                      "optional": 0,
                      "bool": true,
                      "short": "-d",
                      "long": "--defaultGroup",
                      "description": "the optional default permissions group to add to the account when created"
                    },
                    {
                      "flags": "-t --tags <tags>",
                      "required": -11,
                      "optional": 0,
                      "bool": true,
                      "short": "-t",
                      "long": "--tags",
                      "description": "Tags to set to the the Data Lake Store account. Can be mutliple. In the format of 'name=value'. Name is required and value is optional. For example, -t tag1=value1;tag2"
                    },
                    {
                      "flags": "-s, --subscription <id>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-s",
                      "long": "--subscription",
                      "description": "the subscription identifier"
                    }
                  ]
                },
                {
                  "name": "set",
                  "description": "Updates the properties of an existing Data Lake Store Account",
                  "fullName": "datalake store account set",
                  "usage": "[options] <accountName>",
                  "filePath": "commands/arm/datalakestore/datalakestore._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "-n --accountName <accountName>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "short": "-n",
                      "long": "--accountName",
                      "description": "The Data Lake Store account name to update with new tags and/or default permissions group"
                    },
                    {
                      "flags": "-g --resource-group <resource-group>",
                      "required": -21,
                      "optional": 0,
                      "bool": true,
                      "short": "-g",
                      "long": "--resource-group",
                      "description": "the optional resource group to forcibly look for the account to update in"
                    },
                    {
                      "flags": "-d --defaultGroup <defaultGroup>",
                      "required": -19,
                      "optional": 0,
                      "bool": true,
                      "short": "-d",
                      "long": "--defaultGroup",
                      "description": "the optional default permissions group to set in the existing account"
                    },
                    {
                      "flags": "-t --tags <tags>",
                      "required": -11,
                      "optional": 0,
                      "bool": true,
                      "short": "-t",
                      "long": "--tags",
                      "description": "Tags to set to the Data Lake Store account. Can be mutliple. In the format of 'name=value'. Name is required and value is optional. For example, -t tag1=value1;tag2"
                    },
                    {
                      "flags": "--no-tags",
                      "required": 0,
                      "optional": 0,
                      "bool": false,
                      "long": "--no-tags",
                      "description": "remove all existing tags"
                    },
                    {
                      "flags": "-s, --subscription <id>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-s",
                      "long": "--subscription",
                      "description": "the subscription identifier"
                    }
                  ]
                }
              ],
              "categories": {}
            }
          }
        }
      }
    },
    "feature": {
      "name": "feature",
      "description": "Commands to manage your features",
      "fullName": "feature",
      "usage": "[options] [command]",
      "options": [],
      "commands": [
        {
          "name": "list",
          "description": "List all features available for your subscription",
          "fullName": "feature list",
          "usage": "[options]",
          "filePath": "commands/arm/feature/feature._js",
          "options": [
            {
              "flags": "-v, --verbose",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-v",
              "long": "--verbose",
              "description": "use verbose output"
            },
            {
              "flags": "-vv",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "-vv",
              "description": "more verbose with debug output"
            },
            {
              "flags": "--json",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--json",
              "description": "use json output"
            },
            {
              "flags": "--subscription <subscription>",
              "required": -16,
              "optional": 0,
              "bool": true,
              "long": "--subscription",
              "description": "the subscription identifier"
            }
          ]
        },
        {
          "name": "show",
          "description": "Shows a feature",
          "fullName": "feature show",
          "usage": "[options] <providerName> <featureName>",
          "filePath": "commands/arm/feature/feature._js",
          "options": [
            {
              "flags": "-v, --verbose",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-v",
              "long": "--verbose",
              "description": "use verbose output"
            },
            {
              "flags": "-vv",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "-vv",
              "description": "more verbose with debug output"
            },
            {
              "flags": "--json",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--json",
              "description": "use json output"
            },
            {
              "flags": "-p --providerName <providerName>",
              "required": -19,
              "optional": 0,
              "bool": true,
              "short": "-p",
              "long": "--providerName",
              "description": "the resource provider name"
            },
            {
              "flags": "-n --featureName <featureName>",
              "required": -18,
              "optional": 0,
              "bool": true,
              "short": "-n",
              "long": "--featureName",
              "description": "the feature name"
            },
            {
              "flags": "--subscription <subscription>",
              "required": -16,
              "optional": 0,
              "bool": true,
              "long": "--subscription",
              "description": "the subscription identifier"
            }
          ]
        },
        {
          "name": "register",
          "description": "Registers a previewed feature of a resource provider.",
          "fullName": "feature register",
          "usage": "[options] <providerName> <featureName>",
          "filePath": "commands/arm/feature/feature._js",
          "options": [
            {
              "flags": "-v, --verbose",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-v",
              "long": "--verbose",
              "description": "use verbose output"
            },
            {
              "flags": "-vv",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "-vv",
              "description": "more verbose with debug output"
            },
            {
              "flags": "--json",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--json",
              "description": "use json output"
            },
            {
              "flags": "-p --providerName <providerName>",
              "required": -19,
              "optional": 0,
              "bool": true,
              "short": "-p",
              "long": "--providerName",
              "description": "the resource provider name"
            },
            {
              "flags": "-n --name <featureName>",
              "required": -11,
              "optional": 0,
              "bool": true,
              "short": "-n",
              "long": "--name",
              "description": "the feature name"
            },
            {
              "flags": "--subscription <subscription>",
              "required": -16,
              "optional": 0,
              "bool": true,
              "long": "--subscription",
              "description": "the subscription identifier"
            }
          ]
        }
      ],
      "categories": {}
    },
    "group": {
      "name": "group",
      "description": "Commands to manage your resource groups",
      "fullName": "group",
      "usage": "[options] [command]",
      "options": [],
      "commands": [
        {
          "name": "create",
          "description": "Creates a new resource group",
          "fullName": "group create",
          "usage": "[options] <name> <location>",
          "filePath": "commands/arm/group/group._js",
          "options": [
            {
              "flags": "-v, --verbose",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-v",
              "long": "--verbose",
              "description": "use verbose output"
            },
            {
              "flags": "-vv",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "-vv",
              "description": "more verbose with debug output"
            },
            {
              "flags": "--json",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--json",
              "description": "use json output"
            },
            {
              "flags": "-n --name <name>",
              "required": -11,
              "optional": 0,
              "bool": true,
              "short": "-n",
              "long": "--name",
              "description": "the resource group name"
            },
            {
              "flags": "-l --location <location>",
              "required": -15,
              "optional": 0,
              "bool": true,
              "short": "-l",
              "long": "--location",
              "description": "the location where we will create the group"
            },
            {
              "flags": "-d --deployment-name <deployment-name>",
              "required": -22,
              "optional": 0,
              "bool": true,
              "short": "-d",
              "long": "--deployment-name",
              "description": "the name of the deployment we will create (only valid when a template is used)"
            },
            {
              "flags": "-f --template-file <template-file>",
              "required": -20,
              "optional": 0,
              "bool": true,
              "short": "-f",
              "long": "--template-file",
              "description": "the path to the template file in the file system",
              "fileRelatedOption": true
            },
            {
              "flags": "--template-uri <template-uri>",
              "required": -16,
              "optional": 0,
              "bool": true,
              "long": "--template-uri",
              "description": "the uri to the remote template file"
            },
            {
              "flags": "--template-version <template-version>",
              "required": -20,
              "optional": 0,
              "bool": true,
              "long": "--template-version",
              "description": "the content version of the template"
            },
            {
              "flags": "-p --parameters <parameters>",
              "required": -17,
              "optional": 0,
              "bool": true,
              "short": "-p",
              "long": "--parameters",
              "description": "a JSON-formatted string containing parameters"
            },
            {
              "flags": "-e --parameters-file <parametersFile>",
              "required": -22,
              "optional": 0,
              "bool": true,
              "short": "-e",
              "long": "--parameters-file",
              "description": "a file containing parameters",
              "fileRelatedOption": true
            },
            {
              "flags": "-t --tags <tags>",
              "required": -11,
              "optional": 0,
              "bool": true,
              "short": "-t",
              "long": "--tags",
              "description": "Tags to set to the resource group. Can be multiple. In the format of 'name=value'. Name is required and value is optional. For example, -t tag1=value1;tag2"
            },
            {
              "flags": "--subscription <subscription>",
              "required": -16,
              "optional": 0,
              "bool": true,
              "long": "--subscription",
              "description": "the subscription identifier"
            }
          ]
        },
        {
          "name": "set",
          "description": "Set tags to a resource group",
          "fullName": "group set",
          "usage": "[options] <name> <tags>",
          "filePath": "commands/arm/group/group._js",
          "options": [
            {
              "flags": "-v, --verbose",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-v",
              "long": "--verbose",
              "description": "use verbose output"
            },
            {
              "flags": "-vv",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "-vv",
              "description": "more verbose with debug output"
            },
            {
              "flags": "--json",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--json",
              "description": "use json output"
            },
            {
              "flags": "-n --name <name>",
              "required": -11,
              "optional": 0,
              "bool": true,
              "short": "-n",
              "long": "--name",
              "description": "the resource group name"
            },
            {
              "flags": "-t --tags <tags>",
              "required": -11,
              "optional": 0,
              "bool": true,
              "short": "-t",
              "long": "--tags",
              "description": "Tags to set to the resource group. Can be multiple. In the format of 'name=value'. Name is required and value is optional. For example, -t tag1=value1;tag2"
            },
            {
              "flags": "--no-tags",
              "required": 0,
              "optional": 0,
              "bool": false,
              "long": "--no-tags",
              "description": "remove all existing tags"
            },
            {
              "flags": "--subscription <subscription>",
              "required": -16,
              "optional": 0,
              "bool": true,
              "long": "--subscription",
              "description": "the subscription identifier"
            }
          ]
        },
        {
          "name": "delete",
          "description": "Deletes a resource group",
          "fullName": "group delete",
          "usage": "[options] <name>",
          "filePath": "commands/arm/group/group._js",
          "options": [
            {
              "flags": "-v, --verbose",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-v",
              "long": "--verbose",
              "description": "use verbose output"
            },
            {
              "flags": "-vv",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "-vv",
              "description": "more verbose with debug output"
            },
            {
              "flags": "--json",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--json",
              "description": "use json output"
            },
            {
              "flags": "-n --name <name>",
              "required": -11,
              "optional": 0,
              "bool": true,
              "short": "-n",
              "long": "--name",
              "description": "the resource group name"
            },
            {
              "flags": "-q, --quiet",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-q",
              "long": "--quiet",
              "description": "quiet mode (do not ask for delete confirmation)"
            },
            {
              "flags": "--subscription <subscription>",
              "required": -16,
              "optional": 0,
              "bool": true,
              "long": "--subscription",
              "description": "the subscription identifier"
            }
          ]
        },
        {
          "name": "list",
          "description": "Lists the resource groups for your subscription",
          "fullName": "group list",
          "usage": "[options]",
          "filePath": "commands/arm/group/group._js",
          "options": [
            {
              "flags": "-v, --verbose",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-v",
              "long": "--verbose",
              "description": "use verbose output"
            },
            {
              "flags": "-vv",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "-vv",
              "description": "more verbose with debug output"
            },
            {
              "flags": "--json",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--json",
              "description": "use json output"
            },
            {
              "flags": "-d, --details",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-d",
              "long": "--details",
              "description": "show additional resource group details such as resources, permissions etc."
            },
            {
              "flags": "-t --tags <tags>",
              "required": -11,
              "optional": 0,
              "bool": true,
              "short": "-t",
              "long": "--tags",
              "description": "Tag to use to filter to the resource group. Can only take 1 tag. In the format of \"name=value\". Name is required and value is optional. For example, -t tag1 or -t tag1=value1."
            },
            {
              "flags": "--subscription <subscription>",
              "required": -16,
              "optional": 0,
              "bool": true,
              "long": "--subscription",
              "description": "the subscription identifier"
            }
          ]
        },
        {
          "name": "show",
          "description": "Shows a resource group for your subscription",
          "fullName": "group show",
          "usage": "[options] <name>",
          "filePath": "commands/arm/group/group._js",
          "options": [
            {
              "flags": "-v, --verbose",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-v",
              "long": "--verbose",
              "description": "use verbose output"
            },
            {
              "flags": "-vv",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "-vv",
              "description": "more verbose with debug output"
            },
            {
              "flags": "--json",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--json",
              "description": "use json output"
            },
            {
              "flags": "-n --name <name>",
              "required": -11,
              "optional": 0,
              "bool": true,
              "short": "-n",
              "long": "--name",
              "description": "the resource group name"
            },
            {
              "flags": "--subscription <subscription>",
              "required": -16,
              "optional": 0,
              "bool": true,
              "long": "--subscription",
              "description": "the subscription identifier"
            }
          ]
        }
      ],
      "categories": {
        "log": {
          "name": "log",
          "description": "Commands to manage resource group logs",
          "fullName": "group log",
          "usage": "[options] [command]",
          "options": [],
          "commands": [
            {
              "name": "show",
              "description": "Retrieves and shows logs for resource group operations",
              "fullName": "group log show",
              "usage": "[options] [name]",
              "filePath": "commands/arm/group/group._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "-n --name <name>",
                  "required": -11,
                  "optional": 0,
                  "bool": true,
                  "short": "-n",
                  "long": "--name",
                  "description": "the resource group name"
                },
                {
                  "flags": "-a --all",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-a",
                  "long": "--all",
                  "description": "returns logs for all operations (including CRUD and deployment)"
                },
                {
                  "flags": "-l --last-deployment",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-l",
                  "long": "--last-deployment",
                  "description": "returns logs for the last deployment"
                },
                {
                  "flags": "-d --deployment <name>",
                  "required": -17,
                  "optional": 0,
                  "bool": true,
                  "short": "-d",
                  "long": "--deployment",
                  "description": "the name of the deployment whose logs you want to see"
                },
                {
                  "flags": "-s --subscription <subscription>",
                  "required": -19,
                  "optional": 0,
                  "bool": true,
                  "short": "-s",
                  "long": "--subscription",
                  "description": "the subscription identifier"
                }
              ]
            }
          ],
          "categories": {}
        },
        "deployment": {
          "name": "deployment",
          "description": "Commands to manage your deployment in a resource group",
          "fullName": "group deployment",
          "usage": "[options] [command]",
          "options": [],
          "commands": [
            {
              "name": "create",
              "description": "Creates a deployment",
              "fullName": "group deployment create",
              "usage": "[options] [resource-group] [name]",
              "filePath": "commands/arm/group/group.deployment._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "-g --resource-group <resource-group>",
                  "required": -21,
                  "optional": 0,
                  "bool": true,
                  "short": "-g",
                  "long": "--resource-group",
                  "description": "the name of the resource group"
                },
                {
                  "flags": "-n --name <name>",
                  "required": -11,
                  "optional": 0,
                  "bool": true,
                  "short": "-n",
                  "long": "--name",
                  "description": "the name of the deployment"
                },
                {
                  "flags": "-f --template-file <template-file>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "short": "-f",
                  "long": "--template-file",
                  "description": "the path to the template file in the file system",
                  "fileRelatedOption": true
                },
                {
                  "flags": "--template-uri <template-uri>",
                  "required": -16,
                  "optional": 0,
                  "bool": true,
                  "long": "--template-uri",
                  "description": "the uri to the remote template file"
                },
                {
                  "flags": "--template-version <template-version>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "long": "--template-version",
                  "description": "the content version of the template"
                },
                {
                  "flags": "-p --parameters <parameters>",
                  "required": -17,
                  "optional": 0,
                  "bool": true,
                  "short": "-p",
                  "long": "--parameters",
                  "description": "a JSON-formatted string containing parameters"
                },
                {
                  "flags": "-e --parameters-file <parametersFile>",
                  "required": -22,
                  "optional": 0,
                  "bool": true,
                  "short": "-e",
                  "long": "--parameters-file",
                  "description": "a file containing parameters",
                  "fileRelatedOption": true
                },
                {
                  "flags": "-m --mode <mode>",
                  "required": -11,
                  "optional": 0,
                  "bool": true,
                  "short": "-m",
                  "long": "--mode",
                  "description": "the deployment mode: specify one of Incremental or Complete. If no mode is specified, Incremental is used as default. When Complete mode is used, all the resources in the specified resource group, which are not included in the template, will be deleted."
                },
                {
                  "flags": "-q --quiet",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-q",
                  "long": "--quiet",
                  "description": "quiet mode (when complete mode is specified, do not ask for deployment confirmation)"
                },
                {
                  "flags": "--nowait",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--nowait",
                  "description": "does not wait for the deployment to complete. Returns as soon as the deployment is created"
                },
                {
                  "flags": "--novalidate",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--novalidate",
                  "description": "do not validate deployment"
                },
                {
                  "flags": "--subscription <subscription>",
                  "required": -16,
                  "optional": 0,
                  "bool": true,
                  "long": "--subscription",
                  "description": "the subscription identifier"
                }
              ]
            },
            {
              "name": "list",
              "description": "Gets deployments",
              "fullName": "group deployment list",
              "usage": "[options] <resource-group> [state]",
              "filePath": "commands/arm/group/group.deployment._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "-g --resource-group <resourceGroup>",
                  "required": -21,
                  "optional": 0,
                  "bool": true,
                  "short": "-g",
                  "long": "--resource-group",
                  "description": "the name of the resource group."
                },
                {
                  "flags": "--state <state>",
                  "required": -9,
                  "optional": 0,
                  "bool": true,
                  "long": "--state",
                  "description": "filter the deployments by provisioning state (valid values are Accepted, Running, Failed, and Succeeded)"
                },
                {
                  "flags": "--subscription <subscription>",
                  "required": -16,
                  "optional": 0,
                  "bool": true,
                  "long": "--subscription",
                  "description": "subscription containing deployments to list (optional)"
                }
              ]
            },
            {
              "name": "show",
              "description": "Shows a deployment",
              "fullName": "group deployment show",
              "usage": "[options] <resource-group> [deployment-name]",
              "filePath": "commands/arm/group/group.deployment._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "-g --resource-group <resourceGroup>",
                  "required": -21,
                  "optional": 0,
                  "bool": true,
                  "short": "-g",
                  "long": "--resource-group",
                  "description": "the name of the resource group."
                },
                {
                  "flags": "-n --name <name>",
                  "required": -11,
                  "optional": 0,
                  "bool": true,
                  "short": "-n",
                  "long": "--name",
                  "description": "the name of the deployment (if not specified, the most recent deployment is shown)"
                },
                {
                  "flags": "--subscription <subscription>",
                  "required": -16,
                  "optional": 0,
                  "bool": true,
                  "long": "--subscription",
                  "description": "subscription containing the deployment to display (optional)"
                }
              ]
            },
            {
              "name": "stop",
              "description": "Stops a deployment",
              "fullName": "group deployment stop",
              "usage": "[options] <resource-group> [deployment-name]",
              "filePath": "commands/arm/group/group.deployment._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "-g --resource-group <resourceGroup>",
                  "required": -21,
                  "optional": 0,
                  "bool": true,
                  "short": "-g",
                  "long": "--resource-group",
                  "description": "the name of the resource group"
                },
                {
                  "flags": "-q --quiet",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-q",
                  "long": "--quiet",
                  "description": "quiet mode (do not ask for stop deployment confirmation)"
                },
                {
                  "flags": "-n --name <name>",
                  "required": -11,
                  "optional": 0,
                  "bool": true,
                  "short": "-n",
                  "long": "--name",
                  "description": "the name of the deployment (if not specified, the currently running deployment is stopped)"
                },
                {
                  "flags": "--subscription <subscription>",
                  "required": -16,
                  "optional": 0,
                  "bool": true,
                  "long": "--subscription",
                  "description": "the subscription identifier"
                }
              ]
            },
            {
              "name": "delete",
              "description": "Deletes a deployment",
              "fullName": "group deployment delete",
              "usage": "[options] <resource-group> <deployment-name>",
              "filePath": "commands/arm/group/group.deployment._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "-g --resource-group <resourceGroup>",
                  "required": -21,
                  "optional": 0,
                  "bool": true,
                  "short": "-g",
                  "long": "--resource-group",
                  "description": "the name of the resource group."
                },
                {
                  "flags": "-n --name <name>",
                  "required": -11,
                  "optional": 0,
                  "bool": true,
                  "short": "-n",
                  "long": "--name",
                  "description": "the name of the deployment."
                },
                {
                  "flags": "-q, --quiet",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-q",
                  "long": "--quiet",
                  "description": "quiet mode (do not ask for delete confirmation)"
                },
                {
                  "flags": "--subscription <subscription>",
                  "required": -16,
                  "optional": 0,
                  "bool": true,
                  "long": "--subscription",
                  "description": "subscription containing the deployment to display (optional)"
                }
              ]
            }
          ],
          "categories": {
            "operation": {
              "name": "operation",
              "description": "Commands to list deployment operations in a resource group",
              "fullName": "group deployment operation",
              "usage": "[options] [command]",
              "options": [],
              "commands": [
                {
                  "name": "list",
                  "description": "Lists operations in a deployment",
                  "fullName": "group deployment operation list",
                  "usage": "[options] [resource-group] [name]",
                  "filePath": "commands/arm/group/group.deployment.operation._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "-g --resource-group <resource-group>",
                      "required": -21,
                      "optional": 0,
                      "bool": true,
                      "short": "-g",
                      "long": "--resource-group",
                      "description": "the name of the resource group"
                    },
                    {
                      "flags": "-n --name <name>",
                      "required": -11,
                      "optional": 0,
                      "bool": true,
                      "short": "-n",
                      "long": "--name",
                      "description": "the name of the deployment"
                    },
                    {
                      "flags": "--subscription <subscription>",
                      "required": -16,
                      "optional": 0,
                      "bool": true,
                      "long": "--subscription",
                      "description": "the subscription identifier"
                    }
                  ]
                }
              ],
              "categories": {}
            }
          }
        },
        "template": {
          "name": "template",
          "description": "Commands to manage your local or gallery resource group template",
          "fullName": "group template",
          "usage": "[options] [command]",
          "options": [],
          "commands": [
            {
              "name": "list",
              "description": "Lists gallery resource group templates",
              "fullName": "group template list",
              "usage": "[options]",
              "filePath": "commands/arm/group/group.template._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "-c --category [category]",
                  "required": 0,
                  "optional": -15,
                  "bool": true,
                  "short": "-c",
                  "long": "--category",
                  "description": "the category of the templates to list"
                },
                {
                  "flags": "-p --publisher [publisher]",
                  "required": 0,
                  "optional": -16,
                  "bool": true,
                  "short": "-p",
                  "long": "--publisher",
                  "description": "the publisher of the templates to list"
                }
              ]
            },
            {
              "name": "show",
              "description": "Shows a gallery resource group template",
              "fullName": "group template show",
              "usage": "[options] <name>",
              "filePath": "commands/arm/group/group.template._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "-n --name <name>",
                  "required": -11,
                  "optional": 0,
                  "bool": true,
                  "short": "-n",
                  "long": "--name",
                  "description": "the name of template to show"
                }
              ]
            },
            {
              "name": "download",
              "description": "Downloads a gallery resource group template",
              "fullName": "group template download",
              "usage": "[options] [name] [directory]",
              "filePath": "commands/arm/group/group.template._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "-n --name <name>",
                  "required": -11,
                  "optional": 0,
                  "bool": true,
                  "short": "-n",
                  "long": "--name",
                  "description": "the name of the template to download"
                },
                {
                  "flags": "-d --directory <directory>",
                  "required": -16,
                  "optional": 0,
                  "bool": true,
                  "short": "-d",
                  "long": "--directory",
                  "description": "the name of the destination directory"
                },
                {
                  "flags": "-q --quiet",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-q",
                  "long": "--quiet",
                  "description": "quiet mode (do not prompt for overwrite if output file exists)"
                }
              ]
            },
            {
              "name": "validate",
              "description": "Validates a template to see whether it's using the right syntax, resource providers, resource types, etc.",
              "fullName": "group template validate",
              "usage": "[options] <resource-group>",
              "filePath": "commands/arm/group/group.template._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "-g --resource-group <resource-group>",
                  "required": -21,
                  "optional": 0,
                  "bool": true,
                  "short": "-g",
                  "long": "--resource-group",
                  "description": "the name of the resource group"
                },
                {
                  "flags": "-f --template-file <template-file>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "short": "-f",
                  "long": "--template-file",
                  "description": "the path to the template file in the file system",
                  "fileRelatedOption": true
                },
                {
                  "flags": "--template-uri <template-uri>",
                  "required": -16,
                  "optional": 0,
                  "bool": true,
                  "long": "--template-uri",
                  "description": "the uri to the remote template file"
                },
                {
                  "flags": "--template-version <template-version>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "long": "--template-version",
                  "description": "the content version of the template"
                },
                {
                  "flags": "-p --parameters <parameters>",
                  "required": -17,
                  "optional": 0,
                  "bool": true,
                  "short": "-p",
                  "long": "--parameters",
                  "description": "a JSON-formatted string containing parameters"
                },
                {
                  "flags": "-e --parameters-file <parametersFile>",
                  "required": -22,
                  "optional": 0,
                  "bool": true,
                  "short": "-e",
                  "long": "--parameters-file",
                  "description": "a file containing parameters",
                  "fileRelatedOption": true
                },
                {
                  "flags": "--subscription <subscription>",
                  "required": -16,
                  "optional": 0,
                  "bool": true,
                  "long": "--subscription",
                  "description": "the subscription identifier"
                }
              ]
            }
          ],
          "categories": {}
        }
      }
    },
    "hdinsight": {
      "name": "hdinsight",
      "description": "Commands to manage HDInsight clusters and jobs",
      "fullName": "hdinsight",
      "usage": "[options]",
      "options": [],
      "commands": [],
      "categories": {
        "cluster": {
          "name": "cluster",
          "description": "Commands to manage HDInsight clusters",
          "fullName": "hdinsight cluster",
          "usage": "[options] [command]",
          "options": [],
          "commands": [
            {
              "name": "create",
              "description": "Create a cluster in a resource group",
              "fullName": "hdinsight cluster create",
              "usage": "[options] <clusterName>",
              "filePath": "commands/arm/hdinsight/hdinsight._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "-g --resource-group <resource-group>",
                  "required": -21,
                  "optional": 0,
                  "bool": true,
                  "short": "-g",
                  "long": "--resource-group",
                  "description": "The name of the resource group"
                },
                {
                  "flags": "-c, --clusterName <clusterName>",
                  "required": -19,
                  "optional": 0,
                  "bool": true,
                  "short": "-c",
                  "long": "--clusterName",
                  "description": "HDInsight cluster name"
                },
                {
                  "flags": "-l, --location <location>",
                  "required": -16,
                  "optional": 0,
                  "bool": true,
                  "short": "-l",
                  "long": "--location",
                  "description": "Data center location for the cluster"
                },
                {
                  "flags": "-y, --osType <osType>",
                  "required": -14,
                  "optional": 0,
                  "bool": true,
                  "short": "-y",
                  "long": "--osType",
                  "description": "HDInsight cluster operating system - 'Windows' or 'Linux'"
                },
                {
                  "flags": "--version <version>",
                  "required": -11,
                  "optional": 0,
                  "bool": true,
                  "long": "--version",
                  "description": "HDInsight cluster version"
                },
                {
                  "flags": "--clusterType <clusterType>",
                  "required": -15,
                  "optional": 0,
                  "bool": true,
                  "long": "--clusterType",
                  "description": "HDInsight cluster type. Hadoop | HBase | Spark | Storm"
                },
                {
                  "flags": "--defaultStorageAccountName <storageAccountName>",
                  "required": -29,
                  "optional": 0,
                  "bool": true,
                  "long": "--defaultStorageAccountName",
                  "description": "Storage account url to use for default HDInsight storage"
                },
                {
                  "flags": "--defaultStorageAccountKey <storageAccountKey>",
                  "required": -28,
                  "optional": 0,
                  "bool": true,
                  "long": "--defaultStorageAccountKey",
                  "description": "Key to the storage account to use for default HDInsight storage"
                },
                {
                  "flags": "--defaultStorageContainer <storageContainer>",
                  "required": -27,
                  "optional": 0,
                  "bool": true,
                  "long": "--defaultStorageContainer",
                  "description": "Container in the storage account to use for HDInsight default storage"
                },
                {
                  "flags": "--headNodeSize <headNodeSize>",
                  "required": -16,
                  "optional": 0,
                  "bool": true,
                  "long": "--headNodeSize",
                  "description": "(Optional) Head node size for the cluster"
                },
                {
                  "flags": "--workerNodeCount <workerNodeCount>",
                  "required": -19,
                  "optional": 0,
                  "bool": true,
                  "long": "--workerNodeCount",
                  "description": "Number of worker nodes to use for the cluster"
                },
                {
                  "flags": "--workerNodeSize <workerNodeSize>",
                  "required": -18,
                  "optional": 0,
                  "bool": true,
                  "long": "--workerNodeSize",
                  "description": "(Optional) Worker node size for the cluster)"
                },
                {
                  "flags": "--zookeeperNodeSize <zookeeperNodeSize>",
                  "required": -21,
                  "optional": 0,
                  "bool": true,
                  "long": "--zookeeperNodeSize",
                  "description": "(Optional) Zookeeper node size for the cluster"
                },
                {
                  "flags": "--userName <userName>",
                  "required": -12,
                  "optional": 0,
                  "bool": true,
                  "long": "--userName",
                  "description": "Cluster username"
                },
                {
                  "flags": "--password <password>",
                  "required": -12,
                  "optional": 0,
                  "bool": true,
                  "long": "--password",
                  "description": "Cluster password"
                },
                {
                  "flags": "--sshUserName <sshUserName>",
                  "required": -15,
                  "optional": 0,
                  "bool": true,
                  "long": "--sshUserName",
                  "description": "SSH username (only for Linux clusters)"
                },
                {
                  "flags": "--sshPassword <sshPassword>",
                  "required": -15,
                  "optional": 0,
                  "bool": true,
                  "long": "--sshPassword",
                  "description": "SSH password (only for Linux clusters)"
                },
                {
                  "flags": "--sshPublicKey <sshPublicKey>",
                  "required": -16,
                  "optional": 0,
                  "bool": true,
                  "long": "--sshPublicKey",
                  "description": "SSH public key (only for Linux clusters)"
                },
                {
                  "flags": "--rdpUserName <rdpUserName>",
                  "required": -15,
                  "optional": 0,
                  "bool": true,
                  "long": "--rdpUserName",
                  "description": "RDP username (only for Windows clusters)"
                },
                {
                  "flags": "--rdpPassword <rdpPassword>",
                  "required": -15,
                  "optional": 0,
                  "bool": true,
                  "long": "--rdpPassword",
                  "description": "RDP password (only for Windows clusters)"
                },
                {
                  "flags": "--rdpAccessExpiry <rdpAccessExpiry>",
                  "required": -19,
                  "optional": 0,
                  "bool": true,
                  "long": "--rdpAccessExpiry",
                  "description": "RDP access expiry. For example 12/12/2015 (only for Windows clusters)"
                },
                {
                  "flags": "--virtualNetworkId <virtualNetworkId>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "long": "--virtualNetworkId",
                  "description": "(Optional) Virtual network ID for the cluster. Value is a GUID for Windows cluster and ARM resource ID for Linux cluster) "
                },
                {
                  "flags": "--subnetName <subnetName>",
                  "required": -14,
                  "optional": 0,
                  "bool": true,
                  "long": "--subnetName",
                  "description": "(Optional) Subnet for the cluster"
                },
                {
                  "flags": "--additionalStorageAccounts <additionalStorageAccounts>",
                  "required": -29,
                  "optional": 0,
                  "bool": true,
                  "long": "--additionalStorageAccounts",
                  "description": "(Optional) Additional storage accounts. Can be multiple. In the format of 'accountName#accountKey'. For example, --additionalStorageAccounts \"acc1#key1;acc2#key2\""
                },
                {
                  "flags": "--hiveMetastoreServerName <hiveMetastoreServerName>",
                  "required": -27,
                  "optional": 0,
                  "bool": true,
                  "long": "--hiveMetastoreServerName",
                  "description": "(Optional) SQL Server name for the external metastore for Hive"
                },
                {
                  "flags": "--hiveMetastoreDatabaseName <hiveMetastoreDatabaseName>",
                  "required": -29,
                  "optional": 0,
                  "bool": true,
                  "long": "--hiveMetastoreDatabaseName",
                  "description": "(Optional) Database name for the external metastore for Hive"
                },
                {
                  "flags": "--hiveMetastoreUserName <hiveMetastoreUserName>",
                  "required": -25,
                  "optional": 0,
                  "bool": true,
                  "long": "--hiveMetastoreUserName",
                  "description": "(Optional) Database username for the external metastore for Hive"
                },
                {
                  "flags": "--hiveMetastorePassword <hiveMetastorePassword>",
                  "required": -25,
                  "optional": 0,
                  "bool": true,
                  "long": "--hiveMetastorePassword",
                  "description": "(Optional) Database password for the external metastore for Hive"
                },
                {
                  "flags": "--oozieMetastoreServerName <oozieMetastoreServerName>",
                  "required": -28,
                  "optional": 0,
                  "bool": true,
                  "long": "--oozieMetastoreServerName",
                  "description": "(Optional) SQL Server name for the external metastore for Oozie"
                },
                {
                  "flags": "--oozieMetastoreDatabaseName <oozieMetastoreDatabaseName>",
                  "required": -30,
                  "optional": 0,
                  "bool": true,
                  "long": "--oozieMetastoreDatabaseName",
                  "description": "(Optional) Database name for the external metastore for Oozie"
                },
                {
                  "flags": "--oozieMetastoreUserName <oozieMetastoreUserName>",
                  "required": -26,
                  "optional": 0,
                  "bool": true,
                  "long": "--oozieMetastoreUserName",
                  "description": "(Optional) Database username for the external metastore for Oozie"
                },
                {
                  "flags": "--oozieMetastorePassword <oozieMetastorePassword>",
                  "required": -26,
                  "optional": 0,
                  "bool": true,
                  "long": "--oozieMetastorePassword",
                  "description": "(Optional) Database password for the external metastore for Oozie"
                },
                {
                  "flags": "--configurationPath <configurationPath>",
                  "required": -21,
                  "optional": 0,
                  "bool": true,
                  "long": "--configurationPath",
                  "description": "(Optional) HDInsight cluster configuration file path"
                },
                {
                  "flags": "-s, --subscription <id>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "short": "-s",
                  "long": "--subscription",
                  "description": "The subscription id"
                },
                {
                  "flags": "--tags <tags>",
                  "required": -8,
                  "optional": 0,
                  "bool": true,
                  "long": "--tags",
                  "description": "Tags to set to the cluster. Can be multiple. In the format of 'name=value'. Name is required and value is optional. For example, --tags tag1=value1;tag2"
                }
              ]
            },
            {
              "name": "delete",
              "description": "Delete a cluster",
              "fullName": "hdinsight cluster delete",
              "usage": "[options] <clusterName>",
              "filePath": "commands/arm/hdinsight/hdinsight._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "-g --resource-group <resource-group>",
                  "required": -21,
                  "optional": 0,
                  "bool": true,
                  "short": "-g",
                  "long": "--resource-group",
                  "description": "The name of the resource group"
                },
                {
                  "flags": "--clusterName <clusterName>",
                  "required": -15,
                  "optional": 0,
                  "bool": true,
                  "long": "--clusterName",
                  "description": "Cluster name"
                },
                {
                  "flags": "-q, --quiet",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-q",
                  "long": "--quiet",
                  "description": "quiet mode (do not ask for delete confirmation)"
                },
                {
                  "flags": "-s, --subscription <id>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "short": "-s",
                  "long": "--subscription",
                  "description": "The subscription id"
                }
              ]
            },
            {
              "name": "show",
              "description": "Show cluster details",
              "fullName": "hdinsight cluster show",
              "usage": "[options] <clusterName>",
              "filePath": "commands/arm/hdinsight/hdinsight._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "-g --resource-group <resource-group>",
                  "required": -21,
                  "optional": 0,
                  "bool": true,
                  "short": "-g",
                  "long": "--resource-group",
                  "description": "The name of the resource group"
                },
                {
                  "flags": "-c, --clusterName <clusterName>",
                  "required": -19,
                  "optional": 0,
                  "bool": true,
                  "short": "-c",
                  "long": "--clusterName",
                  "description": "HDInsight cluster name"
                },
                {
                  "flags": "-s, --subscription <id>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "short": "-s",
                  "long": "--subscription",
                  "description": "The subscription id"
                }
              ]
            },
            {
              "name": "list",
              "description": "List all the clusters (in a specific resource group if provided) .",
              "fullName": "hdinsight cluster list",
              "usage": "[options]",
              "filePath": "commands/arm/hdinsight/hdinsight._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "-g --resource-group <resource-group>",
                  "required": -21,
                  "optional": 0,
                  "bool": true,
                  "short": "-g",
                  "long": "--resource-group",
                  "description": "The name of the resource group"
                },
                {
                  "flags": "-s, --subscription <id>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "short": "-s",
                  "long": "--subscription",
                  "description": "The subscription id"
                }
              ]
            },
            {
              "name": "resize",
              "description": "Resizes the cluster",
              "fullName": "hdinsight cluster resize",
              "usage": "[options] <clusterName> <targetInstanceCount>",
              "filePath": "commands/arm/hdinsight/hdinsight._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "-g --resource-group <resource-group>",
                  "required": -21,
                  "optional": 0,
                  "bool": true,
                  "short": "-g",
                  "long": "--resource-group",
                  "description": "The name of the resource group"
                },
                {
                  "flags": "-c, --clusterName <clusterName>",
                  "required": -19,
                  "optional": 0,
                  "bool": true,
                  "short": "-c",
                  "long": "--clusterName",
                  "description": "HDInsight cluster name"
                },
                {
                  "flags": "--targetInstanceCount <targetInstanceCount>",
                  "required": -23,
                  "optional": 0,
                  "bool": true,
                  "long": "--targetInstanceCount",
                  "description": "Target instance count."
                },
                {
                  "flags": "-s, --subscription <id>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "short": "-s",
                  "long": "--subscription",
                  "description": "The subscription id"
                }
              ]
            },
            {
              "name": "enable-http-access",
              "description": "Enable HTTP access for cluster",
              "fullName": "hdinsight cluster enable-http-access",
              "usage": "[options] <clusterName> <userName> <password>",
              "filePath": "commands/arm/hdinsight/hdinsight._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "-g --resource-group <resource-group>",
                  "required": -21,
                  "optional": 0,
                  "bool": true,
                  "short": "-g",
                  "long": "--resource-group",
                  "description": "The name of the resource group"
                },
                {
                  "flags": "-c, --clusterName <clusterName>",
                  "required": -19,
                  "optional": 0,
                  "bool": true,
                  "short": "-c",
                  "long": "--clusterName",
                  "description": "HDInsight cluster name"
                },
                {
                  "flags": "--userName <userName>",
                  "required": -12,
                  "optional": 0,
                  "bool": true,
                  "long": "--userName",
                  "description": "Cluster username"
                },
                {
                  "flags": "--password <password>",
                  "required": -12,
                  "optional": 0,
                  "bool": true,
                  "long": "--password",
                  "description": "Cluster password"
                },
                {
                  "flags": "-s, --subscription <id>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "short": "-s",
                  "long": "--subscription",
                  "description": "The subscription id"
                }
              ]
            },
            {
              "name": "disable-http-access",
              "description": "Disable HTTP access for cluster",
              "fullName": "hdinsight cluster disable-http-access",
              "usage": "[options] <clusterName>",
              "filePath": "commands/arm/hdinsight/hdinsight._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "-g --resource-group <resource-group>",
                  "required": -21,
                  "optional": 0,
                  "bool": true,
                  "short": "-g",
                  "long": "--resource-group",
                  "description": "The name of the resource group"
                },
                {
                  "flags": "-c, --clusterName <clusterName>",
                  "required": -19,
                  "optional": 0,
                  "bool": true,
                  "short": "-c",
                  "long": "--clusterName",
                  "description": "HDInsight cluster name"
                },
                {
                  "flags": "-s, --subscription <id>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "short": "-s",
                  "long": "--subscription",
                  "description": "The subscription id"
                }
              ]
            },
            {
              "name": "enable-rdp-access",
              "description": "Enable RDP access for cluster",
              "fullName": "hdinsight cluster enable-rdp-access",
              "usage": "[options] <clusterName> <rdpUserName> <rdpPassword> <rdpExpiryDate>",
              "filePath": "commands/arm/hdinsight/hdinsight._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "-g --resource-group <resource-group>",
                  "required": -21,
                  "optional": 0,
                  "bool": true,
                  "short": "-g",
                  "long": "--resource-group",
                  "description": "The name of the resource group"
                },
                {
                  "flags": "-c, --clusterName <clusterName>",
                  "required": -19,
                  "optional": 0,
                  "bool": true,
                  "short": "-c",
                  "long": "--clusterName",
                  "description": "HDInsight cluster name"
                },
                {
                  "flags": "--rdpUserName <rdpUserName>",
                  "required": -15,
                  "optional": 0,
                  "bool": true,
                  "long": "--rdpUserName",
                  "description": "RDP username"
                },
                {
                  "flags": "--rdpPassword <rdpPassword>",
                  "required": -15,
                  "optional": 0,
                  "bool": true,
                  "long": "--rdpPassword",
                  "description": "RDP password"
                },
                {
                  "flags": "--rdpExpiryDate <rdpExpiryDate>",
                  "required": -17,
                  "optional": 0,
                  "bool": true,
                  "long": "--rdpExpiryDate",
                  "description": "RDP access expiry date"
                },
                {
                  "flags": "-s, --subscription <id>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "short": "-s",
                  "long": "--subscription",
                  "description": "The subscription id"
                }
              ]
            },
            {
              "name": "disable-rdp-access",
              "description": "Disable HTTP access for cluster",
              "fullName": "hdinsight cluster disable-rdp-access",
              "usage": "[options] <clusterName>",
              "filePath": "commands/arm/hdinsight/hdinsight._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "-g --resource-group <resource-group>",
                  "required": -21,
                  "optional": 0,
                  "bool": true,
                  "short": "-g",
                  "long": "--resource-group",
                  "description": "The name of the resource group"
                },
                {
                  "flags": "-c, --clusterName <clusterName>",
                  "required": -19,
                  "optional": 0,
                  "bool": true,
                  "short": "-c",
                  "long": "--clusterName",
                  "description": "HDInsight cluster name"
                },
                {
                  "flags": "-s, --subscription <id>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "short": "-s",
                  "long": "--subscription",
                  "description": "The subscription id"
                }
              ]
            }
          ],
          "categories": {}
        },
        "config": {
          "name": "config",
          "description": "Commands to manage HDInsight cluster configuration",
          "fullName": "hdinsight config",
          "usage": "[options] [command]",
          "options": [],
          "commands": [
            {
              "name": "create",
              "description": "Creates a persisted Azure HDInsight cluster configuration file.",
              "fullName": "hdinsight config create",
              "usage": "[options] <configFilePath> <overwrite>",
              "filePath": "commands/arm/hdinsight/hdinsight._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "--configFilePath <configFilePath>",
                  "required": -18,
                  "optional": 0,
                  "bool": true,
                  "long": "--configFilePath",
                  "description": "HdInsight configuration file path"
                },
                {
                  "flags": "--overwrite <overwrite>",
                  "required": -13,
                  "optional": 0,
                  "bool": true,
                  "long": "--overwrite",
                  "description": "Overwrites existing configuration file"
                }
              ]
            },
            {
              "name": "add-config-values",
              "description": "Adds a Hadoop configuration value customization or a Hive shared library customization to an HDInsight cluster configuration. Each component config is in the format of 'name=value'. For example, parameter1=value1;parameter2=value2",
              "fullName": "hdinsight config add-config-values",
              "usage": "[options] <configFilePath>",
              "filePath": "commands/arm/hdinsight/hdinsight._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "--configFilePath <configFilePath>",
                  "required": -18,
                  "optional": 0,
                  "bool": true,
                  "long": "--configFilePath",
                  "description": "Configuration file path"
                },
                {
                  "flags": "--core-site <core-site>",
                  "required": -13,
                  "optional": 0,
                  "bool": true,
                  "long": "--core-site",
                  "description": "Config values in the format of 'name=value'"
                },
                {
                  "flags": "--hive-site <hive-site>",
                  "required": -13,
                  "optional": 0,
                  "bool": true,
                  "long": "--hive-site",
                  "description": "Config values in the format of 'name=value'"
                },
                {
                  "flags": "--hive-env <hive-env>",
                  "required": -12,
                  "optional": 0,
                  "bool": true,
                  "long": "--hive-env",
                  "description": "Config values in the format of 'name=value'"
                },
                {
                  "flags": "--hdfs-site <hdfs-site>",
                  "required": -13,
                  "optional": 0,
                  "bool": true,
                  "long": "--hdfs-site",
                  "description": "Config values in the format of 'name=value'"
                },
                {
                  "flags": "--hbase-env <hbase-env>",
                  "required": -13,
                  "optional": 0,
                  "bool": true,
                  "long": "--hbase-env",
                  "description": "Config values in the format of 'name=value'"
                },
                {
                  "flags": "--hbase-site <hbase-site>",
                  "required": -14,
                  "optional": 0,
                  "bool": true,
                  "long": "--hbase-site",
                  "description": "Config values in the format of 'name=value'"
                },
                {
                  "flags": "--mapred-site <mapred-site>",
                  "required": -15,
                  "optional": 0,
                  "bool": true,
                  "long": "--mapred-site",
                  "description": "Config values in the format of 'name=value'"
                },
                {
                  "flags": "--oozie-env <oozie-env>",
                  "required": -13,
                  "optional": 0,
                  "bool": true,
                  "long": "--oozie-env",
                  "description": "Config values in the format of 'name=value'"
                },
                {
                  "flags": "--oozie-site <oozie-site>",
                  "required": -14,
                  "optional": 0,
                  "bool": true,
                  "long": "--oozie-site",
                  "description": "Config values in the format of 'name=value'"
                },
                {
                  "flags": "--storm-site <storm-site>",
                  "required": -14,
                  "optional": 0,
                  "bool": true,
                  "long": "--storm-site",
                  "description": "Config values in the format of 'name=value'"
                },
                {
                  "flags": "--tez-site <tez-site>",
                  "required": -12,
                  "optional": 0,
                  "bool": true,
                  "long": "--tez-site",
                  "description": "Config values in the format of 'name=value'"
                },
                {
                  "flags": "--webhcat-site <webhcat-site>",
                  "required": -16,
                  "optional": 0,
                  "bool": true,
                  "long": "--webhcat-site",
                  "description": "Config values in the format of 'name=value'"
                },
                {
                  "flags": "--gateway <gateway>",
                  "required": -11,
                  "optional": 0,
                  "bool": true,
                  "long": "--gateway",
                  "description": "Config values in the format of 'name=value'"
                },
                {
                  "flags": "--yarn <yarn>",
                  "required": -8,
                  "optional": 0,
                  "bool": true,
                  "long": "--yarn",
                  "description": "Config values in the format of 'name=value'"
                },
                {
                  "flags": "-s, --subscription <id>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "short": "-s",
                  "long": "--subscription",
                  "description": "The subscription id"
                }
              ]
            },
            {
              "name": "add-script-action",
              "description": "Adds a HDInsight script action.",
              "fullName": "hdinsight config add-script-action",
              "usage": "[options] <configFilePath>",
              "filePath": "commands/arm/hdinsight/hdinsight._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "--configFilePath <configFilePath>",
                  "required": -18,
                  "optional": 0,
                  "bool": true,
                  "long": "--configFilePath",
                  "description": "Configuration file path"
                },
                {
                  "flags": "--nodeType <nodeType>",
                  "required": -12,
                  "optional": 0,
                  "bool": true,
                  "long": "--nodeType",
                  "description": "Specifies the node on which this cmdlet applies the action. Supported node types: HeadNode | WorkerNode | ZookeeperNode"
                },
                {
                  "flags": "--uri <uri>",
                  "required": -7,
                  "optional": 0,
                  "bool": true,
                  "long": "--uri",
                  "description": "Specifies the URI for the action"
                },
                {
                  "flags": "--name <name>",
                  "required": -8,
                  "optional": 0,
                  "bool": true,
                  "long": "--name",
                  "description": "Specifies the name of the action"
                },
                {
                  "flags": "--parameters <parameters>",
                  "required": -14,
                  "optional": 0,
                  "bool": true,
                  "long": "--parameters",
                  "description": "Specifies the parameters for the action"
                },
                {
                  "flags": "-s, --subscription <id>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "short": "-s",
                  "long": "--subscription",
                  "description": "The subscription id"
                }
              ]
            }
          ],
          "categories": {}
        }
      }
    },
    "insights": {
      "name": "insights",
      "description": "Commands related to monitoring Insights (events, alert rules, autoscale settings, metrics)",
      "fullName": "insights",
      "usage": "[options]",
      "options": [],
      "commands": [],
      "categories": {
        "logs": {
          "name": "logs",
          "description": "Retrieve operation logs for a subscription, a correlationId, a resource group, resource, or resource provider.",
          "fullName": "insights logs",
          "usage": "[options] [command]",
          "options": [],
          "commands": [
            {
              "name": "list",
              "description": "List operation logs for a subscription.",
              "fullName": "insights logs list",
              "usage": "[options]",
              "filePath": "commands/arm/insights/insights._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "-c --correlationId <correlationId>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "short": "-c",
                  "long": "--correlationId",
                  "description": "The correlation id of the query."
                },
                {
                  "flags": "-g --resourceGroup <resourceGroup>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "short": "-g",
                  "long": "--resourceGroup",
                  "description": "The resource group."
                },
                {
                  "flags": "-i --resourceId <resourceId>",
                  "required": -17,
                  "optional": 0,
                  "bool": true,
                  "short": "-i",
                  "long": "--resourceId",
                  "description": "The resource Id."
                },
                {
                  "flags": "-p --resourceProvider <resourceProvider>",
                  "required": -23,
                  "optional": 0,
                  "bool": true,
                  "short": "-p",
                  "long": "--resourceProvider",
                  "description": "The resource provider."
                },
                {
                  "flags": "-b --startTime <startTime>",
                  "required": -16,
                  "optional": 0,
                  "bool": true,
                  "short": "-b",
                  "long": "--startTime",
                  "description": "The start time of the query. In ISO format with explicit indication of timezone: 1970-01-01T00:00:00Z, 1970-01-01T00:00:00-0500"
                },
                {
                  "flags": "-e --endTime <endTime>",
                  "required": -14,
                  "optional": 0,
                  "bool": true,
                  "short": "-e",
                  "long": "--endTime",
                  "description": "The end time of the query. In ISO format with explicit indication of timezone: 1970-01-01T00:00:00Z, 1970-01-01T00:00:00-0500"
                },
                {
                  "flags": "--status <status>",
                  "required": -10,
                  "optional": 0,
                  "bool": true,
                  "long": "--status",
                  "description": "The status."
                },
                {
                  "flags": "--caller <caller>",
                  "required": -10,
                  "optional": 0,
                  "bool": true,
                  "long": "--caller",
                  "description": "Caller to look for when querying."
                },
                {
                  "flags": "-d --detailedOutput",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-d",
                  "long": "--detailedOutput",
                  "description": "Shows the details of the events in the log."
                },
                {
                  "flags": "-s --subscription <subscription>",
                  "required": -19,
                  "optional": 0,
                  "bool": true,
                  "short": "-s",
                  "long": "--subscription",
                  "description": "The subscription identifier."
                }
              ]
            }
          ],
          "categories": {}
        },
        "alerts": {
          "name": "alerts",
          "description": "Retrieve alerts logs",
          "fullName": "insights alerts",
          "usage": "[options] [command]",
          "options": [],
          "commands": [
            {
              "name": "list",
              "description": "List alert logs for a resource.",
              "fullName": "insights alerts list",
              "usage": "[options] <resourceId>",
              "filePath": "commands/arm/insights/insights.alerts._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "-i --resourceId <resourceId>",
                  "required": -17,
                  "optional": 0,
                  "bool": true,
                  "short": "-i",
                  "long": "--resourceId",
                  "description": "The resource Id."
                },
                {
                  "flags": "-b --startTime <startTime>",
                  "required": -16,
                  "optional": 0,
                  "bool": true,
                  "short": "-b",
                  "long": "--startTime",
                  "description": "The start time of the query. In ISO format with explicit indication of timezone: 1970-01-01T00:00:00Z, 1970-01-01T00:00:00-0500"
                },
                {
                  "flags": "-e --endTime <endTime>",
                  "required": -14,
                  "optional": 0,
                  "bool": true,
                  "short": "-e",
                  "long": "--endTime",
                  "description": "The end time of the query. In ISO format with explicit indication of timezone: 1970-01-01T00:00:00Z, 1970-01-01T00:00:00-0500"
                },
                {
                  "flags": "--status <status>",
                  "required": -10,
                  "optional": 0,
                  "bool": true,
                  "long": "--status",
                  "description": "The status."
                },
                {
                  "flags": "--caller <caller>",
                  "required": -10,
                  "optional": 0,
                  "bool": true,
                  "long": "--caller",
                  "description": "Caller to look for when querying."
                },
                {
                  "flags": "-d --detailedOutput",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-d",
                  "long": "--detailedOutput",
                  "description": "Shows the details of the events in the log."
                },
                {
                  "flags": "-s --subscription <subscription>",
                  "required": -19,
                  "optional": 0,
                  "bool": true,
                  "short": "-s",
                  "long": "--subscription",
                  "description": "The subscription identifier."
                }
              ]
            }
          ],
          "categories": {
            "rule": {
              "name": "rule",
              "description": "Retrieve alerts rules",
              "fullName": "insights alerts rule",
              "usage": "[options] [command]",
              "options": [],
              "commands": [
                {
                  "name": "list",
                  "description": "List alert rules for a resource.",
                  "fullName": "insights alerts rule list",
                  "usage": "[options] <resourceGroup>",
                  "filePath": "commands/arm/insights/insights.alerts.rule._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "-g --resourceGroup <resourceGroup>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-g",
                      "long": "--resourceGroup",
                      "description": "The resource group."
                    },
                    {
                      "flags": "-n --ruleName <ruleName>",
                      "required": -15,
                      "optional": 0,
                      "bool": true,
                      "short": "-n",
                      "long": "--ruleName",
                      "description": "The name of the rule to query."
                    },
                    {
                      "flags": "-i --targetResourceId <targetResourceId>",
                      "required": -23,
                      "optional": 0,
                      "bool": true,
                      "short": "-i",
                      "long": "--targetResourceId",
                      "description": "The target resource of the query."
                    },
                    {
                      "flags": "-s --subscription <subscription>",
                      "required": -19,
                      "optional": 0,
                      "bool": true,
                      "short": "-s",
                      "long": "--subscription",
                      "description": "The subscription identifier."
                    }
                  ]
                },
                {
                  "name": "delete",
                  "description": "Deletes an alert rule.",
                  "fullName": "insights alerts rule delete",
                  "usage": "[options] <resourceGroup> <ruleName>",
                  "filePath": "commands/arm/insights/insights.alerts.rule._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "-g --resourceGroup <resourceGroup>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-g",
                      "long": "--resourceGroup",
                      "description": "The resource group."
                    },
                    {
                      "flags": "-n --ruleName <ruleName>",
                      "required": -15,
                      "optional": 0,
                      "bool": true,
                      "short": "-n",
                      "long": "--ruleName",
                      "description": "The name of the rule to query."
                    },
                    {
                      "flags": "-s --subscription <subscription>",
                      "required": -19,
                      "optional": 0,
                      "bool": true,
                      "short": "-s",
                      "long": "--subscription",
                      "description": "The subscription identifier."
                    }
                  ]
                },
                {
                  "name": "set",
                  "description": "Create or set a metric alert rule.",
                  "fullName": "insights alerts rule set",
                  "usage": "[options] <ruleType> <ruleName> <location> <resourceGroup>",
                  "filePath": "commands/arm/insights/insights.alerts.rule._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "-y --ruleType <ruleType>",
                      "required": -15,
                      "optional": 0,
                      "bool": true,
                      "short": "-y",
                      "long": "--ruleType",
                      "description": "The type of the rule (Event, Metric, Webtest)."
                    },
                    {
                      "flags": "-x --disable",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-x",
                      "long": "--disable",
                      "description": "Flag to disable the rule."
                    },
                    {
                      "flags": "-s --subscription <subscription>",
                      "required": -19,
                      "optional": 0,
                      "bool": true,
                      "short": "-s",
                      "long": "--subscription",
                      "description": "The subscription identifier."
                    },
                    {
                      "flags": "-n --ruleName <ruleName>",
                      "required": -15,
                      "optional": 0,
                      "bool": true,
                      "short": "-n",
                      "long": "--ruleName",
                      "description": "The name of the rule."
                    },
                    {
                      "flags": "-d --description <description>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "short": "-d",
                      "long": "--description",
                      "description": "The description of the rule."
                    },
                    {
                      "flags": "-l --location <location>",
                      "required": -15,
                      "optional": 0,
                      "bool": true,
                      "short": "-l",
                      "long": "--location",
                      "description": "The location."
                    },
                    {
                      "flags": "-g --resourceGroup <resourceGroup>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-g",
                      "long": "--resourceGroup",
                      "description": "The resource group."
                    },
                    {
                      "flags": "--windowSize <windowSize>",
                      "required": -14,
                      "optional": 0,
                      "bool": true,
                      "long": "--windowSize",
                      "description": "The time window size. Expected format hh:mm:ss."
                    },
                    {
                      "flags": "--sendToServiceOwners",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--sendToServiceOwners",
                      "description": "Flag to send e-mail to service owners."
                    },
                    {
                      "flags": "--customEmails <customEmails>",
                      "required": -16,
                      "optional": 0,
                      "bool": true,
                      "long": "--customEmails",
                      "description": "The list of custom e-mail addresses."
                    },
                    {
                      "flags": "-o --conditionOperator <conditionOperator>",
                      "required": -24,
                      "optional": 0,
                      "bool": true,
                      "short": "-o",
                      "long": "--conditionOperator",
                      "description": "The condition operator: GreaterThan, GreaterThanOrEqual, LessThan, LessThanOrEqual. Value is case insensitive."
                    },
                    {
                      "flags": "-a --threshold <threshold>",
                      "required": -16,
                      "optional": 0,
                      "bool": true,
                      "short": "-a",
                      "long": "--threshold",
                      "description": "The threshold."
                    },
                    {
                      "flags": "-i --resourceId <resourceId>",
                      "required": -17,
                      "optional": 0,
                      "bool": true,
                      "short": "-i",
                      "long": "--resourceId",
                      "description": "The resource Id."
                    },
                    {
                      "flags": "-m --metricName <metricName>",
                      "required": -17,
                      "optional": 0,
                      "bool": true,
                      "short": "-m",
                      "long": "--metricName",
                      "description": "The metric name."
                    },
                    {
                      "flags": "--timeAggregationOperator <timeAggregationOperator>",
                      "required": -27,
                      "optional": 0,
                      "bool": true,
                      "long": "--timeAggregationOperator",
                      "description": "The time aggregation operator: Average, Minimum, Maximum, Total. Value is case insensitve."
                    },
                    {
                      "flags": "-e --eventName <eventName>",
                      "required": -16,
                      "optional": 0,
                      "bool": true,
                      "short": "-e",
                      "long": "--eventName",
                      "description": "The event name."
                    },
                    {
                      "flags": "-z --eventSource <eventSource>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "short": "-z",
                      "long": "--eventSource",
                      "description": "The event source."
                    },
                    {
                      "flags": "-f --level <level>",
                      "required": -12,
                      "optional": 0,
                      "bool": true,
                      "short": "-f",
                      "long": "--level",
                      "description": "The level for the rule."
                    },
                    {
                      "flags": "-p --operationName <operationName>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-p",
                      "long": "--operationName",
                      "description": "The operation name."
                    },
                    {
                      "flags": "-k --resourceProvider <resourceProvider>",
                      "required": -23,
                      "optional": 0,
                      "bool": true,
                      "short": "-k",
                      "long": "--resourceProvider",
                      "description": "The resource provider."
                    },
                    {
                      "flags": "-u --status <status>",
                      "required": -13,
                      "optional": 0,
                      "bool": true,
                      "short": "-u",
                      "long": "--status",
                      "description": "The status."
                    },
                    {
                      "flags": "-b --subStatus <subStatus>",
                      "required": -16,
                      "optional": 0,
                      "bool": true,
                      "short": "-b",
                      "long": "--subStatus",
                      "description": "The substatus."
                    },
                    {
                      "flags": "--eMailAddress <eMailAddress>",
                      "required": -16,
                      "optional": 0,
                      "bool": true,
                      "long": "--eMailAddress",
                      "description": "The e-mail address."
                    },
                    {
                      "flags": "-f --failedLocationCount <failedLocationCount>",
                      "required": -26,
                      "optional": 0,
                      "bool": true,
                      "short": "-f",
                      "long": "--failedLocationCount",
                      "description": "The failed location."
                    }
                  ]
                }
              ],
              "categories": {}
            }
          }
        },
        "autoscale": {
          "name": "autoscale",
          "description": "Retrieve autoscale logs",
          "fullName": "insights autoscale",
          "usage": "[options] [command]",
          "options": [],
          "commands": [
            {
              "name": "list",
              "description": "List autoscale logs for a resource.",
              "fullName": "insights autoscale list",
              "usage": "[options]",
              "filePath": "commands/arm/insights/insights.autoscale._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "-i --resourceId <resourceId>",
                  "required": -17,
                  "optional": 0,
                  "bool": true,
                  "short": "-i",
                  "long": "--resourceId",
                  "description": "The resource Id."
                },
                {
                  "flags": "-b --startTime <startTime>",
                  "required": -16,
                  "optional": 0,
                  "bool": true,
                  "short": "-b",
                  "long": "--startTime",
                  "description": "The start time of the query. In ISO format with explicit indication of timezone: 1970-01-01T00:00:00Z, 1970-01-01T00:00:00-0500"
                },
                {
                  "flags": "-e --endTime <endTime>",
                  "required": -14,
                  "optional": 0,
                  "bool": true,
                  "short": "-e",
                  "long": "--endTime",
                  "description": "The end time of the query. In ISO format with explicit indication of timezone: 1970-01-01T00:00:00Z, 1970-01-01T00:00:00-0500"
                },
                {
                  "flags": "--status <status>",
                  "required": -10,
                  "optional": 0,
                  "bool": true,
                  "long": "--status",
                  "description": "The status."
                },
                {
                  "flags": "--caller <caller>",
                  "required": -10,
                  "optional": 0,
                  "bool": true,
                  "long": "--caller",
                  "description": "Caller to look for when querying."
                },
                {
                  "flags": "-d --detailedOutput",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-d",
                  "long": "--detailedOutput",
                  "description": "Shows the details of the events in the log."
                },
                {
                  "flags": "-s --subscription <subscription>",
                  "required": -19,
                  "optional": 0,
                  "bool": true,
                  "short": "-s",
                  "long": "--subscription",
                  "description": "The subscription identifier."
                }
              ]
            }
          ],
          "categories": {
            "profile": {
              "name": "profile",
              "description": "Manages autoscale profiles",
              "fullName": "insights autoscale profile",
              "usage": "[options] [command]",
              "options": [],
              "commands": [
                {
                  "name": "set",
                  "description": "Create or set an autoscale profile.",
                  "fullName": "insights autoscale profile set",
                  "usage": "[options] <profileType> <profileName> <defaultCapacity> <maximumCapacity> <minimumCapacity> <rules>",
                  "filePath": "commands/arm/insights/insights.autoscale.profile.js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "-y --profileType <profileType>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "short": "-y",
                      "long": "--profileType",
                      "description": "The type of the profile: NoSchedule, FixedDate, Recurrent (the value case insensitive)"
                    },
                    {
                      "flags": "-n --profileName <profileName>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "short": "-n",
                      "long": "--profileName",
                      "description": "The name of the profile."
                    },
                    {
                      "flags": "-d --defaultCapacity <defaultCapacity>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "short": "-d",
                      "long": "--defaultCapacity",
                      "description": "The default capacity of the profile."
                    },
                    {
                      "flags": "-a --maximumCapacity <maximumCapacity>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "short": "-a",
                      "long": "--maximumCapacity",
                      "description": "The maximum capacity of the profile."
                    },
                    {
                      "flags": "-m --minimumCapacity <minimumCapacity>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "short": "-m",
                      "long": "--minimumCapacity",
                      "description": "The minimum capacity of the profile."
                    },
                    {
                      "flags": "-l --rules <rules>",
                      "required": -12,
                      "optional": 0,
                      "bool": true,
                      "short": "-l",
                      "long": "--rules",
                      "description": "The rules of the profile. A json string containing a listing of scale rules."
                    },
                    {
                      "flags": "-b --startTimeWindow <startTimeWindow>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "short": "-b",
                      "long": "--startTimeWindow",
                      "description": "The start time window of a fixed date schedule."
                    },
                    {
                      "flags": "-e --endTimeWindow <endTimeWindow>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-e",
                      "long": "--endTimeWindow",
                      "description": "The end time window of a fixed date schedule."
                    },
                    {
                      "flags": "-z --timeWindowTimeZone <timeWindowTimeZone>",
                      "required": -25,
                      "optional": 0,
                      "bool": true,
                      "short": "-z",
                      "long": "--timeWindowTimeZone",
                      "description": "The time window timezone of a fixed date schedule."
                    },
                    {
                      "flags": "-f --recurrenceFrequency <recurrenceFrequency>",
                      "required": -26,
                      "optional": 0,
                      "bool": true,
                      "short": "-f",
                      "long": "--recurrenceFrequency",
                      "description": "The recurrence frequency of a recurrent schedule: None, Second, Minute, Hour, Day, Week, Month, Year (the value is case insensitive)"
                    },
                    {
                      "flags": "-g --scheduleDays <scheduleDays>",
                      "required": -19,
                      "optional": 0,
                      "bool": true,
                      "short": "-g",
                      "long": "--scheduleDays",
                      "description": "The list of schedule days a recurrent schedule. Values are comma-separated."
                    },
                    {
                      "flags": "-o --scheduleHours <scheduleHours>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-o",
                      "long": "--scheduleHours",
                      "description": "The list of schedule hours a recurrent schedule. Values are comma-separated."
                    },
                    {
                      "flags": "-u --scheduleMinutes <scheduleMinutes>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "short": "-u",
                      "long": "--scheduleMinutes",
                      "description": "The list of schedule minutes a recurrent schedule. Values are comma-separated."
                    },
                    {
                      "flags": "-x --scheduleTimeZone <scheduleTimeZone>",
                      "required": -23,
                      "optional": 0,
                      "bool": true,
                      "short": "-x",
                      "long": "--scheduleTimeZone",
                      "description": "The list of schedule timezone a recurrent schedule."
                    }
                  ]
                }
              ],
              "categories": {}
            },
            "rule": {
              "name": "rule",
              "description": "Manages autoscale rules",
              "fullName": "insights autoscale rule",
              "usage": "[options] [command]",
              "options": [],
              "commands": [
                {
                  "name": "set",
                  "description": "Create or set an autoscale rule.",
                  "fullName": "insights autoscale rule set",
                  "usage": "[options] <metricName> <metricResourceId> <conditionOperatorType> <metricStatisticType> <threshold> <timeGrain> <actionCooldown> <actionDirection> <actionType> <scaleValue>",
                  "filePath": "commands/arm/insights/insights.autoscale.rule.js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "-m --metricName <metricName>",
                      "required": -17,
                      "optional": 0,
                      "bool": true,
                      "short": "-m",
                      "long": "--metricName",
                      "description": "The metric name."
                    },
                    {
                      "flags": "-i --metricResourceId <metricResourceId>",
                      "required": -23,
                      "optional": 0,
                      "bool": true,
                      "short": "-i",
                      "long": "--metricResourceId",
                      "description": "The resource Id."
                    },
                    {
                      "flags": "-o --conditionOperatorType <conditionOperatorType>",
                      "required": -28,
                      "optional": 0,
                      "bool": true,
                      "short": "-o",
                      "long": "--conditionOperatorType",
                      "description": "The condition operator: Equals, NotEquals, GreaterThan, GreaterThanOrEqual, LessThan, LessThanOrEqual. The value is case insensitive."
                    },
                    {
                      "flags": "-r --metricStatisticType <metricStatisticType>",
                      "required": -26,
                      "optional": 0,
                      "bool": true,
                      "short": "-r",
                      "long": "--metricStatisticType",
                      "description": "The metric statistic type: Average, Min, Max, Sum. The value is case insensitive."
                    },
                    {
                      "flags": "-t --threshold <threshold>",
                      "required": -16,
                      "optional": 0,
                      "bool": true,
                      "short": "-t",
                      "long": "--threshold",
                      "description": "The threshold."
                    },
                    {
                      "flags": "-n --timeGrain <timeGrain>",
                      "required": -16,
                      "optional": 0,
                      "bool": true,
                      "short": "-n",
                      "long": "--timeGrain",
                      "description": "The time grain. Expected format hh:mm:ss."
                    },
                    {
                      "flags": "-c --actionCooldown <actionCooldown>",
                      "required": -21,
                      "optional": 0,
                      "bool": true,
                      "short": "-c",
                      "long": "--actionCooldown",
                      "description": "The scale action cooldown time. Expected format hh:mm:ss."
                    },
                    {
                      "flags": "-d --actionDirection <actionDirection>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "short": "-d",
                      "long": "--actionDirection",
                      "description": "The scale action direction: None, Increase, Decrease. The value is case insensitive."
                    },
                    {
                      "flags": "-y --actionType <actionType>",
                      "required": -17,
                      "optional": 0,
                      "bool": true,
                      "short": "-y",
                      "long": "--actionType",
                      "description": "The scale action type name: ChangeSize, ChangeCount, PercentChangeCount, ExactCount. The value is case insensitive."
                    },
                    {
                      "flags": "-l --scaleValue <scaleValue>",
                      "required": -17,
                      "optional": 0,
                      "bool": true,
                      "short": "-l",
                      "long": "--scaleValue",
                      "description": "The scale action value."
                    },
                    {
                      "flags": "-a --timeAggregationOperator <timeAggregationOperator>",
                      "required": -30,
                      "optional": 0,
                      "bool": true,
                      "short": "-a",
                      "long": "--timeAggregationOperator",
                      "description": "The time aggregation operator: Average, Minimum, Maximum, Total. The value is case insensitive."
                    },
                    {
                      "flags": "-w --windowSize <windowSize>",
                      "required": -17,
                      "optional": 0,
                      "bool": true,
                      "short": "-w",
                      "long": "--windowSize",
                      "description": "The time window size. Expected format hh:mm:ss."
                    }
                  ]
                }
              ],
              "categories": {}
            },
            "setting": {
              "name": "setting",
              "description": "Manages autoscale settings",
              "fullName": "insights autoscale setting",
              "usage": "[options] [command]",
              "options": [],
              "commands": [
                {
                  "name": "list",
                  "description": "List autoscale settings for a resource.",
                  "fullName": "insights autoscale setting list",
                  "usage": "[options] <resourceGroup>",
                  "filePath": "commands/arm/insights/insights.autoscale.setting._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "-g --resourceGroup <resourceGroup>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-g",
                      "long": "--resourceGroup",
                      "description": "The resource group."
                    },
                    {
                      "flags": "-n --settingName <settingName>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "short": "-n",
                      "long": "--settingName",
                      "description": "The name of the setting."
                    }
                  ]
                },
                {
                  "name": "delete",
                  "description": "Deletes an autoscale setting.",
                  "fullName": "insights autoscale setting delete",
                  "usage": "[options] <resourceGroup> <settingName>",
                  "filePath": "commands/arm/insights/insights.autoscale.setting._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "-g --resourceGroup <resourceGroup>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-g",
                      "long": "--resourceGroup",
                      "description": "The resource group."
                    },
                    {
                      "flags": "-n --settingName <settingName>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "short": "-n",
                      "long": "--settingName",
                      "description": "The name of the setting."
                    }
                  ]
                },
                {
                  "name": "set",
                  "description": "Create or set an autoscale setting.",
                  "fullName": "insights autoscale setting set",
                  "usage": "[options] <resourceGroup>",
                  "filePath": "commands/arm/insights/insights.autoscale.setting._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "-x --disable",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-x",
                      "long": "--disable",
                      "description": "Flag to disable the setting."
                    },
                    {
                      "flags": "-a --autoProfiles <autoProfiles>",
                      "required": -19,
                      "optional": 0,
                      "bool": true,
                      "short": "-a",
                      "long": "--autoProfiles",
                      "description": "A list of autoscale profiles in JSON format."
                    },
                    {
                      "flags": "-g --resourceGroup <resourceGroup>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-g",
                      "long": "--resourceGroup",
                      "description": "The resource group."
                    },
                    {
                      "flags": "-n --settingName <settingName>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "short": "-n",
                      "long": "--settingName",
                      "description": "The name of the setting."
                    },
                    {
                      "flags": "-l --location <location>",
                      "required": -15,
                      "optional": 0,
                      "bool": true,
                      "short": "-l",
                      "long": "--location",
                      "description": "The location."
                    },
                    {
                      "flags": "-i --targetResourceId <targetResourceId>",
                      "required": -23,
                      "optional": 0,
                      "bool": true,
                      "short": "-i",
                      "long": "--targetResourceId",
                      "description": "The resource Id."
                    },
                    {
                      "flags": "-p --settingSpec <settingSpec>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "short": "-p",
                      "long": "--settingSpec",
                      "description": "The setting spec in JSON format."
                    }
                  ]
                }
              ],
              "categories": {}
            }
          }
        },
        "diagnostic": {
          "name": "diagnostic",
          "description": "Configure diagnostics for resources",
          "fullName": "insights diagnostic",
          "usage": "[options] [command]",
          "options": [],
          "commands": [
            {
              "name": "get",
              "description": "Get the diagnostics for the resource.",
              "fullName": "insights diagnostic get",
              "usage": "[options]",
              "filePath": "commands/arm/insights/insights.diagnostic.get._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "-i, --resourceId <resourceId>",
                  "required": -18,
                  "optional": 0,
                  "bool": true,
                  "short": "-i",
                  "long": "--resourceId",
                  "description": "resource Id."
                }
              ]
            },
            {
              "name": "set",
              "description": "Set the diagnostics for the resource.",
              "fullName": "insights diagnostic set",
              "usage": "[options]",
              "filePath": "commands/arm/insights/insights.diagnostic.set._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "-i, --resourceId <resourceId>",
                  "required": -18,
                  "optional": 0,
                  "bool": true,
                  "short": "-i",
                  "long": "--resourceId",
                  "description": "resource Id."
                },
                {
                  "flags": "-a, --storageId <storageId>",
                  "required": -17,
                  "optional": 0,
                  "bool": true,
                  "short": "-a",
                  "long": "--storageId",
                  "description": "storage account Id."
                },
                {
                  "flags": "-e, --enabled <enabled>",
                  "required": -15,
                  "optional": 0,
                  "bool": true,
                  "short": "-e",
                  "long": "--enabled",
                  "description": "whether the configuration is enabled or disabled."
                },
                {
                  "flags": "-c, --categories <categories>",
                  "required": -18,
                  "optional": 0,
                  "bool": true,
                  "short": "-c",
                  "long": "--categories",
                  "description": "categories to be affected. Valid values vary per resource type."
                },
                {
                  "flags": "-t, --timegrains <timegrains>",
                  "required": -18,
                  "optional": 0,
                  "bool": true,
                  "short": "-t",
                  "long": "--timegrains",
                  "description": "timegrains to be affected in ISO 8601 format. Example: 'PT1M' for 1 minute."
                }
              ]
            }
          ],
          "categories": {}
        },
        "metrics": {
          "name": "metrics",
          "description": "Retrieve metrics values resource",
          "fullName": "insights metrics",
          "usage": "[options] [command]",
          "options": [],
          "commands": [
            {
              "name": "list",
              "description": "List metric values for a resource.",
              "fullName": "insights metrics list",
              "usage": "[options] <resourceId> <timeGrain>",
              "filePath": "commands/arm/insights/insights.metrics._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "-i --resourceId <resourceId>",
                  "required": -17,
                  "optional": 0,
                  "bool": true,
                  "short": "-i",
                  "long": "--resourceId",
                  "description": "The resource Id."
                },
                {
                  "flags": "-t --timeGrain <timeGrain>",
                  "required": -16,
                  "optional": 0,
                  "bool": true,
                  "short": "-t",
                  "long": "--timeGrain",
                  "description": "The time grain. Expected format hh:mm:ss."
                },
                {
                  "flags": "-b --startTime <startTime>",
                  "required": -16,
                  "optional": 0,
                  "bool": true,
                  "short": "-b",
                  "long": "--startTime",
                  "description": "The start time of the query. In ISO format with explicit indication of timezone: 1970-01-01T00:00:00Z, 1970-01-01T00:00:00-0500"
                },
                {
                  "flags": "-e --endTime <endTime>",
                  "required": -14,
                  "optional": 0,
                  "bool": true,
                  "short": "-e",
                  "long": "--endTime",
                  "description": "The end time of the query. In ISO format with explicit indication of timezone: 1970-01-01T00:00:00Z, 1970-01-01T00:00:00-0500"
                },
                {
                  "flags": "-n --metricNames <metricNames>",
                  "required": -18,
                  "optional": 0,
                  "bool": true,
                  "short": "-n",
                  "long": "--metricNames",
                  "description": "The list of metric names."
                },
                {
                  "flags": "-s --subscription <subscription>",
                  "required": -19,
                  "optional": 0,
                  "bool": true,
                  "short": "-s",
                  "long": "--subscription",
                  "description": "The subscription identifier."
                }
              ]
            }
          ],
          "categories": {
            "definition": {
              "name": "definition",
              "description": "Retrieves metric definitions for a resource",
              "fullName": "insights metrics definition",
              "usage": "[options] [command]",
              "options": [],
              "commands": [
                {
                  "name": "list",
                  "description": "List metric definitions for a resource.",
                  "fullName": "insights metrics definition list",
                  "usage": "[options] <resourceId>",
                  "filePath": "commands/arm/insights/insights.metrics.definition._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "-i --resourceId <resourceId>",
                      "required": -17,
                      "optional": 0,
                      "bool": true,
                      "short": "-i",
                      "long": "--resourceId",
                      "description": "The resource Id."
                    },
                    {
                      "flags": "-n --metricNames <metricNames>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "short": "-n",
                      "long": "--metricNames",
                      "description": "The list of metric names."
                    },
                    {
                      "flags": "-s --subscription <subscription>",
                      "required": -19,
                      "optional": 0,
                      "bool": true,
                      "short": "-s",
                      "long": "--subscription",
                      "description": "The subscription identifier."
                    }
                  ]
                }
              ],
              "categories": {}
            }
          }
        },
        "usage": {
          "name": "usage",
          "description": "Retrieve usage metrics for a resource.",
          "fullName": "insights usage",
          "usage": "[options] [command]",
          "options": [],
          "commands": [
            {
              "name": "list",
              "description": "List usage metrics for a resource.",
              "fullName": "insights usage list",
              "usage": "[options] <resourceId>",
              "filePath": "commands/arm/insights/insights.usage._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "-p --ApiVersion <apiVersion>",
                  "required": -17,
                  "optional": 0,
                  "bool": true,
                  "short": "-p",
                  "long": "--ApiVersion",
                  "description": "The underlying resource provider API version."
                },
                {
                  "flags": "-n --metricNames <metricNames>",
                  "required": -18,
                  "optional": 0,
                  "bool": true,
                  "short": "-n",
                  "long": "--metricNames",
                  "description": "The list of metric names."
                },
                {
                  "flags": "-b --startTime <startTime>",
                  "required": -16,
                  "optional": 0,
                  "bool": true,
                  "short": "-b",
                  "long": "--startTime",
                  "description": "The start time of the query. In ISO format with explicit indication of timezone: 1970-01-01T00:00:00Z, 1970-01-01T00:00:00-0500"
                },
                {
                  "flags": "-e --endTime <endTime>",
                  "required": -14,
                  "optional": 0,
                  "bool": true,
                  "short": "-e",
                  "long": "--endTime",
                  "description": "The end time of the query. In ISO format with explicit indication of timezone: 1970-01-01T00:00:00Z, 1970-01-01T00:00:00-0500"
                },
                {
                  "flags": "-s --subscription <subscription>",
                  "required": -19,
                  "optional": 0,
                  "bool": true,
                  "short": "-s",
                  "long": "--subscription",
                  "description": "The subscription identifier."
                }
              ]
            }
          ],
          "categories": {}
        }
      }
    },
    "keyvault": {
      "name": "keyvault",
      "description": "Commands to manage key vault instances in the Azure Key Vault service",
      "fullName": "keyvault",
      "usage": "[options] [command]",
      "options": [],
      "commands": [
        {
          "name": "list",
          "description": "Lists existing vaults",
          "fullName": "keyvault list",
          "usage": "[[--resource-group] <resource-group>] [options]",
          "filePath": "commands/arm/keyvault/keyvault._js",
          "options": [
            {
              "flags": "-v, --verbose",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-v",
              "long": "--verbose",
              "description": "use verbose output"
            },
            {
              "flags": "-vv",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "-vv",
              "description": "more verbose with debug output"
            },
            {
              "flags": "--json",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--json",
              "description": "use json output"
            },
            {
              "flags": "-g, --resource-group <resource-group>",
              "required": -22,
              "optional": 0,
              "bool": true,
              "short": "-g",
              "long": "--resource-group",
              "description": "lists only vaults belonging to the informed resource group"
            },
            {
              "flags": "-s, --subscription <subscription>",
              "required": -20,
              "optional": 0,
              "bool": true,
              "short": "-s",
              "long": "--subscription",
              "description": "the subscription identifier"
            }
          ]
        },
        {
          "name": "create",
          "description": "Creates a vault",
          "fullName": "keyvault create",
          "usage": "[--vault-name] <vault-name> --resource-group <resource-group> --location <location> [options]",
          "filePath": "commands/arm/keyvault/keyvault._js",
          "options": [
            {
              "flags": "-v, --verbose",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-v",
              "long": "--verbose",
              "description": "use verbose output"
            },
            {
              "flags": "-vv",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "-vv",
              "description": "more verbose with debug output"
            },
            {
              "flags": "--json",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--json",
              "description": "use json output"
            },
            {
              "flags": "-u, --vault-name <vault-name>",
              "required": -18,
              "optional": 0,
              "bool": true,
              "short": "-u",
              "long": "--vault-name",
              "description": "the vault name; this is used to compute the vault's DNS name"
            },
            {
              "flags": "-g, --resource-group <resource-group>",
              "required": -22,
              "optional": 0,
              "bool": true,
              "short": "-g",
              "long": "--resource-group",
              "description": "the resource group name"
            },
            {
              "flags": "-l, --location <location>",
              "required": -16,
              "optional": 0,
              "bool": true,
              "short": "-l",
              "long": "--location",
              "description": "Azure region in which to create the vault"
            },
            {
              "flags": "-x, --sku <sku>",
              "required": -11,
              "optional": 0,
              "bool": true,
              "short": "-x",
              "long": "--sku",
              "description": "SKU setting, one of: [Standard, Premium]"
            },
            {
              "flags": "-t, --tags <tags>",
              "required": -12,
              "optional": 0,
              "bool": true,
              "short": "-t",
              "long": "--tags",
              "description": "Tags to set on the vault. Can be multiple in the format 'name=value'. Name is required and value is optional. For example, -t tag1=value1;tag2"
            },
            {
              "flags": "-s, --subscription <subscription>",
              "required": -20,
              "optional": 0,
              "bool": true,
              "short": "-s",
              "long": "--subscription",
              "description": "the subscription identifier"
            }
          ]
        },
        {
          "name": "set-attributes",
          "description": "Changes attributes of an existing vault",
          "fullName": "keyvault set-attributes",
          "usage": "[--vault-name] <vault-name> [options]",
          "filePath": "commands/arm/keyvault/keyvault._js",
          "options": [
            {
              "flags": "-v, --verbose",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-v",
              "long": "--verbose",
              "description": "use verbose output"
            },
            {
              "flags": "-vv",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "-vv",
              "description": "more verbose with debug output"
            },
            {
              "flags": "--json",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--json",
              "description": "use json output"
            },
            {
              "flags": "-u, --vault-name <vault-name>",
              "required": -18,
              "optional": 0,
              "bool": true,
              "short": "-u",
              "long": "--vault-name",
              "description": "the vault name"
            },
            {
              "flags": "-g, --resource-group <resource-group>",
              "required": -22,
              "optional": 0,
              "bool": true,
              "short": "-g",
              "long": "--resource-group",
              "description": "changes only if vault belongs to the informed resource group; otherwise returns 'not found'"
            },
            {
              "flags": "-x, --sku <sku>",
              "required": -11,
              "optional": 0,
              "bool": true,
              "short": "-x",
              "long": "--sku",
              "description": "SKU setting, one of: [Standard, Premium]"
            },
            {
              "flags": "-t, --tags <tags>",
              "required": -12,
              "optional": 0,
              "bool": true,
              "short": "-t",
              "long": "--tags",
              "description": "Tags to set on the vault. Can be multiple in the format 'name=value'. Name is required and value is optional. For example, -t tag1=value1;tag2"
            },
            {
              "flags": "--reset-tags",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--reset-tags",
              "description": "remove previously existing tags; can combined with --tags"
            },
            {
              "flags": "-s, --subscription <subscription>",
              "required": -20,
              "optional": 0,
              "bool": true,
              "short": "-s",
              "long": "--subscription",
              "description": "the subscription identifier"
            }
          ]
        },
        {
          "name": "show",
          "description": "Shows properties of a vault",
          "fullName": "keyvault show",
          "usage": "[--vault-name] <vault-name> [options]",
          "filePath": "commands/arm/keyvault/keyvault._js",
          "options": [
            {
              "flags": "-v, --verbose",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-v",
              "long": "--verbose",
              "description": "use verbose output"
            },
            {
              "flags": "-vv",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "-vv",
              "description": "more verbose with debug output"
            },
            {
              "flags": "--json",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--json",
              "description": "use json output"
            },
            {
              "flags": "-u, --vault-name <vault-name>",
              "required": -18,
              "optional": 0,
              "bool": true,
              "short": "-u",
              "long": "--vault-name",
              "description": "the vault name"
            },
            {
              "flags": "-g, --resource-group <resource-group>",
              "required": -22,
              "optional": 0,
              "bool": true,
              "short": "-g",
              "long": "--resource-group",
              "description": "shows only if vault belongs to the informed resource group; otherwise returns 'not found'"
            },
            {
              "flags": "-s, --subscription <subscription>",
              "required": -20,
              "optional": 0,
              "bool": true,
              "short": "-s",
              "long": "--subscription",
              "description": "the subscription identifier"
            }
          ]
        },
        {
          "name": "delete",
          "description": "Deletes an existing vault",
          "fullName": "keyvault delete",
          "usage": "[--vault-name] <vault-name> [options]",
          "filePath": "commands/arm/keyvault/keyvault._js",
          "options": [
            {
              "flags": "-v, --verbose",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-v",
              "long": "--verbose",
              "description": "use verbose output"
            },
            {
              "flags": "-vv",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "-vv",
              "description": "more verbose with debug output"
            },
            {
              "flags": "--json",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--json",
              "description": "use json output"
            },
            {
              "flags": "-u, --vault-name <vault-name>",
              "required": -18,
              "optional": 0,
              "bool": true,
              "short": "-u",
              "long": "--vault-name",
              "description": "the vault name"
            },
            {
              "flags": "-g, --resource-group <resource-group>",
              "required": -22,
              "optional": 0,
              "bool": true,
              "short": "-g",
              "long": "--resource-group",
              "description": "deletes only if vault belongs to the informed resource group; otherwise returns 'not found'"
            },
            {
              "flags": "-q, --quiet",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-q",
              "long": "--quiet",
              "description": "quiet mode (do not ask for delete confirmation)"
            },
            {
              "flags": "-p, --pass-thru",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-p",
              "long": "--pass-thru",
              "description": "outputs the deleted vault"
            },
            {
              "flags": "-s, --subscription <subscription>",
              "required": -20,
              "optional": 0,
              "bool": true,
              "short": "-s",
              "long": "--subscription",
              "description": "the subscription identifier"
            }
          ]
        },
        {
          "name": "set-policy",
          "description": "Adds or modifies an access policy for a vault",
          "fullName": "keyvault set-policy",
          "usage": "[--vault-name] <vault-name> [options]",
          "filePath": "commands/arm/keyvault/keyvault._js",
          "options": [
            {
              "flags": "-v, --verbose",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-v",
              "long": "--verbose",
              "description": "use verbose output"
            },
            {
              "flags": "-vv",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "-vv",
              "description": "more verbose with debug output"
            },
            {
              "flags": "--json",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--json",
              "description": "use json output"
            },
            {
              "flags": "-u, --vault-name <vault-name>",
              "required": -18,
              "optional": 0,
              "bool": true,
              "short": "-u",
              "long": "--vault-name",
              "description": "the vault name"
            },
            {
              "flags": "-g, --resource-group <resource-group>",
              "required": -22,
              "optional": 0,
              "bool": true,
              "short": "-g",
              "long": "--resource-group",
              "description": "changes only if vault belongs to the informed resource group; otherwise returns 'not found'"
            },
            {
              "flags": "--object-id <object-id>",
              "required": -13,
              "optional": 0,
              "bool": true,
              "long": "--object-id",
              "description": "a GUID that identifies the principal that will receive permissions"
            },
            {
              "flags": "--spn <service-principal-name>",
              "required": -7,
              "optional": 0,
              "bool": true,
              "long": "--spn",
              "description": "name of a service principal that will receive permissions"
            },
            {
              "flags": "--upn <user-principal-name>",
              "required": -7,
              "optional": 0,
              "bool": true,
              "long": "--upn",
              "description": "name of a user principal that will receive permissions"
            },
            {
              "flags": "--perms-to-keys <perms-to-keys>",
              "required": -17,
              "optional": 0,
              "bool": true,
              "long": "--perms-to-keys",
              "description": "JSON-encoded array of strings representing key operations; each string can be one of [all, create, import, update, delete, get, list, backup, restore, sign, verify, encrypt, decrypt, wrapKey, unwrapKey]"
            },
            {
              "flags": "--perms-to-secrets <perms-to-secrets>",
              "required": -20,
              "optional": 0,
              "bool": true,
              "long": "--perms-to-secrets",
              "description": "JSON-encoded array of strings representing secret operations; each string can be one of [all, set, get, list, delete]"
            },
            {
              "flags": "--enabled-for-deployment <boolean>",
              "required": -26,
              "optional": 0,
              "bool": true,
              "long": "--enabled-for-deployment",
              "description": "specifies whether the Azure Compute resource provider can access secrets"
            },
            {
              "flags": "--enabled-for-template-deployment <boolean>",
              "required": -35,
              "optional": 0,
              "bool": true,
              "long": "--enabled-for-template-deployment",
              "description": "specifies whether Azure Resource Manager can access secrets"
            },
            {
              "flags": "--enabled-for-disk-encryption <boolean>",
              "required": -31,
              "optional": 0,
              "bool": true,
              "long": "--enabled-for-disk-encryption",
              "description": "specifies whether Azure Disk Encryption can access secrets"
            },
            {
              "flags": "-s, --subscription <subscription>",
              "required": -20,
              "optional": 0,
              "bool": true,
              "short": "-s",
              "long": "--subscription",
              "description": "the subscription identifier"
            }
          ]
        },
        {
          "name": "delete-policy",
          "description": "Removes an access policy from a vault",
          "fullName": "keyvault delete-policy",
          "usage": "[--vault-name] <vault-name> [options]",
          "filePath": "commands/arm/keyvault/keyvault._js",
          "options": [
            {
              "flags": "-v, --verbose",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-v",
              "long": "--verbose",
              "description": "use verbose output"
            },
            {
              "flags": "-vv",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "-vv",
              "description": "more verbose with debug output"
            },
            {
              "flags": "--json",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--json",
              "description": "use json output"
            },
            {
              "flags": "-u, --vault-name <vault-name>",
              "required": -18,
              "optional": 0,
              "bool": true,
              "short": "-u",
              "long": "--vault-name",
              "description": "the vault name"
            },
            {
              "flags": "-g, --resource-group <resource-group>",
              "required": -22,
              "optional": 0,
              "bool": true,
              "short": "-g",
              "long": "--resource-group",
              "description": "deletes only if vault belongs to the informed resource group; otherwise returns 'not found'"
            },
            {
              "flags": "--object-id <object-id>",
              "required": -13,
              "optional": 0,
              "bool": true,
              "long": "--object-id",
              "description": "a GUID that identifies the principal that will lose permissions"
            },
            {
              "flags": "--spn <service-principal-name>",
              "required": -7,
              "optional": 0,
              "bool": true,
              "long": "--spn",
              "description": "name of a service principal that will lose permissions"
            },
            {
              "flags": "--upn <user-principal-name>",
              "required": -7,
              "optional": 0,
              "bool": true,
              "long": "--upn",
              "description": "name of a user principal that will lose permissions"
            },
            {
              "flags": "--enabled-for-deployment",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--enabled-for-deployment",
              "description": "if provided, will set the enabledForDeployment property to false in the vault"
            },
            {
              "flags": "--enabled-for-template-deployment",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--enabled-for-template-deployment",
              "description": "if provided, will set the enabledForTemplateDeployment property to false in the vault"
            },
            {
              "flags": "--enabled-for-disk-encryption",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--enabled-for-disk-encryption",
              "description": "if provided, will set the enabledForDiskEncryption property to false in the vault"
            },
            {
              "flags": "-s, --subscription <subscription>",
              "required": -20,
              "optional": 0,
              "bool": true,
              "short": "-s",
              "long": "--subscription",
              "description": "the subscription identifier"
            }
          ]
        }
      ],
      "categories": {
        "key": {
          "name": "key",
          "description": "Commands to manage keys in the Azure Key Vault service",
          "fullName": "keyvault key",
          "usage": "[options] [command]",
          "options": [],
          "commands": [
            {
              "name": "list",
              "description": "Lists keys of a vault",
              "fullName": "keyvault key list",
              "usage": "[--vault-name] <vault-name> [options]",
              "filePath": "commands/arm/keyvault/keyvault.key._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "-u, --vault-name <vault-name>",
                  "required": -18,
                  "optional": 0,
                  "bool": true,
                  "short": "-u",
                  "long": "--vault-name",
                  "description": "the vault name"
                }
              ]
            },
            {
              "name": "list-versions",
              "description": "Lists key versions",
              "fullName": "keyvault key list-versions",
              "usage": "[--vault-name] <vault-name> [[--key-name] <key-name>] [options]",
              "filePath": "commands/arm/keyvault/keyvault.key._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "-u, --vault-name <vault-name>",
                  "required": -18,
                  "optional": 0,
                  "bool": true,
                  "short": "-u",
                  "long": "--vault-name",
                  "description": "the vault name"
                },
                {
                  "flags": "-k, --key-name <key-name>",
                  "required": -16,
                  "optional": 0,
                  "bool": true,
                  "short": "-k",
                  "long": "--key-name",
                  "description": "lists only versions of this key"
                }
              ]
            },
            {
              "name": "create",
              "description": "Creates a key in the vault",
              "fullName": "keyvault key create",
              "usage": "[--vault-name] <vault-name> [--key-name] <key-name> --destination <destination> [options]",
              "filePath": "commands/arm/keyvault/keyvault.key._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "-u, --vault-name <vault-name>",
                  "required": -18,
                  "optional": 0,
                  "bool": true,
                  "short": "-u",
                  "long": "--vault-name",
                  "description": "the vault name"
                },
                {
                  "flags": "-k, --key-name <key-name>",
                  "required": -16,
                  "optional": 0,
                  "bool": true,
                  "short": "-k",
                  "long": "--key-name",
                  "description": "name of the key to be created; if already exists, a new key version is generated"
                },
                {
                  "flags": "-d, --destination <destination>",
                  "required": -19,
                  "optional": 0,
                  "bool": true,
                  "short": "-d",
                  "long": "--destination",
                  "description": "tells if the key is software-protected or HSM-protected; valid values: [Software, HSM]"
                },
                {
                  "flags": "--enabled <boolean>",
                  "required": -11,
                  "optional": 0,
                  "bool": true,
                  "long": "--enabled",
                  "description": "tells if the key should be enabled; valid values: [false, true]; default is true"
                },
                {
                  "flags": "-e, --expires <datetime>",
                  "required": -15,
                  "optional": 0,
                  "bool": true,
                  "short": "-e",
                  "long": "--expires",
                  "description": "key expiration time, in UTC format"
                },
                {
                  "flags": "-n, --not-before <datetime>",
                  "required": -18,
                  "optional": 0,
                  "bool": true,
                  "short": "-n",
                  "long": "--not-before",
                  "description": "time before which key cannot be used, in UTC format"
                },
                {
                  "flags": "-o, --key-ops <key-ops>",
                  "required": -15,
                  "optional": 0,
                  "bool": true,
                  "short": "-o",
                  "long": "--key-ops",
                  "description": "JSON-encoded array of strings representing key operations; each string can be one of [encrypt, decrypt, sign, verify, wrapKey, unwrapKey]"
                },
                {
                  "flags": "-t, --tags <tags>",
                  "required": -12,
                  "optional": 0,
                  "bool": true,
                  "short": "-t",
                  "long": "--tags",
                  "description": "Tags to set on the key. Can be multiple in the format 'name=value'. Name is required and value is optional. For example, -t tag1=value1;tag2"
                }
              ]
            },
            {
              "name": "import",
              "description": "Imports an existing key into a vault",
              "fullName": "keyvault key import",
              "usage": "[--vault-name] <vault-name> [--key-name] <key-name> ( --pem-file | --byok-file ) <file-name> [--destination <destination>] [options]",
              "filePath": "commands/arm/keyvault/keyvault.key._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "-u, --vault-name <vault-name>",
                  "required": -18,
                  "optional": 0,
                  "bool": true,
                  "short": "-u",
                  "long": "--vault-name",
                  "description": "the vault name"
                },
                {
                  "flags": "-k, --key-name <key-name>",
                  "required": -16,
                  "optional": 0,
                  "bool": true,
                  "short": "-k",
                  "long": "--key-name",
                  "description": "name of the key to be imported; if already exists, a new key version is generated"
                },
                {
                  "flags": "--pem-file <file-name>",
                  "required": -12,
                  "optional": 0,
                  "bool": true,
                  "long": "--pem-file",
                  "description": "name of a PEM file containing the key to be imported; the file must not be password protected"
                },
                {
                  "flags": "--byok-file <file-name>",
                  "required": -13,
                  "optional": 0,
                  "bool": true,
                  "long": "--byok-file",
                  "description": "name of a BYOK file containing the key to be imported"
                },
                {
                  "flags": "-p, --password <password>",
                  "required": -16,
                  "optional": 0,
                  "bool": true,
                  "short": "-p",
                  "long": "--password",
                  "description": "password of key file; if not informed and the file is encrypted, will prompt"
                },
                {
                  "flags": "-d, --destination <destination>",
                  "required": -19,
                  "optional": 0,
                  "bool": true,
                  "short": "-d",
                  "long": "--destination",
                  "description": "tells if the key is software-protected or HSM-protected; valid values: [Software, HSM]"
                },
                {
                  "flags": "--enabled <boolean>",
                  "required": -11,
                  "optional": 0,
                  "bool": true,
                  "long": "--enabled",
                  "description": "tells if the key should be enabled; valid values: [false, true]; default is true"
                },
                {
                  "flags": "-e, --expires <datetime>",
                  "required": -15,
                  "optional": 0,
                  "bool": true,
                  "short": "-e",
                  "long": "--expires",
                  "description": "key expiration time, in UTC format"
                },
                {
                  "flags": "-n, --not-before <datetime>",
                  "required": -18,
                  "optional": 0,
                  "bool": true,
                  "short": "-n",
                  "long": "--not-before",
                  "description": "time before which key cannot be used, in UTC format"
                },
                {
                  "flags": "-o, --key-ops <key-ops>",
                  "required": -15,
                  "optional": 0,
                  "bool": true,
                  "short": "-o",
                  "long": "--key-ops",
                  "description": "JSON-encoded array of strings representing key operations; each string can be one of [encrypt, decrypt, sign, verify, wrapKey, unwrapKey]"
                },
                {
                  "flags": "-t, --tags <tags>",
                  "required": -12,
                  "optional": 0,
                  "bool": true,
                  "short": "-t",
                  "long": "--tags",
                  "description": "Tags to set on the key. Can be multiple in the format 'name=value'. Name is required and value is optional. For example, -t tag1=value1;tag2"
                }
              ]
            },
            {
              "name": "set-attributes",
              "description": "Changes attributes of an existing key",
              "fullName": "keyvault key set-attributes",
              "usage": "[--vault-name] <vault-name> [--key-name] <key-name> [[--key-version] <key-version>] [options]",
              "filePath": "commands/arm/keyvault/keyvault.key._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "-u, --vault-name <vault-name>",
                  "required": -18,
                  "optional": 0,
                  "bool": true,
                  "short": "-u",
                  "long": "--vault-name",
                  "description": "the vault name"
                },
                {
                  "flags": "-k, --key-name <key-name>",
                  "required": -16,
                  "optional": 0,
                  "bool": true,
                  "short": "-k",
                  "long": "--key-name",
                  "description": "name of the key to be modified"
                },
                {
                  "flags": "-r, --key-version <key-version>",
                  "required": -19,
                  "optional": 0,
                  "bool": true,
                  "short": "-r",
                  "long": "--key-version",
                  "description": "the version to be modified; if ommited, modifies only the most recent"
                },
                {
                  "flags": "--enabled <boolean>",
                  "required": -11,
                  "optional": 0,
                  "bool": true,
                  "long": "--enabled",
                  "description": "if informed, command will change the enabled state; valid values: [false, true]"
                },
                {
                  "flags": "-e, --expires <datetime>",
                  "required": -15,
                  "optional": 0,
                  "bool": true,
                  "short": "-e",
                  "long": "--expires",
                  "description": "if informed, command will change key expiration time; must be a date in UTC format or null"
                },
                {
                  "flags": "-n, --not-before <datetime>",
                  "required": -18,
                  "optional": 0,
                  "bool": true,
                  "short": "-n",
                  "long": "--not-before",
                  "description": "if informed, command will change time before which key cannot be used; must be a date in UTC format or null"
                },
                {
                  "flags": "-o, --key-ops <key-ops>",
                  "required": -15,
                  "optional": 0,
                  "bool": true,
                  "short": "-o",
                  "long": "--key-ops",
                  "description": "if informed, command will change valid operations; must be JSON-encoded array of strings representing key operations; each string can be one of [encrypt, decrypt, sign, verify, wrapKey, unwrapKey]"
                },
                {
                  "flags": "-t, --tags <tags>",
                  "required": -12,
                  "optional": 0,
                  "bool": true,
                  "short": "-t",
                  "long": "--tags",
                  "description": "Tags to set on the key. Can be multiple in the format 'name=value'. Name is required and value is optional. For example, -t tag1=value1;tag2"
                },
                {
                  "flags": "--reset-tags",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--reset-tags",
                  "description": "remove previously existing tags; can combined with --tags"
                }
              ]
            },
            {
              "name": "show",
              "description": "Shows properties of a vault key",
              "fullName": "keyvault key show",
              "usage": "[--vault-name] <vault-name> [--key-name] <key-name> [[--key-version] <key-version>] [options]",
              "filePath": "commands/arm/keyvault/keyvault.key._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "-u, --vault-name <vault-name>",
                  "required": -18,
                  "optional": 0,
                  "bool": true,
                  "short": "-u",
                  "long": "--vault-name",
                  "description": "the vault name"
                },
                {
                  "flags": "-k, --key-name <key-name>",
                  "required": -16,
                  "optional": 0,
                  "bool": true,
                  "short": "-k",
                  "long": "--key-name",
                  "description": "the key name"
                },
                {
                  "flags": "-r, --key-version <key-version>",
                  "required": -19,
                  "optional": 0,
                  "bool": true,
                  "short": "-r",
                  "long": "--key-version",
                  "description": "the key version; if ommited, uses the most recent"
                }
              ]
            },
            {
              "name": "delete",
              "description": "Deletes a key from the vault",
              "fullName": "keyvault key delete",
              "usage": "[--vault-name] <vault-name> [--key-name] <key-name> [options]",
              "filePath": "commands/arm/keyvault/keyvault.key._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "-u, --vault-name <vault-name>",
                  "required": -18,
                  "optional": 0,
                  "bool": true,
                  "short": "-u",
                  "long": "--vault-name",
                  "description": "the vault name"
                },
                {
                  "flags": "-k, --key-name <key-name>",
                  "required": -16,
                  "optional": 0,
                  "bool": true,
                  "short": "-k",
                  "long": "--key-name",
                  "description": "the key name"
                },
                {
                  "flags": "-q, --quiet",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-q",
                  "long": "--quiet",
                  "description": "quiet mode (do not ask for delete confirmation)"
                },
                {
                  "flags": "-p, --pass-thru",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-p",
                  "long": "--pass-thru",
                  "description": "outputs the deleted key"
                }
              ]
            },
            {
              "name": "backup",
              "description": "Generates a protected backup of a vault key",
              "fullName": "keyvault key backup",
              "usage": "[--vault-name] <vault-name> [--key-name] <key-name> [--output-file] <output-file> [options]",
              "filePath": "commands/arm/keyvault/keyvault.key._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "-u, --vault-name <vault-name>",
                  "required": -18,
                  "optional": 0,
                  "bool": true,
                  "short": "-u",
                  "long": "--vault-name",
                  "description": "the vault name"
                },
                {
                  "flags": "-k, --key-name <key-name>",
                  "required": -16,
                  "optional": 0,
                  "bool": true,
                  "short": "-k",
                  "long": "--key-name",
                  "description": "the key name"
                },
                {
                  "flags": "-f, --output-file <output-file>",
                  "required": -19,
                  "optional": 0,
                  "bool": true,
                  "short": "-f",
                  "long": "--output-file",
                  "description": "name of the binary file that will contain backup data"
                }
              ]
            },
            {
              "name": "restore",
              "description": "Restores a backed up key to a vault",
              "fullName": "keyvault key restore",
              "usage": "[--vault-name] <vault-name> [--input-file] <input-file> [options]",
              "filePath": "commands/arm/keyvault/keyvault.key._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "-u, --vault-name <vault-name>",
                  "required": -18,
                  "optional": 0,
                  "bool": true,
                  "short": "-u",
                  "long": "--vault-name",
                  "description": "the vault name"
                },
                {
                  "flags": "-f, --input-file <input-file>",
                  "required": -18,
                  "optional": 0,
                  "bool": true,
                  "short": "-f",
                  "long": "--input-file",
                  "description": "name of the binary file that contains backup data"
                }
              ]
            }
          ],
          "categories": {}
        },
        "secret": {
          "name": "secret",
          "description": "Commands to manage secrets in the Azure Key Vault service",
          "fullName": "keyvault secret",
          "usage": "[options] [command]",
          "options": [],
          "commands": [
            {
              "name": "list",
              "description": "Lists secrets of a vault",
              "fullName": "keyvault secret list",
              "usage": "[--vault-name] <vault-name> [options]",
              "filePath": "commands/arm/keyvault/keyvault.secret._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "-u, --vault-name <vault-name>",
                  "required": -18,
                  "optional": 0,
                  "bool": true,
                  "short": "-u",
                  "long": "--vault-name",
                  "description": "the vault name"
                }
              ]
            },
            {
              "name": "list-versions",
              "description": "Lists secret versions",
              "fullName": "keyvault secret list-versions",
              "usage": "[--vault-name] <vault-name> [[--secret-name] <secret-name>] [options]",
              "filePath": "commands/arm/keyvault/keyvault.secret._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "-u, --vault-name <vault-name>",
                  "required": -18,
                  "optional": 0,
                  "bool": true,
                  "short": "-u",
                  "long": "--vault-name",
                  "description": "the vault name"
                },
                {
                  "flags": "-s, --secret-name <secret-name>",
                  "required": -19,
                  "optional": 0,
                  "bool": true,
                  "short": "-s",
                  "long": "--secret-name",
                  "description": "lists only versions of this secret"
                }
              ]
            },
            {
              "name": "set",
              "description": "Stores a secret on the vault",
              "fullName": "keyvault secret set",
              "usage": "[--vault-name] <vault-name> [--secret-name] <secret-name> [--value] <secret-value> [options]",
              "filePath": "commands/arm/keyvault/keyvault.secret._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "-u, --vault-name <vault-name>",
                  "required": -18,
                  "optional": 0,
                  "bool": true,
                  "short": "-u",
                  "long": "--vault-name",
                  "description": "the vault name"
                },
                {
                  "flags": "-s, --secret-name <secret-name>",
                  "required": -19,
                  "optional": 0,
                  "bool": true,
                  "short": "-s",
                  "long": "--secret-name",
                  "description": "name of the secret to be created; if already exists, a new secret version is created"
                },
                {
                  "flags": "-s, --value <secret-value>",
                  "required": -13,
                  "optional": 0,
                  "bool": true,
                  "short": "-s",
                  "long": "--value",
                  "description": "the secret value"
                },
                {
                  "flags": "--enabled <boolean>",
                  "required": -11,
                  "optional": 0,
                  "bool": true,
                  "long": "--enabled",
                  "description": "tells if the secret should be enabled; valid values: [false, true]; default is true"
                },
                {
                  "flags": "-e, --expires <datetime>",
                  "required": -15,
                  "optional": 0,
                  "bool": true,
                  "short": "-e",
                  "long": "--expires",
                  "description": "expiration time of secret, in UTC format"
                },
                {
                  "flags": "-n, --not-before <datetime>",
                  "required": -18,
                  "optional": 0,
                  "bool": true,
                  "short": "-n",
                  "long": "--not-before",
                  "description": "time before which secret cannot be used, in UTC format"
                },
                {
                  "flags": "-t, --tags <tags>",
                  "required": -12,
                  "optional": 0,
                  "bool": true,
                  "short": "-t",
                  "long": "--tags",
                  "description": "Tags to set on the secret. Can be multiple in the format 'name=value'. Name is required and value is optional. For example, -t tag1=value1;tag2"
                }
              ]
            },
            {
              "name": "set-attributes",
              "description": "Changes attributes of an existing secret",
              "fullName": "keyvault secret set-attributes",
              "usage": "[--vault-name] <vault-name> [--secret-name] <secret-name> [[--secret-version] <secret-version>] [options]",
              "filePath": "commands/arm/keyvault/keyvault.secret._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "-u, --vault-name <vault-name>",
                  "required": -18,
                  "optional": 0,
                  "bool": true,
                  "short": "-u",
                  "long": "--vault-name",
                  "description": "the vault name"
                },
                {
                  "flags": "-s, --secret-name <secret-name>",
                  "required": -19,
                  "optional": 0,
                  "bool": true,
                  "short": "-s",
                  "long": "--secret-name",
                  "description": "name of the secret to be modified"
                },
                {
                  "flags": "-r, --secret-version <secret-version>",
                  "required": -22,
                  "optional": 0,
                  "bool": true,
                  "short": "-r",
                  "long": "--secret-version",
                  "description": "the version to be modified; if ommited, modifies only the most recent"
                },
                {
                  "flags": "--enabled <boolean>",
                  "required": -11,
                  "optional": 0,
                  "bool": true,
                  "long": "--enabled",
                  "description": "if informed, command will change the enabled state; valid values: [false, true]"
                },
                {
                  "flags": "-e, --expires <datetime>",
                  "required": -15,
                  "optional": 0,
                  "bool": true,
                  "short": "-e",
                  "long": "--expires",
                  "description": "if informed, command will change secret expiration time; must be a date in UTC format or null"
                },
                {
                  "flags": "-n, --not-before <datetime>",
                  "required": -18,
                  "optional": 0,
                  "bool": true,
                  "short": "-n",
                  "long": "--not-before",
                  "description": "if informed, command will change time before which secret cannot be used; must be a date in UTC format or null"
                },
                {
                  "flags": "-t, --tags <tags>",
                  "required": -12,
                  "optional": 0,
                  "bool": true,
                  "short": "-t",
                  "long": "--tags",
                  "description": "Tags to set on the secret. Can be multiple in the format 'name=value'. Name is required and value is optional. For example, -t tag1=value1;tag2"
                },
                {
                  "flags": "--reset-tags",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--reset-tags",
                  "description": "remove previously existing tags; can combined with --tags"
                }
              ]
            },
            {
              "name": "show",
              "description": "Shows a vault secret",
              "fullName": "keyvault secret show",
              "usage": "[--vault-name] <vault-name> [--secret-name] <secret-name> [[--secret-version] <secret-version>] [options]",
              "filePath": "commands/arm/keyvault/keyvault.secret._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "-u, --vault-name <vault-name>",
                  "required": -18,
                  "optional": 0,
                  "bool": true,
                  "short": "-u",
                  "long": "--vault-name",
                  "description": "the vault name"
                },
                {
                  "flags": "-s, --secret-name <secret-name>",
                  "required": -19,
                  "optional": 0,
                  "bool": true,
                  "short": "-s",
                  "long": "--secret-name",
                  "description": "the secret name"
                },
                {
                  "flags": "-r, --secret-version <secret-version>",
                  "required": -22,
                  "optional": 0,
                  "bool": true,
                  "short": "-r",
                  "long": "--secret-version",
                  "description": "the secret version; if ommited, uses the most recent"
                }
              ]
            },
            {
              "name": "delete",
              "description": "Deletes a secret from the vault",
              "fullName": "keyvault secret delete",
              "usage": "[--vault-name] <vault-name> [--secret-name] <secret-name> [options]",
              "filePath": "commands/arm/keyvault/keyvault.secret._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "-u, --vault-name <vault-name>",
                  "required": -18,
                  "optional": 0,
                  "bool": true,
                  "short": "-u",
                  "long": "--vault-name",
                  "description": "the vault name"
                },
                {
                  "flags": "-s, --secret-name <secret-name>",
                  "required": -19,
                  "optional": 0,
                  "bool": true,
                  "short": "-s",
                  "long": "--secret-name",
                  "description": "the secret name"
                },
                {
                  "flags": "-q, --quiet",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-q",
                  "long": "--quiet",
                  "description": "quiet mode (do not ask for delete confirmation)"
                },
                {
                  "flags": "-p, --pass-thru",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-p",
                  "long": "--pass-thru",
                  "description": "outputs the deleted secret"
                }
              ]
            }
          ],
          "categories": {}
        }
      }
    },
    "location": {
      "name": "location",
      "description": "Commands to get the available locations",
      "fullName": "location",
      "usage": "[options] [command]",
      "options": [],
      "commands": [
        {
          "name": "list",
          "description": "list the available locations",
          "fullName": "location list",
          "usage": "[options]",
          "filePath": "commands/arm/location/location.js",
          "options": [
            {
              "flags": "-v, --verbose",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-v",
              "long": "--verbose",
              "description": "use verbose output"
            },
            {
              "flags": "-vv",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "-vv",
              "description": "more verbose with debug output"
            },
            {
              "flags": "--json",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--json",
              "description": "use json output"
            },
            {
              "flags": "--subscription <subscription>",
              "required": -16,
              "optional": 0,
              "bool": true,
              "long": "--subscription",
              "description": "the subscription identifier"
            }
          ]
        }
      ],
      "categories": {}
    },
    "network": {
      "name": "network",
      "description": "Commands to manage network resources",
      "fullName": "network",
      "usage": "[options]",
      "options": [],
      "commands": [],
      "categories": {
        "vnet": {
          "name": "vnet",
          "description": "Commands to manage virtual networks",
          "fullName": "network vnet",
          "usage": "[options] [command]",
          "options": [],
          "commands": [
            {
              "name": "create",
              "description": "Create a virtual network",
              "fullName": "network vnet create",
              "usage": "[options] <resource-group> <name> <location>",
              "filePath": "commands/arm/network/network._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "-g, --resource-group <resource-group>",
                  "required": -22,
                  "optional": 0,
                  "bool": true,
                  "short": "-g",
                  "long": "--resource-group",
                  "description": "the name of the resource group"
                },
                {
                  "flags": "-n, --name <name>",
                  "required": -12,
                  "optional": 0,
                  "bool": true,
                  "short": "-n",
                  "long": "--name",
                  "description": "the name of the virtual network"
                },
                {
                  "flags": "-l, --location <location>",
                  "required": -16,
                  "optional": 0,
                  "bool": true,
                  "short": "-l",
                  "long": "--location",
                  "description": "the location"
                },
                {
                  "flags": "-a, --address-prefixes <address-prefixes>",
                  "required": -24,
                  "optional": 0,
                  "bool": true,
                  "short": "-a",
                  "long": "--address-prefixes",
                  "description": "the comma separated list of address prefixes for this virtual network.\n     For example, -a \"10.0.0.0/24,10.0.1.0/24\"\n     Default value is 10.0.0.0/8"
                },
                {
                  "flags": "-d, --dns-servers <dns-servers>",
                  "required": -19,
                  "optional": 0,
                  "bool": true,
                  "short": "-d",
                  "long": "--dns-servers",
                  "description": "the comma separated list of DNS servers IP addresses"
                },
                {
                  "flags": "-t, --tags <tags>",
                  "required": -12,
                  "optional": 0,
                  "bool": true,
                  "short": "-t",
                  "long": "--tags",
                  "description": "the list of tags.\n     Can be multiple. In the format of \"name=value\".\n     Name is required and value is optional.\n     For example, -t \"tag1=value1;tag2\""
                },
                {
                  "flags": "-s, --subscription <subscription>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "short": "-s",
                  "long": "--subscription",
                  "description": "the subscription identifier"
                }
              ]
            },
            {
              "name": "set",
              "description": "Set virtual network",
              "fullName": "network vnet set",
              "usage": "[options] <resource-group> <name>",
              "filePath": "commands/arm/network/network._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "-g, --resource-group <resource-group>",
                  "required": -22,
                  "optional": 0,
                  "bool": true,
                  "short": "-g",
                  "long": "--resource-group",
                  "description": "the name of the resource group"
                },
                {
                  "flags": "-n, --name <name>",
                  "required": -12,
                  "optional": 0,
                  "bool": true,
                  "short": "-n",
                  "long": "--name",
                  "description": "the name of the virtual network"
                },
                {
                  "flags": "-a, --address-prefixes <address-prefixes>",
                  "required": -24,
                  "optional": 0,
                  "bool": true,
                  "short": "-a",
                  "long": "--address-prefixes",
                  "description": "the comma separated list of address prefixes for this virtual network.\n     For example, -a \"10.0.0.0/24,10.0.1.0/24\"\n     This list will be appended to the current list of address prefixes.\n     The address prefixes in this list should not overlap between them.\n     The address prefixes in this list should not overlap with existing address prefixes in the vnet."
                },
                {
                  "flags": "-d, --dns-servers [dns-servers]",
                  "required": 0,
                  "optional": -19,
                  "bool": true,
                  "short": "-d",
                  "long": "--dns-servers",
                  "description": "the comma separated list of DNS servers IP addresses.\n     This list will be appended to the current list of DNS server IP addresses."
                },
                {
                  "flags": "-t, --tags [tags]",
                  "required": 0,
                  "optional": -12,
                  "bool": true,
                  "short": "-t",
                  "long": "--tags",
                  "description": "the list of tags.\n     Can be multiple. In the format of \"name=value\".\n     Name is required and value is optional.\n     Existing tag values will be replaced by the values specified.\n     For example, -t \"tag1=value1;tag2\""
                },
                {
                  "flags": "-s, --subscription <subscription>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "short": "-s",
                  "long": "--subscription",
                  "description": "the subscription identifier"
                }
              ]
            },
            {
              "name": "list",
              "description": "Get all virtual networks",
              "fullName": "network vnet list",
              "usage": "[options]",
              "filePath": "commands/arm/network/network._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "-g, --resource-group <resource-group>",
                  "required": -22,
                  "optional": 0,
                  "bool": true,
                  "short": "-g",
                  "long": "--resource-group",
                  "description": "the name of the resource group"
                },
                {
                  "flags": "-s, --subscription <subscription>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "short": "-s",
                  "long": "--subscription",
                  "description": "the subscription identifier"
                }
              ]
            },
            {
              "name": "show",
              "description": "Get a virtual network",
              "fullName": "network vnet show",
              "usage": "[options] <resource-group> <name>",
              "filePath": "commands/arm/network/network._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "-g, --resource-group <resource-group>",
                  "required": -22,
                  "optional": 0,
                  "bool": true,
                  "short": "-g",
                  "long": "--resource-group",
                  "description": "the name of the resource group"
                },
                {
                  "flags": "-n, --name <name>",
                  "required": -12,
                  "optional": 0,
                  "bool": true,
                  "short": "-n",
                  "long": "--name",
                  "description": "the name of the virtual network"
                },
                {
                  "flags": "-s, --subscription <subscription>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "short": "-s",
                  "long": "--subscription",
                  "description": "the subscription identifier"
                }
              ]
            },
            {
              "name": "delete",
              "description": "Delete a virtual network",
              "fullName": "network vnet delete",
              "usage": "[options] <resource-group> <name>",
              "filePath": "commands/arm/network/network._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "-g, --resource-group <resource-group>",
                  "required": -22,
                  "optional": 0,
                  "bool": true,
                  "short": "-g",
                  "long": "--resource-group",
                  "description": "the name of the resource group"
                },
                {
                  "flags": "-n, --name <name>",
                  "required": -12,
                  "optional": 0,
                  "bool": true,
                  "short": "-n",
                  "long": "--name",
                  "description": "the name of the virtual network"
                },
                {
                  "flags": "-q, --quiet",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-q",
                  "long": "--quiet",
                  "description": "quiet mode, do not ask for delete confirmation"
                },
                {
                  "flags": "-s, --subscription <subscription>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "short": "-s",
                  "long": "--subscription",
                  "description": "the subscription identifier"
                }
              ]
            }
          ],
          "categories": {
            "subnet": {
              "name": "subnet",
              "description": "Commands to manage virtual network subnets",
              "fullName": "network vnet subnet",
              "usage": "[options] [command]",
              "options": [],
              "commands": [
                {
                  "name": "create",
                  "description": "Create virtual network subnet",
                  "fullName": "network vnet subnet create",
                  "usage": "[options] <resource-group> <vnet-name> <name>",
                  "filePath": "commands/arm/network/network._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "-g, --resource-group <resource-group>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "short": "-g",
                      "long": "--resource-group",
                      "description": "the name of the resource group"
                    },
                    {
                      "flags": "-e, --vnet-name <vnet-name>",
                      "required": -17,
                      "optional": 0,
                      "bool": true,
                      "short": "-e",
                      "long": "--vnet-name",
                      "description": "the name of the virtual network"
                    },
                    {
                      "flags": "-n, --name <name>",
                      "required": -12,
                      "optional": 0,
                      "bool": true,
                      "short": "-n",
                      "long": "--name",
                      "description": "the name of the subnet"
                    },
                    {
                      "flags": "-a, --address-prefix <address-prefix>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "short": "-a",
                      "long": "--address-prefix",
                      "description": "the address prefix in CIDR format"
                    },
                    {
                      "flags": "-w, --network-security-group-id <network-security-group-id>",
                      "required": -33,
                      "optional": 0,
                      "bool": true,
                      "short": "-w",
                      "long": "--network-security-group-id",
                      "description": "the network security group identifier.\n     e.g. /subscriptions/<subscription-id>/resourceGroups/<resource-group-name>/providers/Microsoft.Network/networkSecurityGroups/<nsg-name>"
                    },
                    {
                      "flags": "-o, --network-security-group-name <network-security-group-name>",
                      "required": -35,
                      "optional": 0,
                      "bool": true,
                      "short": "-o",
                      "long": "--network-security-group-name",
                      "description": "the network security group name"
                    },
                    {
                      "flags": "-i, --route-table-id <route-table-id>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "short": "-i",
                      "long": "--route-table-id",
                      "description": "the route table identifier.\n     e.g. /subscriptions/<subscription-id>/resourceGroups/<resource-group-name>/providers/Microsoft.Network/routeTables/<route-table-name>"
                    },
                    {
                      "flags": "-r, --route-table-name <route-table-name>",
                      "required": -24,
                      "optional": 0,
                      "bool": true,
                      "short": "-r",
                      "long": "--route-table-name",
                      "description": "the route table name"
                    },
                    {
                      "flags": "-s, --subscription <subscription>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-s",
                      "long": "--subscription",
                      "description": "the subscription identifier"
                    }
                  ]
                },
                {
                  "name": "set",
                  "description": "Set a virtual network subnet",
                  "fullName": "network vnet subnet set",
                  "usage": "[options] <resource-group> <vnet-name> <name>",
                  "filePath": "commands/arm/network/network._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "-g, --resource-group <resource-group>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "short": "-g",
                      "long": "--resource-group",
                      "description": "the name of the resource group"
                    },
                    {
                      "flags": "-e, --vnet-name <vnet-name>",
                      "required": -17,
                      "optional": 0,
                      "bool": true,
                      "short": "-e",
                      "long": "--vnet-name",
                      "description": "the name of the virtual network"
                    },
                    {
                      "flags": "-n, --name <name>",
                      "required": -12,
                      "optional": 0,
                      "bool": true,
                      "short": "-n",
                      "long": "--name",
                      "description": "the name of the subnet"
                    },
                    {
                      "flags": "-a, --address-prefix <address-prefix>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "short": "-a",
                      "long": "--address-prefix",
                      "description": "the address prefix in CIDR format"
                    },
                    {
                      "flags": "-w, --network-security-group-id [network-security-group-id]",
                      "required": 0,
                      "optional": -33,
                      "bool": true,
                      "short": "-w",
                      "long": "--network-security-group-id",
                      "description": "the network security group identifier.\n     e.g. /subscriptions/<subscription-id>/resourceGroups/<resource-group-name>/providers/Microsoft.Network/networkSecurityGroups/<nsg-name>"
                    },
                    {
                      "flags": "-o, --network-security-group-name [network-security-group-name]",
                      "required": 0,
                      "optional": -35,
                      "bool": true,
                      "short": "-o",
                      "long": "--network-security-group-name",
                      "description": "the network security group name"
                    },
                    {
                      "flags": "-i, --route-table-id [route-table-id]",
                      "required": 0,
                      "optional": -22,
                      "bool": true,
                      "short": "-i",
                      "long": "--route-table-id",
                      "description": "the route table identifier.\n     e.g. /subscriptions/<subscription-id>/resourceGroups/<resource-group-name>/providers/Microsoft.Network/routeTables/<route-table-name>"
                    },
                    {
                      "flags": "-r, --route-table-name [route-table-name]",
                      "required": 0,
                      "optional": -24,
                      "bool": true,
                      "short": "-r",
                      "long": "--route-table-name",
                      "description": "the route table name"
                    },
                    {
                      "flags": "-s, --subscription <subscription>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-s",
                      "long": "--subscription",
                      "description": "the subscription identifier"
                    }
                  ]
                },
                {
                  "name": "list",
                  "description": "Get all virtual network subnets",
                  "fullName": "network vnet subnet list",
                  "usage": "[options] <resource-group> <vnet-name>",
                  "filePath": "commands/arm/network/network._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "-g, --resource-group <resource-group>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "short": "-g",
                      "long": "--resource-group",
                      "description": "the name of the resource group"
                    },
                    {
                      "flags": "-e, --vnet-name <vnet-name>",
                      "required": -17,
                      "optional": 0,
                      "bool": true,
                      "short": "-e",
                      "long": "--vnet-name",
                      "description": "the name of the virtual network"
                    },
                    {
                      "flags": "-s, --subscription <subscription>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-s",
                      "long": "--subscription",
                      "description": "the subscription identifier"
                    }
                  ]
                },
                {
                  "name": "show",
                  "description": "Get a virtual network subnet",
                  "fullName": "network vnet subnet show",
                  "usage": "[options] <resource-group> <vnet-name> <name>",
                  "filePath": "commands/arm/network/network._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "-g, --resource-group <resource-group>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "short": "-g",
                      "long": "--resource-group",
                      "description": "the name of the resource group"
                    },
                    {
                      "flags": "-e, --vnet-name <vnet-name>",
                      "required": -17,
                      "optional": 0,
                      "bool": true,
                      "short": "-e",
                      "long": "--vnet-name",
                      "description": "the name of the virtual network"
                    },
                    {
                      "flags": "-n, --name <name>",
                      "required": -12,
                      "optional": 0,
                      "bool": true,
                      "short": "-n",
                      "long": "--name",
                      "description": "the name of the subnet"
                    },
                    {
                      "flags": "-s, --subscription <subscription>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-s",
                      "long": "--subscription",
                      "description": "the subscription identifier"
                    }
                  ]
                },
                {
                  "name": "delete",
                  "description": "Delete a subnet of a virtual network",
                  "fullName": "network vnet subnet delete",
                  "usage": "[options] <resource-group> <vnet-name> <name>",
                  "filePath": "commands/arm/network/network._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "-g, --resource-group <resource-group>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "short": "-g",
                      "long": "--resource-group",
                      "description": "the name of the resource group"
                    },
                    {
                      "flags": "-e, --vnet-name <vnet-name>",
                      "required": -17,
                      "optional": 0,
                      "bool": true,
                      "short": "-e",
                      "long": "--vnet-name",
                      "description": "the name of the virtual network"
                    },
                    {
                      "flags": "-n, --name <name>",
                      "required": -12,
                      "optional": 0,
                      "bool": true,
                      "short": "-n",
                      "long": "--name",
                      "description": "the subnet name"
                    },
                    {
                      "flags": "-q, --quiet",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-q",
                      "long": "--quiet",
                      "description": "quiet mode, do not ask for delete confirmation"
                    },
                    {
                      "flags": "-s, --subscription <subscription>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-s",
                      "long": "--subscription",
                      "description": "the subscription identifier"
                    }
                  ]
                }
              ],
              "categories": {}
            }
          }
        },
        "lb": {
          "name": "lb",
          "description": "Commands to manage load balancers",
          "fullName": "network lb",
          "usage": "[options] [command]",
          "options": [],
          "commands": [
            {
              "name": "create",
              "description": "Create a load balancer",
              "fullName": "network lb create",
              "usage": "[options] <resource-group> <name> <location>",
              "filePath": "commands/arm/network/network._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "-g, --resource-group <resource-group>",
                  "required": -22,
                  "optional": 0,
                  "bool": true,
                  "short": "-g",
                  "long": "--resource-group",
                  "description": "the name of the resource group"
                },
                {
                  "flags": "-n, --name <name>",
                  "required": -12,
                  "optional": 0,
                  "bool": true,
                  "short": "-n",
                  "long": "--name",
                  "description": "the name of the load balancer"
                },
                {
                  "flags": "-l, --location <location>",
                  "required": -16,
                  "optional": 0,
                  "bool": true,
                  "short": "-l",
                  "long": "--location",
                  "description": "the location"
                },
                {
                  "flags": "-t, --tags <tags>",
                  "required": -12,
                  "optional": 0,
                  "bool": true,
                  "short": "-t",
                  "long": "--tags",
                  "description": "the list of tags.\n     Can be multiple. In the format of \"name=value\".\n     Name is required and value is optional.\n     For example, -t \"tag1=value1;tag2\""
                },
                {
                  "flags": "-s, --subscription <subscription>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "short": "-s",
                  "long": "--subscription",
                  "description": "the subscription identifier"
                }
              ]
            },
            {
              "name": "set",
              "description": "Set a load balancer",
              "fullName": "network lb set",
              "usage": "[options] <resource-group> <name>",
              "filePath": "commands/arm/network/network._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "-g, --resource-group <resource-group>",
                  "required": -22,
                  "optional": 0,
                  "bool": true,
                  "short": "-g",
                  "long": "--resource-group",
                  "description": "the name of the resource group"
                },
                {
                  "flags": "-n, --name <name>",
                  "required": -12,
                  "optional": 0,
                  "bool": true,
                  "short": "-n",
                  "long": "--name",
                  "description": "the name of the load balancer"
                },
                {
                  "flags": "-t, --tags [tags]",
                  "required": 0,
                  "optional": -12,
                  "bool": true,
                  "short": "-t",
                  "long": "--tags",
                  "description": "the list of tags.\n     Can be multiple. In the format of \"name=value\".\n     Name is required and value is optional.\n     Existing tag values will be replaced by the values specified.\n     For example, -t \"tag1=value1;tag2\""
                },
                {
                  "flags": "-s, --subscription <subscription>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "short": "-s",
                  "long": "--subscription",
                  "description": "the subscription identifier"
                }
              ]
            },
            {
              "name": "list",
              "description": "Get all load balancers",
              "fullName": "network lb list",
              "usage": "[options]",
              "filePath": "commands/arm/network/network._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "-g, --resource-group <resource-group>",
                  "required": -22,
                  "optional": 0,
                  "bool": true,
                  "short": "-g",
                  "long": "--resource-group",
                  "description": "the name of the resource group"
                },
                {
                  "flags": "-s, --subscription <subscription>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "short": "-s",
                  "long": "--subscription",
                  "description": "the subscription identifier"
                }
              ]
            },
            {
              "name": "show",
              "description": "Get a load balancer",
              "fullName": "network lb show",
              "usage": "[options] <resource-group> <name>",
              "filePath": "commands/arm/network/network._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "-g, --resource-group <resource-group>",
                  "required": -22,
                  "optional": 0,
                  "bool": true,
                  "short": "-g",
                  "long": "--resource-group",
                  "description": "the name of the resource group"
                },
                {
                  "flags": "-n, --name <name>",
                  "required": -12,
                  "optional": 0,
                  "bool": true,
                  "short": "-n",
                  "long": "--name",
                  "description": "the name of the load balancer"
                },
                {
                  "flags": "-s, --subscription <subscription>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "short": "-s",
                  "long": "--subscription",
                  "description": "the subscription identifier"
                }
              ]
            },
            {
              "name": "delete",
              "description": "Delete a load balancer",
              "fullName": "network lb delete",
              "usage": "[options] <resource-group> <name>",
              "filePath": "commands/arm/network/network._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "-g, --resource-group <resource-group>",
                  "required": -22,
                  "optional": 0,
                  "bool": true,
                  "short": "-g",
                  "long": "--resource-group",
                  "description": "the name of the resource group"
                },
                {
                  "flags": "-n, --name <name>",
                  "required": -12,
                  "optional": 0,
                  "bool": true,
                  "short": "-n",
                  "long": "--name",
                  "description": "the name of the load balancer"
                },
                {
                  "flags": "-q, --quiet",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-q",
                  "long": "--quiet",
                  "description": "quiet mode, do not ask for delete confirmation"
                },
                {
                  "flags": "-s, --subscription <subscription>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "short": "-s",
                  "long": "--subscription",
                  "description": "the subscription identifier"
                }
              ]
            }
          ],
          "categories": {
            "frontend-ip": {
              "name": "frontend-ip",
              "description": "Commands to manage frontend ip configurations of a load balancer",
              "fullName": "network lb frontend-ip",
              "usage": "[options] [command]",
              "options": [],
              "commands": [
                {
                  "name": "create",
                  "description": "Add a frontend ip configuration to the load balancer",
                  "fullName": "network lb frontend-ip create",
                  "usage": "[options] <resource-group> <lb-name> <name>",
                  "filePath": "commands/arm/network/network._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "-g, --resource-group <resource-group>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "short": "-g",
                      "long": "--resource-group",
                      "description": "the name of the resource group"
                    },
                    {
                      "flags": "-l, --lb-name <lb-name>",
                      "required": -15,
                      "optional": 0,
                      "bool": true,
                      "short": "-l",
                      "long": "--lb-name",
                      "description": "the name of the load balancer"
                    },
                    {
                      "flags": "-n, --name <name>",
                      "required": -12,
                      "optional": 0,
                      "bool": true,
                      "short": "-n",
                      "long": "--name",
                      "description": "the name of the frontend ip configuration"
                    },
                    {
                      "flags": "-a, --private-ip-address <private-ip-address>",
                      "required": -26,
                      "optional": 0,
                      "bool": true,
                      "short": "-a",
                      "long": "--private-ip-address",
                      "description": "the private ip address"
                    },
                    {
                      "flags": "-u, --public-ip-id <public-ip-id>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-u",
                      "long": "--public-ip-id",
                      "description": "the public ip address identifier.\n     e.g. /subscriptions/<subscription-id>/resourceGroups/<resource-group-name>/providers/Microsoft.Network/publicIPAddresses/<public-ip-name>"
                    },
                    {
                      "flags": "-i, --public-ip-name <public-ip-name>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "short": "-i",
                      "long": "--public-ip-name",
                      "description": "the public ip address name.\n     This public ip must exist in the same resource group as the load balancer.\n     Please use public-ip-id if that is not the case."
                    },
                    {
                      "flags": "-b, --subnet-id <subnet-id>",
                      "required": -17,
                      "optional": 0,
                      "bool": true,
                      "short": "-b",
                      "long": "--subnet-id",
                      "description": "the subnet identifier.\n     e.g. /subscriptions/<subscription-id>/resourceGroups/<resource-group-name>/providers/Microsoft.Network/VirtualNetworks/<vnet-name>/subnets/<subnet-name>"
                    },
                    {
                      "flags": "-e, --subnet-name <subnet-name>",
                      "required": -19,
                      "optional": 0,
                      "bool": true,
                      "short": "-e",
                      "long": "--subnet-name",
                      "description": "the subnet name"
                    },
                    {
                      "flags": "-m, --subnet-vnet-name <subnet-vnet-name>",
                      "required": -24,
                      "optional": 0,
                      "bool": true,
                      "short": "-m",
                      "long": "--subnet-vnet-name",
                      "description": "the virtual network name in which subnet exists.\n     This virtual network must exist in the same resource group as the load balancer.\n     Please use subnet-id if that is not the case."
                    },
                    {
                      "flags": "-s, --subscription <subscription>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-s",
                      "long": "--subscription",
                      "description": "the subscription identifier"
                    }
                  ]
                },
                {
                  "name": "set",
                  "description": "Set a frontend ip configuration of a load balancer",
                  "fullName": "network lb frontend-ip set",
                  "usage": "[options] <resource-group> <lb-name> <name>",
                  "filePath": "commands/arm/network/network._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "-g, --resource-group <resource-group>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "short": "-g",
                      "long": "--resource-group",
                      "description": "the name of the resource group"
                    },
                    {
                      "flags": "-l, --lb-name <lb-name>",
                      "required": -15,
                      "optional": 0,
                      "bool": true,
                      "short": "-l",
                      "long": "--lb-name",
                      "description": "the name of the load balancer"
                    },
                    {
                      "flags": "-n, --name <name>",
                      "required": -12,
                      "optional": 0,
                      "bool": true,
                      "short": "-n",
                      "long": "--name",
                      "description": "the name of the frontend ip configuration"
                    },
                    {
                      "flags": "-a, --private-ip-address [private-ip-address]",
                      "required": 0,
                      "optional": -26,
                      "bool": true,
                      "short": "-a",
                      "long": "--private-ip-address",
                      "description": "the private ip address"
                    },
                    {
                      "flags": "-u, --public-ip-id <public-ip-id>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-u",
                      "long": "--public-ip-id",
                      "description": "the public ip address identifier.\n     e.g. /subscriptions/<subscription-id>/resourceGroups/<resource-group-name>/providers/Microsoft.Network/publicIPAddresses/<public-ip-name>"
                    },
                    {
                      "flags": "-i, --public-ip-name <public-ip-name>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "short": "-i",
                      "long": "--public-ip-name",
                      "description": "the public ip address name.\n     This public ip must exist in the same resource group as the load balancer.\n     Please use public-ip-id if that is not the case."
                    },
                    {
                      "flags": "-b, --subnet-id <subnet-id>",
                      "required": -17,
                      "optional": 0,
                      "bool": true,
                      "short": "-b",
                      "long": "--subnet-id",
                      "description": "the subnet identifier.\n     e.g. /subscriptions/<subscription-id>/resourceGroups/<resource-group-name>/providers/Microsoft.Network/VirtualNetworks/<vnet-name>/subnets/<subnet-name>"
                    },
                    {
                      "flags": "-e, --subnet-name <subnet-name>",
                      "required": -19,
                      "optional": 0,
                      "bool": true,
                      "short": "-e",
                      "long": "--subnet-name",
                      "description": "the subnet name"
                    },
                    {
                      "flags": "-m, --subnet-vnet-name <subnet-vnet-name>",
                      "required": -24,
                      "optional": 0,
                      "bool": true,
                      "short": "-m",
                      "long": "--subnet-vnet-name",
                      "description": "the virtual network name in which subnet exists.\n     This virtual network must exist in the same resource group as the load balancer.\n     Please use subnet-id if that is not the case."
                    },
                    {
                      "flags": "-s, --subscription <subscription>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-s",
                      "long": "--subscription",
                      "description": "the subscription identifier"
                    }
                  ]
                },
                {
                  "name": "list",
                  "description": "Get all frontend ip configurations in the load balancer",
                  "fullName": "network lb frontend-ip list",
                  "usage": "[options] <resource-group> <lb-name>",
                  "filePath": "commands/arm/network/network._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "-g, --resource-group <resource-group>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "short": "-g",
                      "long": "--resource-group",
                      "description": "the name of the resource group"
                    },
                    {
                      "flags": "-l, --lb-name <lb-name>",
                      "required": -15,
                      "optional": 0,
                      "bool": true,
                      "short": "-l",
                      "long": "--lb-name",
                      "description": "the name of the load balancer"
                    },
                    {
                      "flags": "-s, --subscription <subscription>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-s",
                      "long": "--subscription",
                      "description": "the subscription identifier"
                    }
                  ]
                },
                {
                  "name": "delete",
                  "description": "Delete a frontend ip configuration from a load balancer",
                  "fullName": "network lb frontend-ip delete",
                  "usage": "[options] <resource-group> <lb-name> <name>",
                  "filePath": "commands/arm/network/network._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "-g, --resource-group <resource-group>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "short": "-g",
                      "long": "--resource-group",
                      "description": "the name of the resource group"
                    },
                    {
                      "flags": "-l, --lb-name <lb-name>",
                      "required": -15,
                      "optional": 0,
                      "bool": true,
                      "short": "-l",
                      "long": "--lb-name",
                      "description": "the name of the load balancer"
                    },
                    {
                      "flags": "-n, --name <name>",
                      "required": -12,
                      "optional": 0,
                      "bool": true,
                      "short": "-n",
                      "long": "--name",
                      "description": "the name of the frontend ip configuration"
                    },
                    {
                      "flags": "-q, --quiet",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-q",
                      "long": "--quiet",
                      "description": "quiet mode, do not ask for delete confirmation"
                    },
                    {
                      "flags": "-s, --subscription <subscription>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-s",
                      "long": "--subscription",
                      "description": "the subscription identifier"
                    }
                  ]
                }
              ],
              "categories": {}
            },
            "probe": {
              "name": "probe",
              "description": "Commands to manage probes of a load balancer",
              "fullName": "network lb probe",
              "usage": "[options] [command]",
              "options": [],
              "commands": [
                {
                  "name": "create",
                  "description": "Add a probe to the load balancer",
                  "fullName": "network lb probe create",
                  "usage": "[options] <resource-group> <lb-name> <name>",
                  "filePath": "commands/arm/network/network._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "-g, --resource-group <resource-group>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "short": "-g",
                      "long": "--resource-group",
                      "description": "the name of the resource group"
                    },
                    {
                      "flags": "-l, --lb-name <lb-name>",
                      "required": -15,
                      "optional": 0,
                      "bool": true,
                      "short": "-l",
                      "long": "--lb-name",
                      "description": "the name of the load balancer"
                    },
                    {
                      "flags": "-n, --name <name>",
                      "required": -12,
                      "optional": 0,
                      "bool": true,
                      "short": "-n",
                      "long": "--name",
                      "description": "the name of the probe"
                    },
                    {
                      "flags": "-p, --protocol <protocol>",
                      "required": -16,
                      "optional": 0,
                      "bool": true,
                      "short": "-p",
                      "long": "--protocol",
                      "description": "the probe protocol"
                    },
                    {
                      "flags": "-o, --port <port>",
                      "required": -12,
                      "optional": 0,
                      "bool": true,
                      "short": "-o",
                      "long": "--port",
                      "description": "the probe port"
                    },
                    {
                      "flags": "-f, --path <path>",
                      "required": -12,
                      "optional": 0,
                      "bool": true,
                      "short": "-f",
                      "long": "--path",
                      "description": "the probe path"
                    },
                    {
                      "flags": "-i, --interval <interval>",
                      "required": -16,
                      "optional": 0,
                      "bool": true,
                      "short": "-i",
                      "long": "--interval",
                      "description": "the probe interval in seconds"
                    },
                    {
                      "flags": "-c, --count <count>",
                      "required": -13,
                      "optional": 0,
                      "bool": true,
                      "short": "-c",
                      "long": "--count",
                      "description": "the number of probes"
                    },
                    {
                      "flags": "-s, --subscription <subscription>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-s",
                      "long": "--subscription",
                      "description": "the subscription identifier"
                    }
                  ]
                },
                {
                  "name": "set",
                  "description": "Set a probe of a load balancer",
                  "fullName": "network lb probe set",
                  "usage": "[options] <resource-group> <lb-name> <name>",
                  "filePath": "commands/arm/network/network._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "-g, --resource-group <resource-group>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "short": "-g",
                      "long": "--resource-group",
                      "description": "the name of the resource group"
                    },
                    {
                      "flags": "-l, --lb-name <lb-name>",
                      "required": -15,
                      "optional": 0,
                      "bool": true,
                      "short": "-l",
                      "long": "--lb-name",
                      "description": "the name of the load balancer"
                    },
                    {
                      "flags": "-n, --name <name>",
                      "required": -12,
                      "optional": 0,
                      "bool": true,
                      "short": "-n",
                      "long": "--name",
                      "description": "the name of the probe"
                    },
                    {
                      "flags": "-p, --protocol <protocol>",
                      "required": -16,
                      "optional": 0,
                      "bool": true,
                      "short": "-p",
                      "long": "--protocol",
                      "description": "the probe protocol"
                    },
                    {
                      "flags": "-o, --port <port>",
                      "required": -12,
                      "optional": 0,
                      "bool": true,
                      "short": "-o",
                      "long": "--port",
                      "description": "the probe port"
                    },
                    {
                      "flags": "-f, --path <path>",
                      "required": -12,
                      "optional": 0,
                      "bool": true,
                      "short": "-f",
                      "long": "--path",
                      "description": "the probe path"
                    },
                    {
                      "flags": "-i, --interval <interval>",
                      "required": -16,
                      "optional": 0,
                      "bool": true,
                      "short": "-i",
                      "long": "--interval",
                      "description": "the probe interval in seconds"
                    },
                    {
                      "flags": "-c, --count <count>",
                      "required": -13,
                      "optional": 0,
                      "bool": true,
                      "short": "-c",
                      "long": "--count",
                      "description": "the number of probes"
                    },
                    {
                      "flags": "-s, --subscription <subscription>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-s",
                      "long": "--subscription",
                      "description": "the subscription identifier"
                    }
                  ]
                },
                {
                  "name": "list",
                  "description": "Get all probes in a load balancer",
                  "fullName": "network lb probe list",
                  "usage": "[options] <resource-group> <lb-name>",
                  "filePath": "commands/arm/network/network._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "-g, --resource-group <resource-group>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "short": "-g",
                      "long": "--resource-group",
                      "description": "the name of the resource group"
                    },
                    {
                      "flags": "-l, --lb-name <lb-name>",
                      "required": -15,
                      "optional": 0,
                      "bool": true,
                      "short": "-l",
                      "long": "--lb-name",
                      "description": "the name of the load balancer"
                    },
                    {
                      "flags": "-s, --subscription <subscription>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-s",
                      "long": "--subscription",
                      "description": "the subscription identifier"
                    }
                  ]
                },
                {
                  "name": "delete",
                  "description": "Delete a probe from a load balancer",
                  "fullName": "network lb probe delete",
                  "usage": "[options] <resource-group> <lb-name> <name>",
                  "filePath": "commands/arm/network/network._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "-g, --resource-group <resource-group>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "short": "-g",
                      "long": "--resource-group",
                      "description": "the name of the resource group"
                    },
                    {
                      "flags": "-l, --lb-name <lb-name>",
                      "required": -15,
                      "optional": 0,
                      "bool": true,
                      "short": "-l",
                      "long": "--lb-name",
                      "description": "the name of the load balancer"
                    },
                    {
                      "flags": "-n, --name <name>",
                      "required": -12,
                      "optional": 0,
                      "bool": true,
                      "short": "-n",
                      "long": "--name",
                      "description": "the probe name"
                    },
                    {
                      "flags": "-q, --quiet",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-q",
                      "long": "--quiet",
                      "description": "quiet mode, do not ask for delete confirmation"
                    },
                    {
                      "flags": "-s, --subscription <subscription>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-s",
                      "long": "--subscription",
                      "description": "the subscription identifier"
                    }
                  ]
                }
              ],
              "categories": {}
            },
            "address-pool": {
              "name": "address-pool",
              "description": "Commands to manage backend address pools of a load balancer",
              "fullName": "network lb address-pool",
              "usage": "[options] [command]",
              "options": [],
              "commands": [
                {
                  "name": "create",
                  "description": "Add a backend address pool to the load balancer",
                  "fullName": "network lb address-pool create",
                  "usage": "[options] <resource-group> <lb-name> <name>",
                  "filePath": "commands/arm/network/network._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "-g, --resource-group <resource-group>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "short": "-g",
                      "long": "--resource-group",
                      "description": "the name of the resource group"
                    },
                    {
                      "flags": "-l, --lb-name <lb-name>",
                      "required": -15,
                      "optional": 0,
                      "bool": true,
                      "short": "-l",
                      "long": "--lb-name",
                      "description": "the name of the load balancer"
                    },
                    {
                      "flags": "-n, --name <name>",
                      "required": -12,
                      "optional": 0,
                      "bool": true,
                      "short": "-n",
                      "long": "--name",
                      "description": "the name of the backend address pool"
                    },
                    {
                      "flags": "-s, --subscription <subscription>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-s",
                      "long": "--subscription",
                      "description": "the subscription identifier"
                    }
                  ]
                },
                {
                  "name": "list",
                  "description": "Get all backend address pools in the load balancer",
                  "fullName": "network lb address-pool list",
                  "usage": "[options] <resource-group> <lb-name>",
                  "filePath": "commands/arm/network/network._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "-g, --resource-group <resource-group>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "short": "-g",
                      "long": "--resource-group",
                      "description": "the name of the resource group"
                    },
                    {
                      "flags": "-l, --lb-name <lb-name>",
                      "required": -15,
                      "optional": 0,
                      "bool": true,
                      "short": "-l",
                      "long": "--lb-name",
                      "description": "the name of the load balancer"
                    },
                    {
                      "flags": "-s, --subscription <subscription>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-s",
                      "long": "--subscription",
                      "description": "the subscription identifier"
                    }
                  ]
                },
                {
                  "name": "delete",
                  "description": "Delete a backend address pool from a load balancer",
                  "fullName": "network lb address-pool delete",
                  "usage": "[options] <resource-group> <lb-name> <name>",
                  "filePath": "commands/arm/network/network._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "-g, --resource-group <resource-group>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "short": "-g",
                      "long": "--resource-group",
                      "description": "the name of the resource group"
                    },
                    {
                      "flags": "-l, --lb-name <lb-name>",
                      "required": -15,
                      "optional": 0,
                      "bool": true,
                      "short": "-l",
                      "long": "--lb-name",
                      "description": "the name of the load balancer"
                    },
                    {
                      "flags": "-n, --name <name>",
                      "required": -12,
                      "optional": 0,
                      "bool": true,
                      "short": "-n",
                      "long": "--name",
                      "description": "the name of the backend address pool"
                    },
                    {
                      "flags": "-q, --quiet",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-q",
                      "long": "--quiet",
                      "description": "quiet mode, do not ask for delete confirmation"
                    },
                    {
                      "flags": "-s, --subscription <subscription>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-s",
                      "long": "--subscription",
                      "description": "the subscription identifier"
                    }
                  ]
                }
              ],
              "categories": {}
            },
            "rule": {
              "name": "rule",
              "description": "Commands to manage load balancer rules",
              "fullName": "network lb rule",
              "usage": "[options] [command]",
              "options": [],
              "commands": [
                {
                  "name": "create",
                  "description": "Add a load balancing rule to a load balancer",
                  "fullName": "network lb rule create",
                  "usage": "[options] <resource-group> <lb-name> <name>",
                  "filePath": "commands/arm/network/network._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "-g, --resource-group <resource-group>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "short": "-g",
                      "long": "--resource-group",
                      "description": "the name of the resource group"
                    },
                    {
                      "flags": "-l, --lb-name <lb-name>",
                      "required": -15,
                      "optional": 0,
                      "bool": true,
                      "short": "-l",
                      "long": "--lb-name",
                      "description": "the name of the load balancer"
                    },
                    {
                      "flags": "-n, --name <name>",
                      "required": -12,
                      "optional": 0,
                      "bool": true,
                      "short": "-n",
                      "long": "--name",
                      "description": "the name of the rule"
                    },
                    {
                      "flags": "-p, --protocol <protocol>",
                      "required": -16,
                      "optional": 0,
                      "bool": true,
                      "short": "-p",
                      "long": "--protocol",
                      "description": "the rule protocol [tcp,udp]"
                    },
                    {
                      "flags": "-f, --frontend-port <frontend-port>",
                      "required": -21,
                      "optional": 0,
                      "bool": true,
                      "short": "-f",
                      "long": "--frontend-port",
                      "description": "the frontend port [0-65535]"
                    },
                    {
                      "flags": "-b, --backend-port <backend-port>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-b",
                      "long": "--backend-port",
                      "description": "the backend port [0-65535]"
                    },
                    {
                      "flags": "-e, --enable-floating-ip <enable-floating-ip>",
                      "required": -26,
                      "optional": 0,
                      "bool": true,
                      "short": "-e",
                      "long": "--enable-floating-ip",
                      "description": "enable floating point ip [true, false]"
                    },
                    {
                      "flags": "-i, --idle-timeout <idle-timeout>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-i",
                      "long": "--idle-timeout",
                      "description": "the idle timeout specified in minutes"
                    },
                    {
                      "flags": "-d, --load-distribution <load-distribution>",
                      "required": -25,
                      "optional": 0,
                      "bool": true,
                      "short": "-d",
                      "long": "--load-distribution",
                      "description": "client session persistence"
                    },
                    {
                      "flags": "-t, --frontend-ip-name <frontend-ip-name>",
                      "required": -24,
                      "optional": 0,
                      "bool": true,
                      "short": "-t",
                      "long": "--frontend-ip-name",
                      "description": "the name of the frontend ip configuration in the same load balancer"
                    },
                    {
                      "flags": "-o, --backend-address-pool-name <backend-address-pool-name>",
                      "required": -33,
                      "optional": 0,
                      "bool": true,
                      "short": "-o",
                      "long": "--backend-address-pool-name",
                      "description": "the name of the backend address pool defined in the same load balancer"
                    },
                    {
                      "flags": "-a, --probe-name <probe-name>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "short": "-a",
                      "long": "--probe-name",
                      "description": "the name of the probe defined in the same load balancer"
                    },
                    {
                      "flags": "-s, --subscription <subscription>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-s",
                      "long": "--subscription",
                      "description": "the subscription identifier"
                    }
                  ]
                },
                {
                  "name": "set",
                  "description": "Set a load balancing rule of a load balancer",
                  "fullName": "network lb rule set",
                  "usage": "[options] <resource-group> <lb-name> <name>",
                  "filePath": "commands/arm/network/network._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "-g, --resource-group <resource-group>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "short": "-g",
                      "long": "--resource-group",
                      "description": "the name of the resource group"
                    },
                    {
                      "flags": "-l, --lb-name <lb-name>",
                      "required": -15,
                      "optional": 0,
                      "bool": true,
                      "short": "-l",
                      "long": "--lb-name",
                      "description": "the name of the load balancer"
                    },
                    {
                      "flags": "-n, --name <name>",
                      "required": -12,
                      "optional": 0,
                      "bool": true,
                      "short": "-n",
                      "long": "--name",
                      "description": "the name of the rule"
                    },
                    {
                      "flags": "-p, --protocol <protocol>",
                      "required": -16,
                      "optional": 0,
                      "bool": true,
                      "short": "-p",
                      "long": "--protocol",
                      "description": "the rule protocol [tcp,udp]"
                    },
                    {
                      "flags": "-f, --frontend-port <frontend-port>",
                      "required": -21,
                      "optional": 0,
                      "bool": true,
                      "short": "-f",
                      "long": "--frontend-port",
                      "description": "the frontend port [0-65535]"
                    },
                    {
                      "flags": "-b, --backend-port <backend-port>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-b",
                      "long": "--backend-port",
                      "description": "the backend port [0-65535]"
                    },
                    {
                      "flags": "-e, --enable-floating-ip <enable-floating-ip>",
                      "required": -26,
                      "optional": 0,
                      "bool": true,
                      "short": "-e",
                      "long": "--enable-floating-ip",
                      "description": "enable floating point ip [true, false]"
                    },
                    {
                      "flags": "-i, --idle-timeout <idle-timeout>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-i",
                      "long": "--idle-timeout",
                      "description": "the idle timeout specified in minutes"
                    },
                    {
                      "flags": "-d, --load-distribution <load-distribution>",
                      "required": -25,
                      "optional": 0,
                      "bool": true,
                      "short": "-d",
                      "long": "--load-distribution",
                      "description": "client session persistence"
                    },
                    {
                      "flags": "-t, --frontend-ip-name <frontend-ip-name>",
                      "required": -24,
                      "optional": 0,
                      "bool": true,
                      "short": "-t",
                      "long": "--frontend-ip-name",
                      "description": "the name of the frontend ip configuration in the same load balancer"
                    },
                    {
                      "flags": "-o, --backend-address-pool-name <backend-address-pool-name>",
                      "required": -33,
                      "optional": 0,
                      "bool": true,
                      "short": "-o",
                      "long": "--backend-address-pool-name",
                      "description": "the name of the backend address pool defined in the same load balancer"
                    },
                    {
                      "flags": "-a, --probe-name [probe-name]",
                      "required": 0,
                      "optional": -18,
                      "bool": true,
                      "short": "-a",
                      "long": "--probe-name",
                      "description": "the name of the probe defined in the same load balancer"
                    },
                    {
                      "flags": "-s, --subscription <subscription>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-s",
                      "long": "--subscription",
                      "description": "the subscription identifier"
                    }
                  ]
                },
                {
                  "name": "list",
                  "description": "Get all load balancing rules of a load balancer",
                  "fullName": "network lb rule list",
                  "usage": "[options] <resource-group> <lb-name>",
                  "filePath": "commands/arm/network/network._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "-g, --resource-group <resource-group>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "short": "-g",
                      "long": "--resource-group",
                      "description": "the name of the resource group"
                    },
                    {
                      "flags": "-l, --lb-name <lb-name>",
                      "required": -15,
                      "optional": 0,
                      "bool": true,
                      "short": "-l",
                      "long": "--lb-name",
                      "description": "the name of the load balancer"
                    },
                    {
                      "flags": "-s, --subscription <subscription>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-s",
                      "long": "--subscription",
                      "description": "the subscription identifier"
                    }
                  ]
                },
                {
                  "name": "delete",
                  "description": "Delete a load balancing rule from a load balancer",
                  "fullName": "network lb rule delete",
                  "usage": "[options] <resource-group> <lb-name> <name>",
                  "filePath": "commands/arm/network/network._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "-g, --resource-group <resource-group>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "short": "-g",
                      "long": "--resource-group",
                      "description": "the name of the resource group"
                    },
                    {
                      "flags": "-l, --lb-name <lb-name>",
                      "required": -15,
                      "optional": 0,
                      "bool": true,
                      "short": "-l",
                      "long": "--lb-name",
                      "description": "the name of the load balancer"
                    },
                    {
                      "flags": "-n, --name <name>",
                      "required": -12,
                      "optional": 0,
                      "bool": true,
                      "short": "-n",
                      "long": "--name",
                      "description": "the name of the rule"
                    },
                    {
                      "flags": "-q, --quiet",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-q",
                      "long": "--quiet",
                      "description": "quiet mode, do not ask for delete confirmation"
                    },
                    {
                      "flags": "-s, --subscription <subscription>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-s",
                      "long": "--subscription",
                      "description": "the subscription identifier"
                    }
                  ]
                }
              ],
              "categories": {}
            },
            "inbound-nat-rule": {
              "name": "inbound-nat-rule",
              "description": "Commands to manage load balancer inbound NAT rules",
              "fullName": "network lb inbound-nat-rule",
              "usage": "[options] [command]",
              "options": [],
              "commands": [
                {
                  "name": "create",
                  "description": "Add a load balancing inbound NAT rule to the load balancer",
                  "fullName": "network lb inbound-nat-rule create",
                  "usage": "[options] <resource-group> <lb-name> <name>",
                  "filePath": "commands/arm/network/network._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "-g, --resource-group <resource-group>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "short": "-g",
                      "long": "--resource-group",
                      "description": "the name of the resource group"
                    },
                    {
                      "flags": "-l, --lb-name <lb-name>",
                      "required": -15,
                      "optional": 0,
                      "bool": true,
                      "short": "-l",
                      "long": "--lb-name",
                      "description": "the name of the load balancer"
                    },
                    {
                      "flags": "-n, --name <name>",
                      "required": -12,
                      "optional": 0,
                      "bool": true,
                      "short": "-n",
                      "long": "--name",
                      "description": "the name of the inbound NAT rule"
                    },
                    {
                      "flags": "-p, --protocol <protocol>",
                      "required": -16,
                      "optional": 0,
                      "bool": true,
                      "short": "-p",
                      "long": "--protocol",
                      "description": "the rule protocol [tcp,udp]"
                    },
                    {
                      "flags": "-f, --frontend-port <frontend-port>",
                      "required": -21,
                      "optional": 0,
                      "bool": true,
                      "short": "-f",
                      "long": "--frontend-port",
                      "description": "the frontend port [0-65535]"
                    },
                    {
                      "flags": "-b, --backend-port <backend-port>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-b",
                      "long": "--backend-port",
                      "description": "the backend port [0-65535]"
                    },
                    {
                      "flags": "-e, --enable-floating-ip <enable-floating-ip>",
                      "required": -26,
                      "optional": 0,
                      "bool": true,
                      "short": "-e",
                      "long": "--enable-floating-ip",
                      "description": "enable floating point ip [true, false]"
                    },
                    {
                      "flags": "-i, --idle-timeout <idle-timeout>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-i",
                      "long": "--idle-timeout",
                      "description": "the idle timeout specified in minutes"
                    },
                    {
                      "flags": "-t, --frontend-ip-name <frontend-ip-name>",
                      "required": -24,
                      "optional": 0,
                      "bool": true,
                      "short": "-t",
                      "long": "--frontend-ip-name",
                      "description": "the name of the frontend ip configuration"
                    },
                    {
                      "flags": "-s, --subscription <subscription>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-s",
                      "long": "--subscription",
                      "description": "the subscription identifier"
                    }
                  ]
                },
                {
                  "name": "set",
                  "description": "Set a load balancing inbound NAT rule of load balancer",
                  "fullName": "network lb inbound-nat-rule set",
                  "usage": "[options] <resource-group> <lb-name> <name>",
                  "filePath": "commands/arm/network/network._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "-g, --resource-group <resource-group>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "short": "-g",
                      "long": "--resource-group",
                      "description": "the name of the resource group"
                    },
                    {
                      "flags": "-l, --lb-name <lb-name>",
                      "required": -15,
                      "optional": 0,
                      "bool": true,
                      "short": "-l",
                      "long": "--lb-name",
                      "description": "the name of the load balancer"
                    },
                    {
                      "flags": "-n, --name <name>",
                      "required": -12,
                      "optional": 0,
                      "bool": true,
                      "short": "-n",
                      "long": "--name",
                      "description": "the name of the inbound NAT rule"
                    },
                    {
                      "flags": "-p, --protocol <protocol>",
                      "required": -16,
                      "optional": 0,
                      "bool": true,
                      "short": "-p",
                      "long": "--protocol",
                      "description": "the rule protocol [tcp,udp]"
                    },
                    {
                      "flags": "-f, --frontend-port <frontend-port>",
                      "required": -21,
                      "optional": 0,
                      "bool": true,
                      "short": "-f",
                      "long": "--frontend-port",
                      "description": "the frontend port [0-65535]"
                    },
                    {
                      "flags": "-b, --backend-port <backend-port>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-b",
                      "long": "--backend-port",
                      "description": "the backend port [0-65535]"
                    },
                    {
                      "flags": "-e, --enable-floating-ip <enable-floating-ip>",
                      "required": -26,
                      "optional": 0,
                      "bool": true,
                      "short": "-e",
                      "long": "--enable-floating-ip",
                      "description": "enable floating point ip [true, false]"
                    },
                    {
                      "flags": "-i, --idle-timeout <idle-timeout>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-i",
                      "long": "--idle-timeout",
                      "description": "the idle timeout specified in minutes"
                    },
                    {
                      "flags": "-t, --frontend-ip-name <frontend-ip-name>",
                      "required": -24,
                      "optional": 0,
                      "bool": true,
                      "short": "-t",
                      "long": "--frontend-ip-name",
                      "description": "the name of the frontend ip configuration"
                    },
                    {
                      "flags": "-s, --subscription <subscription>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-s",
                      "long": "--subscription",
                      "description": "the subscription identifier"
                    }
                  ]
                },
                {
                  "name": "list",
                  "description": "Get all load balancing inbound NAT rules of load balancer",
                  "fullName": "network lb inbound-nat-rule list",
                  "usage": "[options] <resource-group> <lb-name>",
                  "filePath": "commands/arm/network/network._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "-g, --resource-group <resource-group>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "short": "-g",
                      "long": "--resource-group",
                      "description": "the name of the resource group"
                    },
                    {
                      "flags": "-l, --lb-name <lb-name>",
                      "required": -15,
                      "optional": 0,
                      "bool": true,
                      "short": "-l",
                      "long": "--lb-name",
                      "description": "the name of the load balancer"
                    },
                    {
                      "flags": "-s, --subscription <subscription>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-s",
                      "long": "--subscription",
                      "description": "the subscription identifier"
                    }
                  ]
                },
                {
                  "name": "delete",
                  "description": "Delete a load balancing inbound NAT rule from a load balancer",
                  "fullName": "network lb inbound-nat-rule delete",
                  "usage": "[options] <resource-group> <lb-name> <name>",
                  "filePath": "commands/arm/network/network._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "-g, --resource-group <resource-group>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "short": "-g",
                      "long": "--resource-group",
                      "description": "the name of the resource group"
                    },
                    {
                      "flags": "-l, --lb-name <lb-name>",
                      "required": -15,
                      "optional": 0,
                      "bool": true,
                      "short": "-l",
                      "long": "--lb-name",
                      "description": "the name of the load balancer"
                    },
                    {
                      "flags": "-n, --name <name>",
                      "required": -12,
                      "optional": 0,
                      "bool": true,
                      "short": "-n",
                      "long": "--name",
                      "description": "the name of the inbound NAT rule"
                    },
                    {
                      "flags": "-q, --quiet",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-q",
                      "long": "--quiet",
                      "description": "quiet mode, do not ask for delete confirmation"
                    },
                    {
                      "flags": "-s, --subscription <subscription>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-s",
                      "long": "--subscription",
                      "description": "the subscription identifier"
                    }
                  ]
                }
              ],
              "categories": {}
            },
            "inbound-nat-pool": {
              "name": "inbound-nat-pool",
              "description": "Commands to manage load balancer inbound NAT pools",
              "fullName": "network lb inbound-nat-pool",
              "usage": "[options] [command]",
              "options": [],
              "commands": [
                {
                  "name": "create",
                  "description": "Add a load balancing inbound NAT pool to the load balancer",
                  "fullName": "network lb inbound-nat-pool create",
                  "usage": "[options] <resource-group> <lb-name> <name>",
                  "filePath": "commands/arm/network/network._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "-g, --resource-group <resource-group>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "short": "-g",
                      "long": "--resource-group",
                      "description": "the name of the resource group"
                    },
                    {
                      "flags": "-l, --lb-name <lb-name>",
                      "required": -15,
                      "optional": 0,
                      "bool": true,
                      "short": "-l",
                      "long": "--lb-name",
                      "description": "the name of the load balancer"
                    },
                    {
                      "flags": "-n, --name <name>",
                      "required": -12,
                      "optional": 0,
                      "bool": true,
                      "short": "-n",
                      "long": "--name",
                      "description": "the name of the inbound NAT pool"
                    },
                    {
                      "flags": "-p, --protocol <protocol>",
                      "required": -16,
                      "optional": 0,
                      "bool": true,
                      "short": "-p",
                      "long": "--protocol",
                      "description": "the pool protocol [tcp,udp]"
                    },
                    {
                      "flags": "-f, --frontend-port-range-start  <frontend-port-range-start>",
                      "required": -34,
                      "optional": 0,
                      "bool": true,
                      "short": "-f",
                      "long": "--frontend-port-range-start",
                      "description": "the frontend port range start [0-65535]"
                    },
                    {
                      "flags": "-e, --frontend-port-range-end <frontend-port-range-end>",
                      "required": -31,
                      "optional": 0,
                      "bool": true,
                      "short": "-e",
                      "long": "--frontend-port-range-end",
                      "description": "the frontend port range end [0-65535]"
                    },
                    {
                      "flags": "-b, --backend-port <backend-port>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-b",
                      "long": "--backend-port",
                      "description": "the backend port [0-65535]"
                    },
                    {
                      "flags": "-i, --frontend-ip-name <frontend-ip-name>",
                      "required": -24,
                      "optional": 0,
                      "bool": true,
                      "short": "-i",
                      "long": "--frontend-ip-name",
                      "description": "the name of the frontend ip configuration"
                    },
                    {
                      "flags": "-s, --subscription <subscription>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-s",
                      "long": "--subscription",
                      "description": "the subscription identifier"
                    }
                  ]
                },
                {
                  "name": "set",
                  "description": "Set a load balancing inbound NAT pool of load balancer",
                  "fullName": "network lb inbound-nat-pool set",
                  "usage": "[options] <resource-group> <lb-name> <name>",
                  "filePath": "commands/arm/network/network._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "-g, --resource-group <resource-group>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "short": "-g",
                      "long": "--resource-group",
                      "description": "the name of the resource group"
                    },
                    {
                      "flags": "-l, --lb-name <lb-name>",
                      "required": -15,
                      "optional": 0,
                      "bool": true,
                      "short": "-l",
                      "long": "--lb-name",
                      "description": "the name of the load balancer"
                    },
                    {
                      "flags": "-n, --name <name>",
                      "required": -12,
                      "optional": 0,
                      "bool": true,
                      "short": "-n",
                      "long": "--name",
                      "description": "the name of the inbound NAT pool"
                    },
                    {
                      "flags": "-p, --protocol <protocol>",
                      "required": -16,
                      "optional": 0,
                      "bool": true,
                      "short": "-p",
                      "long": "--protocol",
                      "description": "the pool protocol [tcp,udp]"
                    },
                    {
                      "flags": "-f, --frontend-port-range-start  <frontend-port-range-start>",
                      "required": -34,
                      "optional": 0,
                      "bool": true,
                      "short": "-f",
                      "long": "--frontend-port-range-start",
                      "description": "the frontend port range start [0-65535]"
                    },
                    {
                      "flags": "-e, --frontend-port-range-end <frontend-port-range-end>",
                      "required": -31,
                      "optional": 0,
                      "bool": true,
                      "short": "-e",
                      "long": "--frontend-port-range-end",
                      "description": "the frontend port range end [0-65535]"
                    },
                    {
                      "flags": "-b, --backend-port <backend-port>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-b",
                      "long": "--backend-port",
                      "description": "the backend port [0-65535]"
                    },
                    {
                      "flags": "-i, --frontend-ip-name <frontend-ip-name>",
                      "required": -24,
                      "optional": 0,
                      "bool": true,
                      "short": "-i",
                      "long": "--frontend-ip-name",
                      "description": "the name of the frontend ip configuration"
                    },
                    {
                      "flags": "-s, --subscription <subscription>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-s",
                      "long": "--subscription",
                      "description": "the subscription identifier"
                    }
                  ]
                },
                {
                  "name": "list",
                  "description": "Get all load balancing inbound NAT pools of load balancer",
                  "fullName": "network lb inbound-nat-pool list",
                  "usage": "[options] <resource-group> <lb-name>",
                  "filePath": "commands/arm/network/network._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "-g, --resource-group <resource-group>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "short": "-g",
                      "long": "--resource-group",
                      "description": "the name of the resource group"
                    },
                    {
                      "flags": "-l, --lb-name <lb-name>",
                      "required": -15,
                      "optional": 0,
                      "bool": true,
                      "short": "-l",
                      "long": "--lb-name",
                      "description": "the name of the load balancer"
                    },
                    {
                      "flags": "-s, --subscription <subscription>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-s",
                      "long": "--subscription",
                      "description": "the subscription identifier"
                    }
                  ]
                },
                {
                  "name": "delete",
                  "description": "Delete a load balancing inbound NAT pool from a load balancer",
                  "fullName": "network lb inbound-nat-pool delete",
                  "usage": "[options] <resource-group> <lb-name> <name>",
                  "filePath": "commands/arm/network/network._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "-g, --resource-group <resource-group>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "short": "-g",
                      "long": "--resource-group",
                      "description": "the name of the resource group"
                    },
                    {
                      "flags": "-l, --lb-name <lb-name>",
                      "required": -15,
                      "optional": 0,
                      "bool": true,
                      "short": "-l",
                      "long": "--lb-name",
                      "description": "the name of the load balancer"
                    },
                    {
                      "flags": "-n, --name <name>",
                      "required": -12,
                      "optional": 0,
                      "bool": true,
                      "short": "-n",
                      "long": "--name",
                      "description": "the name of the inbound NAT pool"
                    },
                    {
                      "flags": "-q, --quiet",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-q",
                      "long": "--quiet",
                      "description": "quiet mode, do not ask for delete confirmation"
                    },
                    {
                      "flags": "-s, --subscription <subscription>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-s",
                      "long": "--subscription",
                      "description": "the subscription identifier"
                    }
                  ]
                }
              ],
              "categories": {}
            }
          }
        },
        "public-ip": {
          "name": "public-ip",
          "description": "Commands to manage public ip addresses",
          "fullName": "network public-ip",
          "usage": "[options] [command]",
          "options": [],
          "commands": [
            {
              "name": "create",
              "description": "Create a public ip address",
              "fullName": "network public-ip create",
              "usage": "[options] <resource-group> <name> <location>",
              "filePath": "commands/arm/network/network._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "-g, --resource-group <resource-group>",
                  "required": -22,
                  "optional": 0,
                  "bool": true,
                  "short": "-g",
                  "long": "--resource-group",
                  "description": "the name of the resource group"
                },
                {
                  "flags": "-n, --name <name>",
                  "required": -12,
                  "optional": 0,
                  "bool": true,
                  "short": "-n",
                  "long": "--name",
                  "description": "the name of the public ip"
                },
                {
                  "flags": "-l, --location <location>",
                  "required": -16,
                  "optional": 0,
                  "bool": true,
                  "short": "-l",
                  "long": "--location",
                  "description": "the location"
                },
                {
                  "flags": "-d, --domain-name-label <domain-name-label>",
                  "required": -25,
                  "optional": 0,
                  "bool": true,
                  "short": "-d",
                  "long": "--domain-name-label",
                  "description": "the domain name label.\n     This set DNS to <domain-name-label>.<location>.cloudapp.azure.com"
                },
                {
                  "flags": "-a, --allocation-method <allocation-method>",
                  "required": -25,
                  "optional": 0,
                  "bool": true,
                  "short": "-a",
                  "long": "--allocation-method",
                  "description": "the allocation method, valid values are\n     [Dynamic,Static], default is Dynamic"
                },
                {
                  "flags": "-i, --idle-timeout <idle-timeout>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "short": "-i",
                  "long": "--idle-timeout",
                  "description": "the idle timeout specified in minutes"
                },
                {
                  "flags": "-f, --reverse-fqdn <reverse-fqdn>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "short": "-f",
                  "long": "--reverse-fqdn",
                  "description": "the reverse fqdn"
                },
                {
                  "flags": "-t, --tags <tags>",
                  "required": -12,
                  "optional": 0,
                  "bool": true,
                  "short": "-t",
                  "long": "--tags",
                  "description": "the list of tags.\n     Can be multiple. In the format of \"name=value\".\n     Name is required and value is optional.\n     For example, -t \"tag1=value1;tag2\""
                },
                {
                  "flags": "-s, --subscription <subscription>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "short": "-s",
                  "long": "--subscription",
                  "description": "the subscription identifier"
                }
              ]
            },
            {
              "name": "set",
              "description": "Set a public ip address",
              "fullName": "network public-ip set",
              "usage": "[options] <resource-group> <name>",
              "filePath": "commands/arm/network/network._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "-g, --resource-group <resource-group>",
                  "required": -22,
                  "optional": 0,
                  "bool": true,
                  "short": "-g",
                  "long": "--resource-group",
                  "description": "the name of the resource group"
                },
                {
                  "flags": "-n, --name <name>",
                  "required": -12,
                  "optional": 0,
                  "bool": true,
                  "short": "-n",
                  "long": "--name",
                  "description": "the name of the public ip"
                },
                {
                  "flags": "-d, --domain-name-label [domain-name-label]",
                  "required": 0,
                  "optional": -25,
                  "bool": true,
                  "short": "-d",
                  "long": "--domain-name-label",
                  "description": "the domain name label.\n     This set DNS to <domain-name-label>.<location>.cloudapp.azure.com"
                },
                {
                  "flags": "-a, --allocation-method <allocation-method>",
                  "required": -25,
                  "optional": 0,
                  "bool": true,
                  "short": "-a",
                  "long": "--allocation-method",
                  "description": "the allocation method, valid values are\n     [Dynamic,Static], default is Dynamic"
                },
                {
                  "flags": "-i, --idle-timeout <idle-timeout>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "short": "-i",
                  "long": "--idle-timeout",
                  "description": "the idle timeout specified in minutes"
                },
                {
                  "flags": "-f, --reverse-fqdn <reverse-fqdn>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "short": "-f",
                  "long": "--reverse-fqdn",
                  "description": "the reverse fqdn"
                },
                {
                  "flags": "-t, --tags [tags]",
                  "required": 0,
                  "optional": -12,
                  "bool": true,
                  "short": "-t",
                  "long": "--tags",
                  "description": "the list of tags.\n     Can be multiple. In the format of \"name=value\".\n     Name is required and value is optional.\n     Existing tag values will be replaced by the values specified.\n     For example, -t \"tag1=value1;tag2\""
                },
                {
                  "flags": "-s, --subscription <subscription>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "short": "-s",
                  "long": "--subscription",
                  "description": "the subscription identifier"
                }
              ]
            },
            {
              "name": "list",
              "description": "Get all public ip addresses",
              "fullName": "network public-ip list",
              "usage": "[options]",
              "filePath": "commands/arm/network/network._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "-g, --resource-group <resource-group>",
                  "required": -22,
                  "optional": 0,
                  "bool": true,
                  "short": "-g",
                  "long": "--resource-group",
                  "description": "the name of the resource group"
                },
                {
                  "flags": "-s, --subscription <subscription>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "short": "-s",
                  "long": "--subscription",
                  "description": "the subscription identifier"
                }
              ]
            },
            {
              "name": "show",
              "description": "Get a public ip address",
              "fullName": "network public-ip show",
              "usage": "[options] <resource-group> <name>",
              "filePath": "commands/arm/network/network._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "-g, --resource-group <resource-group>",
                  "required": -22,
                  "optional": 0,
                  "bool": true,
                  "short": "-g",
                  "long": "--resource-group",
                  "description": "the name of the resource group"
                },
                {
                  "flags": "-n, --name <name>",
                  "required": -12,
                  "optional": 0,
                  "bool": true,
                  "short": "-n",
                  "long": "--name",
                  "description": "the name of the public IP"
                },
                {
                  "flags": "-s, --subscription <subscription>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "short": "-s",
                  "long": "--subscription",
                  "description": "the subscription identifier"
                }
              ]
            },
            {
              "name": "delete",
              "description": "Delete a public ip address",
              "fullName": "network public-ip delete",
              "usage": "[options] <resource-group> <name>",
              "filePath": "commands/arm/network/network._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "-g, --resource-group <resource-group>",
                  "required": -22,
                  "optional": 0,
                  "bool": true,
                  "short": "-g",
                  "long": "--resource-group",
                  "description": "the name of the resource group"
                },
                {
                  "flags": "-n, --name <name>",
                  "required": -12,
                  "optional": 0,
                  "bool": true,
                  "short": "-n",
                  "long": "--name",
                  "description": "the name of the public IP"
                },
                {
                  "flags": "-q, --quiet",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-q",
                  "long": "--quiet",
                  "description": "quiet mode, do not ask for delete confirmation"
                },
                {
                  "flags": "-s, --subscription <subscription>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "short": "-s",
                  "long": "--subscription",
                  "description": "the subscription identifier"
                }
              ]
            }
          ],
          "categories": {}
        },
        "nic": {
          "name": "nic",
          "description": "Commands to manage network interfaces",
          "fullName": "network nic",
          "usage": "[options] [command]",
          "options": [],
          "commands": [
            {
              "name": "create",
              "description": "Create a network interface",
              "fullName": "network nic create",
              "usage": "[options] <resource-group> <name> <location>",
              "filePath": "commands/arm/network/network._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "-g, --resource-group <resource-group>",
                  "required": -22,
                  "optional": 0,
                  "bool": true,
                  "short": "-g",
                  "long": "--resource-group",
                  "description": "the name of the resource group"
                },
                {
                  "flags": "-n, --name <name>",
                  "required": -12,
                  "optional": 0,
                  "bool": true,
                  "short": "-n",
                  "long": "--name",
                  "description": "the name of the network interface"
                },
                {
                  "flags": "-l, --location <location>",
                  "required": -16,
                  "optional": 0,
                  "bool": true,
                  "short": "-l",
                  "long": "--location",
                  "description": "the location"
                },
                {
                  "flags": "-u, --subnet-id <subnet-id>",
                  "required": -17,
                  "optional": 0,
                  "bool": true,
                  "short": "-u",
                  "long": "--subnet-id",
                  "description": "the subnet identifier.\n     e.g. /subscriptions/<subscription-id>/resourceGroups/<resource-group-name>/providers/Microsoft.Network/VirtualNetworks/<vnet-name>/subnets/<subnet-name>"
                },
                {
                  "flags": "-k, --subnet-name <subnet-name>",
                  "required": -19,
                  "optional": 0,
                  "bool": true,
                  "short": "-k",
                  "long": "--subnet-name",
                  "description": "the subnet name"
                },
                {
                  "flags": "-m, --subnet-vnet-name <subnet-vnet-name>",
                  "required": -24,
                  "optional": 0,
                  "bool": true,
                  "short": "-m",
                  "long": "--subnet-vnet-name",
                  "description": "the vnet name under which subnet-name exists"
                },
                {
                  "flags": "-w, --network-security-group-id <network-security-group-id>",
                  "required": -33,
                  "optional": 0,
                  "bool": true,
                  "short": "-w",
                  "long": "--network-security-group-id",
                  "description": "the network security group identifier.\n     e.g. /subscriptions/<subscription-id>/resourceGroups/<resource-group-name>/providers/Microsoft.Network/networkSecurityGroups/<nsg-name>"
                },
                {
                  "flags": "-o, --network-security-group-name <network-security-group-name>",
                  "required": -35,
                  "optional": 0,
                  "bool": true,
                  "short": "-o",
                  "long": "--network-security-group-name",
                  "description": "the network security group name.\n     This network security group must exist in the same resource group as the nic.\n     Please use network-security-group-id if that is not the case."
                },
                {
                  "flags": "-i, --public-ip-id <public-ip-id>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "short": "-i",
                  "long": "--public-ip-id",
                  "description": "the public IP identifier.\n     e.g. /subscriptions/<subscription-id>/resourceGroups/<resource-group-name>/providers/Microsoft.Network/publicIPAddresses/<public-ip-name>"
                },
                {
                  "flags": "-p, --public-ip-name <public-ip-name>",
                  "required": -22,
                  "optional": 0,
                  "bool": true,
                  "short": "-p",
                  "long": "--public-ip-name",
                  "description": "the public IP name.\n     This public ip must exist in the same resource group as the nic.\n     Please use public-ip-id if that is not the case."
                },
                {
                  "flags": "-d, --lb-address-pool-ids <lb-address-pool-ids>",
                  "required": -27,
                  "optional": 0,
                  "bool": true,
                  "short": "-d",
                  "long": "--lb-address-pool-ids",
                  "description": "the comma separated list of load balancer address pool identifiers\n     e.g. /subscriptions/<subscription-id>/resourceGroups/<resource-group-name>/providers/Microsoft.Network/loadbalancers/<lb-name>/backendAddressPools/<address-pool-name>"
                },
                {
                  "flags": "-e, --lb-inbound-nat-rule-ids <lb-inbound-nat-rule-ids>",
                  "required": -31,
                  "optional": 0,
                  "bool": true,
                  "short": "-e",
                  "long": "--lb-inbound-nat-rule-ids",
                  "description": "the comma separated list of load balancer inbound NAT rule identifiers\n     e.g. /subscriptions/<subscription-id>/resourceGroups/<resource-group-name>/providers/Microsoft.Network/loadbalancers/<lb-name>/inboundNatRules/<nat-rule-name>"
                },
                {
                  "flags": "-a, --private-ip-address <private-ip-address>",
                  "required": -26,
                  "optional": 0,
                  "bool": true,
                  "short": "-a",
                  "long": "--private-ip-address",
                  "description": "the private IP address"
                },
                {
                  "flags": "-r, --internal-dns-name-label <internal-dns-name-label>",
                  "required": -31,
                  "optional": 0,
                  "bool": true,
                  "short": "-r",
                  "long": "--internal-dns-name-label",
                  "description": "the internal DNS name label"
                },
                {
                  "flags": "-f, --enable-ip-forwarding <enable-ip-forwarding>",
                  "required": -28,
                  "optional": 0,
                  "bool": true,
                  "short": "-f",
                  "long": "--enable-ip-forwarding",
                  "description": "enable ip forwarding [true, false]"
                },
                {
                  "flags": "-t, --tags <tags>",
                  "required": -12,
                  "optional": 0,
                  "bool": true,
                  "short": "-t",
                  "long": "--tags",
                  "description": "the list of tags.\n     Can be multiple. In the format of \"name=value\".\n     Name is required and value is optional.\n     For example, -t \"tag1=value1;tag2\""
                },
                {
                  "flags": "-s, --subscription <subscription>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "short": "-s",
                  "long": "--subscription",
                  "description": "the subscription identifier"
                }
              ]
            },
            {
              "name": "set",
              "description": "Set a network interface",
              "fullName": "network nic set",
              "usage": "[options] <resource-group> <name>",
              "filePath": "commands/arm/network/network._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "-g, --resource-group <resource-group>",
                  "required": -22,
                  "optional": 0,
                  "bool": true,
                  "short": "-g",
                  "long": "--resource-group",
                  "description": "the name of the resource group"
                },
                {
                  "flags": "-n, --name <name>",
                  "required": -12,
                  "optional": 0,
                  "bool": true,
                  "short": "-n",
                  "long": "--name",
                  "description": "the name of the network interface"
                },
                {
                  "flags": "-u, --subnet-id <subnet-id>",
                  "required": -17,
                  "optional": 0,
                  "bool": true,
                  "short": "-u",
                  "long": "--subnet-id",
                  "description": "the subnet identifier.\n     e.g. /subscriptions/<subscription-id>/resourceGroups/<resource-group-name>/providers/Microsoft.Network/VirtualNetworks/<vnet-name>/subnets/<subnet-name>"
                },
                {
                  "flags": "-k, --subnet-name <subnet-name>",
                  "required": -19,
                  "optional": 0,
                  "bool": true,
                  "short": "-k",
                  "long": "--subnet-name",
                  "description": "the subnet name"
                },
                {
                  "flags": "-m, --subnet-vnet-name <subnet-vnet-name>",
                  "required": -24,
                  "optional": 0,
                  "bool": true,
                  "short": "-m",
                  "long": "--subnet-vnet-name",
                  "description": "the vnet name under which subnet-name exists"
                },
                {
                  "flags": "-w, --network-security-group-id [network-security-group-id]",
                  "required": 0,
                  "optional": -33,
                  "bool": true,
                  "short": "-w",
                  "long": "--network-security-group-id",
                  "description": "the network security group identifier.\n     e.g. /subscriptions/<subscription-id>/resourceGroups/<resource-group-name>/providers/Microsoft.Network/networkSecurityGroups/<nsg-name>"
                },
                {
                  "flags": "-o, --network-security-group-name [network-security-group-name]",
                  "required": 0,
                  "optional": -35,
                  "bool": true,
                  "short": "-o",
                  "long": "--network-security-group-name",
                  "description": "the network security group name.\n     This network security group must exist in the same resource group as the nic.\n     Please use network-security-group-id if that is not the case."
                },
                {
                  "flags": "-i, --public-ip-id [public-ip-id]",
                  "required": 0,
                  "optional": -20,
                  "bool": true,
                  "short": "-i",
                  "long": "--public-ip-id",
                  "description": "the public IP identifier.\n     e.g. /subscriptions/<subscription-id>/resourceGroups/<resource-group-name>/providers/Microsoft.Network/publicIPAddresses/<public-ip-name>"
                },
                {
                  "flags": "-p, --public-ip-name [public-ip-name]",
                  "required": 0,
                  "optional": -22,
                  "bool": true,
                  "short": "-p",
                  "long": "--public-ip-name",
                  "description": "the public IP name.\n     This public ip must exist in the same resource group as the nic.\n     Please use public-ip-id if that is not the case."
                },
                {
                  "flags": "-d, --lb-address-pool-ids [lb-address-pool-ids]",
                  "required": 0,
                  "optional": -27,
                  "bool": true,
                  "short": "-d",
                  "long": "--lb-address-pool-ids",
                  "description": "the comma separated list of load balancer address pool identifiers\n     e.g. /subscriptions/<subscription-id>/resourceGroups/<resource-group-name>/providers/Microsoft.Network/loadbalancers/<lb-name>/backendAddressPools/<address-pool-name>"
                },
                {
                  "flags": "-e, --lb-inbound-nat-rule-ids [lb-inbound-nat-rule-ids]",
                  "required": 0,
                  "optional": -31,
                  "bool": true,
                  "short": "-e",
                  "long": "--lb-inbound-nat-rule-ids",
                  "description": "the comma separated list of load balancer inbound NAT rule identifiers\n     e.g. /subscriptions/<subscription-id>/resourceGroups/<resource-group-name>/providers/Microsoft.Network/loadbalancers/<lb-name>/inboundNatRules/<nat-rule-name>"
                },
                {
                  "flags": "-a, --private-ip-address <private-ip-address>",
                  "required": -26,
                  "optional": 0,
                  "bool": true,
                  "short": "-a",
                  "long": "--private-ip-address",
                  "description": "the private IP address"
                },
                {
                  "flags": "-r, --internal-dns-name-label [internal-dns-name-label]",
                  "required": 0,
                  "optional": -31,
                  "bool": true,
                  "short": "-r",
                  "long": "--internal-dns-name-label",
                  "description": "the internal DNS name label"
                },
                {
                  "flags": "-f, --enable-ip-forwarding <enable-ip-forwarding>",
                  "required": -28,
                  "optional": 0,
                  "bool": true,
                  "short": "-f",
                  "long": "--enable-ip-forwarding",
                  "description": "enable ip forwarding [true, false]"
                },
                {
                  "flags": "-t, --tags [tags]",
                  "required": 0,
                  "optional": -12,
                  "bool": true,
                  "short": "-t",
                  "long": "--tags",
                  "description": "the list of tags.\n     Can be multiple. In the format of \"name=value\".\n     Name is required and value is optional.\n     Existing tag values will be replaced by the values specified.\n     For example, -t \"tag1=value1;tag2\""
                },
                {
                  "flags": "-s, --subscription <subscription>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "short": "-s",
                  "long": "--subscription",
                  "description": "the subscription identifier"
                }
              ]
            },
            {
              "name": "list",
              "description": "Get all network interfaces",
              "fullName": "network nic list",
              "usage": "[options]",
              "filePath": "commands/arm/network/network._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "-g, --resource-group <resource-group>",
                  "required": -22,
                  "optional": 0,
                  "bool": true,
                  "short": "-g",
                  "long": "--resource-group",
                  "description": "the name of the resource group"
                },
                {
                  "flags": "-m, --virtual-machine-scale-set-name <virtual-machine-scale-set-name>",
                  "required": -38,
                  "optional": 0,
                  "bool": true,
                  "short": "-m",
                  "long": "--virtual-machine-scale-set-name",
                  "description": "the name of the virtual machine scale set"
                },
                {
                  "flags": "-i, --virtual-machine-index <virtual-machine-index>",
                  "required": -29,
                  "optional": 0,
                  "bool": true,
                  "short": "-i",
                  "long": "--virtual-machine-index",
                  "description": "the index of the virtual machine in scale set"
                },
                {
                  "flags": "-s, --subscription <subscription>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "short": "-s",
                  "long": "--subscription",
                  "description": "the subscription identifier"
                }
              ]
            },
            {
              "name": "show",
              "description": "Get a network interface",
              "fullName": "network nic show",
              "usage": "[options] <resource-group> <name>",
              "filePath": "commands/arm/network/network._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "-g, --resource-group <resource-group>",
                  "required": -22,
                  "optional": 0,
                  "bool": true,
                  "short": "-g",
                  "long": "--resource-group",
                  "description": "the name of the resource group"
                },
                {
                  "flags": "-n, --name <name>",
                  "required": -12,
                  "optional": 0,
                  "bool": true,
                  "short": "-n",
                  "long": "--name",
                  "description": "the name of the network interface"
                },
                {
                  "flags": "-m, --virtual-machine-scale-set-name <virtual-machine-scale-set-name>",
                  "required": -38,
                  "optional": 0,
                  "bool": true,
                  "short": "-m",
                  "long": "--virtual-machine-scale-set-name",
                  "description": "the name of the virtual machine scale set"
                },
                {
                  "flags": "-i, --virtual-machine-index <virtual-machine-index>",
                  "required": -29,
                  "optional": 0,
                  "bool": true,
                  "short": "-i",
                  "long": "--virtual-machine-index",
                  "description": "the index of virtual machine in scale set"
                },
                {
                  "flags": "-s, --subscription <subscription>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "short": "-s",
                  "long": "--subscription",
                  "description": "the subscription identifier"
                }
              ]
            },
            {
              "name": "delete",
              "description": "Delete a network interface",
              "fullName": "network nic delete",
              "usage": "[options] <resource-group> <name>",
              "filePath": "commands/arm/network/network._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "-g, --resource-group <resource-group>",
                  "required": -22,
                  "optional": 0,
                  "bool": true,
                  "short": "-g",
                  "long": "--resource-group",
                  "description": "the name of the resource group"
                },
                {
                  "flags": "-n, --name <name>",
                  "required": -12,
                  "optional": 0,
                  "bool": true,
                  "short": "-n",
                  "long": "--name",
                  "description": "the name of the network interface"
                },
                {
                  "flags": "-q, --quiet",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-q",
                  "long": "--quiet",
                  "description": "quiet mode, do not ask for delete confirmation"
                },
                {
                  "flags": "-s, --subscription <subscription>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "short": "-s",
                  "long": "--subscription",
                  "description": "the subscription identifier"
                }
              ]
            }
          ],
          "categories": {
            "address-pool": {
              "name": "address-pool",
              "description": "Commands to manage backend address pools of the network interface",
              "fullName": "network nic address-pool",
              "usage": "[options] [command]",
              "options": [],
              "commands": [
                {
                  "name": "add",
                  "description": "Add a backend address pool to a NIC",
                  "fullName": "network nic address-pool add",
                  "usage": "[options] <resource-group> <name>",
                  "filePath": "commands/arm/network/network._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "-g, --resource-group <resource-group>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "short": "-g",
                      "long": "--resource-group",
                      "description": "the name of the resource group"
                    },
                    {
                      "flags": "-n, --name <name>",
                      "required": -12,
                      "optional": 0,
                      "bool": true,
                      "short": "-n",
                      "long": "--name",
                      "description": "the name of the network interface"
                    },
                    {
                      "flags": "-i, --lb-address-pool-id <lb-address-pool-id>",
                      "required": -26,
                      "optional": 0,
                      "bool": true,
                      "short": "-i",
                      "long": "--lb-address-pool-id",
                      "description": "the load balancer backend address pool identifier\n   e.g. /subscriptions/<subscription-id>/resourceGroups/<resource-group-name>/providers/Microsoft.Network/loadbalancers/<lb-name>/backendAddressPools/<address-pool-name>"
                    },
                    {
                      "flags": "-l, --lb-name <lb-name>",
                      "required": -15,
                      "optional": 0,
                      "bool": true,
                      "short": "-l",
                      "long": "--lb-name",
                      "description": "the load balancer name.\n   This load balancer must exists in the same resource group as the NIC."
                    },
                    {
                      "flags": "-a, --lb-address-pool-name <lb-address-pool-name>",
                      "required": -28,
                      "optional": 0,
                      "bool": true,
                      "short": "-a",
                      "long": "--lb-address-pool-name",
                      "description": "the name of the address pool that exists in the load balancer\n   Please use --lb-address-pool-id if that is not the case."
                    },
                    {
                      "flags": "-s, --subscription <subscription>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-s",
                      "long": "--subscription",
                      "description": "the subscription identifier"
                    }
                  ]
                },
                {
                  "name": "remove",
                  "description": "Remove a backend address pool from a NIC",
                  "fullName": "network nic address-pool remove",
                  "usage": "[options] <resource-group> <name>",
                  "filePath": "commands/arm/network/network._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "-g, --resource-group <resource-group>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "short": "-g",
                      "long": "--resource-group",
                      "description": "the name of the resource group"
                    },
                    {
                      "flags": "-n, --name <name>",
                      "required": -12,
                      "optional": 0,
                      "bool": true,
                      "short": "-n",
                      "long": "--name",
                      "description": "the name of the network interface"
                    },
                    {
                      "flags": "-i, --lb-address-pool-id <lb-address-pool-id>",
                      "required": -26,
                      "optional": 0,
                      "bool": true,
                      "short": "-i",
                      "long": "--lb-address-pool-id",
                      "description": "the load balancer backend address pool identifier\n   e.g. /subscriptions/<subscription-id>/resourceGroups/<resource-group-name>/providers/Microsoft.Network/loadbalancers/<lb-name>/backendAddressPools/<address-pool-name>"
                    },
                    {
                      "flags": "-l, --lb-name <lb-name>",
                      "required": -15,
                      "optional": 0,
                      "bool": true,
                      "short": "-l",
                      "long": "--lb-name",
                      "description": "the load balancer name.\n   This load balancer must exists in the same resource group as the NIC."
                    },
                    {
                      "flags": "-a, --lb-address-pool-name <lb-address-pool-name>",
                      "required": -28,
                      "optional": 0,
                      "bool": true,
                      "short": "-a",
                      "long": "--lb-address-pool-name",
                      "description": "the name of the address pool that exists in the load balancer\n   Please use --lb-address-pool-id if that is not the case."
                    },
                    {
                      "flags": "-s, --subscription <subscription>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-s",
                      "long": "--subscription",
                      "description": "the subscription identifier"
                    }
                  ]
                }
              ],
              "categories": {}
            },
            "inbound-nat-rule": {
              "name": "inbound-nat-rule",
              "description": "Commands to manage inbound NAT rules of the network interface",
              "fullName": "network nic inbound-nat-rule",
              "usage": "[options] [command]",
              "options": [],
              "commands": [
                {
                  "name": "add",
                  "description": "Add an inbound NAT rule to a NIC",
                  "fullName": "network nic inbound-nat-rule add",
                  "usage": "[options] <resource-group> <name>",
                  "filePath": "commands/arm/network/network._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "-g, --resource-group <resource-group>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "short": "-g",
                      "long": "--resource-group",
                      "description": "the name of the resource group"
                    },
                    {
                      "flags": "-n, --name <name>",
                      "required": -12,
                      "optional": 0,
                      "bool": true,
                      "short": "-n",
                      "long": "--name",
                      "description": "the name of the network interface"
                    },
                    {
                      "flags": "-i, --lb-inbound-nat-rule-id <lb-inbound-nat-rule-id>",
                      "required": -30,
                      "optional": 0,
                      "bool": true,
                      "short": "-i",
                      "long": "--lb-inbound-nat-rule-id",
                      "description": "the inbound NAT rule identifier.\n   e.g. /subscriptions/<subscription-id>/resourceGroups/<resource-group-name>/providers/Microsoft.Network/loadbalancers/<lb-name>/inboundNatRules/<nat-rule-name>"
                    },
                    {
                      "flags": "-l, --lb-name <lb-name>",
                      "required": -15,
                      "optional": 0,
                      "bool": true,
                      "short": "-l",
                      "long": "--lb-name",
                      "description": "the load balancer name.\n   This load balancer must exists in the same resource group as the NIC."
                    },
                    {
                      "flags": "-r, --lb-inbound-nat-rule-name <lb-inbound-nat-rule-name>",
                      "required": -32,
                      "optional": 0,
                      "bool": true,
                      "short": "-r",
                      "long": "--lb-inbound-nat-rule-name",
                      "description": "the name of the inbound NAT rule that exists in the load balancer.\n   Please use --inbound-nat-rule-id if that is not the case."
                    },
                    {
                      "flags": "-s, --subscription <subscription>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-s",
                      "long": "--subscription",
                      "description": "the subscription identifier"
                    }
                  ]
                },
                {
                  "name": "remove",
                  "description": "Remove an inbound NAT rule from a NIC",
                  "fullName": "network nic inbound-nat-rule remove",
                  "usage": "[options] <resource-group> <name>",
                  "filePath": "commands/arm/network/network._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "-g, --resource-group <resource-group>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "short": "-g",
                      "long": "--resource-group",
                      "description": "the name of the resource group"
                    },
                    {
                      "flags": "-n, --name <name>",
                      "required": -12,
                      "optional": 0,
                      "bool": true,
                      "short": "-n",
                      "long": "--name",
                      "description": "the name of the network interface"
                    },
                    {
                      "flags": "-i, --lb-inbound-nat-rule-id <lb-inbound-nat-rule-id>",
                      "required": -30,
                      "optional": 0,
                      "bool": true,
                      "short": "-i",
                      "long": "--lb-inbound-nat-rule-id",
                      "description": "the inbound NAT rule identifier.\n   e.g. /subscriptions/<subscription-id>/resourceGroups/<resource-group-name>/providers/Microsoft.Network/loadbalancers/<lb-name>/inboundNatRules/<nat-rule-name>"
                    },
                    {
                      "flags": "-l, --lb-name <lb-name>",
                      "required": -15,
                      "optional": 0,
                      "bool": true,
                      "short": "-l",
                      "long": "--lb-name",
                      "description": "the load balancer name.\n   This load balancer must exists in the same resource group as the NIC."
                    },
                    {
                      "flags": "-r, --lb-inbound-nat-rule-name <lb-inbound-nat-rule-name>",
                      "required": -32,
                      "optional": 0,
                      "bool": true,
                      "short": "-r",
                      "long": "--lb-inbound-nat-rule-name",
                      "description": "the name of the inbound NAT rule that exists in the load balancer.\n   Please use --inbound-nat-rule-id if that is not the case."
                    },
                    {
                      "flags": "-s, --subscription <subscription>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-s",
                      "long": "--subscription",
                      "description": "the subscription identifier"
                    }
                  ]
                }
              ],
              "categories": {}
            }
          }
        },
        "nsg": {
          "name": "nsg",
          "description": "Commands to manage network security groups",
          "fullName": "network nsg",
          "usage": "[options] [command]",
          "options": [],
          "commands": [
            {
              "name": "create",
              "description": "Create a network security group",
              "fullName": "network nsg create",
              "usage": "[options] <resource-group> <name> <location>",
              "filePath": "commands/arm/network/network._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "-g, --resource-group <resource-group>",
                  "required": -22,
                  "optional": 0,
                  "bool": true,
                  "short": "-g",
                  "long": "--resource-group",
                  "description": "the name of the resource group"
                },
                {
                  "flags": "-n, --name <name>",
                  "required": -12,
                  "optional": 0,
                  "bool": true,
                  "short": "-n",
                  "long": "--name",
                  "description": "the name of the network security group"
                },
                {
                  "flags": "-l, --location <location>",
                  "required": -16,
                  "optional": 0,
                  "bool": true,
                  "short": "-l",
                  "long": "--location",
                  "description": "the location"
                },
                {
                  "flags": "-t, --tags <tags>",
                  "required": -12,
                  "optional": 0,
                  "bool": true,
                  "short": "-t",
                  "long": "--tags",
                  "description": "the list of tags.\n     Can be multiple. In the format of \"name=value\".\n     Name is required and value is optional.\n     For example, -t \"tag1=value1;tag2\""
                },
                {
                  "flags": "-s, --subscription <subscription>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "short": "-s",
                  "long": "--subscription",
                  "description": "the subscription identifier"
                }
              ]
            },
            {
              "name": "set",
              "description": "Set a network security group",
              "fullName": "network nsg set",
              "usage": "[options] <resource-group> <name>",
              "filePath": "commands/arm/network/network._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "-g, --resource-group <resource-group>",
                  "required": -22,
                  "optional": 0,
                  "bool": true,
                  "short": "-g",
                  "long": "--resource-group",
                  "description": "the name of the resource group"
                },
                {
                  "flags": "-n, --name <name>",
                  "required": -12,
                  "optional": 0,
                  "bool": true,
                  "short": "-n",
                  "long": "--name",
                  "description": "the name of the network security group"
                },
                {
                  "flags": "-t, --tags [tags]",
                  "required": 0,
                  "optional": -12,
                  "bool": true,
                  "short": "-t",
                  "long": "--tags",
                  "description": "the list of tags.\n     Can be multiple. In the format of \"name=value\".\n     Name is required and value is optional.\n     Existing tag values will be replaced by the values specified.\n     For example, -t \"tag1=value1;tag2\""
                },
                {
                  "flags": "-s, --subscription <subscription>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "short": "-s",
                  "long": "--subscription",
                  "description": "the subscription identifier"
                }
              ]
            },
            {
              "name": "list",
              "description": "Get all network security groups",
              "fullName": "network nsg list",
              "usage": "[options]",
              "filePath": "commands/arm/network/network._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "-g, --resource-group <resource-group>",
                  "required": -22,
                  "optional": 0,
                  "bool": true,
                  "short": "-g",
                  "long": "--resource-group",
                  "description": "the name of the resource group"
                },
                {
                  "flags": "-s, --subscription <subscription>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "short": "-s",
                  "long": "--subscription",
                  "description": "the subscription identifier"
                }
              ]
            },
            {
              "name": "show",
              "description": "Get a network security group",
              "fullName": "network nsg show",
              "usage": "[options] <resource-group> <name>",
              "filePath": "commands/arm/network/network._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "-g, --resource-group <resource-group>",
                  "required": -22,
                  "optional": 0,
                  "bool": true,
                  "short": "-g",
                  "long": "--resource-group",
                  "description": "the name of the resource group"
                },
                {
                  "flags": "-n, --name <name>",
                  "required": -12,
                  "optional": 0,
                  "bool": true,
                  "short": "-n",
                  "long": "--name",
                  "description": "the name of the network security group"
                },
                {
                  "flags": "-s, --subscription <subscription>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "short": "-s",
                  "long": "--subscription",
                  "description": "the subscription identifier"
                }
              ]
            },
            {
              "name": "delete",
              "description": "Delete a network security group",
              "fullName": "network nsg delete",
              "usage": "[options] <resource-group> <name>",
              "filePath": "commands/arm/network/network._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "-g, --resource-group <resource-group>",
                  "required": -22,
                  "optional": 0,
                  "bool": true,
                  "short": "-g",
                  "long": "--resource-group",
                  "description": "the name of the resource group"
                },
                {
                  "flags": "-n, --name <name>",
                  "required": -12,
                  "optional": 0,
                  "bool": true,
                  "short": "-n",
                  "long": "--name",
                  "description": "the name of the network security group"
                },
                {
                  "flags": "-q, --quiet",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-q",
                  "long": "--quiet",
                  "description": "quiet mode, do not ask for delete confirmation"
                },
                {
                  "flags": "-s, --subscription <subscription>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "short": "-s",
                  "long": "--subscription",
                  "description": "the subscription identifier"
                }
              ]
            }
          ],
          "categories": {
            "rule": {
              "name": "rule",
              "description": "Commands to manage network security group rules",
              "fullName": "network nsg rule",
              "usage": "[options] [command]",
              "options": [],
              "commands": [
                {
                  "name": "create",
                  "description": "Create a network security group rule",
                  "fullName": "network nsg rule create",
                  "usage": "[options] <resource-group> <nsg-name> <name>",
                  "filePath": "commands/arm/network/network._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "-g, --resource-group <resource-group>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "short": "-g",
                      "long": "--resource-group",
                      "description": "the name of the resource group"
                    },
                    {
                      "flags": "-a, --nsg-name <nsg-name>",
                      "required": -16,
                      "optional": 0,
                      "bool": true,
                      "short": "-a",
                      "long": "--nsg-name",
                      "description": "the name of the network security group"
                    },
                    {
                      "flags": "-n, --name <name>",
                      "required": -12,
                      "optional": 0,
                      "bool": true,
                      "short": "-n",
                      "long": "--name",
                      "description": "the name of the rule"
                    },
                    {
                      "flags": "-d, --description <description>",
                      "required": -19,
                      "optional": 0,
                      "bool": true,
                      "short": "-d",
                      "long": "--description",
                      "description": "the description"
                    },
                    {
                      "flags": "-p, --protocol <protocol>",
                      "required": -16,
                      "optional": 0,
                      "bool": true,
                      "short": "-p",
                      "long": "--protocol",
                      "description": "the protocol [Tcp,Udp,*]"
                    },
                    {
                      "flags": "-f, --source-address-prefix <source-address-prefix>",
                      "required": -29,
                      "optional": 0,
                      "bool": true,
                      "short": "-f",
                      "long": "--source-address-prefix",
                      "description": "the source address prefix"
                    },
                    {
                      "flags": "-o, --source-port-range <source-port-range>",
                      "required": -25,
                      "optional": 0,
                      "bool": true,
                      "short": "-o",
                      "long": "--source-port-range",
                      "description": "the source port range [0-65535]"
                    },
                    {
                      "flags": "-e, --destination-address-prefix <destination-address-prefix>",
                      "required": -34,
                      "optional": 0,
                      "bool": true,
                      "short": "-e",
                      "long": "--destination-address-prefix",
                      "description": "the destination address prefix"
                    },
                    {
                      "flags": "-u, --destination-port-range <destination-port-range>",
                      "required": -30,
                      "optional": 0,
                      "bool": true,
                      "short": "-u",
                      "long": "--destination-port-range",
                      "description": "the destination port range [0-65535]"
                    },
                    {
                      "flags": "-c, --access <access>",
                      "required": -14,
                      "optional": 0,
                      "bool": true,
                      "short": "-c",
                      "long": "--access",
                      "description": "the access mode [Allow,Deny]"
                    },
                    {
                      "flags": "-y, --priority <priority>",
                      "required": -16,
                      "optional": 0,
                      "bool": true,
                      "short": "-y",
                      "long": "--priority",
                      "description": "the priority [100-4096]"
                    },
                    {
                      "flags": "-r, --direction <direction>",
                      "required": -17,
                      "optional": 0,
                      "bool": true,
                      "short": "-r",
                      "long": "--direction",
                      "description": "the direction [Inbound,Outbound]"
                    },
                    {
                      "flags": "-s, --subscription <subscription>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-s",
                      "long": "--subscription",
                      "description": "the subscription identifier"
                    }
                  ]
                },
                {
                  "name": "set",
                  "description": "Set a network security group rule",
                  "fullName": "network nsg rule set",
                  "usage": "[options] <resource-group> <nsg-name> <name>",
                  "filePath": "commands/arm/network/network._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "-g, --resource-group <resource-group>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "short": "-g",
                      "long": "--resource-group",
                      "description": "the name of the resource group"
                    },
                    {
                      "flags": "-a, --nsg-name <nsg-name>",
                      "required": -16,
                      "optional": 0,
                      "bool": true,
                      "short": "-a",
                      "long": "--nsg-name",
                      "description": "the name of the network security group"
                    },
                    {
                      "flags": "-n, --name <name>",
                      "required": -12,
                      "optional": 0,
                      "bool": true,
                      "short": "-n",
                      "long": "--name",
                      "description": "the name of the rule"
                    },
                    {
                      "flags": "-d, --description <description>",
                      "required": -19,
                      "optional": 0,
                      "bool": true,
                      "short": "-d",
                      "long": "--description",
                      "description": "the description"
                    },
                    {
                      "flags": "-p, --protocol <protocol>",
                      "required": -16,
                      "optional": 0,
                      "bool": true,
                      "short": "-p",
                      "long": "--protocol",
                      "description": "the protocol [Tcp,Udp,*]"
                    },
                    {
                      "flags": "-f, --source-address-prefix <source-address-prefix>",
                      "required": -29,
                      "optional": 0,
                      "bool": true,
                      "short": "-f",
                      "long": "--source-address-prefix",
                      "description": "the source address prefix"
                    },
                    {
                      "flags": "-o, --source-port-range <source-port-range>",
                      "required": -25,
                      "optional": 0,
                      "bool": true,
                      "short": "-o",
                      "long": "--source-port-range",
                      "description": "the source port range [0-65535]"
                    },
                    {
                      "flags": "-e, --destination-address-prefix <destination-address-prefix>",
                      "required": -34,
                      "optional": 0,
                      "bool": true,
                      "short": "-e",
                      "long": "--destination-address-prefix",
                      "description": "the destination address prefix"
                    },
                    {
                      "flags": "-u, --destination-port-range <destination-port-range>",
                      "required": -30,
                      "optional": 0,
                      "bool": true,
                      "short": "-u",
                      "long": "--destination-port-range",
                      "description": "the destination port range [0-65535]"
                    },
                    {
                      "flags": "-c, --access <access>",
                      "required": -14,
                      "optional": 0,
                      "bool": true,
                      "short": "-c",
                      "long": "--access",
                      "description": "the access mode [Allow,Deny]"
                    },
                    {
                      "flags": "-y, --priority <priority>",
                      "required": -16,
                      "optional": 0,
                      "bool": true,
                      "short": "-y",
                      "long": "--priority",
                      "description": "the priority [100-4096]"
                    },
                    {
                      "flags": "-r, --direction <direction>",
                      "required": -17,
                      "optional": 0,
                      "bool": true,
                      "short": "-r",
                      "long": "--direction",
                      "description": "the direction [Inbound,Outbound]"
                    },
                    {
                      "flags": "-s, --subscription <subscription>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-s",
                      "long": "--subscription",
                      "description": "the subscription identifier"
                    }
                  ]
                },
                {
                  "name": "list",
                  "description": "Get all rules in a network security group",
                  "fullName": "network nsg rule list",
                  "usage": "[options] <resource-group> <nsg-name>",
                  "filePath": "commands/arm/network/network._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "-g, --resource-group <resource-group>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "short": "-g",
                      "long": "--resource-group",
                      "description": "the name of the resource group"
                    },
                    {
                      "flags": "-a, --nsg-name <nsg-name>",
                      "required": -16,
                      "optional": 0,
                      "bool": true,
                      "short": "-a",
                      "long": "--nsg-name",
                      "description": "the name of the network security group"
                    },
                    {
                      "flags": "-s, --subscription <subscription>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-s",
                      "long": "--subscription",
                      "description": "the subscription identifier"
                    }
                  ]
                },
                {
                  "name": "show",
                  "description": "Get a rule in a network security group",
                  "fullName": "network nsg rule show",
                  "usage": "[options] <resource-group> <nsg-name> <name>",
                  "filePath": "commands/arm/network/network._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "-g, --resource-group <resource-group>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "short": "-g",
                      "long": "--resource-group",
                      "description": "the name of the resource group"
                    },
                    {
                      "flags": "-a, --nsg-name <nsg-name>",
                      "required": -16,
                      "optional": 0,
                      "bool": true,
                      "short": "-a",
                      "long": "--nsg-name",
                      "description": "the name of the network security group"
                    },
                    {
                      "flags": "-n, --name <name>",
                      "required": -12,
                      "optional": 0,
                      "bool": true,
                      "short": "-n",
                      "long": "--name",
                      "description": "the name of the rule"
                    },
                    {
                      "flags": "-s, --subscription <subscription>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-s",
                      "long": "--subscription",
                      "description": "the subscription identifier"
                    }
                  ]
                },
                {
                  "name": "delete",
                  "description": "Delete a rule in a network security group",
                  "fullName": "network nsg rule delete",
                  "usage": "[options] <resource-group> <nsg-name> <name>",
                  "filePath": "commands/arm/network/network._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "-g, --resource-group <resource-group>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "short": "-g",
                      "long": "--resource-group",
                      "description": "the name of the resource group"
                    },
                    {
                      "flags": "-a, --nsg-name <nsg-name>",
                      "required": -16,
                      "optional": 0,
                      "bool": true,
                      "short": "-a",
                      "long": "--nsg-name",
                      "description": "the name of the network security group"
                    },
                    {
                      "flags": "-n, --name <name>",
                      "required": -12,
                      "optional": 0,
                      "bool": true,
                      "short": "-n",
                      "long": "--name",
                      "description": "the name of the rule"
                    },
                    {
                      "flags": "-q, --quiet",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-q",
                      "long": "--quiet",
                      "description": "quiet mode, do not ask for delete confirmation"
                    },
                    {
                      "flags": "-s, --subscription <subscription>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-s",
                      "long": "--subscription",
                      "description": "the subscription identifier"
                    }
                  ]
                }
              ],
              "categories": {}
            }
          }
        },
        "dns": {
          "name": "dns",
          "description": "Commands to manage DNS",
          "fullName": "network dns",
          "usage": "[options]",
          "options": [],
          "commands": [],
          "categories": {
            "zone": {
              "name": "zone",
              "description": "Commands to manage DNS zone",
              "fullName": "network dns zone",
              "usage": "[options] [command]",
              "options": [],
              "commands": [
                {
                  "name": "create",
                  "description": "Create a DNS zone",
                  "fullName": "network dns zone create",
                  "usage": "[options] <resource-group> <name>",
                  "filePath": "commands/arm/network/network._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "-g, --resource-group <resource-group>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "short": "-g",
                      "long": "--resource-group",
                      "description": "the name of the resource group"
                    },
                    {
                      "flags": "-n, --name <name>",
                      "required": -12,
                      "optional": 0,
                      "bool": true,
                      "short": "-n",
                      "long": "--name",
                      "description": "the name of the DNS zone"
                    },
                    {
                      "flags": "-t, --tags <tags>",
                      "required": -12,
                      "optional": 0,
                      "bool": true,
                      "short": "-t",
                      "long": "--tags",
                      "description": "the list of tags.\n     Can be multiple. In the format of \"name=value\".\n     Name is required and value is optional.\n     For example, -t \"tag1=value1;tag2\""
                    },
                    {
                      "flags": "-s, --subscription <subscription>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-s",
                      "long": "--subscription",
                      "description": "the subscription identifier"
                    }
                  ]
                },
                {
                  "name": "set",
                  "description": "Set a DNS zone",
                  "fullName": "network dns zone set",
                  "usage": "[options] <resource-group> <name>",
                  "filePath": "commands/arm/network/network._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "-g, --resource-group <resource-group>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "short": "-g",
                      "long": "--resource-group",
                      "description": "the name of the resource group"
                    },
                    {
                      "flags": "-n, --name <name>",
                      "required": -12,
                      "optional": 0,
                      "bool": true,
                      "short": "-n",
                      "long": "--name",
                      "description": "the name of the DNS zone"
                    },
                    {
                      "flags": "-t, --tags [tags]",
                      "required": 0,
                      "optional": -12,
                      "bool": true,
                      "short": "-t",
                      "long": "--tags",
                      "description": "the list of tags.\n     Can be multiple. In the format of \"name=value\".\n     Name is required and value is optional.\n     Existing tag values will be replaced by the values specified.\n     For example, -t \"tag1=value1;tag2\""
                    },
                    {
                      "flags": "-s, --subscription <subscription>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-s",
                      "long": "--subscription",
                      "description": "the subscription identifier"
                    }
                  ]
                },
                {
                  "name": "list",
                  "description": "Get all DNS zones",
                  "fullName": "network dns zone list",
                  "usage": "[options] <resource-group>",
                  "filePath": "commands/arm/network/network._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "-g, --resource-group <resource-group>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "short": "-g",
                      "long": "--resource-group",
                      "description": "the name of the resource group"
                    },
                    {
                      "flags": "-s, --subscription <subscription>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-s",
                      "long": "--subscription",
                      "description": "the subscription identifier"
                    }
                  ]
                },
                {
                  "name": "show",
                  "description": "Get a DNS zone",
                  "fullName": "network dns zone show",
                  "usage": "[options] <resource-group> <name>",
                  "filePath": "commands/arm/network/network._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "-g, --resource-group <resource-group>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "short": "-g",
                      "long": "--resource-group",
                      "description": "the name of the resource group"
                    },
                    {
                      "flags": "-n, --name <name>",
                      "required": -12,
                      "optional": 0,
                      "bool": true,
                      "short": "-n",
                      "long": "--name",
                      "description": "the name of the DNS zone\n   You can specify \"*\" (in quotes) for this parameter"
                    },
                    {
                      "flags": "-s, --subscription <subscription>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-s",
                      "long": "--subscription",
                      "description": "the subscription identifier"
                    }
                  ]
                },
                {
                  "name": "delete",
                  "description": "Delete a DNS zone",
                  "fullName": "network dns zone delete",
                  "usage": "[options] <resource-group> <name>",
                  "filePath": "commands/arm/network/network._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "-g, --resource-group <resource-group>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "short": "-g",
                      "long": "--resource-group",
                      "description": "the name of the resource group"
                    },
                    {
                      "flags": "-n, --name <name>",
                      "required": -12,
                      "optional": 0,
                      "bool": true,
                      "short": "-n",
                      "long": "--name",
                      "description": "the name of the DNS zone"
                    },
                    {
                      "flags": "-q, --quiet",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-q",
                      "long": "--quiet",
                      "description": "quiet mode, do not ask for delete confirmation"
                    },
                    {
                      "flags": "-s, --subscription <subscription>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-s",
                      "long": "--subscription",
                      "description": "the subscription identifier"
                    }
                  ]
                },
                {
                  "name": "import",
                  "description": "Import a DNS zone",
                  "fullName": "network dns zone import",
                  "usage": "[options] <resource-group> <name> <file-name>",
                  "filePath": "commands/arm/network/network._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "-g, --resource-group <resource-group>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "short": "-g",
                      "long": "--resource-group",
                      "description": "the name of the resource group"
                    },
                    {
                      "flags": "-n, --name <name>",
                      "required": -12,
                      "optional": 0,
                      "bool": true,
                      "short": "-n",
                      "long": "--name",
                      "description": "the name of the DNS zone"
                    },
                    {
                      "flags": "-f, --file-name <file-name>",
                      "required": -17,
                      "optional": 0,
                      "bool": true,
                      "short": "-f",
                      "long": "--file-name",
                      "description": "the name of the zone file"
                    },
                    {
                      "flags": "--force",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--force",
                      "description": "force overwrite of existing record sets. Otherwise, records are merged with existing record sets"
                    },
                    {
                      "flags": "--debug",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--debug",
                      "description": "output debug info"
                    },
                    {
                      "flags": "--parse-only",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--parse-only",
                      "description": "parse zone file only, without import"
                    },
                    {
                      "flags": "-s, --subscription <subscription>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-s",
                      "long": "--subscription",
                      "description": "the subscription identifier"
                    }
                  ]
                },
                {
                  "name": "export",
                  "description": "Export a DNS zone as a zone file",
                  "fullName": "network dns zone export",
                  "usage": "[options] <resource-group> <name> <file-name>",
                  "filePath": "commands/arm/network/network._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "-g, --resource-group <resource-group>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "short": "-g",
                      "long": "--resource-group",
                      "description": "the name of the resource group"
                    },
                    {
                      "flags": "-n, --name <name>",
                      "required": -12,
                      "optional": 0,
                      "bool": true,
                      "short": "-n",
                      "long": "--name",
                      "description": "the name of the DNS zone"
                    },
                    {
                      "flags": "-f, --file-name <file-name>",
                      "required": -17,
                      "optional": 0,
                      "bool": true,
                      "short": "-f",
                      "long": "--file-name",
                      "description": "the name of the zone file"
                    },
                    {
                      "flags": "-q, --quiet",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-q",
                      "long": "--quiet",
                      "description": "quiet mode, do not ask for overwrite confirmation"
                    },
                    {
                      "flags": "-s, --subscription <subscription>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-s",
                      "long": "--subscription",
                      "description": "the subscription identifier"
                    }
                  ]
                }
              ],
              "categories": {}
            },
            "record-set": {
              "name": "record-set",
              "description": "Commands to manage record sets in DNS zone",
              "fullName": "network dns record-set",
              "usage": "[options] [command]",
              "options": [],
              "commands": [
                {
                  "name": "create",
                  "description": "Create a DNS zone record set",
                  "fullName": "network dns record-set create",
                  "usage": "[options] <resource-group> <dns-zone-name> <name> <type>",
                  "filePath": "commands/arm/network/network._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "-g, --resource-group <resource-group>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "short": "-g",
                      "long": "--resource-group",
                      "description": "the name of the resource group"
                    },
                    {
                      "flags": "-z, --dns-zone-name <dns-zone-name>",
                      "required": -21,
                      "optional": 0,
                      "bool": true,
                      "short": "-z",
                      "long": "--dns-zone-name",
                      "description": "the name of the DNS zone"
                    },
                    {
                      "flags": "-n, --name <name>",
                      "required": -12,
                      "optional": 0,
                      "bool": true,
                      "short": "-n",
                      "long": "--name",
                      "description": "the relative name of the record set within the DNS zone"
                    },
                    {
                      "flags": "-y, --type <type>",
                      "required": -12,
                      "optional": 0,
                      "bool": true,
                      "short": "-y",
                      "long": "--type",
                      "description": "the type of the record set.\n     Valid values are [A, AAAA, CNAME, MX, NS, SOA, SRV, TXT, PTR]"
                    },
                    {
                      "flags": "-l, --ttl <ttl>",
                      "required": -11,
                      "optional": 0,
                      "bool": true,
                      "short": "-l",
                      "long": "--ttl",
                      "description": "time to live specified in seconds"
                    },
                    {
                      "flags": "-t, --tags <tags>",
                      "required": -12,
                      "optional": 0,
                      "bool": true,
                      "short": "-t",
                      "long": "--tags",
                      "description": "the list of tags.\n     Can be multiple. In the format of \"name=value\".\n     Name is required and value is optional.\n     For example, -t \"tag1=value1;tag2\""
                    },
                    {
                      "flags": "-s, --subscription <subscription>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-s",
                      "long": "--subscription",
                      "description": "the subscription identifier"
                    }
                  ]
                },
                {
                  "name": "set",
                  "description": "Set a DNS zone record set",
                  "fullName": "network dns record-set set",
                  "usage": "[options] <resource-group> <dns-zone-name> <name> <type>",
                  "filePath": "commands/arm/network/network._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "-g, --resource-group <resource-group>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "short": "-g",
                      "long": "--resource-group",
                      "description": "the name of the resource group"
                    },
                    {
                      "flags": "-z, --dns-zone-name <dns-zone-name>",
                      "required": -21,
                      "optional": 0,
                      "bool": true,
                      "short": "-z",
                      "long": "--dns-zone-name",
                      "description": "the name of the DNS zone"
                    },
                    {
                      "flags": "-n, --name <name>",
                      "required": -12,
                      "optional": 0,
                      "bool": true,
                      "short": "-n",
                      "long": "--name",
                      "description": "the relative name of the record set within the DNS zone"
                    },
                    {
                      "flags": "-y, --type <type>",
                      "required": -12,
                      "optional": 0,
                      "bool": true,
                      "short": "-y",
                      "long": "--type",
                      "description": "the type of the record set.\n     Valid values are [A, AAAA, CNAME, MX, NS, SOA, SRV, TXT, PTR]"
                    },
                    {
                      "flags": "-l, --ttl <ttl>",
                      "required": -11,
                      "optional": 0,
                      "bool": true,
                      "short": "-l",
                      "long": "--ttl",
                      "description": "time to live specified in seconds"
                    },
                    {
                      "flags": "-t, --tags [tags]",
                      "required": 0,
                      "optional": -12,
                      "bool": true,
                      "short": "-t",
                      "long": "--tags",
                      "description": "the list of tags.\n     Can be multiple. In the format of \"name=value\".\n     Name is required and value is optional.\n     Existing tag values will be replaced by the values specified.\n     For example, -t \"tag1=value1;tag2\""
                    },
                    {
                      "flags": "-s, --subscription <subscription>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-s",
                      "long": "--subscription",
                      "description": "the subscription identifier"
                    }
                  ]
                },
                {
                  "name": "list",
                  "description": "Get all record sets in a DNS zone",
                  "fullName": "network dns record-set list",
                  "usage": "[options] <resource-group> <dns-zone-name> [type]",
                  "filePath": "commands/arm/network/network._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "-g, --resource-group <resource-group>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "short": "-g",
                      "long": "--resource-group",
                      "description": "the name of the resource group"
                    },
                    {
                      "flags": "-z, --dns-zone-name <dns-zone-name>",
                      "required": -21,
                      "optional": 0,
                      "bool": true,
                      "short": "-z",
                      "long": "--dns-zone-name",
                      "description": "the name of the DNS zone"
                    },
                    {
                      "flags": "-y, --type <type>",
                      "required": -12,
                      "optional": 0,
                      "bool": true,
                      "short": "-y",
                      "long": "--type",
                      "description": "the type of the record set.\n     If specified only record sets of this type will be listed.\n     Valid values are [A, AAAA, CNAME, MX, NS, SOA, SRV, TXT, PTR]"
                    },
                    {
                      "flags": "-s, --subscription <subscription>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-s",
                      "long": "--subscription",
                      "description": "the subscription identifier"
                    }
                  ]
                },
                {
                  "name": "show",
                  "description": "Get a record set in a DNS zone",
                  "fullName": "network dns record-set show",
                  "usage": "[options] <resource-group> <dns-zone-name> <name> <type>",
                  "filePath": "commands/arm/network/network._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "-g, --resource-group <resource-group>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "short": "-g",
                      "long": "--resource-group",
                      "description": "the name of the resource group"
                    },
                    {
                      "flags": "-z, --dns-zone-name <dns-zone-name>",
                      "required": -21,
                      "optional": 0,
                      "bool": true,
                      "short": "-z",
                      "long": "--dns-zone-name",
                      "description": "the name of the DNS zone"
                    },
                    {
                      "flags": "-n, --name <name>",
                      "required": -12,
                      "optional": 0,
                      "bool": true,
                      "short": "-n",
                      "long": "--name",
                      "description": "the relative name of the record set within the DNS zone"
                    },
                    {
                      "flags": "-y, --type <type>",
                      "required": -12,
                      "optional": 0,
                      "bool": true,
                      "short": "-y",
                      "long": "--type",
                      "description": "the type of the record set.\n     Valid values are [A, AAAA, CNAME, MX, NS, SOA, SRV, TXT, PTR]"
                    },
                    {
                      "flags": "-s, --subscription <subscription>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-s",
                      "long": "--subscription",
                      "description": "the subscription identifier"
                    }
                  ]
                },
                {
                  "name": "delete",
                  "description": "Delete a record set from a DNS zone",
                  "fullName": "network dns record-set delete",
                  "usage": "[options] <resource-group> <dns-zone-name> <name> <type>",
                  "filePath": "commands/arm/network/network._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "-g, --resource-group <resource-group>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "short": "-g",
                      "long": "--resource-group",
                      "description": "the name of the resource group"
                    },
                    {
                      "flags": "-z, --dns-zone-name <dns-zone-name>",
                      "required": -21,
                      "optional": 0,
                      "bool": true,
                      "short": "-z",
                      "long": "--dns-zone-name",
                      "description": "the name of the DNS zone"
                    },
                    {
                      "flags": "-n, --name <name>",
                      "required": -12,
                      "optional": 0,
                      "bool": true,
                      "short": "-n",
                      "long": "--name",
                      "description": "the relative name of the record set within the DNS zone"
                    },
                    {
                      "flags": "-y, --type <type>",
                      "required": -12,
                      "optional": 0,
                      "bool": true,
                      "short": "-y",
                      "long": "--type",
                      "description": "the type of the record set.\n     If specified only record sets of this type will be listed.\n     Valid values are [A, AAAA, CNAME, MX, NS, SOA, SRV, TXT, PTR]"
                    },
                    {
                      "flags": "-q, --quiet",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-q",
                      "long": "--quiet",
                      "description": "quiet mode, do not ask for delete confirmation"
                    },
                    {
                      "flags": "-s, --subscription <subscription>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-s",
                      "long": "--subscription",
                      "description": "the subscription identifier"
                    }
                  ]
                },
                {
                  "name": "add-record",
                  "description": "Add a record in a record set under a DNS zone",
                  "fullName": "network dns record-set add-record",
                  "usage": "[options] <resource-group> <dns-zone-name> <record-set-name> <type>",
                  "filePath": "commands/arm/network/network._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "-g, --resource-group <resource-group>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "short": "-g",
                      "long": "--resource-group",
                      "description": "the name of the resource group"
                    },
                    {
                      "flags": "-z, --dns-zone-name <dns-zone-name>",
                      "required": -21,
                      "optional": 0,
                      "bool": true,
                      "short": "-z",
                      "long": "--dns-zone-name",
                      "description": "the name of the DNS zone"
                    },
                    {
                      "flags": "-n, --record-set-name <record-set-name>",
                      "required": -23,
                      "optional": 0,
                      "bool": true,
                      "short": "-n",
                      "long": "--record-set-name",
                      "description": "the name of the record set"
                    },
                    {
                      "flags": "-y, --type <type>",
                      "required": -12,
                      "optional": 0,
                      "bool": true,
                      "short": "-y",
                      "long": "--type",
                      "description": "the type of the record set.\n     If specified only record sets of this type will be listed.\n     Valid values are [A, AAAA, CNAME, MX, NS, SOA, SRV, TXT, PTR]\n\nThe record type A \n\n"
                    },
                    {
                      "flags": "-a  --ipv4-address <ipv4-address>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-a",
                      "long": "--ipv4-address",
                      "description": "the IPv4 address attribute\n\nRecord type AAAA \n\n"
                    },
                    {
                      "flags": "-b  --ipv6-address <ipv6-address>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-b",
                      "long": "--ipv6-address",
                      "description": "the IPv6 address attribute\n\nRecord type CNAME\n\n"
                    },
                    {
                      "flags": "-c  --cname <cname>",
                      "required": -13,
                      "optional": 0,
                      "bool": true,
                      "short": "-c",
                      "long": "--cname",
                      "description": "the canonical name (target)\n\nRecord type NS\n\n"
                    },
                    {
                      "flags": "-d  --nsdname <nsdname>",
                      "required": -15,
                      "optional": 0,
                      "bool": true,
                      "short": "-d",
                      "long": "--nsdname",
                      "description": "the domain name attribute\n\nRecord type MX\n\n"
                    },
                    {
                      "flags": "-f, --preference <preference>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "short": "-f",
                      "long": "--preference",
                      "description": "preference attribute"
                    },
                    {
                      "flags": "-e, --exchange <exchange>",
                      "required": -16,
                      "optional": 0,
                      "bool": true,
                      "short": "-e",
                      "long": "--exchange",
                      "description": "exchange attribute\n\nRecord type SRV\n\n"
                    },
                    {
                      "flags": "-p, --priority <priority>",
                      "required": -16,
                      "optional": 0,
                      "bool": true,
                      "short": "-p",
                      "long": "--priority",
                      "description": "the priority attribute"
                    },
                    {
                      "flags": "-w, --weight <weight>",
                      "required": -14,
                      "optional": 0,
                      "bool": true,
                      "short": "-w",
                      "long": "--weight",
                      "description": "the weight attribute"
                    },
                    {
                      "flags": "-o, --port <port>",
                      "required": -12,
                      "optional": 0,
                      "bool": true,
                      "short": "-o",
                      "long": "--port",
                      "description": "the port"
                    },
                    {
                      "flags": "-u, --target <target>",
                      "required": -14,
                      "optional": 0,
                      "bool": true,
                      "short": "-u",
                      "long": "--target",
                      "description": "the target attribute\n\nRecord type TXT\n\n"
                    },
                    {
                      "flags": "-x, --text <text>",
                      "required": -12,
                      "optional": 0,
                      "bool": true,
                      "short": "-x",
                      "long": "--text",
                      "description": "the text attribute\n\nRecord type SOA\n\n"
                    },
                    {
                      "flags": "-l, --email <email>",
                      "required": -13,
                      "optional": 0,
                      "bool": true,
                      "short": "-l",
                      "long": "--email",
                      "description": "the email attribute"
                    },
                    {
                      "flags": "-i, --expire-time <expire-time>",
                      "required": -19,
                      "optional": 0,
                      "bool": true,
                      "short": "-i",
                      "long": "--expire-time",
                      "description": "the expire time specified in seconds"
                    },
                    {
                      "flags": "-S, --serial-number <serial-number>",
                      "required": -21,
                      "optional": 0,
                      "bool": true,
                      "short": "-S",
                      "long": "--serial-number",
                      "description": "the serial number"
                    },
                    {
                      "flags": "-k, --host <host>",
                      "required": -12,
                      "optional": 0,
                      "bool": true,
                      "short": "-k",
                      "long": "--host",
                      "description": "the host name attribute"
                    },
                    {
                      "flags": "-m, --minimum-ttl <minimum-ttl>",
                      "required": -19,
                      "optional": 0,
                      "bool": true,
                      "short": "-m",
                      "long": "--minimum-ttl",
                      "description": "the minimum time to live specified in seconds"
                    },
                    {
                      "flags": "-r, --refresh-time <refresh-time>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-r",
                      "long": "--refresh-time",
                      "description": "the refresh time specified in seconds"
                    },
                    {
                      "flags": "-j, --retry-time <retry-time>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "short": "-j",
                      "long": "--retry-time",
                      "description": "the retry time specified in seconds\n\nRecord type PTR \n\n"
                    },
                    {
                      "flags": "-P, --ptrd-name <ptrd-name>",
                      "required": -17,
                      "optional": 0,
                      "bool": true,
                      "short": "-P",
                      "long": "--ptrd-name",
                      "description": "ptr domain name\n\n"
                    },
                    {
                      "flags": "-s, --subscription <subscription>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-s",
                      "long": "--subscription",
                      "description": "the subscription identifier"
                    }
                  ]
                },
                {
                  "name": "delete-record",
                  "description": "Delete a record from a record set under a DNS zone",
                  "fullName": "network dns record-set delete-record",
                  "usage": "[options] <resource-group> <dns-zone> <record-set-name> <type>",
                  "filePath": "commands/arm/network/network._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "-g, --resource-group <resource-group>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "short": "-g",
                      "long": "--resource-group",
                      "description": "the name of the resource group"
                    },
                    {
                      "flags": "-z, --dns-zone-name <dns-zone-name>",
                      "required": -21,
                      "optional": 0,
                      "bool": true,
                      "short": "-z",
                      "long": "--dns-zone-name",
                      "description": "the name of the DNS zone"
                    },
                    {
                      "flags": "-n, --record-set-name <record-set-name>",
                      "required": -23,
                      "optional": 0,
                      "bool": true,
                      "short": "-n",
                      "long": "--record-set-name",
                      "description": "the name of the record set"
                    },
                    {
                      "flags": "-y, --type <type>",
                      "required": -12,
                      "optional": 0,
                      "bool": true,
                      "short": "-y",
                      "long": "--type",
                      "description": "the type of the record set.\n     If specified only record sets of this type will be listed.\n     Valid values are [A, AAAA, CNAME, MX, NS, SOA, SRV, TXT, PTR]\n\nThe record type A \n\n"
                    },
                    {
                      "flags": "-a  --ipv4-address <ipv4-address>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-a",
                      "long": "--ipv4-address",
                      "description": "the IPv4 address attribute\n\nRecord type AAAA \n\n"
                    },
                    {
                      "flags": "-b  --ipv6-address <ipv6-address>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-b",
                      "long": "--ipv6-address",
                      "description": "the IPv6 address attribute\n\nRecord type CNAME\n\n"
                    },
                    {
                      "flags": "-c  --cname <cname>",
                      "required": -13,
                      "optional": 0,
                      "bool": true,
                      "short": "-c",
                      "long": "--cname",
                      "description": "the canonical name (target)\n\nRecord type NS\n\n"
                    },
                    {
                      "flags": "-d  --nsdname <nsdname>",
                      "required": -15,
                      "optional": 0,
                      "bool": true,
                      "short": "-d",
                      "long": "--nsdname",
                      "description": "the domain name attribute\n\nRecord type MX\n\n"
                    },
                    {
                      "flags": "-f, --preference <preference>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "short": "-f",
                      "long": "--preference",
                      "description": "preference attribute"
                    },
                    {
                      "flags": "-e, --exchange <exchange>",
                      "required": -16,
                      "optional": 0,
                      "bool": true,
                      "short": "-e",
                      "long": "--exchange",
                      "description": "exchange attribute\n\nRecord type SRV\n\n"
                    },
                    {
                      "flags": "-p, --priority <priority>",
                      "required": -16,
                      "optional": 0,
                      "bool": true,
                      "short": "-p",
                      "long": "--priority",
                      "description": "the priority attribute"
                    },
                    {
                      "flags": "-w, --weight <weight>",
                      "required": -14,
                      "optional": 0,
                      "bool": true,
                      "short": "-w",
                      "long": "--weight",
                      "description": "the weight attribute"
                    },
                    {
                      "flags": "-o, --port <port>",
                      "required": -12,
                      "optional": 0,
                      "bool": true,
                      "short": "-o",
                      "long": "--port",
                      "description": "the port"
                    },
                    {
                      "flags": "-u, --target <target>",
                      "required": -14,
                      "optional": 0,
                      "bool": true,
                      "short": "-u",
                      "long": "--target",
                      "description": "the target attribute\n\nRecord type TXT\n\n"
                    },
                    {
                      "flags": "-x, --text <text>",
                      "required": -12,
                      "optional": 0,
                      "bool": true,
                      "short": "-x",
                      "long": "--text",
                      "description": "the text attribute\n\nRecord type PTR \n\n"
                    },
                    {
                      "flags": "-P, --ptrd-name <ptrd-name>",
                      "required": -17,
                      "optional": 0,
                      "bool": true,
                      "short": "-P",
                      "long": "--ptrd-name",
                      "description": "ptr domain name\n\n"
                    },
                    {
                      "flags": "-q, --quiet",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-q",
                      "long": "--quiet",
                      "description": "quiet mode, do not ask for delete confirmation"
                    },
                    {
                      "flags": "-s, --subscription <subscription>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-s",
                      "long": "--subscription",
                      "description": "the subscription identifier"
                    }
                  ]
                }
              ],
              "categories": {}
            }
          }
        },
        "traffic-manager": {
          "name": "traffic-manager",
          "description": "Commands to manage Traffic Manager",
          "fullName": "network traffic-manager",
          "usage": "[options]",
          "options": [],
          "commands": [],
          "categories": {
            "profile": {
              "name": "profile",
              "description": "Commands to manage Traffic Manager profile",
              "fullName": "network traffic-manager profile",
              "usage": "[options] [command]",
              "options": [],
              "commands": [
                {
                  "name": "create",
                  "description": "Create a Traffic Manager profile",
                  "fullName": "network traffic-manager profile create",
                  "usage": "[options] <resource-group> <name>",
                  "filePath": "commands/arm/network/network._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "-g, --resource-group <resource-group>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "short": "-g",
                      "long": "--resource-group",
                      "description": "the name of the resource group"
                    },
                    {
                      "flags": "-n, --name <name>",
                      "required": -12,
                      "optional": 0,
                      "bool": true,
                      "short": "-n",
                      "long": "--name",
                      "description": "the name of the profile"
                    },
                    {
                      "flags": "-u, --profile-status <profile-status> ",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "short": "-u",
                      "long": "--profile-status",
                      "description": "the profile status, valid values are\n     [Enabled,Disabled], default is Enabled"
                    },
                    {
                      "flags": "-m, --traffic-routing-method <traffic-routing-method>",
                      "required": -30,
                      "optional": 0,
                      "bool": true,
                      "short": "-m",
                      "long": "--traffic-routing-method",
                      "description": "the traffic routing method for the profile,\n     valid values are [Performance,Weighted,Priority], default is Performance"
                    },
                    {
                      "flags": "-r, --relative-dns-name <relative-dns-name>",
                      "required": -25,
                      "optional": 0,
                      "bool": true,
                      "short": "-r",
                      "long": "--relative-dns-name",
                      "description": "relative DNS name of the profile e.g. .trafficmanager.net"
                    },
                    {
                      "flags": "-l, --ttl <ttl>",
                      "required": -11,
                      "optional": 0,
                      "bool": true,
                      "short": "-l",
                      "long": "--ttl",
                      "description": "time to live in specified in seconds"
                    },
                    {
                      "flags": "-p, --monitor-protocol <monitor-protocol>",
                      "required": -24,
                      "optional": 0,
                      "bool": true,
                      "short": "-p",
                      "long": "--monitor-protocol",
                      "description": "the monitor protocol, valid values are\n     [http,https], default is http"
                    },
                    {
                      "flags": "-o, --monitor-port <monitor-port>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-o",
                      "long": "--monitor-port",
                      "description": "the monitoring port"
                    },
                    {
                      "flags": "-a, --monitor-path <monitor-path>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-a",
                      "long": "--monitor-path",
                      "description": "the monitoring path"
                    },
                    {
                      "flags": "-t, --tags <tags>",
                      "required": -12,
                      "optional": 0,
                      "bool": true,
                      "short": "-t",
                      "long": "--tags",
                      "description": "the list of tags.\n     Can be multiple. In the format of \"name=value\".\n     Name is required and value is optional.\n     For example, -t \"tag1=value1;tag2\""
                    },
                    {
                      "flags": "-s, --subscription <subscription>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-s",
                      "long": "--subscription",
                      "description": "the subscription identifier"
                    }
                  ]
                },
                {
                  "name": "set",
                  "description": "Set a Traffic Manager profile",
                  "fullName": "network traffic-manager profile set",
                  "usage": "[options] <resource-group> <name>",
                  "filePath": "commands/arm/network/network._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "-g, --resource-group <resource-group>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "short": "-g",
                      "long": "--resource-group",
                      "description": "the name of the resource group"
                    },
                    {
                      "flags": "-n, --name <name>",
                      "required": -12,
                      "optional": 0,
                      "bool": true,
                      "short": "-n",
                      "long": "--name",
                      "description": "the name of the profile"
                    },
                    {
                      "flags": "-u, --profile-status <profile-status> ",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "short": "-u",
                      "long": "--profile-status",
                      "description": "the profile status, valid values are\n     [Enabled,Disabled], default is Enabled"
                    },
                    {
                      "flags": "-m, --traffic-routing-method <traffic-routing-method>",
                      "required": -30,
                      "optional": 0,
                      "bool": true,
                      "short": "-m",
                      "long": "--traffic-routing-method",
                      "description": "the traffic routing method for the profile,\n     valid values are [Performance,Weighted,Priority], default is Performance"
                    },
                    {
                      "flags": "-l, --ttl <ttl>",
                      "required": -11,
                      "optional": 0,
                      "bool": true,
                      "short": "-l",
                      "long": "--ttl",
                      "description": "time to live specified in seconds"
                    },
                    {
                      "flags": "-p, --monitor-protocol <monitor-protocol>",
                      "required": -24,
                      "optional": 0,
                      "bool": true,
                      "short": "-p",
                      "long": "--monitor-protocol",
                      "description": "the monitor protocol, valid values are\n     [http,https], default is http"
                    },
                    {
                      "flags": "-o, --monitor-port <monitor-port>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-o",
                      "long": "--monitor-port",
                      "description": "the monitoring port"
                    },
                    {
                      "flags": "-a, --monitor-path <monitor-path>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-a",
                      "long": "--monitor-path",
                      "description": "the monitoring path"
                    },
                    {
                      "flags": "-t, --tags [tags]",
                      "required": 0,
                      "optional": -12,
                      "bool": true,
                      "short": "-t",
                      "long": "--tags",
                      "description": "the list of tags.\n     Can be multiple. In the format of \"name=value\".\n     Name is required and value is optional.\n     Existing tag values will be replaced by the values specified.\n     For example, -t \"tag1=value1;tag2\""
                    },
                    {
                      "flags": "-s, --subscription <subscription>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-s",
                      "long": "--subscription",
                      "description": "the subscription identifier"
                    }
                  ]
                },
                {
                  "name": "list",
                  "description": "Get all Traffic Manager profiles",
                  "fullName": "network traffic-manager profile list",
                  "usage": "[options] <resource-group>",
                  "filePath": "commands/arm/network/network._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "-g, --resource-group <resource-group>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "short": "-g",
                      "long": "--resource-group",
                      "description": "the name of the resource group"
                    },
                    {
                      "flags": "-s, --subscription <subscription>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-s",
                      "long": "--subscription",
                      "description": "the subscription identifier"
                    }
                  ]
                },
                {
                  "name": "show",
                  "description": "Get a Traffic Manager profile",
                  "fullName": "network traffic-manager profile show",
                  "usage": "[options] <resource-group> <name>",
                  "filePath": "commands/arm/network/network._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "-g, --resource-group <resource-group>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "short": "-g",
                      "long": "--resource-group",
                      "description": "the name of the resource group"
                    },
                    {
                      "flags": "-n, --name <name>",
                      "required": -12,
                      "optional": 0,
                      "bool": true,
                      "short": "-n",
                      "long": "--name",
                      "description": "the name of the profile"
                    },
                    {
                      "flags": "-s, --subscription <subscription>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-s",
                      "long": "--subscription",
                      "description": "the subscription identifier"
                    }
                  ]
                },
                {
                  "name": "delete",
                  "description": "Delete a Traffic Manager profile",
                  "fullName": "network traffic-manager profile delete",
                  "usage": "[options] <resource-group> <name>",
                  "filePath": "commands/arm/network/network._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "-g, --resource-group <resource-group>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "short": "-g",
                      "long": "--resource-group",
                      "description": "the name of the resource group"
                    },
                    {
                      "flags": "-n, --name <name>",
                      "required": -12,
                      "optional": 0,
                      "bool": true,
                      "short": "-n",
                      "long": "--name",
                      "description": "the name of the profile"
                    },
                    {
                      "flags": "-q, --quiet",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-q",
                      "long": "--quiet",
                      "description": "quiet mode, do not ask for delete confirmation"
                    },
                    {
                      "flags": "-s, --subscription <subscription>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-s",
                      "long": "--subscription",
                      "description": "the subscription identifier"
                    }
                  ]
                },
                {
                  "name": "is-dns-available",
                  "description": "Checks whether the specified DNS prefix is available for creating a Traffic Manager profile",
                  "fullName": "network traffic-manager profile is-dns-available",
                  "usage": "[options] <relative-dns-name>",
                  "filePath": "commands/arm/network/network._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "-r, --relative-dns-name <relative-dns-name>",
                      "required": -25,
                      "optional": 0,
                      "bool": true,
                      "short": "-r",
                      "long": "--relative-dns-name",
                      "description": "the relative DNS name to check for availability"
                    },
                    {
                      "flags": "-s, --subscription <subscription>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-s",
                      "long": "--subscription",
                      "description": "the subscription identifier"
                    }
                  ]
                }
              ],
              "categories": {}
            },
            "endpoint": {
              "name": "endpoint",
              "description": "Commands to manage Traffic Manager endpoints",
              "fullName": "network traffic-manager endpoint",
              "usage": "[options] [command]",
              "options": [],
              "commands": [
                {
                  "name": "create",
                  "description": "Create an endpoint in Traffic Manager profile",
                  "fullName": "network traffic-manager endpoint create",
                  "usage": "[options] <resource-group> <profile-name> <name> <type>",
                  "filePath": "commands/arm/network/network._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "-g, --resource-group <resource-group>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "short": "-g",
                      "long": "--resource-group",
                      "description": "the name of the resource group"
                    },
                    {
                      "flags": "-f, --profile-name <profile-name>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-f",
                      "long": "--profile-name",
                      "description": "the profile name"
                    },
                    {
                      "flags": "-n, --name <name>",
                      "required": -12,
                      "optional": 0,
                      "bool": true,
                      "short": "-n",
                      "long": "--name",
                      "description": "the name of the endpoint"
                    },
                    {
                      "flags": "-y, --type <type>",
                      "required": -12,
                      "optional": 0,
                      "bool": true,
                      "short": "-y",
                      "long": "--type",
                      "description": "the endpoint type, valid values are:\n       [ExternalEndpoints,AzureEndpoints,NestedEndpoints], where ExternalEndpoints represents endpoint\n       for a service with FQDN external to Azure\n       e.g. foobar.contoso.com"
                    },
                    {
                      "flags": "-l, --location <location>",
                      "required": -16,
                      "optional": 0,
                      "bool": true,
                      "short": "-l",
                      "long": "--location",
                      "description": "the endpoint location. This is only used if the Traffic Manager profile is configured to use the \"Performance\" traffic-routing method.\n       This should only be specified on endpoints of type \"ExternalEndpoints\" and \"NestedEndpoints\".\n       It is not applicable for endpoints of type \"AzureEndpoints\", since the location is taken from the resource specified in \"--target-resource-id\"."
                    },
                    {
                      "flags": "-u, --status <status>",
                      "required": -14,
                      "optional": 0,
                      "bool": true,
                      "short": "-u",
                      "long": "--status",
                      "description": "the endpoint status, valid values are:\n       [Enabled,Disabled] Default is Enabled"
                    },
                    {
                      "flags": "-t, --target <target>",
                      "required": -14,
                      "optional": 0,
                      "bool": true,
                      "short": "-t",
                      "long": "--target",
                      "description": "the domain name target of the endpoint,\n       e.g. foobar.contoso.com. Only applicable to endpoints of type \"ExternalEndpoints\""
                    },
                    {
                      "flags": "-i, --target-resource-id <target-resource-id>",
                      "required": -26,
                      "optional": 0,
                      "bool": true,
                      "short": "-i",
                      "long": "--target-resource-id",
                      "description": "the Azure Resource URI of the endpoint. Not applicable to endpoints of type \"ExternalEndpoints\""
                    },
                    {
                      "flags": "-w, --weight <weight>",
                      "required": -14,
                      "optional": 0,
                      "bool": true,
                      "short": "-w",
                      "long": "--weight",
                      "description": "the endpoint weight used in the traffic-routing method,\n       valid range is [1, 1000] This is only used if the Traffic Manager profile is configured to use the \"Weighted\" traffic-routing method"
                    },
                    {
                      "flags": "-p, --priority <priority>",
                      "required": -16,
                      "optional": 0,
                      "bool": true,
                      "short": "-p",
                      "long": "--priority",
                      "description": "the endpoint priority used in the traffic-routing method,\n       valid range is [1, 1000] This is only used if the Traffic Manager profile is configured to use the \"Priority\" traffic-routing method.\n       Lower values represent higher priority"
                    },
                    {
                      "flags": "-s, --subscription <subscription>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-s",
                      "long": "--subscription",
                      "description": "the subscription identifier"
                    }
                  ]
                },
                {
                  "name": "set",
                  "description": "Set an endpoint in a Traffic Manager profile",
                  "fullName": "network traffic-manager endpoint set",
                  "usage": "[options] <resource-group> <profile-name> <name> <type>",
                  "filePath": "commands/arm/network/network._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "-g, --resource-group <resource-group>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "short": "-g",
                      "long": "--resource-group",
                      "description": "the name of the resource group"
                    },
                    {
                      "flags": "-f, --profile-name <profile-name>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-f",
                      "long": "--profile-name",
                      "description": "the profile name"
                    },
                    {
                      "flags": "-n, --name <name>",
                      "required": -12,
                      "optional": 0,
                      "bool": true,
                      "short": "-n",
                      "long": "--name",
                      "description": "the name of the endpoint"
                    },
                    {
                      "flags": "-y, --type <type>",
                      "required": -12,
                      "optional": 0,
                      "bool": true,
                      "short": "-y",
                      "long": "--type",
                      "description": "the endpoint type, valid values are:\n       [ExternalEndpoints,AzureEndpoints,NestedEndpoints], where ExternalEndpoints represents endpoint\n       for a service with FQDN external to Azure\n       e.g. foobar.contoso.com"
                    },
                    {
                      "flags": "-l, --location <location>",
                      "required": -16,
                      "optional": 0,
                      "bool": true,
                      "short": "-l",
                      "long": "--location",
                      "description": "the endpoint location. This is only used if the Traffic Manager profile is configured to use the \"Performance\" traffic-routing method.\n       This should only be specified on endpoints of type \"ExternalEndpoints\" and \"NestedEndpoints\".\n       It is not applicable for endpoints of type \"AzureEndpoints\", since the location is taken from the resource specified in \"--target-resource-id\"."
                    },
                    {
                      "flags": "-u, --status <status>",
                      "required": -14,
                      "optional": 0,
                      "bool": true,
                      "short": "-u",
                      "long": "--status",
                      "description": "the endpoint status, valid values are:\n       [Enabled,Disabled] Default is Enabled"
                    },
                    {
                      "flags": "-t, --target <target>",
                      "required": -14,
                      "optional": 0,
                      "bool": true,
                      "short": "-t",
                      "long": "--target",
                      "description": "the domain name target of the endpoint,\n       e.g. foobar.contoso.com. Only applicable to endpoints of type \"ExternalEndpoints\""
                    },
                    {
                      "flags": "-i, --target-resource-id <target-resource-id>",
                      "required": -26,
                      "optional": 0,
                      "bool": true,
                      "short": "-i",
                      "long": "--target-resource-id",
                      "description": "the Azure Resource URI of the endpoint. Not applicable to endpoints of type \"ExternalEndpoints\""
                    },
                    {
                      "flags": "-w, --weight <weight>",
                      "required": -14,
                      "optional": 0,
                      "bool": true,
                      "short": "-w",
                      "long": "--weight",
                      "description": "the endpoint weight used in the traffic-routing method,\n       valid range is [1, 1000] This is only used if the Traffic Manager profile is configured to use the \"Weighted\" traffic-routing method"
                    },
                    {
                      "flags": "-p, --priority <priority>",
                      "required": -16,
                      "optional": 0,
                      "bool": true,
                      "short": "-p",
                      "long": "--priority",
                      "description": "the endpoint priority used in the traffic-routing method,\n       valid range is [1, 1000] This is only used if the Traffic Manager profile is configured to use the \"Priority\" traffic-routing method.\n       Lower values represent higher priority"
                    },
                    {
                      "flags": "-s, --subscription <subscription>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-s",
                      "long": "--subscription",
                      "description": "the subscription identifier"
                    }
                  ]
                },
                {
                  "name": "show",
                  "description": "Get an endpoint in Traffic Manager profile",
                  "fullName": "network traffic-manager endpoint show",
                  "usage": "[options] <resource-group> <profile-name> <name> <type>",
                  "filePath": "commands/arm/network/network._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "-g, --resource-group <resource-group>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "short": "-g",
                      "long": "--resource-group",
                      "description": "the name of the resource group"
                    },
                    {
                      "flags": "-f, --profile-name <profile-name>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-f",
                      "long": "--profile-name",
                      "description": "the profile name"
                    },
                    {
                      "flags": "-n, --name <name>",
                      "required": -12,
                      "optional": 0,
                      "bool": true,
                      "short": "-n",
                      "long": "--name",
                      "description": "the name of the endpoint"
                    },
                    {
                      "flags": "-y, --type <type>",
                      "required": -12,
                      "optional": 0,
                      "bool": true,
                      "short": "-y",
                      "long": "--type",
                      "description": "the endpoint type, valid values are:\n       [ExternalEndpoints,AzureEndpoints,NestedEndpoints], where ExternalEndpoints represents endpoint\n       for a service with FQDN external to Azure\n       e.g. foobar.contoso.com"
                    },
                    {
                      "flags": "-s, --subscription <subscription>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-s",
                      "long": "--subscription",
                      "description": "the subscription identifier"
                    }
                  ]
                },
                {
                  "name": "delete",
                  "description": "Delete an endpoint from a Traffic Manager profile",
                  "fullName": "network traffic-manager endpoint delete",
                  "usage": "[options] <resource-group> <profile-name> <name> <type>",
                  "filePath": "commands/arm/network/network._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "-g, --resource-group <resource-group>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "short": "-g",
                      "long": "--resource-group",
                      "description": "the name of the resource group"
                    },
                    {
                      "flags": "-f, --profile-name <profile-name>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-f",
                      "long": "--profile-name",
                      "description": "the profile name"
                    },
                    {
                      "flags": "-n, --name <name>",
                      "required": -12,
                      "optional": 0,
                      "bool": true,
                      "short": "-n",
                      "long": "--name",
                      "description": "the name of the endpoint"
                    },
                    {
                      "flags": "-y, --type <type>",
                      "required": -12,
                      "optional": 0,
                      "bool": true,
                      "short": "-y",
                      "long": "--type",
                      "description": "the endpoint type, valid values are:\n       [ExternalEndpoints,AzureEndpoints,NestedEndpoints], where ExternalEndpoints represents endpoint\n       for a service with FQDN external to Azure\n       e.g. foobar.contoso.com"
                    },
                    {
                      "flags": "-q, --quiet",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-q",
                      "long": "--quiet",
                      "description": "quiet mode, do not ask for delete confirmation"
                    },
                    {
                      "flags": "-s, --subscription <subscription>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-s",
                      "long": "--subscription",
                      "description": "the subscription identifier"
                    }
                  ]
                }
              ],
              "categories": {}
            }
          }
        },
        "route-table": {
          "name": "route-table",
          "description": "Commands to manage Route Table",
          "fullName": "network route-table",
          "usage": "[options] [command]",
          "options": [],
          "commands": [
            {
              "name": "create",
              "description": "Create a Route Table",
              "fullName": "network route-table create",
              "usage": "[options] <resource-group> <name> <location>",
              "filePath": "commands/arm/network/network._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "-g, --resource-group <resource-group>",
                  "required": -22,
                  "optional": 0,
                  "bool": true,
                  "short": "-g",
                  "long": "--resource-group",
                  "description": "the name of the resource group"
                },
                {
                  "flags": "-n, --name <name>",
                  "required": -12,
                  "optional": 0,
                  "bool": true,
                  "short": "-n",
                  "long": "--name",
                  "description": "the name of the Route Table"
                },
                {
                  "flags": "-l, --location <location>",
                  "required": -16,
                  "optional": 0,
                  "bool": true,
                  "short": "-l",
                  "long": "--location",
                  "description": "the location, this must be same as the location of the virtual network containing the subnet on which this Route Table needs to be applied"
                },
                {
                  "flags": "-t, --tags <tags>",
                  "required": -12,
                  "optional": 0,
                  "bool": true,
                  "short": "-t",
                  "long": "--tags",
                  "description": "the list of tags.\n     Can be multiple. In the format of \"name=value\".\n     Name is required and value is optional.\n     For example, -t \"tag1=value1;tag2\""
                },
                {
                  "flags": "-s, --subscription <subscription>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "short": "-s",
                  "long": "--subscription",
                  "description": "the subscription identifier"
                }
              ]
            },
            {
              "name": "set",
              "description": "Set a Route Table",
              "fullName": "network route-table set",
              "usage": "[options] <resource-group> <name>",
              "filePath": "commands/arm/network/network._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "-g, --resource-group <resource-group>",
                  "required": -22,
                  "optional": 0,
                  "bool": true,
                  "short": "-g",
                  "long": "--resource-group",
                  "description": "the name of the resource group"
                },
                {
                  "flags": "-n, --name <name>",
                  "required": -12,
                  "optional": 0,
                  "bool": true,
                  "short": "-n",
                  "long": "--name",
                  "description": "the name of the Route Table"
                },
                {
                  "flags": "-t, --tags [tags]",
                  "required": 0,
                  "optional": -12,
                  "bool": true,
                  "short": "-t",
                  "long": "--tags",
                  "description": "the list of tags.\n     Can be multiple. In the format of \"name=value\".\n     Name is required and value is optional.\n     Existing tag values will be replaced by the values specified.\n     For example, -t \"tag1=value1;tag2\""
                },
                {
                  "flags": "-s, --subscription <subscription>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "short": "-s",
                  "long": "--subscription",
                  "description": "the subscription identifier"
                }
              ]
            },
            {
              "name": "list",
              "description": "Get all Route Tables",
              "fullName": "network route-table list",
              "usage": "[options]",
              "filePath": "commands/arm/network/network._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "-g, --resource-group <resource-group>",
                  "required": -22,
                  "optional": 0,
                  "bool": true,
                  "short": "-g",
                  "long": "--resource-group",
                  "description": "the name of the resource group"
                },
                {
                  "flags": "-s, --subscription <subscription>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "short": "-s",
                  "long": "--subscription",
                  "description": "the subscription identifier"
                }
              ]
            },
            {
              "name": "show",
              "description": "Get a Route Table",
              "fullName": "network route-table show",
              "usage": "[options] <resource-group> <name>",
              "filePath": "commands/arm/network/network._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "-g, --resource-group <resource-group>",
                  "required": -22,
                  "optional": 0,
                  "bool": true,
                  "short": "-g",
                  "long": "--resource-group",
                  "description": "the name of the resource group"
                },
                {
                  "flags": "-n, --name <name>",
                  "required": -12,
                  "optional": 0,
                  "bool": true,
                  "short": "-n",
                  "long": "--name",
                  "description": "the name of the Route Table"
                },
                {
                  "flags": "-s, --subscription <subscription>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "short": "-s",
                  "long": "--subscription",
                  "description": "the subscription identifier"
                }
              ]
            },
            {
              "name": "delete",
              "description": "Delete a Route Table",
              "fullName": "network route-table delete",
              "usage": "[options] <resource-group> <name>",
              "filePath": "commands/arm/network/network._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "-g, --resource-group <resource-group>",
                  "required": -22,
                  "optional": 0,
                  "bool": true,
                  "short": "-g",
                  "long": "--resource-group",
                  "description": "the name of the resource group"
                },
                {
                  "flags": "-n, --name <name>",
                  "required": -12,
                  "optional": 0,
                  "bool": true,
                  "short": "-n",
                  "long": "--name",
                  "description": "the name of the Route Table"
                },
                {
                  "flags": "-q, --quiet",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-q",
                  "long": "--quiet",
                  "description": "quiet mode, do not ask for delete confirmation"
                },
                {
                  "flags": "-s, --subscription <subscription>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "short": "-s",
                  "long": "--subscription",
                  "description": "the subscription identifier"
                }
              ]
            }
          ],
          "categories": {
            "route": {
              "name": "route",
              "description": "Commands to manage Route Table routes",
              "fullName": "network route-table route",
              "usage": "[options] [command]",
              "options": [],
              "commands": [
                {
                  "name": "create",
                  "description": "Create route in a Route Table",
                  "fullName": "network route-table route create",
                  "usage": "[options] <resource-group> <route-table-name> <name>",
                  "filePath": "commands/arm/network/network._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "-g, --resource-group <resource-group>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "short": "-g",
                      "long": "--resource-group",
                      "description": "the name of the resource group"
                    },
                    {
                      "flags": "-r, --route-table-name <route-table-name>",
                      "required": -24,
                      "optional": 0,
                      "bool": true,
                      "short": "-r",
                      "long": "--route-table-name",
                      "description": "the name of the Route Table"
                    },
                    {
                      "flags": "-n, --name <name>",
                      "required": -12,
                      "optional": 0,
                      "bool": true,
                      "short": "-n",
                      "long": "--name",
                      "description": "the name of the route"
                    },
                    {
                      "flags": "-a, --address-prefix <address-prefix>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "short": "-a",
                      "long": "--address-prefix",
                      "description": "the route address prefix e.g. 0.0.0.0/0"
                    },
                    {
                      "flags": "-y, --next-hop-type <next-hop-type>",
                      "required": -21,
                      "optional": 0,
                      "bool": true,
                      "short": "-y",
                      "long": "--next-hop-type",
                      "description": "the route next hop type, valid values are:\n       [VirtualAppliance,VirtualNetworkGateway,VNETLocal,Internet,None]"
                    },
                    {
                      "flags": "-p, --next-hop-ip-address <next-hop-ip-address>",
                      "required": -27,
                      "optional": 0,
                      "bool": true,
                      "short": "-p",
                      "long": "--next-hop-ip-address",
                      "description": "the route next hop ip addresses, this parameter is valid\n       only for next hop type VirtualAppliance"
                    },
                    {
                      "flags": "-s, --subscription <subscription>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-s",
                      "long": "--subscription",
                      "description": "the subscription identifier"
                    }
                  ]
                },
                {
                  "name": "set",
                  "description": "Set route in a Route Table",
                  "fullName": "network route-table route set",
                  "usage": "[options] <resource-group> <route-table-name> <name>",
                  "filePath": "commands/arm/network/network._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "-g, --resource-group <resource-group>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "short": "-g",
                      "long": "--resource-group",
                      "description": "the name of the resource group"
                    },
                    {
                      "flags": "-r, --route-table-name <route-table-name>",
                      "required": -24,
                      "optional": 0,
                      "bool": true,
                      "short": "-r",
                      "long": "--route-table-name",
                      "description": "the name of the Route Table"
                    },
                    {
                      "flags": "-n, --name <name>",
                      "required": -12,
                      "optional": 0,
                      "bool": true,
                      "short": "-n",
                      "long": "--name",
                      "description": "the name of the route"
                    },
                    {
                      "flags": "-a, --address-prefix <address-prefix>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "short": "-a",
                      "long": "--address-prefix",
                      "description": "the route address prefix e.g. 0.0.0.0/0"
                    },
                    {
                      "flags": "-y, --next-hop-type <next-hop-type>",
                      "required": -21,
                      "optional": 0,
                      "bool": true,
                      "short": "-y",
                      "long": "--next-hop-type",
                      "description": "the route next hop type, valid values are:\n       [VirtualAppliance,VirtualNetworkGateway,VNETLocal,Internet,None]"
                    },
                    {
                      "flags": "-p, --next-hop-ip-address <next-hop-ip-address>",
                      "required": -27,
                      "optional": 0,
                      "bool": true,
                      "short": "-p",
                      "long": "--next-hop-ip-address",
                      "description": "the route next hop ip addresses, this parameter is valid\n       only for next hop type VirualAppliance"
                    },
                    {
                      "flags": "-s, --subscription <subscription>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-s",
                      "long": "--subscription",
                      "description": "the subscription identifier"
                    }
                  ]
                },
                {
                  "name": "list",
                  "description": "List all routes in a Route Table",
                  "fullName": "network route-table route list",
                  "usage": "[options] <resource-group> <route-table-name>",
                  "filePath": "commands/arm/network/network._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "-g, --resource-group <resource-group>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "short": "-g",
                      "long": "--resource-group",
                      "description": "the name of the resource group"
                    },
                    {
                      "flags": "-r, --route-table-name <route-table-name>",
                      "required": -24,
                      "optional": 0,
                      "bool": true,
                      "short": "-r",
                      "long": "--route-table-name",
                      "description": "the name of the Route Table"
                    },
                    {
                      "flags": "-s, --subscription <subscription>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-s",
                      "long": "--subscription",
                      "description": "the subscription identifier"
                    }
                  ]
                },
                {
                  "name": "show",
                  "description": "Show details about route in a Route Table",
                  "fullName": "network route-table route show",
                  "usage": "[options] <resource-group> <route-table-name> <name>",
                  "filePath": "commands/arm/network/network._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "-g, --resource-group <resource-group>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "short": "-g",
                      "long": "--resource-group",
                      "description": "the name of the resource group"
                    },
                    {
                      "flags": "-r, --route-table-name <route-table-name>",
                      "required": -24,
                      "optional": 0,
                      "bool": true,
                      "short": "-r",
                      "long": "--route-table-name",
                      "description": "the name of the Route Table"
                    },
                    {
                      "flags": "-n, --name <name>",
                      "required": -12,
                      "optional": 0,
                      "bool": true,
                      "short": "-n",
                      "long": "--name",
                      "description": "the name of the route"
                    },
                    {
                      "flags": "-s, --subscription <subscription>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-s",
                      "long": "--subscription",
                      "description": "the subscription identifier"
                    }
                  ]
                },
                {
                  "name": "delete",
                  "description": "Delete route from a Route Table",
                  "fullName": "network route-table route delete",
                  "usage": "[options] <resource-group> <route-table-name> <name>",
                  "filePath": "commands/arm/network/network._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "-g, --resource-group <resource-group>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "short": "-g",
                      "long": "--resource-group",
                      "description": "the name of the resource group"
                    },
                    {
                      "flags": "-r, --route-table-name <route-table-name>",
                      "required": -24,
                      "optional": 0,
                      "bool": true,
                      "short": "-r",
                      "long": "--route-table-name",
                      "description": "the name of the Route Table"
                    },
                    {
                      "flags": "-n, --name <name>",
                      "required": -12,
                      "optional": 0,
                      "bool": true,
                      "short": "-n",
                      "long": "--name",
                      "description": "the name of the route"
                    },
                    {
                      "flags": "-q, --quiet",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-q",
                      "long": "--quiet",
                      "description": "quiet mode, do not ask for delete confirmation"
                    },
                    {
                      "flags": "-s, --subscription <subscription>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-s",
                      "long": "--subscription",
                      "description": "the subscription identifier"
                    }
                  ]
                }
              ],
              "categories": {}
            }
          }
        },
        "local-gateway": {
          "name": "local-gateway",
          "description": "Commands to manage Local Network Gateways",
          "fullName": "network local-gateway",
          "usage": "[options] [command]",
          "options": [],
          "commands": [
            {
              "name": "create",
              "description": "Create a local network gateway",
              "fullName": "network local-gateway create",
              "usage": "[options] <resource-group> <name> <location>",
              "filePath": "commands/arm/network/network._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "-g, --resource-group <resource-group>",
                  "required": -22,
                  "optional": 0,
                  "bool": true,
                  "short": "-g",
                  "long": "--resource-group",
                  "description": "the name of the resource group"
                },
                {
                  "flags": "-n, --name <name>",
                  "required": -12,
                  "optional": 0,
                  "bool": true,
                  "short": "-n",
                  "long": "--name",
                  "description": "the name of the local network gateway"
                },
                {
                  "flags": "-l, --location <location>",
                  "required": -16,
                  "optional": 0,
                  "bool": true,
                  "short": "-l",
                  "long": "--location",
                  "description": "the location"
                },
                {
                  "flags": "-a, --address-space <address-space>",
                  "required": -21,
                  "optional": 0,
                  "bool": true,
                  "short": "-a",
                  "long": "--address-space",
                  "description": "the comma separated list of address prefixes in CIDR format"
                },
                {
                  "flags": "-i, --ip-address <ip-address>",
                  "required": -18,
                  "optional": 0,
                  "bool": true,
                  "short": "-i",
                  "long": "--ip-address",
                  "description": "the IP address of the local network site"
                },
                {
                  "flags": "-t, --tags <tags>",
                  "required": -12,
                  "optional": 0,
                  "bool": true,
                  "short": "-t",
                  "long": "--tags",
                  "description": "the list of tags.\n     Can be multiple. In the format of \"name=value\".\n     Name is required and value is optional.\n     For example, -t \"tag1=value1;tag2\""
                },
                {
                  "flags": "-s, --subscription <subscription>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "short": "-s",
                  "long": "--subscription",
                  "description": "the subscription identifier"
                }
              ]
            },
            {
              "name": "set",
              "description": "Set a local network gateway",
              "fullName": "network local-gateway set",
              "usage": "[options] <resource-group> <name>",
              "filePath": "commands/arm/network/network._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "-g, --resource-group <resource-group>",
                  "required": -22,
                  "optional": 0,
                  "bool": true,
                  "short": "-g",
                  "long": "--resource-group",
                  "description": "the name of the resource group"
                },
                {
                  "flags": "-n, --name <name>",
                  "required": -12,
                  "optional": 0,
                  "bool": true,
                  "short": "-n",
                  "long": "--name",
                  "description": "the name of the local network gateway"
                },
                {
                  "flags": "-a, --address-space [address-space]",
                  "required": 0,
                  "optional": -21,
                  "bool": true,
                  "short": "-a",
                  "long": "--address-space",
                  "description": "the comma separated list of address prefixes in CIDR format"
                },
                {
                  "flags": "-t, --tags [tags]",
                  "required": 0,
                  "optional": -12,
                  "bool": true,
                  "short": "-t",
                  "long": "--tags",
                  "description": "the list of tags.\n     Can be multiple. In the format of \"name=value\".\n     Name is required and value is optional.\n     Existing tag values will be replaced by the values specified.\n     For example, -t \"tag1=value1;tag2\""
                },
                {
                  "flags": "-s, --subscription <subscription>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "short": "-s",
                  "long": "--subscription",
                  "description": "the subscription identifier"
                }
              ]
            },
            {
              "name": "list",
              "description": "Get all local networks gateways",
              "fullName": "network local-gateway list",
              "usage": "[options] <resource-group>",
              "filePath": "commands/arm/network/network._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "-g, --resource-group <resource-group>",
                  "required": -22,
                  "optional": 0,
                  "bool": true,
                  "short": "-g",
                  "long": "--resource-group",
                  "description": "the name of the resource group"
                },
                {
                  "flags": "-s, --subscription <subscription>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "short": "-s",
                  "long": "--subscription",
                  "description": "the subscription identifier"
                }
              ]
            },
            {
              "name": "show",
              "description": "Get a local network gateway",
              "fullName": "network local-gateway show",
              "usage": "[options] <resource-group> <name>",
              "filePath": "commands/arm/network/network._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "-g, --resource-group <resource-group>",
                  "required": -22,
                  "optional": 0,
                  "bool": true,
                  "short": "-g",
                  "long": "--resource-group",
                  "description": "the name of the resource group"
                },
                {
                  "flags": "-n, --name <name>",
                  "required": -12,
                  "optional": 0,
                  "bool": true,
                  "short": "-n",
                  "long": "--name",
                  "description": "the name of the local network gateway"
                },
                {
                  "flags": "-s, --subscription <subscription>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "short": "-s",
                  "long": "--subscription",
                  "description": "the subscription identifier"
                }
              ]
            },
            {
              "name": "delete",
              "description": "Delete a local network gateway",
              "fullName": "network local-gateway delete",
              "usage": "[options] <resource-group> <name>",
              "filePath": "commands/arm/network/network._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "-g, --resource-group <resource-group>",
                  "required": -22,
                  "optional": 0,
                  "bool": true,
                  "short": "-g",
                  "long": "--resource-group",
                  "description": "the name of the resource group"
                },
                {
                  "flags": "-n, --name <name>",
                  "required": -12,
                  "optional": 0,
                  "bool": true,
                  "short": "-n",
                  "long": "--name",
                  "description": "the name of the local network gateway"
                },
                {
                  "flags": "-q, --quiet",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-q",
                  "long": "--quiet",
                  "description": "quiet mode, do not ask for delete confirmation"
                },
                {
                  "flags": "-s, --subscription <subscription>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "short": "-s",
                  "long": "--subscription",
                  "description": "the subscription identifier"
                }
              ]
            }
          ],
          "categories": {}
        },
        "vpn-gateway": {
          "name": "vpn-gateway",
          "description": "Commands to manage Virtual Network Gateways",
          "fullName": "network vpn-gateway",
          "usage": "[options] [command]",
          "options": [],
          "commands": [
            {
              "name": "create",
              "description": "Create a virtual network gateway",
              "fullName": "network vpn-gateway create",
              "usage": "[options] <resource-group> <name> <location>",
              "filePath": "commands/arm/network/network._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "-g, --resource-group <resource-group>",
                  "required": -22,
                  "optional": 0,
                  "bool": true,
                  "short": "-g",
                  "long": "--resource-group",
                  "description": "the name of the resource group"
                },
                {
                  "flags": "-n, --name <name>",
                  "required": -12,
                  "optional": 0,
                  "bool": true,
                  "short": "-n",
                  "long": "--name",
                  "description": "the name of the virtual network gateway"
                },
                {
                  "flags": "-l, --location <location>",
                  "required": -16,
                  "optional": 0,
                  "bool": true,
                  "short": "-l",
                  "long": "--location",
                  "description": "the location"
                },
                {
                  "flags": "-y, --type <type>",
                  "required": -12,
                  "optional": 0,
                  "bool": true,
                  "short": "-y",
                  "long": "--type",
                  "description": "the gateway type\n     Valid values are [RouteBased,PolicyBased,Dedicated]\n     Default is RouteBased"
                },
                {
                  "flags": "-u, --public-ip-id <public-ip-id>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "short": "-u",
                  "long": "--public-ip-id",
                  "description": "the public ip identifier.\n     e.g. /subscriptions/<subscription-id>/resourceGroups/<resource-group-name>/providers/Microsoft.Network/publicIPAddresses/<public-ip-name>"
                },
                {
                  "flags": "-p, --public-ip-name <public-ip-name>",
                  "required": -22,
                  "optional": 0,
                  "bool": true,
                  "short": "-p",
                  "long": "--public-ip-name",
                  "description": "the public ip name. This public ip must exists in the same resource group as the vnet gateway. \n     Please use public-ip-id if that is not the case."
                },
                {
                  "flags": "-f, --subnet-id <subnet-id>",
                  "required": -17,
                  "optional": 0,
                  "bool": true,
                  "short": "-f",
                  "long": "--subnet-id",
                  "description": "the subnet identifier.\n     e.g. /subscriptions/<subscription-id>/resourceGroups/<resource-group-name>/providers/Microsoft.Network/VirtualNetworks/<vnet-name>/subnets/<subnet-name>"
                },
                {
                  "flags": "-m, --vnet-name <vnet-name>",
                  "required": -17,
                  "optional": 0,
                  "bool": true,
                  "short": "-m",
                  "long": "--vnet-name",
                  "description": "the virtual network name. This virtual network must exists in the same resource group as the vnet gateway. \n     Please use subnet-id if that is not the case."
                },
                {
                  "flags": "-e, --subnet-name <subnet-name>",
                  "required": -19,
                  "optional": 0,
                  "bool": true,
                  "short": "-e",
                  "long": "--subnet-name",
                  "description": "the subnet name which exists in vnet. Default value is \"GatewaySubnet\""
                },
                {
                  "flags": "-a, --private-ip-address <private-ip-address>",
                  "required": -26,
                  "optional": 0,
                  "bool": true,
                  "short": "-a",
                  "long": "--private-ip-address",
                  "description": "the local ip address for the gateway in the vnet. If not provided then using Dynamic ip address"
                },
                {
                  "flags": "-b, --enable-bgp <enable-bgp>",
                  "required": -18,
                  "optional": 0,
                  "bool": true,
                  "short": "-b",
                  "long": "--enable-bgp",
                  "description": "enable bgp [true, false]"
                },
                {
                  "flags": "-t, --tags <tags>",
                  "required": -12,
                  "optional": 0,
                  "bool": true,
                  "short": "-t",
                  "long": "--tags",
                  "description": "the list of tags.\n     Can be multiple. In the format of \"name=value\".\n     Name is required and value is optional.\n     For example, -t \"tag1=value1;tag2\""
                },
                {
                  "flags": "-s, --subscription <subscription>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "short": "-s",
                  "long": "--subscription",
                  "description": "the subscription identifier"
                }
              ]
            },
            {
              "name": "set",
              "description": "Set a virtual network gateway",
              "fullName": "network vpn-gateway set",
              "usage": "[options] <resource-group> <name>",
              "filePath": "commands/arm/network/network._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "-g, --resource-group <resource-group>",
                  "required": -22,
                  "optional": 0,
                  "bool": true,
                  "short": "-g",
                  "long": "--resource-group",
                  "description": "the name of the resource group"
                },
                {
                  "flags": "-n, --name <name>",
                  "required": -12,
                  "optional": 0,
                  "bool": true,
                  "short": "-n",
                  "long": "--name",
                  "description": "the name of the virtual network gateway"
                },
                {
                  "flags": "-a, --private-ip-address <private-ip-address>",
                  "required": -26,
                  "optional": 0,
                  "bool": true,
                  "short": "-a",
                  "long": "--private-ip-address",
                  "description": "the local ip address for the gateway in the vnet"
                },
                {
                  "flags": "-t, --tags [tags]",
                  "required": 0,
                  "optional": -12,
                  "bool": true,
                  "short": "-t",
                  "long": "--tags",
                  "description": "the list of tags.\n     Can be multiple. In the format of \"name=value\".\n     Name is required and value is optional.\n     Existing tag values will be replaced by the values specified.\n     For example, -t \"tag1=value1;tag2\""
                },
                {
                  "flags": "-s, --subscription <subscription>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "short": "-s",
                  "long": "--subscription",
                  "description": "the subscription identifier"
                }
              ]
            },
            {
              "name": "list",
              "description": "List virtual network gateways",
              "fullName": "network vpn-gateway list",
              "usage": "[options] <resource-group>",
              "filePath": "commands/arm/network/network._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "-g, --resource-group <resource-group>",
                  "required": -22,
                  "optional": 0,
                  "bool": true,
                  "short": "-g",
                  "long": "--resource-group",
                  "description": "the name of the resource group"
                },
                {
                  "flags": "-s, --subscription <subscription>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "short": "-s",
                  "long": "--subscription",
                  "description": "the subscription identifier"
                }
              ]
            },
            {
              "name": "show",
              "description": "Get a virtual network gateway",
              "fullName": "network vpn-gateway show",
              "usage": "[options] <resource-group> <name>",
              "filePath": "commands/arm/network/network._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "-g, --resource-group <resource-group>",
                  "required": -22,
                  "optional": 0,
                  "bool": true,
                  "short": "-g",
                  "long": "--resource-group",
                  "description": "the name of the resource group"
                },
                {
                  "flags": "-n, --name <name>",
                  "required": -12,
                  "optional": 0,
                  "bool": true,
                  "short": "-n",
                  "long": "--name",
                  "description": "the name of the virtual network gateway"
                },
                {
                  "flags": "-s, --subscription <subscription>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "short": "-s",
                  "long": "--subscription",
                  "description": "the subscription identifier"
                }
              ]
            },
            {
              "name": "delete",
              "description": "Delete a virtual network gateway",
              "fullName": "network vpn-gateway delete",
              "usage": "[options] <resource-group> <name>",
              "filePath": "commands/arm/network/network._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "-g, --resource-group <resource-group>",
                  "required": -22,
                  "optional": 0,
                  "bool": true,
                  "short": "-g",
                  "long": "--resource-group",
                  "description": "the name of the resource group"
                },
                {
                  "flags": "-n, --name <name>",
                  "required": -12,
                  "optional": 0,
                  "bool": true,
                  "short": "-n",
                  "long": "--name",
                  "description": "the name of the virtual network gateway"
                },
                {
                  "flags": "-q, --quiet",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-q",
                  "long": "--quiet",
                  "description": "quiet mode, do not ask for delete confirmation"
                },
                {
                  "flags": "-s, --subscription <subscription>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "short": "-s",
                  "long": "--subscription",
                  "description": "the subscription identifier"
                }
              ]
            }
          ],
          "categories": {}
        },
        "vpn-connection": {
          "name": "vpn-connection",
          "description": "Commands to manage gateway connections",
          "fullName": "network vpn-connection",
          "usage": "[options] [command]",
          "options": [],
          "commands": [
            {
              "name": "create",
              "description": "Create a gateway connection",
              "fullName": "network vpn-connection create",
              "usage": "[options] <resource-group> <name> <location>",
              "filePath": "commands/arm/network/network._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "-g, --resource-group <resource-group>",
                  "required": -22,
                  "optional": 0,
                  "bool": true,
                  "short": "-g",
                  "long": "--resource-group",
                  "description": "the name of the resource group"
                },
                {
                  "flags": "-n, --name <name>",
                  "required": -12,
                  "optional": 0,
                  "bool": true,
                  "short": "-n",
                  "long": "--name",
                  "description": "the name of the gateway connection"
                },
                {
                  "flags": "-l, --location <location>",
                  "required": -16,
                  "optional": 0,
                  "bool": true,
                  "short": "-l",
                  "long": "--location",
                  "description": "the location"
                },
                {
                  "flags": "-i, --vnet-gateway1 <vnet-gateway1>",
                  "required": -21,
                  "optional": 0,
                  "bool": true,
                  "short": "-i",
                  "long": "--vnet-gateway1",
                  "description": "the name of the virtual network gateway"
                },
                {
                  "flags": "-r, --vnet-gateway1-group <vnet-gateway1-group>",
                  "required": -27,
                  "optional": 0,
                  "bool": true,
                  "short": "-r",
                  "long": "--vnet-gateway1-group",
                  "description": "the resource group name of the virtual network gateway"
                },
                {
                  "flags": "-e, --vnet-gateway2 <vnet-gateway2>",
                  "required": -21,
                  "optional": 0,
                  "bool": true,
                  "short": "-e",
                  "long": "--vnet-gateway2",
                  "description": "the name of the connected virtual network gateway"
                },
                {
                  "flags": "-m, --vnet-gateway2-group <vnet-gateway2-group>",
                  "required": -27,
                  "optional": 0,
                  "bool": true,
                  "short": "-m",
                  "long": "--vnet-gateway2-group",
                  "description": "the resource group name of the connected virtual network gateway"
                },
                {
                  "flags": "-d, --lnet-gateway2 <lnet-gateway2>",
                  "required": -21,
                  "optional": 0,
                  "bool": true,
                  "short": "-d",
                  "long": "--lnet-gateway2",
                  "description": "the name of the connected local network gateway"
                },
                {
                  "flags": "-z, --lnet-gateway2-group <lnet-gateway2-group>",
                  "required": -27,
                  "optional": 0,
                  "bool": true,
                  "short": "-z",
                  "long": "--lnet-gateway2-group",
                  "description": "the resource group name of the connected local network gateway"
                },
                {
                  "flags": "-y, --type <type>",
                  "required": -12,
                  "optional": 0,
                  "bool": true,
                  "short": "-y",
                  "long": "--type",
                  "description": "the connection type\n     Valid values are [Vnet2Vnet,IPsec,ExpressRoute]"
                },
                {
                  "flags": "-w, --routing-weight <routing-weight>",
                  "required": -22,
                  "optional": 0,
                  "bool": true,
                  "short": "-w",
                  "long": "--routing-weight",
                  "description": "the routing weight"
                },
                {
                  "flags": "-k, --shared-key <shared-key>",
                  "required": -18,
                  "optional": 0,
                  "bool": true,
                  "short": "-k",
                  "long": "--shared-key",
                  "description": "the IPsec shared key"
                },
                {
                  "flags": "-s, --subscription <subscription>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "short": "-s",
                  "long": "--subscription",
                  "description": "the subscription identifier"
                },
                {
                  "flags": "-t, --tags <tags>",
                  "required": -12,
                  "optional": 0,
                  "bool": true,
                  "short": "-t",
                  "long": "--tags",
                  "description": "the list of tags.\n     Can be multiple. In the format of \"name=value\".\n     Name is required and value is optional.\n     For example, -t \"tag1=value1;tag2\""
                }
              ]
            },
            {
              "name": "set",
              "description": "Set a gateway connection",
              "fullName": "network vpn-connection set",
              "usage": "[options] <resource-group> <name>",
              "filePath": "commands/arm/network/network._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "-g, --resource-group <resource-group>",
                  "required": -22,
                  "optional": 0,
                  "bool": true,
                  "short": "-g",
                  "long": "--resource-group",
                  "description": "the name of the resource group"
                },
                {
                  "flags": "-n, --name <name>",
                  "required": -12,
                  "optional": 0,
                  "bool": true,
                  "short": "-n",
                  "long": "--name",
                  "description": "the name of the gateway connection"
                },
                {
                  "flags": "-w, --routing-weight <routing-weight>",
                  "required": -22,
                  "optional": 0,
                  "bool": true,
                  "short": "-w",
                  "long": "--routing-weight",
                  "description": "the routing weight"
                },
                {
                  "flags": "-s, --subscription <subscription>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "short": "-s",
                  "long": "--subscription",
                  "description": "the subscription identifier"
                },
                {
                  "flags": "-t, --tags [tags]",
                  "required": 0,
                  "optional": -12,
                  "bool": true,
                  "short": "-t",
                  "long": "--tags",
                  "description": "the list of tags.\n     Can be multiple. In the format of \"name=value\".\n     Name is required and value is optional.\n     Existing tag values will be replaced by the values specified.\n     For example, -t \"tag1=value1;tag2\""
                }
              ]
            },
            {
              "name": "list",
              "description": "Get all gateway connections",
              "fullName": "network vpn-connection list",
              "usage": "[options] <resource-group>",
              "filePath": "commands/arm/network/network._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "-g, --resource-group <resource-group>",
                  "required": -22,
                  "optional": 0,
                  "bool": true,
                  "short": "-g",
                  "long": "--resource-group",
                  "description": "the name of the resource group"
                },
                {
                  "flags": "-s, --subscription <subscription>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "short": "-s",
                  "long": "--subscription",
                  "description": "the subscription identifier"
                }
              ]
            },
            {
              "name": "show",
              "description": "Get details about gateway connection",
              "fullName": "network vpn-connection show",
              "usage": "[options] <resource-group> <name>",
              "filePath": "commands/arm/network/network._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "-g, --resource-group <resource-group>",
                  "required": -22,
                  "optional": 0,
                  "bool": true,
                  "short": "-g",
                  "long": "--resource-group",
                  "description": "the name of the resource group"
                },
                {
                  "flags": "-n, --name <name>",
                  "required": -12,
                  "optional": 0,
                  "bool": true,
                  "short": "-n",
                  "long": "--name",
                  "description": "the name of the gateway connection"
                },
                {
                  "flags": "-s, --subscription <subscription>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "short": "-s",
                  "long": "--subscription",
                  "description": "the subscription identifier"
                }
              ]
            },
            {
              "name": "delete",
              "description": "Delete a gateway connection",
              "fullName": "network vpn-connection delete",
              "usage": "[options] <resource-group> <name>",
              "filePath": "commands/arm/network/network._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "-g, --resource-group <resource-group>",
                  "required": -22,
                  "optional": 0,
                  "bool": true,
                  "short": "-g",
                  "long": "--resource-group",
                  "description": "the name of the resource group"
                },
                {
                  "flags": "-n, --name <name>",
                  "required": -12,
                  "optional": 0,
                  "bool": true,
                  "short": "-n",
                  "long": "--name",
                  "description": "the name of the gateway connection"
                },
                {
                  "flags": "-q, --quiet",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-q",
                  "long": "--quiet",
                  "description": "quiet mode, do not ask for delete confirmation"
                },
                {
                  "flags": "-s, --subscription <id>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "short": "-s",
                  "long": "--subscription",
                  "description": "the subscription id"
                }
              ]
            }
          ],
          "categories": {
            "shared-key": {
              "name": "shared-key",
              "description": "Commands to manage gateway connection shared key",
              "fullName": "network vpn-connection shared-key",
              "usage": "[options] [command]",
              "options": [],
              "commands": [
                {
                  "name": "set",
                  "description": "Set gateway connection shared key",
                  "fullName": "network vpn-connection shared-key set",
                  "usage": "[options] <resource-group> <name> <value>",
                  "filePath": "commands/arm/network/network._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "-g, --resource-group <resource-group>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "short": "-g",
                      "long": "--resource-group",
                      "description": "the name of the resource group"
                    },
                    {
                      "flags": "-n, --name <name>",
                      "required": -12,
                      "optional": 0,
                      "bool": true,
                      "short": "-n",
                      "long": "--name",
                      "description": "the name of the gateway connection"
                    },
                    {
                      "flags": "-k, --value <value>",
                      "required": -13,
                      "optional": 0,
                      "bool": true,
                      "short": "-k",
                      "long": "--value",
                      "description": "the shared key value"
                    },
                    {
                      "flags": "-s, --subscription <subscription>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-s",
                      "long": "--subscription",
                      "description": "the subscription identifier"
                    }
                  ]
                },
                {
                  "name": "reset",
                  "description": "Reset gateway connection shared key",
                  "fullName": "network vpn-connection shared-key reset",
                  "usage": "[options] <resource-group> <name> <key-length>",
                  "filePath": "commands/arm/network/network._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "-g, --resource-group <resource-group>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "short": "-g",
                      "long": "--resource-group",
                      "description": "the name of the resource group"
                    },
                    {
                      "flags": "-n, --name <name>",
                      "required": -12,
                      "optional": 0,
                      "bool": true,
                      "short": "-n",
                      "long": "--name",
                      "description": "the name of the gateway connection"
                    },
                    {
                      "flags": "-l, --key-length <key-length>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "short": "-l",
                      "long": "--key-length",
                      "description": "the shared key length"
                    },
                    {
                      "flags": "-s, --subscription <subscription>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-s",
                      "long": "--subscription",
                      "description": "the subscription identifier"
                    }
                  ]
                },
                {
                  "name": "show",
                  "description": "Get details about gateway connection shared key",
                  "fullName": "network vpn-connection shared-key show",
                  "usage": "[options] <resource-group> <name>",
                  "filePath": "commands/arm/network/network._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "-g, --resource-group <resource-group>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "short": "-g",
                      "long": "--resource-group",
                      "description": "the name of the resource group"
                    },
                    {
                      "flags": "-n, --name <name>",
                      "required": -12,
                      "optional": 0,
                      "bool": true,
                      "short": "-n",
                      "long": "--name",
                      "description": "the name of the gateway connection"
                    },
                    {
                      "flags": "-s, --subscription <subscription>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-s",
                      "long": "--subscription",
                      "description": "the subscription identifier"
                    }
                  ]
                }
              ],
              "categories": {}
            }
          }
        },
        "express-route": {
          "name": "express-route",
          "description": "Commands to manage express routes",
          "fullName": "network express-route",
          "usage": "[options]",
          "options": [],
          "commands": [],
          "categories": {
            "provider": {
              "name": "provider",
              "description": "Commands to manage express route service providers",
              "fullName": "network express-route provider",
              "usage": "[options] [command]",
              "options": [],
              "commands": [
                {
                  "name": "list",
                  "description": "List express route service providers",
                  "fullName": "network express-route provider list",
                  "usage": "[options]",
                  "filePath": "commands/arm/network/network._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "-s, --subscription <subscription>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-s",
                      "long": "--subscription",
                      "description": "the subscription identifier"
                    }
                  ]
                }
              ],
              "categories": {}
            },
            "circuit": {
              "name": "circuit",
              "description": "Commands to manage express routes circuits",
              "fullName": "network express-route circuit",
              "usage": "[options] [command]",
              "options": [],
              "commands": [
                {
                  "name": "create",
                  "description": "Create express route circuit",
                  "fullName": "network express-route circuit create",
                  "usage": "[options] <resource-group> <name> <location>",
                  "filePath": "commands/arm/network/network._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "-g, --resource-group <resource-group>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "short": "-g",
                      "long": "--resource-group",
                      "description": "the name of the resource group"
                    },
                    {
                      "flags": "-n, --name <name>",
                      "required": -12,
                      "optional": 0,
                      "bool": true,
                      "short": "-n",
                      "long": "--name",
                      "description": "the name of the express route circuit"
                    },
                    {
                      "flags": "-l, --location <location>",
                      "required": -16,
                      "optional": 0,
                      "bool": true,
                      "short": "-l",
                      "long": "--location",
                      "description": "the location"
                    },
                    {
                      "flags": "-p, --service-provider-name <service-provider-name>",
                      "required": -29,
                      "optional": 0,
                      "bool": true,
                      "short": "-p",
                      "long": "--service-provider-name",
                      "description": "the service provider name"
                    },
                    {
                      "flags": "-i, --peering-location <peering-location>",
                      "required": -24,
                      "optional": 0,
                      "bool": true,
                      "short": "-i",
                      "long": "--peering-location",
                      "description": "the service provider peering location"
                    },
                    {
                      "flags": "-b, --bandwidth-in-mbps <bandwidth-in-mbps>",
                      "required": -25,
                      "optional": 0,
                      "bool": true,
                      "short": "-b",
                      "long": "--bandwidth-in-mbps",
                      "description": "the bandwidth in Mbps"
                    },
                    {
                      "flags": "-e, --sku-tier <sku-tier>",
                      "required": -16,
                      "optional": 0,
                      "bool": true,
                      "short": "-e",
                      "long": "--sku-tier",
                      "description": "the sku tier"
                    },
                    {
                      "flags": "-f, --sku-family <sku-family>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "short": "-f",
                      "long": "--sku-family",
                      "description": "the sku family"
                    },
                    {
                      "flags": "-t, --tags <tags>",
                      "required": -12,
                      "optional": 0,
                      "bool": true,
                      "short": "-t",
                      "long": "--tags",
                      "description": "the list of tags.\n     Can be multiple. In the format of \"name=value\".\n     Name is required and value is optional.\n     For example, -t \"tag1=value1;tag2\""
                    },
                    {
                      "flags": "-s, --subscription <subscription>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-s",
                      "long": "--subscription",
                      "description": "the subscription identifier"
                    }
                  ]
                },
                {
                  "name": "set",
                  "description": "Set an express route circuit",
                  "fullName": "network express-route circuit set",
                  "usage": "[options] <resource-group> <name>",
                  "filePath": "commands/arm/network/network._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "-g, --resource-group <resource-group>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "short": "-g",
                      "long": "--resource-group",
                      "description": "the name of the resource group"
                    },
                    {
                      "flags": "-n, --name <name>",
                      "required": -12,
                      "optional": 0,
                      "bool": true,
                      "short": "-n",
                      "long": "--name",
                      "description": "the name of the express route circuit"
                    },
                    {
                      "flags": "-b, --bandwidth-in-mbps <bandwidth-in-mbps>",
                      "required": -25,
                      "optional": 0,
                      "bool": true,
                      "short": "-b",
                      "long": "--bandwidth-in-mbps",
                      "description": "the bandwidth in Mbps"
                    },
                    {
                      "flags": "-e, --sku-tier <sku-tier>",
                      "required": -16,
                      "optional": 0,
                      "bool": true,
                      "short": "-e",
                      "long": "--sku-tier",
                      "description": "the sku tier"
                    },
                    {
                      "flags": "-f, --sku-family <sku-family>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "short": "-f",
                      "long": "--sku-family",
                      "description": "the sku family"
                    },
                    {
                      "flags": "-t, --tags [tags]",
                      "required": 0,
                      "optional": -12,
                      "bool": true,
                      "short": "-t",
                      "long": "--tags",
                      "description": "the list of tags.\n     Can be multiple. In the format of \"name=value\".\n     Name is required and value is optional.\n     Existing tag values will be replaced by the values specified.\n     For example, -t \"tag1=value1;tag2\""
                    },
                    {
                      "flags": "-s, --subscription <subscription>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-s",
                      "long": "--subscription",
                      "description": "the subscription identifier"
                    }
                  ]
                },
                {
                  "name": "list",
                  "description": "Get all express route circuits",
                  "fullName": "network express-route circuit list",
                  "usage": "[options]",
                  "filePath": "commands/arm/network/network._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "-g, --resource-group <resource-group>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "short": "-g",
                      "long": "--resource-group",
                      "description": "the name of the resource group"
                    },
                    {
                      "flags": "-s, --subscription <subscription>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-s",
                      "long": "--subscription",
                      "description": "the subscription identifier"
                    }
                  ]
                },
                {
                  "name": "show",
                  "description": "Create express route circuit",
                  "fullName": "network express-route circuit show",
                  "usage": "[options] <resource-group> <name>",
                  "filePath": "commands/arm/network/network._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "-g, --resource-group <resource-group>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "short": "-g",
                      "long": "--resource-group",
                      "description": "the name of the resource group"
                    },
                    {
                      "flags": "-n, --name <name>",
                      "required": -12,
                      "optional": 0,
                      "bool": true,
                      "short": "-n",
                      "long": "--name",
                      "description": "the name of the express route circuit"
                    },
                    {
                      "flags": "-s, --subscription <subscription>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-s",
                      "long": "--subscription",
                      "description": "the subscription identifier"
                    }
                  ]
                },
                {
                  "name": "delete",
                  "description": "Delete an express route circuit",
                  "fullName": "network express-route circuit delete",
                  "usage": "[options] <resource-group> <name>",
                  "filePath": "commands/arm/network/network._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "-g, --resource-group <resource-group>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "short": "-g",
                      "long": "--resource-group",
                      "description": "the name of the resource group"
                    },
                    {
                      "flags": "-n, --name <name>",
                      "required": -12,
                      "optional": 0,
                      "bool": true,
                      "short": "-n",
                      "long": "--name",
                      "description": "the name of the express route circuit"
                    },
                    {
                      "flags": "-q, --quiet",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-q",
                      "long": "--quiet",
                      "description": "quiet mode, do not ask for delete confirmation"
                    },
                    {
                      "flags": "-s, --subscription <subscription>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-s",
                      "long": "--subscription",
                      "description": "the subscription identifier"
                    }
                  ]
                }
              ],
              "categories": {}
            },
            "authorization": {
              "name": "authorization",
              "description": "Commands to manage express routes authorization",
              "fullName": "network express-route authorization",
              "usage": "[options] [command]",
              "options": [],
              "commands": [
                {
                  "name": "create",
                  "description": "Create express route circuit authorization",
                  "fullName": "network express-route authorization create",
                  "usage": "[options] <resource-group> <circuit-name> <auth-name>",
                  "filePath": "commands/arm/network/network._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "-g, --resource-group <resource-group>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "short": "-g",
                      "long": "--resource-group",
                      "description": "the name of the resource group"
                    },
                    {
                      "flags": "-c, --circuit-name <circuit-name>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-c",
                      "long": "--circuit-name",
                      "description": "the name of the express route circuit"
                    },
                    {
                      "flags": "-n, --auth-name <auth-name>",
                      "required": -17,
                      "optional": 0,
                      "bool": true,
                      "short": "-n",
                      "long": "--auth-name",
                      "description": "the name of the express route circuit authorization"
                    },
                    {
                      "flags": "-k, --key <key>",
                      "required": -11,
                      "optional": 0,
                      "bool": true,
                      "short": "-k",
                      "long": "--key",
                      "description": "the express route circuit authorization key"
                    },
                    {
                      "flags": "-s, --subscription <subscription>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-s",
                      "long": "--subscription",
                      "description": "the subscription identifier"
                    }
                  ]
                },
                {
                  "name": "set",
                  "description": "Set express route circuit authorization",
                  "fullName": "network express-route authorization set",
                  "usage": "[options] <resource-group> <circuit-name> <auth-name>",
                  "filePath": "commands/arm/network/network._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "-g, --resource-group <resource-group>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "short": "-g",
                      "long": "--resource-group",
                      "description": "the name of the resource group"
                    },
                    {
                      "flags": "-c, --circuit-name <circuit-name>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-c",
                      "long": "--circuit-name",
                      "description": "the name of the express route circuit"
                    },
                    {
                      "flags": "-n, --auth-name <auth-name>",
                      "required": -17,
                      "optional": 0,
                      "bool": true,
                      "short": "-n",
                      "long": "--auth-name",
                      "description": "the name of the express route circuit authorization"
                    },
                    {
                      "flags": "-k, --key <key>",
                      "required": -11,
                      "optional": 0,
                      "bool": true,
                      "short": "-k",
                      "long": "--key",
                      "description": "the express route circuit authorization key"
                    },
                    {
                      "flags": "-s, --subscription <subscription>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-s",
                      "long": "--subscription",
                      "description": "the subscription identifier"
                    }
                  ]
                },
                {
                  "name": "show",
                  "description": "Show express route circuit authorization",
                  "fullName": "network express-route authorization show",
                  "usage": "[options] <resource-group> <circuit-name> <auth-name>",
                  "filePath": "commands/arm/network/network._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "-g, --resource-group <resource-group>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "short": "-g",
                      "long": "--resource-group",
                      "description": "the name of the resource group"
                    },
                    {
                      "flags": "-c, --circuit-name <circuit-name>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-c",
                      "long": "--circuit-name",
                      "description": "the name of the express route circuit"
                    },
                    {
                      "flags": "-n, --auth-name <auth-name>",
                      "required": -17,
                      "optional": 0,
                      "bool": true,
                      "short": "-n",
                      "long": "--auth-name",
                      "description": "the name of the express route circuit express route authorization"
                    },
                    {
                      "flags": "-s, --subscription <subscription>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-s",
                      "long": "--subscription",
                      "description": "the subscription identifier"
                    }
                  ]
                },
                {
                  "name": "delete",
                  "description": "Delete express route circuit authorization",
                  "fullName": "network express-route authorization delete",
                  "usage": "[options] <resource-group> <circuit-name> <auth-name>",
                  "filePath": "commands/arm/network/network._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "-g, --resource-group <resource-group>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "short": "-g",
                      "long": "--resource-group",
                      "description": "the name of the resource group"
                    },
                    {
                      "flags": "-c, --circuit-name <circuit-name>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-c",
                      "long": "--circuit-name",
                      "description": "the name of the express route circuit"
                    },
                    {
                      "flags": "-n, --auth-name <auth-name>",
                      "required": -17,
                      "optional": 0,
                      "bool": true,
                      "short": "-n",
                      "long": "--auth-name",
                      "description": "the name of the express route circuit express route authorization"
                    },
                    {
                      "flags": "-q, --quiet",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-q",
                      "long": "--quiet",
                      "description": "quiet mode, do not ask for delete confirmation"
                    },
                    {
                      "flags": "-s, --subscription <subscription>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-s",
                      "long": "--subscription",
                      "description": "the subscription identifier"
                    }
                  ]
                },
                {
                  "name": "list",
                  "description": "Get all express route circuit authorizations",
                  "fullName": "network express-route authorization list",
                  "usage": "[options] <resource-group> <circuit-name>",
                  "filePath": "commands/arm/network/network._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "-g, --resource-group <resource-group>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "short": "-g",
                      "long": "--resource-group",
                      "description": "the name of the resource group"
                    },
                    {
                      "flags": "-c, --circuit-name <circuit-name>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-c",
                      "long": "--circuit-name",
                      "description": "the name of the express route circuit"
                    },
                    {
                      "flags": "-s, --subscription <subscription>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "short": "-s",
                      "long": "--subscription",
                      "description": "the subscription identifier"
                    }
                  ]
                }
              ],
              "categories": {}
            }
          }
        }
      }
    },
    "provider": {
      "name": "provider",
      "description": "Commands to manage resource provider registrations",
      "fullName": "provider",
      "usage": "[options] [command]",
      "options": [],
      "commands": [
        {
          "name": "list",
          "description": "List currently registered providers in ARM",
          "fullName": "provider list",
          "usage": "[options]",
          "filePath": "commands/arm/providers/provider._js",
          "options": [
            {
              "flags": "-v, --verbose",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-v",
              "long": "--verbose",
              "description": "use verbose output"
            },
            {
              "flags": "-vv",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "-vv",
              "description": "more verbose with debug output"
            },
            {
              "flags": "--json",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--json",
              "description": "use json output"
            },
            {
              "flags": "-s --subscription <subscription>",
              "required": -19,
              "optional": 0,
              "bool": true,
              "short": "-s",
              "long": "--subscription",
              "description": "Subscription to list providers for"
            }
          ]
        },
        {
          "name": "show",
          "description": "Show details about the requested provider namespace",
          "fullName": "provider show",
          "usage": "[options] <namespace>",
          "filePath": "commands/arm/providers/provider._js",
          "options": [
            {
              "flags": "-v, --verbose",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-v",
              "long": "--verbose",
              "description": "use verbose output"
            },
            {
              "flags": "-vv",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "-vv",
              "description": "more verbose with debug output"
            },
            {
              "flags": "--json",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--json",
              "description": "use json output"
            },
            {
              "flags": "-n --namespace <namespace>",
              "required": -16,
              "optional": 0,
              "bool": true,
              "short": "-n",
              "long": "--namespace",
              "description": "the provider namespace to show"
            },
            {
              "flags": "-s --subscription <subscription",
              "required": -19,
              "optional": 0,
              "bool": true,
              "short": "-s",
              "long": "--subscription",
              "description": "subscription to show provider for"
            }
          ]
        },
        {
          "name": "register",
          "description": "Register namespace provider with the subscription",
          "fullName": "provider register",
          "usage": "[options] <namespace>",
          "filePath": "commands/arm/providers/provider._js",
          "options": [
            {
              "flags": "-v, --verbose",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-v",
              "long": "--verbose",
              "description": "use verbose output"
            },
            {
              "flags": "-vv",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "-vv",
              "description": "more verbose with debug output"
            },
            {
              "flags": "--json",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--json",
              "description": "use json output"
            },
            {
              "flags": "-n --namespace <namespace>",
              "required": -16,
              "optional": 0,
              "bool": true,
              "short": "-n",
              "long": "--namespace",
              "description": "the provider namespace to register"
            },
            {
              "flags": "-s --subscription <subscription>",
              "required": -19,
              "optional": 0,
              "bool": true,
              "short": "-s",
              "long": "--subscription",
              "description": "Subscription to register"
            }
          ]
        },
        {
          "name": "unregister",
          "description": "Un-register namespace provider with the subscription",
          "fullName": "provider unregister",
          "usage": "[options] <namespace>",
          "filePath": "commands/arm/providers/provider._js",
          "options": [
            {
              "flags": "-v, --verbose",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-v",
              "long": "--verbose",
              "description": "use verbose output"
            },
            {
              "flags": "-vv",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "-vv",
              "description": "more verbose with debug output"
            },
            {
              "flags": "--json",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--json",
              "description": "use json output"
            },
            {
              "flags": "-n --namespace <namespace>",
              "required": -16,
              "optional": 0,
              "bool": true,
              "short": "-n",
              "long": "--namespace",
              "description": "the provider namespace to register"
            },
            {
              "flags": "-s --subscription <subscription>",
              "required": -19,
              "optional": 0,
              "bool": true,
              "short": "-s",
              "long": "--subscription",
              "description": "Subscription to register"
            }
          ]
        }
      ],
      "categories": {
        "operations": {
          "name": "operations",
          "description": "Commands to get the operations or actions allowed by an Azure resource provider.",
          "fullName": "provider operations",
          "usage": "[options] [command]",
          "options": [],
          "commands": [
            {
              "name": "show",
              "description": "Show operations for the requested provider operation search string. Operations can be composed to create custom roles in Azure RBAC. The command takes as input a operation search string (with wildcard (*) character(s)) which determines the action details to display.",
              "fullName": "provider operations show",
              "usage": "[options] <operationSearchString>\n\n     --------------------------  Get all actions for all providers  --------------------------\n     azure provider operations show --operationSearchString *\n\n     --------------------------  Get actions for a particular resource provider  --------------------------\n     azure provider operations show --operationSearchString Microsoft.Insights/*\n\n     --------------------------  Get all actions that can be performed on virtual machines  --------------------------\n     azure provider operations show --operationSearchString */virtualMachines/*",
              "filePath": "commands/arm/providers/provider.operations._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "-o --operationSearchString <operationSearchString>",
                  "required": -28,
                  "optional": 0,
                  "bool": true,
                  "short": "-o",
                  "long": "--operationSearchString",
                  "description": "The provider operation string (with wildcard (*) character). Example: \"*\" to get all actions for all providers, \"Microsoft.Insights/*\" to get actions for a particular provider, \"*/virtualMachines/*\" to get all actions that can be performed on virtual machines."
                },
                {
                  "flags": "-s --subscription <subscription>",
                  "required": -19,
                  "optional": 0,
                  "bool": true,
                  "short": "-s",
                  "long": "--subscription",
                  "description": "Subscription to show provider operations for"
                }
              ]
            }
          ],
          "categories": {}
        }
      }
    },
    "rediscache": {
      "name": "rediscache",
      "description": "Commands to manage your Azure Redis Cache(s)",
      "fullName": "rediscache",
      "usage": "[options] [command]",
      "options": [],
      "commands": [
        {
          "name": "create",
          "description": "Create a Redis Cache",
          "fullName": "rediscache create",
          "usage": "[--name <name> --resource-group <resource-group> --location <location> [options]]",
          "filePath": "commands/arm/rediscache/rediscache._js",
          "options": [
            {
              "flags": "-v, --verbose",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-v",
              "long": "--verbose",
              "description": "use verbose output"
            },
            {
              "flags": "-vv",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "-vv",
              "description": "more verbose with debug output"
            },
            {
              "flags": "--json",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--json",
              "description": "use json output"
            },
            {
              "flags": "-n, --name <name>",
              "required": -12,
              "optional": 0,
              "bool": true,
              "short": "-n",
              "long": "--name",
              "description": "Name of the Redis Cache."
            },
            {
              "flags": "-g, --resource-group <resource-group>",
              "required": -22,
              "optional": 0,
              "bool": true,
              "short": "-g",
              "long": "--resource-group",
              "description": "Name of the Resource Group"
            },
            {
              "flags": "-l, --location <location>",
              "required": -16,
              "optional": 0,
              "bool": true,
              "short": "-l",
              "long": "--location",
              "description": "Location to create cache."
            },
            {
              "flags": "-z, --size <size>",
              "required": -12,
              "optional": 0,
              "bool": true,
              "short": "-z",
              "long": "--size",
              "description": "Size of the Redis Cache. Valid values: [C0, C1, C2, C3, C4, C5, C6, P1, P2, P3, P4]"
            },
            {
              "flags": "-x, --sku <sku>",
              "required": -11,
              "optional": 0,
              "bool": true,
              "short": "-x",
              "long": "--sku",
              "description": "Redis SKU. Should be one of : [Basic, Standard, Premium]"
            },
            {
              "flags": "-e, --enable-non-ssl-port",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-e",
              "long": "--enable-non-ssl-port",
              "description": "EnableNonSslPort property of the Redis Cache. Add this flag if you want to enable the Non SSL Port for your cache"
            },
            {
              "flags": "-c, --redis-configuration <redis-configuration>",
              "required": -27,
              "optional": 0,
              "bool": true,
              "short": "-c",
              "long": "--redis-configuration",
              "description": "Redis Configuration. Enter a JSON formatted string of configuration keys and values here. Format:\"{\"<key1>\":\"<value1>\",\"<key2>\":\"<value2>\"}\""
            },
            {
              "flags": "-f, --redis-configuration-file <redisConfigurationFile>",
              "required": -32,
              "optional": 0,
              "bool": true,
              "short": "-f",
              "long": "--redis-configuration-file",
              "description": "Redis Configuration. Enter the path of a file containing configuration keys and values here. Format for the file entry: {\"<key1>\":\"<value1>\",\"<key2>\":\"<value2>\"}",
              "fileRelatedOption": true
            },
            {
              "flags": "-r, --shard-count <shard-count>",
              "required": -19,
              "optional": 0,
              "bool": true,
              "short": "-r",
              "long": "--shard-count",
              "description": "Number of Shards to create on a Premium Cluster Cache"
            },
            {
              "flags": "-v, --virtual-network <virtual-network>",
              "required": -23,
              "optional": 0,
              "bool": true,
              "short": "-v",
              "long": "--virtual-network",
              "description": "The exact ARM resource ID of the virtual network to deploy the redis cache in. Example format: /subscriptions/{subid}/resourceGroups/{resourceGroupName}/Microsoft.ClassicNetwork/VirtualNetworks/vnet1"
            },
            {
              "flags": "-t, --subnet <subnet>",
              "required": -14,
              "optional": 0,
              "bool": true,
              "short": "-t",
              "long": "--subnet",
              "description": "Required when deploying a redis cache inside an existing Azure Virtual Network"
            },
            {
              "flags": "-p, --static-ip <static-ip>",
              "required": -17,
              "optional": 0,
              "bool": true,
              "short": "-p",
              "long": "--static-ip",
              "description": "Required when deploying a redis cache inside an existing Azure Virtual Network"
            },
            {
              "flags": "-s, --subscription <id>",
              "required": -20,
              "optional": 0,
              "bool": true,
              "short": "-s",
              "long": "--subscription",
              "description": "the subscription identifier"
            }
          ]
        },
        {
          "name": "delete",
          "description": "Delete an existing Redis Cache",
          "fullName": "rediscache delete",
          "usage": "[--name <name> --resource-group <resource-group> ]",
          "filePath": "commands/arm/rediscache/rediscache._js",
          "options": [
            {
              "flags": "-v, --verbose",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-v",
              "long": "--verbose",
              "description": "use verbose output"
            },
            {
              "flags": "-vv",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "-vv",
              "description": "more verbose with debug output"
            },
            {
              "flags": "--json",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--json",
              "description": "use json output"
            },
            {
              "flags": "-n, --name <name>",
              "required": -12,
              "optional": 0,
              "bool": true,
              "short": "-n",
              "long": "--name",
              "description": "Name of the Redis Cache."
            },
            {
              "flags": "-g, --resource-group <resource-group>",
              "required": -22,
              "optional": 0,
              "bool": true,
              "short": "-g",
              "long": "--resource-group",
              "description": "Name of the Resource Group under which the cache exists"
            },
            {
              "flags": "-s, --subscription <subscription>",
              "required": -20,
              "optional": 0,
              "bool": true,
              "short": "-s",
              "long": "--subscription",
              "description": "the subscription identifier"
            }
          ]
        },
        {
          "name": "list",
          "description": "List all Redis Caches within your Subscription or Resource Group",
          "fullName": "rediscache list",
          "usage": "[options]",
          "filePath": "commands/arm/rediscache/rediscache._js",
          "options": [
            {
              "flags": "-v, --verbose",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-v",
              "long": "--verbose",
              "description": "use verbose output"
            },
            {
              "flags": "-vv",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "-vv",
              "description": "more verbose with debug output"
            },
            {
              "flags": "--json",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--json",
              "description": "use json output"
            },
            {
              "flags": "-g, --resource-group <resource-group>",
              "required": -22,
              "optional": 0,
              "bool": true,
              "short": "-g",
              "long": "--resource-group",
              "description": "Name of the Resource Group"
            },
            {
              "flags": "-s, --subscription <subscription>",
              "required": -20,
              "optional": 0,
              "bool": true,
              "short": "-s",
              "long": "--subscription",
              "description": "the subscription identifier"
            }
          ]
        },
        {
          "name": "show",
          "description": "Show properties of an existing Redis Cache",
          "fullName": "rediscache show",
          "usage": "[--name <name> --resource-group <resource-group>]",
          "filePath": "commands/arm/rediscache/rediscache._js",
          "options": [
            {
              "flags": "-v, --verbose",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-v",
              "long": "--verbose",
              "description": "use verbose output"
            },
            {
              "flags": "-vv",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "-vv",
              "description": "more verbose with debug output"
            },
            {
              "flags": "--json",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--json",
              "description": "use json output"
            },
            {
              "flags": "-n, --name <name>",
              "required": -12,
              "optional": 0,
              "bool": true,
              "short": "-n",
              "long": "--name",
              "description": "Name of the Redis Cache."
            },
            {
              "flags": "-g, --resource-group <resource-group>",
              "required": -22,
              "optional": 0,
              "bool": true,
              "short": "-g",
              "long": "--resource-group",
              "description": "Name of the Resource Group"
            },
            {
              "flags": "-s, --subscription <subscription>",
              "required": -20,
              "optional": 0,
              "bool": true,
              "short": "-s",
              "long": "--subscription",
              "description": "the subscription identifier"
            }
          ]
        },
        {
          "name": "set",
          "description": "Change settings of an existing Redis Cache",
          "fullName": "rediscache set",
          "usage": "[--name <name> --resource-group <resource-group> --redis-configuration <redis-configuration>/--redis-configuration-file <redisConfigurationFile>]",
          "filePath": "commands/arm/rediscache/rediscache._js",
          "options": [
            {
              "flags": "-v, --verbose",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-v",
              "long": "--verbose",
              "description": "use verbose output"
            },
            {
              "flags": "-vv",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "-vv",
              "description": "more verbose with debug output"
            },
            {
              "flags": "--json",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--json",
              "description": "use json output"
            },
            {
              "flags": "-n, --name <name>",
              "required": -12,
              "optional": 0,
              "bool": true,
              "short": "-n",
              "long": "--name",
              "description": "Name of the Redis Cache."
            },
            {
              "flags": "-g, --resource-group <resource-group>",
              "required": -22,
              "optional": 0,
              "bool": true,
              "short": "-g",
              "long": "--resource-group",
              "description": "Name of the Resource Group"
            },
            {
              "flags": "-c, --redis-configuration <redis-configuration>",
              "required": -27,
              "optional": 0,
              "bool": true,
              "short": "-c",
              "long": "--redis-configuration",
              "description": "Redis Configuration. Enter a JSON formatted string of configuration keys and values here."
            },
            {
              "flags": "-f, --redis-configuration-file <redisConfigurationFile>",
              "required": -32,
              "optional": 0,
              "bool": true,
              "short": "-f",
              "long": "--redis-configuration-file",
              "description": "Redis Configuration. Enter the path of a file containing configuration keys and values here.",
              "fileRelatedOption": true
            },
            {
              "flags": "-s, --subscription <subscription>",
              "required": -20,
              "optional": 0,
              "bool": true,
              "short": "-s",
              "long": "--subscription",
              "description": "the subscription identifier"
            }
          ]
        },
        {
          "name": "renew-key",
          "description": "Renew the authentication key for an existing Redis Cache",
          "fullName": "rediscache renew-key",
          "usage": "[--name <name> --resource-group <resource-group> ]",
          "filePath": "commands/arm/rediscache/rediscache._js",
          "options": [
            {
              "flags": "-v, --verbose",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-v",
              "long": "--verbose",
              "description": "use verbose output"
            },
            {
              "flags": "-vv",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "-vv",
              "description": "more verbose with debug output"
            },
            {
              "flags": "--json",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--json",
              "description": "use json output"
            },
            {
              "flags": "-n, --name <name>",
              "required": -12,
              "optional": 0,
              "bool": true,
              "short": "-n",
              "long": "--name",
              "description": "Name of the Redis Cache."
            },
            {
              "flags": "-g, --resource-group <resource-group>",
              "required": -22,
              "optional": 0,
              "bool": true,
              "short": "-g",
              "long": "--resource-group",
              "description": "Name of the Resource Group under which cache exists"
            },
            {
              "flags": "-t, --key-type <key-type>",
              "required": -16,
              "optional": 0,
              "bool": true,
              "short": "-t",
              "long": "--key-type",
              "description": "type of key to renew. Valid values are: 'Primary', 'Secondary'."
            },
            {
              "flags": "-s, --subscription <subscription>",
              "required": -20,
              "optional": 0,
              "bool": true,
              "short": "-s",
              "long": "--subscription",
              "description": "the subscription identifier"
            }
          ]
        },
        {
          "name": "list-keys",
          "description": "Lists Primary and Secondary key of an existing Redis Cache",
          "fullName": "rediscache list-keys",
          "usage": "[--name <name> --resource-group <resource-group>]",
          "filePath": "commands/arm/rediscache/rediscache._js",
          "options": [
            {
              "flags": "-v, --verbose",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-v",
              "long": "--verbose",
              "description": "use verbose output"
            },
            {
              "flags": "-vv",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "-vv",
              "description": "more verbose with debug output"
            },
            {
              "flags": "--json",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--json",
              "description": "use json output"
            },
            {
              "flags": "-n, --name <name>",
              "required": -12,
              "optional": 0,
              "bool": true,
              "short": "-n",
              "long": "--name",
              "description": "Name of the Redis Cache."
            },
            {
              "flags": "-g, --resource-group <resource-group>",
              "required": -22,
              "optional": 0,
              "bool": true,
              "short": "-g",
              "long": "--resource-group",
              "description": "Name of the Resource Group under which Cache exists"
            },
            {
              "flags": "-s, --subscription <subscription>",
              "required": -20,
              "optional": 0,
              "bool": true,
              "short": "-s",
              "long": "--subscription",
              "description": "the subscription identifier"
            }
          ]
        }
      ],
      "categories": {}
    },
    "resource": {
      "name": "resource",
      "description": "Commands to manage your resources",
      "fullName": "resource",
      "usage": "[options] [command]",
      "options": [],
      "commands": [
        {
          "name": "create",
          "description": "Creates a resource in a resource group",
          "fullName": "resource create",
          "usage": "[options] <resource-group> <name> <resource-type> <location> <api-version>",
          "filePath": "commands/arm/resource/resource._js",
          "options": [
            {
              "flags": "-v, --verbose",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-v",
              "long": "--verbose",
              "description": "use verbose output"
            },
            {
              "flags": "-vv",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "-vv",
              "description": "more verbose with debug output"
            },
            {
              "flags": "--json",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--json",
              "description": "use json output"
            },
            {
              "flags": "-g --resource-group <resource-group>",
              "required": -21,
              "optional": 0,
              "bool": true,
              "short": "-g",
              "long": "--resource-group",
              "description": "the resource group name"
            },
            {
              "flags": "-n --name <name>",
              "required": -11,
              "optional": 0,
              "bool": true,
              "short": "-n",
              "long": "--name",
              "description": "the resource name"
            },
            {
              "flags": "-l --location <location>",
              "required": -15,
              "optional": 0,
              "bool": true,
              "short": "-l",
              "long": "--location",
              "description": "the location where we will create the resource"
            },
            {
              "flags": "-r --resource-type <resource-type>",
              "required": -20,
              "optional": 0,
              "bool": true,
              "short": "-r",
              "long": "--resource-type",
              "description": "the resource type"
            },
            {
              "flags": "-o --api-version <api-version>",
              "required": -18,
              "optional": 0,
              "bool": true,
              "short": "-o",
              "long": "--api-version",
              "description": "the API version of the resource provider"
            },
            {
              "flags": "--parent <parent>",
              "required": -10,
              "optional": 0,
              "bool": true,
              "long": "--parent",
              "description": "the name of the parent resource (if needed), in path/path/path format"
            },
            {
              "flags": "-p --properties <properties>",
              "required": -17,
              "optional": 0,
              "bool": true,
              "short": "-p",
              "long": "--properties",
              "description": "a JSON-formatted string containing properties"
            },
            {
              "flags": "-t --tags <tags>",
              "required": -11,
              "optional": 0,
              "bool": true,
              "short": "-t",
              "long": "--tags",
              "description": "Tags to set to the resource group. Can be mutliple. In the format of 'name=value'. Name is required and value is optional. For example, -t tag1=value1;tag2"
            },
            {
              "flags": "--subscription <subscription>",
              "required": -16,
              "optional": 0,
              "bool": true,
              "long": "--subscription",
              "description": "the subscription identifier"
            }
          ]
        },
        {
          "name": "set",
          "description": "Updates a resource in a resource group without any templates or parameters",
          "fullName": "resource set",
          "usage": "[options] <resource-group> <name> <resource-type> <properties> <api-version>",
          "filePath": "commands/arm/resource/resource._js",
          "options": [
            {
              "flags": "-v, --verbose",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-v",
              "long": "--verbose",
              "description": "use verbose output"
            },
            {
              "flags": "-vv",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "-vv",
              "description": "more verbose with debug output"
            },
            {
              "flags": "--json",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--json",
              "description": "use json output"
            },
            {
              "flags": "-g --resource-group <resource-group>",
              "required": -21,
              "optional": 0,
              "bool": true,
              "short": "-g",
              "long": "--resource-group",
              "description": "the resource group name"
            },
            {
              "flags": "-n --name <name>",
              "required": -11,
              "optional": 0,
              "bool": true,
              "short": "-n",
              "long": "--name",
              "description": "the resource name"
            },
            {
              "flags": "-r --resource-type <resource-type>",
              "required": -20,
              "optional": 0,
              "bool": true,
              "short": "-r",
              "long": "--resource-type",
              "description": "the resource type"
            },
            {
              "flags": "-p --properties <properties>",
              "required": -17,
              "optional": 0,
              "bool": true,
              "short": "-p",
              "long": "--properties",
              "description": "a JSON-formatted string containing properties"
            },
            {
              "flags": "-o --api-version <api-version>",
              "required": -18,
              "optional": 0,
              "bool": true,
              "short": "-o",
              "long": "--api-version",
              "description": "the API version of the resource provider"
            },
            {
              "flags": "--parent <parent>",
              "required": -10,
              "optional": 0,
              "bool": true,
              "long": "--parent",
              "description": "the name of the parent resource (if needed), in path/path/path format"
            },
            {
              "flags": "-t --tags <tags>",
              "required": -11,
              "optional": 0,
              "bool": true,
              "short": "-t",
              "long": "--tags",
              "description": "Tags to set to the resource. Can be multiple. In the format of 'name=value'. Name is required and value is optional. For example, -t tag1=value1;tag2"
            },
            {
              "flags": "--no-tags",
              "required": 0,
              "optional": 0,
              "bool": false,
              "long": "--no-tags",
              "description": "remove all existing tags"
            },
            {
              "flags": "--subscription <subscription>",
              "required": -16,
              "optional": 0,
              "bool": true,
              "long": "--subscription",
              "description": "the subscription identifier"
            }
          ]
        },
        {
          "name": "list",
          "description": "Lists the resources",
          "fullName": "resource list",
          "usage": "[options] [resource-group]",
          "filePath": "commands/arm/resource/resource._js",
          "options": [
            {
              "flags": "-v, --verbose",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-v",
              "long": "--verbose",
              "description": "use verbose output"
            },
            {
              "flags": "-vv",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "-vv",
              "description": "more verbose with debug output"
            },
            {
              "flags": "--json",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--json",
              "description": "use json output"
            },
            {
              "flags": "-g --resource-group <resource-group>",
              "required": -21,
              "optional": 0,
              "bool": true,
              "short": "-g",
              "long": "--resource-group",
              "description": "the resource group name"
            },
            {
              "flags": "-r --resource-type <resource-type>",
              "required": -20,
              "optional": 0,
              "bool": true,
              "short": "-r",
              "long": "--resource-type",
              "description": "the resource type"
            },
            {
              "flags": "--details",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--details",
              "description": "show details such as permissions, etc."
            },
            {
              "flags": "-t --tags <tags>",
              "required": -11,
              "optional": 0,
              "bool": true,
              "short": "-t",
              "long": "--tags",
              "description": "Tag to use to filter to the resource group. Can only take 1 tag. In the format of \"name=value\". Name is required and value is optional. For example, -t tag1 or -t tag1=value1."
            },
            {
              "flags": "--subscription <subscription>",
              "required": -16,
              "optional": 0,
              "bool": true,
              "long": "--subscription",
              "description": "the subscription identifier"
            }
          ]
        },
        {
          "name": "show",
          "description": "Gets one resource within a resource group or subscription",
          "fullName": "resource show",
          "usage": "[options] <resource-group> <name> <resource-type> <api-version>",
          "filePath": "commands/arm/resource/resource._js",
          "options": [
            {
              "flags": "-v, --verbose",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-v",
              "long": "--verbose",
              "description": "use verbose output"
            },
            {
              "flags": "-vv",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "-vv",
              "description": "more verbose with debug output"
            },
            {
              "flags": "--json",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--json",
              "description": "use json output"
            },
            {
              "flags": "-g --resource-group <resource-group>",
              "required": -21,
              "optional": 0,
              "bool": true,
              "short": "-g",
              "long": "--resource-group",
              "description": "the resource group name"
            },
            {
              "flags": "-n --name <name>",
              "required": -11,
              "optional": 0,
              "bool": true,
              "short": "-n",
              "long": "--name",
              "description": "the resource name"
            },
            {
              "flags": "-r --resource-type <resource-type>",
              "required": -20,
              "optional": 0,
              "bool": true,
              "short": "-r",
              "long": "--resource-type",
              "description": "the resource type"
            },
            {
              "flags": "-o --api-version <api-version>",
              "required": -18,
              "optional": 0,
              "bool": true,
              "short": "-o",
              "long": "--api-version",
              "description": "the API version of the resource provider"
            },
            {
              "flags": "--parent <parent>",
              "required": -10,
              "optional": 0,
              "bool": true,
              "long": "--parent",
              "description": "the name of the parent resource (if needed), in path/path/path format"
            },
            {
              "flags": "--subscription <subscription>",
              "required": -16,
              "optional": 0,
              "bool": true,
              "long": "--subscription",
              "description": "the subscription identifier"
            }
          ]
        },
        {
          "name": "delete",
          "description": "Deletes a resource in a resource group",
          "fullName": "resource delete",
          "usage": "[options] <resource-group> <name> <resource-type> <api-version>",
          "filePath": "commands/arm/resource/resource._js",
          "options": [
            {
              "flags": "-v, --verbose",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-v",
              "long": "--verbose",
              "description": "use verbose output"
            },
            {
              "flags": "-vv",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "-vv",
              "description": "more verbose with debug output"
            },
            {
              "flags": "--json",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--json",
              "description": "use json output"
            },
            {
              "flags": "-g --resource-group <resource-group>",
              "required": -21,
              "optional": 0,
              "bool": true,
              "short": "-g",
              "long": "--resource-group",
              "description": "the resource group name"
            },
            {
              "flags": "-n --name <name>",
              "required": -11,
              "optional": 0,
              "bool": true,
              "short": "-n",
              "long": "--name",
              "description": "the resource name"
            },
            {
              "flags": "-r --resource-type <resource-type>",
              "required": -20,
              "optional": 0,
              "bool": true,
              "short": "-r",
              "long": "--resource-type",
              "description": "the resource type"
            },
            {
              "flags": "-o --api-version <api-version>",
              "required": -18,
              "optional": 0,
              "bool": true,
              "short": "-o",
              "long": "--api-version",
              "description": "the API version of the resource provider"
            },
            {
              "flags": "--parent <parent>",
              "required": -10,
              "optional": 0,
              "bool": true,
              "long": "--parent",
              "description": "the name of the parent resource (if needed), in path/path/path format"
            },
            {
              "flags": "-q, --quiet",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-q",
              "long": "--quiet",
              "description": "quiet mode (do not ask for delete confirmation)"
            },
            {
              "flags": "--subscription <subscription>",
              "required": -16,
              "optional": 0,
              "bool": true,
              "long": "--subscription",
              "description": "the subscription identifier"
            }
          ]
        },
        {
          "name": "move",
          "description": "Moves resources from one resource group to another",
          "fullName": "resource move",
          "usage": "[options] <ids> <destination-group>",
          "filePath": "commands/arm/resource/resource._js",
          "options": [
            {
              "flags": "-v, --verbose",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-v",
              "long": "--verbose",
              "description": "use verbose output"
            },
            {
              "flags": "-vv",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "-vv",
              "description": "more verbose with debug output"
            },
            {
              "flags": "--json",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--json",
              "description": "use json output"
            },
            {
              "flags": "-i --ids <ids>",
              "required": -10,
              "optional": 0,
              "bool": true,
              "short": "-i",
              "long": "--ids",
              "description": "the comma-delimitied resource ids to be moved"
            },
            {
              "flags": "-d --destination-group <destination-group>",
              "required": -24,
              "optional": 0,
              "bool": true,
              "short": "-d",
              "long": "--destination-group",
              "description": "the destination resource group name"
            },
            {
              "flags": "--destination-subscriptionId <destination-subscriptionId>",
              "required": -30,
              "optional": 0,
              "bool": true,
              "long": "--destination-subscriptionId",
              "description": "the destination subscription identifier"
            },
            {
              "flags": "-q, --quiet",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-q",
              "long": "--quiet",
              "description": "quiet mode (do not ask for move confirmation)"
            },
            {
              "flags": "--subscription <subscription>",
              "required": -16,
              "optional": 0,
              "bool": true,
              "long": "--subscription",
              "description": "the subscription identifier"
            }
          ]
        }
      ],
      "categories": {}
    },
    "role": {
      "name": "role",
      "description": "Commands to manage role definitions",
      "fullName": "role",
      "usage": "[options] [command]",
      "options": [],
      "commands": [
        {
          "name": "list",
          "description": "Lists Azure RBAC roles available for assignment. Use this command to determine what actions on what resource types an Azure RBAC role allows.",
          "fullName": "role list",
          "usage": "[scope]\n\n           -----    Example 1   -------\n           azure role list\n           Lists all RBAC role definitions.\n",
          "filePath": "commands/arm/role/role.definition._js",
          "options": [
            {
              "flags": "-v, --verbose",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-v",
              "long": "--verbose",
              "description": "use verbose output"
            },
            {
              "flags": "-vv",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "-vv",
              "description": "more verbose with debug output"
            },
            {
              "flags": "--json",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--json",
              "description": "use json output"
            },
            {
              "flags": "--custom",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--custom",
              "description": "If specified, display only the custom role definitions instead of all role definitions."
            },
            {
              "flags": "--scope <scope>",
              "required": -9,
              "optional": 0,
              "bool": true,
              "long": "--scope",
              "description": "Role definition scope. For e.g. /subscriptions/4004a9fd-d58e-48dc-aeb2-4a4aec58606f"
            },
            {
              "flags": "--atScopeAndBelow",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--atScopeAndBelow",
              "description": "If specified, displays all role definitions."
            },
            {
              "flags": "-d --detailed",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-d",
              "long": "--detailed",
              "description": "If specified, displays all the properties of a role definition"
            },
            {
              "flags": "--subscription <subscription>",
              "required": -16,
              "optional": 0,
              "bool": true,
              "long": "--subscription",
              "description": "Name or identifier of the subscription to list the roles for."
            }
          ]
        },
        {
          "name": "show",
          "description": "Search for a role definition with role name or id to view its details. To inspect individual operations that a role grants access to, review the Actions and NotActions properties of the role.",
          "fullName": "role show",
          "usage": "[name] [id] [scope]\n\n           -----    Example 1   -------\n           azure role show --name Reader\n           Get the Reader role definition.\n           -----    Example 2   -------\n           azure role show --id 52a6cc13-ff92-47a8-a39b-2a8205c3087e\n           Get the Reader role definition.\n",
          "filePath": "commands/arm/role/role.definition._js",
          "options": [
            {
              "flags": "-v, --verbose",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-v",
              "long": "--verbose",
              "description": "use verbose output"
            },
            {
              "flags": "-vv",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "-vv",
              "description": "more verbose with debug output"
            },
            {
              "flags": "--json",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--json",
              "description": "use json output"
            },
            {
              "flags": "-n --name <name>",
              "required": -11,
              "optional": 0,
              "bool": true,
              "short": "-n",
              "long": "--name",
              "description": "Role definition name. For e.g. Reader, Contributor, Virtual Machine Contributor."
            },
            {
              "flags": "--id <id>",
              "required": -6,
              "optional": 0,
              "bool": true,
              "long": "--id",
              "description": "Role definition Id."
            },
            {
              "flags": "--scope <scope>",
              "required": -9,
              "optional": 0,
              "bool": true,
              "long": "--scope",
              "description": "Role definition scope. For e.g. /subscriptions/4004a9fd-d58e-48dc-aeb2-4a4aec58606f"
            },
            {
              "flags": "--atScopeAndBelow",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--atScopeAndBelow",
              "description": "If specified, displays all role definitions."
            },
            {
              "flags": "--subscription <subscription>",
              "required": -16,
              "optional": 0,
              "bool": true,
              "long": "--subscription",
              "description": "Name or identifier of the subscription to search the role definition in."
            }
          ]
        },
        {
          "name": "create",
          "description": "Creates a custom role in Azure RBAC. Provide either a JSON role definition file or a JSON-formatted string containing the role definition as input.\n     The input role definition MUST contain the following properties:\n     1) DisplayName: the name of the custom role\n     2) Description: a short description of the role that summarizes the access that the role grants.\n     3) Actions: the set of operations to which the custom role grants access. Use \"azure provider operations show\" with operationSearchString to get the operation for Azure resource providers that can be secured using Azure RBAC. Following are some valid operation strings\n       - \"*/read\" grants access to read operations of all Azure resource providers.\n       - \"Microsoft.Network/*/read\" grants access to read operations for all resource types in the Microsoft.Network resource provider of Azure.\n       - \"Microsoft.Compute/virtualMachines/*\" grants access to all operations of virtual machines and its child resource types.\n     4) AssignableScopes: the set of scopes (Azure subscriptions or resource groups) in which the custom role will be available for assignment. Using AssignableScopes you can make the custom role available for assignment in only the subscriptions or resource groups that need it, and not clutter the user experience for the rest of the subscriptions or resource groups. Following are some valid assignable scopes\n       - \"/subscriptions/c276fc76-9cd4-44c9-99a7-4fd71546436e\", \"/subscriptions/e91d47c4-76f3-4271-a796-21b4ecfe3624\": makes the role available for assignment in two subscriptions.\n       - \"/subscriptions/c276fc76-9cd4-44c9-99a7-4fd71546436e\": makes the role available for assignment in a single subscription.\n       - \"/subscriptions/c276fc76-9cd4-44c9-99a7-4fd71546436e/resourceGroups/Network\": makes the role available for assignment only in the Network resource group.\n\n     The input role definition MAY contain the following properties:\n     1) NotActions: the set of operations that must be excluded from the Actions to determine the effective actions for the custom role. If there is a specific operation that you do not wish to grant access to in a custom role, it is convenient to use NotActions to exclude it, rather than specifying all operations other than that specific operation in Actions.\n\n     NOTE: If a user is assigned a role that specifies an operation in NotActions and also assigned another role grants access to the same operation, the user will be able to perform that operation. NotActions is not a deny rule, it is simply a convenient way to create a set of allowed operations when specific operations need to be excluded.\n\n     Following is a sample json role definition that can be provided as input: \n     {\n     \"Name\": \"Contoso On-call\",\n     \"Description\": \"Can monitor compute, network and storage, and restart virtual machines\",\n     \"Actions\": [\n       \"Microsoft.Compute/*/read\",\n       \"Microsoft.Compute/virtualMachines/start/action\",\n       \"Microsoft.Compute/virtualMachines/restart/action\",\n       \"Microsoft.Compute/virtualMachines/downloadRemoteDesktopConnectionFile/action\",\n       \"Microsoft.Network/*/read\",\n       \"Microsoft.Storage/*/read\",\n       \"Microsoft.Authorization/*/read\",\n       \"Microsoft.Resources/subscriptions/resourceGroups/read\",\n       \"Microsoft.Resources/subscriptions/resourceGroups/resources/read\",\n       \"Microsoft.Insights/alertRules/*\",\n       \"Microsoft.Support/*\"\n     ],\n     \"AssignableScopes\": [\"/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\"/subscriptions/yyyyyyyy-yyyy-yyyy-yyyy-yyyyyyyyyyyy\"]\n     }",
          "fullName": "role create",
          "usage": "[inputfile] [roledefinition]\n     --------------------------  Create using JSON file  --------------------------\n     azure role create --inputfile C:\\Temp\\roleDefinition.json",
          "filePath": "commands/arm/role/role.definition._js",
          "options": [
            {
              "flags": "-v, --verbose",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-v",
              "long": "--verbose",
              "description": "use verbose output"
            },
            {
              "flags": "-vv",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "-vv",
              "description": "more verbose with debug output"
            },
            {
              "flags": "--json",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--json",
              "description": "use json output"
            },
            {
              "flags": "-f --inputfile <inputfile>",
              "required": -16,
              "optional": 0,
              "bool": true,
              "short": "-f",
              "long": "--inputfile",
              "description": "File name containing a single role definition."
            },
            {
              "flags": "-r --roledefinition <roledefinition>",
              "required": -21,
              "optional": 0,
              "bool": true,
              "short": "-r",
              "long": "--roledefinition",
              "description": "A JSON-formatted string containing the role definition."
            },
            {
              "flags": "--subscription <subscription>",
              "required": -16,
              "optional": 0,
              "bool": true,
              "long": "--subscription",
              "description": "The subscription identifier"
            }
          ]
        },
        {
          "name": "set",
          "description": "Modifies a custom role in Azure RBAC. Provide the modified role definition either as a JSON file or as a JSON-formatted string containing the role definition.\n     The role definition for the updated custom role MUST contain the Id and all other required properties of the role even if they are not updated: Name, Description, Actions, AssignableScopes. NotActions is optional.\n\n     Following is a sample updated role definition json that can be provided as input:\n\n     {\n     \"Id\": \"52a6cc13-ff92-47a8-a39b-2a8205c3087e\",\n     \"Name\": \"Updated Role\",\n     \"Description\": \"Can monitor all resources and start and restart virtual machines\",\n     \"Actions\": [\n       \"*/read\",\n       \"Microsoft.ClassicCompute/virtualmachines/restart/action\",\n       \"Microsoft.ClassicCompute/virtualmachines/start/action\"\n     ],\n     \"AssignableScopes\": [\"/subscriptions/4004a9fd-d58e-48dc-aeb2-4a4aec58606f\"]\n     }",
          "fullName": "role set",
          "usage": "[inputfile] [roledefinition]\n     --------------------------  Create using JSON file  --------------------------\n     azure role set --inputfile C:\\Temp\\roleDefinition.json",
          "filePath": "commands/arm/role/role.definition._js",
          "options": [
            {
              "flags": "-v, --verbose",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-v",
              "long": "--verbose",
              "description": "use verbose output"
            },
            {
              "flags": "-vv",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "-vv",
              "description": "more verbose with debug output"
            },
            {
              "flags": "--json",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--json",
              "description": "use json output"
            },
            {
              "flags": "-f --inputfile <inputfile>",
              "required": -16,
              "optional": 0,
              "bool": true,
              "short": "-f",
              "long": "--inputfile",
              "description": "File name containing a single json role definition to be updated. Id, Name, Description, Actions and AssignableScopes are required."
            },
            {
              "flags": "-r --roledefinition <roledefinition>",
              "required": -21,
              "optional": 0,
              "bool": true,
              "short": "-r",
              "long": "--roledefinition",
              "description": "A JSON-formatted string containing the role definition. For e.g. {\"Id\": \"52a6cc13-ff92-47a8-a39b-2a8205c3087e\",\"Description\": \"Updated role\",\"Actions\": [\"Microsoft.Support/*/read\"],\"Notactions\": [],\"AssignableScopes\": [\"/subscriptions/5004a9fd-d58e-48dc-aeb2-4a4aec58606f\"]}"
            },
            {
              "flags": "--subscription <subscription>",
              "required": -16,
              "optional": 0,
              "bool": true,
              "long": "--subscription",
              "description": "The subscription identifier"
            }
          ]
        },
        {
          "name": "delete",
          "description": "Deletes a custom role in Azure RBAC. The role to be deleted is specified using the Id or Name property of the role. Delete will fail if there are existing role assignments made to the custom role.",
          "fullName": "role delete",
          "usage": "[id] [name] [scope]\n\n     --------------------------  Example 1  --------------------------\n     azure role delete --name \"Contoso On-call\"\n\n     --------------------------  Example 2  --------------------------\n     azure role delete --id \"52a6cc13-ff92-47a8-a39b-2a8205c3087e\"",
          "filePath": "commands/arm/role/role.definition._js",
          "options": [
            {
              "flags": "-v, --verbose",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-v",
              "long": "--verbose",
              "description": "use verbose output"
            },
            {
              "flags": "-vv",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "-vv",
              "description": "more verbose with debug output"
            },
            {
              "flags": "--json",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--json",
              "description": "use json output"
            },
            {
              "flags": "--id <id>",
              "required": -6,
              "optional": 0,
              "bool": true,
              "long": "--id",
              "description": "Id of the Role definition to be deleted"
            },
            {
              "flags": "-n --name <name>",
              "required": -11,
              "optional": 0,
              "bool": true,
              "short": "-n",
              "long": "--name",
              "description": "Name of the Role definition to be deleted."
            },
            {
              "flags": "--scope <scope>",
              "required": -9,
              "optional": 0,
              "bool": true,
              "long": "--scope",
              "description": "Role definition scope.  For e.g. /subscriptions/4004a9fd-d58e-48dc-aeb2-4a4aec58606f"
            },
            {
              "flags": "-q --quiet",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-q",
              "long": "--quiet",
              "description": "If set, does not prompt for a confirmation before deleting the custom role"
            },
            {
              "flags": "--passthru",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--passthru",
              "description": "If set, displays the properties of deleted custom role"
            },
            {
              "flags": "--subscription <subscription>",
              "required": -16,
              "optional": 0,
              "bool": true,
              "long": "--subscription",
              "description": "The subscription identifier"
            }
          ]
        }
      ],
      "categories": {
        "assignment": {
          "name": "assignment",
          "description": "Commands to manage role assignments",
          "fullName": "role assignment",
          "usage": "[options] [command]",
          "options": [],
          "commands": [
            {
              "name": "create",
              "description": "Assigns the specified RBAC role to the specified principal, at the specified scope.",
              "fullName": "role assignment create",
              "usage": "[objectId] [signInName] [spn] [roleName] [roleId] [scope] [resource-group] [resource-type] [resource-name]\n\n           -----    Example 1   -------\n           azure role assignment create --resource-group testRG --signInName john.doe@contoso.com\n           Grant access to a user at a resource group scope.\n\n           -----    Example 2   -------\n           azure ad group show --search \"Christine Koch Team\"\n           + Getting group list\n           data:    Display Name:      Christine Koch Team\n           data:    ObjectId:          2f9d4375-cbf1-48e8-83c9-2a0be4cb33fb\n           data:    Security Enabled:  true\n           data:    Mail Enabled:\n\n           azure role assignment create --objectId 2f9d4375-cbf1-48e8-83c9-2a0be4cb33fb --roleName Contributor --resource-group testRG\n           Grants access to a security group.\n\n           -----    Example 3   -------\n           azure role assignment create --signInName john.doe@contoso.com --roleName Owner --scope \"/subscriptions/96231a05-34ce-4eb4-aa6a-70759cbb5e83/resourcegroups/rg1/providers/Microsoft.Web/sites/site1\"\n           Grants access to a user at a resource 'site1' (website) scope.\n\n           -----    Example 4   -------\n           azure role assignment create --objectId 5ac84765-1c8c-4994-94b2-629461bd191b --roleName \"Virtual Machine Contributor\" --resouce-name Devices-Engineering-ProjectRND --resource-type Microsoft.Network/virtualNetworks/subnets --parent virtualNetworks/VNET-EASTUS-01 --resource-group Network\n           Grant access to a group at a nested resource (subnet)\n",
              "filePath": "commands/arm/role/role.assignment._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "--objectId <objectId>",
                  "required": -12,
                  "optional": 0,
                  "bool": true,
                  "long": "--objectId",
                  "description": "Azure AD Objectid of the user, group or service principal"
                },
                {
                  "flags": "--signInName <signInName>",
                  "required": -14,
                  "optional": 0,
                  "bool": true,
                  "long": "--signInName",
                  "description": "The email address or the user principal name of the user."
                },
                {
                  "flags": "--spn <spn>",
                  "required": -7,
                  "optional": 0,
                  "bool": true,
                  "long": "--spn",
                  "description": "The ServicePrincipalName of the Azure AD application."
                },
                {
                  "flags": "-o --roleName <roleName>",
                  "required": -15,
                  "optional": 0,
                  "bool": true,
                  "short": "-o",
                  "long": "--roleName",
                  "description": "The Name of the RBAC role that needs to be assigned to the principal i.e. Reader, Contributor, Virtual Network Administrator, etc."
                },
                {
                  "flags": "-d --roleId <roleId>",
                  "required": -13,
                  "optional": 0,
                  "bool": true,
                  "short": "-d",
                  "long": "--roleId",
                  "description": "The Id of the RBAC role that needs to be assigned to the principal."
                },
                {
                  "flags": "-c --scope <scope>",
                  "required": -12,
                  "optional": 0,
                  "bool": true,
                  "short": "-c",
                  "long": "--scope",
                  "description": "The Scope of the role assignment. In the format of relative URI. For e.g. \"/subscriptions/9004a9fd-d58e-48dc-aeb2-4a4aec58606f/resourceGroups/TestRG\". If not specified, will create the role assignment at subscription level. If specified, it should start with \"/subscriptions/{id}\"."
                },
                {
                  "flags": "-g --resource-group <resource-group>",
                  "required": -21,
                  "optional": 0,
                  "bool": true,
                  "short": "-g",
                  "long": "--resource-group",
                  "description": "The resource group name. Creates an assignment that is effective at the specified resource group. When used in conjunction with resource-name, resource-type and (optionally)parent parameters, the command constructs a hierarchical scope in the form of a relative URI that identifies a resource."
                },
                {
                  "flags": "-r --resource-type <resource-type>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "short": "-r",
                  "long": "--resource-type",
                  "description": "The resource type. For e.g. Microsoft.Network/virtualNetworks. Should only be used in conjunction with resource-name, resource-group and (optionally)parent parameters to construct a hierarchical scope in the form of a relative URI that identifies a resource."
                },
                {
                  "flags": "-u --resource-name <resource-name>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "short": "-u",
                  "long": "--resource-name",
                  "description": "The resource name. For e.g. storageaccountprod. Should only be used in conjunction with resource-type, resource-group and (optionally)parent parameters to construct a hierarchical scope in the form of a relative URI that identifies a resource."
                },
                {
                  "flags": "--parent <parent>",
                  "required": -10,
                  "optional": 0,
                  "bool": true,
                  "long": "--parent",
                  "description": "The parent resource in the hierarchy of the resource specified using resource-name parameter. Must be used in conjunction with resource-name, resource-type and resource-group parameters to construct a hierarchical scope in the form of a relative URI that identifies a resource."
                },
                {
                  "flags": "--subscription <subscription>",
                  "required": -16,
                  "optional": 0,
                  "bool": true,
                  "long": "--subscription",
                  "description": "Name or identifier of the subscription where the role assignment will be created."
                }
              ]
            },
            {
              "name": "list",
              "description": "Lists Azure RBAC role assignments at the specified scope. \n         By default it lists all role assignments in the selected Azure subscription. Use respective parameters to list assignments to a specific user, or to list assignments on a specific resource group or resource. \n         The Azure RBAC role that is assigned dictates what type of resources the user is allowed to manage in the scope, and what actions the user is allowed to perform on those resources. Use 'azure role list' or 'azure role show' commands to list actions that a given role allows. ",
              "fullName": "role assignment list",
              "usage": "[objectId] [signInName] [spn] [roleName] [roleId] [scope] [resource-group] [resource-type] [resource-name]\n\n           -----    Example 1   -------\n           azure role assignment list\n           List all role assignments in the subscription\n\n           -----    Example 2   -------\n           azure role assignment list --resource-group testRG --signInName john.doe@contoso.com -e\n           Gets all role assignments made to user john.doe@contoso.com  and the groups of which he is member  at the testRG scope or above.\n\n           -----    Example 3   -------\n           azure role assignment list --spn \"http://testapp1.com\"\n           Gets all role assignments of the specified service principal.\n\n           -----    Example 4   -------\n           azure role assignment list --scope \"/subscriptions/96231a05-34ce-4eb4-aa6a-70759cbb5e83/resourcegroups/rg1/providers/Microsoft.Web/sites/site1\"\n           Gets role assignments at the 'site1' website scope.\n",
              "filePath": "commands/arm/role/role.assignment._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "--objectId <objectId>",
                  "required": -12,
                  "optional": 0,
                  "bool": true,
                  "long": "--objectId",
                  "description": "The Azure AD ObjectId of the User, Group or Service Principal. Filters all assignments that are made to the specified principal."
                },
                {
                  "flags": "--signInName <signInName>",
                  "required": -14,
                  "optional": 0,
                  "bool": true,
                  "long": "--signInName",
                  "description": "The email address or the user principal name of the user. Filters all assignments that are made to the specified user."
                },
                {
                  "flags": "--spn <spn>",
                  "required": -7,
                  "optional": 0,
                  "bool": true,
                  "long": "--spn",
                  "description": "The ServicePrincipalName of the service principal. Filters all assignments that are made to the specified Azure AD application."
                },
                {
                  "flags": "-o --roleName <roleName>",
                  "required": -15,
                  "optional": 0,
                  "bool": true,
                  "short": "-o",
                  "long": "--roleName",
                  "description": "Name of the Role that is assigned to the principal i.e. Reader, Contributor, Virtual Network Administrator, etc."
                },
                {
                  "flags": "-d --roleId <roleId>",
                  "required": -13,
                  "optional": 0,
                  "bool": true,
                  "short": "-d",
                  "long": "--roleId",
                  "description": "Id of the Role that is assigned to the principal"
                },
                {
                  "flags": "-c --scope <scope>",
                  "required": -12,
                  "optional": 0,
                  "bool": true,
                  "short": "-c",
                  "long": "--scope",
                  "description": "The Scope of the role assignment. In the format of relative URI. For e.g. /subscriptions/9004a9fd-d58e-48dc-aeb2-4a4aec58606f/resourceGroups/TestRG. It must start with \"/subscriptions/{id}\". The command filters all assignments that are effective at that scope."
                },
                {
                  "flags": "-g --resource-group <resource-group>",
                  "required": -21,
                  "optional": 0,
                  "bool": true,
                  "short": "-g",
                  "long": "--resource-group",
                  "description": "The resource group name. Lists role assignments that are effective at the specified resource group. When used in conjunction with resource-name, resource-type and (optionally)parent parameters, the command lists assignments effective at resources within the resource group."
                },
                {
                  "flags": "-r --resource-type <resource-type>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "short": "-r",
                  "long": "--resource-type",
                  "description": "The resource type. For e.g. Microsoft.Network/virtualNetworks. Must be used in conjunction with resource-name, resource-group and (optionally)parent parameters."
                },
                {
                  "flags": "-u --resource-name <resource-name>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "short": "-u",
                  "long": "--resource-name",
                  "description": "The resource name. For e.g. storageaccountprod. Must be used in conjunction with resource-group, resource-type and (optionally)parent parameters."
                },
                {
                  "flags": "--parent <parent>",
                  "required": -10,
                  "optional": 0,
                  "bool": true,
                  "long": "--parent",
                  "description": "The parent resource in the hierarchy of the resource specified using --resource-name parameter. Must be used in conjunction with resource-name, resource-type and resource-group parameters."
                },
                {
                  "flags": "-e --expandPrincipalGroups",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-e",
                  "long": "--expandPrincipalGroups",
                  "description": "If specified, returns roles directly assigned to the user and to the groups of which the user is a member (transitively). Supported only for a user principal."
                },
                {
                  "flags": "-a --includeClassicAdministrators",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-a",
                  "long": "--includeClassicAdministrators",
                  "description": "If specified, also lists subscription classic administrators (co-admins, service admins, etc.) role assignments."
                },
                {
                  "flags": "--subscription <subscription>",
                  "required": -16,
                  "optional": 0,
                  "bool": true,
                  "long": "--subscription",
                  "description": "Name or identifier of the subscription to search the role assignments."
                }
              ]
            },
            {
              "name": "delete",
              "description": "Removes a role assignment to the specified principal who is assigned to a particular role at a particular scope. Use the 'azure role assignment list' command to retrieve assignments under the subscription",
              "fullName": "role assignment delete",
              "usage": "[objectId] [signInName] [spn] [roleName] [roleId] [scope] [resource-group] [resource-type] [resource-name]\n\n           -----    Example 1   -------\n           azure role assignment delete --resource-group testRG --signInName john.doe@contoso.com --roleName Reader\n           Removes a role assignment for john.doe@contoso.com who is assigned to the Reader role at the testRG resourcegroup scope\n\n           -----    Example 2   -------\n           azure role assignment delete --objectId 2f9d4375-cbf1-48e8-83c9-2a0be4cb33fb --roleName Reader\n           Removes the role assignment to the group principal identified by the ObjectId and assigned to the Reader role. Defaults to using the current subscription as the scope to find the assignment to be deleted.\n",
              "filePath": "commands/arm/role/role.assignment._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "--objectId <objectId>",
                  "required": -12,
                  "optional": 0,
                  "bool": true,
                  "long": "--objectId",
                  "description": "Azure AD Objectid of the user, group or service principal"
                },
                {
                  "flags": "--signInName <signInName>",
                  "required": -14,
                  "optional": 0,
                  "bool": true,
                  "long": "--signInName",
                  "description": "The email address or the user principal name of the user."
                },
                {
                  "flags": "--spn <spn>",
                  "required": -7,
                  "optional": 0,
                  "bool": true,
                  "long": "--spn",
                  "description": "The ServicePrincipalName of the Azure AD application."
                },
                {
                  "flags": "-o --roleName <roleName>",
                  "required": -15,
                  "optional": 0,
                  "bool": true,
                  "short": "-o",
                  "long": "--roleName",
                  "description": "The Name of the RBAC role for which the assignment needs to be deleted i.e. Reader, Contributor, Virtual Network   Administrator, etc."
                },
                {
                  "flags": "-d --roleId <roleId>",
                  "required": -13,
                  "optional": 0,
                  "bool": true,
                  "short": "-d",
                  "long": "--roleId",
                  "description": "The Id of the RBAC role for which the assignment needs to be deleted."
                },
                {
                  "flags": "-c --scope <scope>",
                  "required": -12,
                  "optional": 0,
                  "bool": true,
                  "short": "-c",
                  "long": "--scope",
                  "description": "The Scope of the role assignment to be deleted. In the format of relative URI. For e.g. \"/subscriptions/9004a9fd-d58e-48dc-aeb2-4a4aec58606f/resourceGroups/TestRG\". If not specified, will attempt to delete the role assignment at subscription level. If specified, it should start with \"/subscriptions/{id}\"."
                },
                {
                  "flags": "-g --resource-group <resource-group>",
                  "required": -21,
                  "optional": 0,
                  "bool": true,
                  "short": "-g",
                  "long": "--resource-group",
                  "description": "The resource group name. Attempts to delete an assignment at the specified resource group scope. When used in conjunction with resource-name, resource-type and (optionally)parent parameters, the command constructs a hierarchical scope in the form of a relative URI that identifies a resource."
                },
                {
                  "flags": "-r --resource-type <resource-type>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "short": "-r",
                  "long": "--resource-type",
                  "description": "The resource type. For e.g. Microsoft.Network/virtualNetworks. Should only be used in conjunction with resource-name, resource-group and (optionally)parent parameters to construct a hierarchical scope in the form of a relative URI that identifies a resource."
                },
                {
                  "flags": "-u --resource-name <resource-name>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "short": "-u",
                  "long": "--resource-name",
                  "description": "The resource name. For e.g. storageaccountprod. Should only be used in conjunction with resource-type, resource-group and (optionally)parent parameters to construct a hierarchical scope in the form of a relative URI that identifies a resource."
                },
                {
                  "flags": "--parent <parent>",
                  "required": -10,
                  "optional": 0,
                  "bool": true,
                  "long": "--parent",
                  "description": "The parent resource in the hierarchy of the resource specified using --resource-name parameter, if any. Must be used in conjunction with resource-name, resource-type and resource-group parameters to construct a hierarchical scope in the form of a relative URI that identifies a resource."
                },
                {
                  "flags": "-q --quiet",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-q",
                  "long": "--quiet",
                  "description": "If specified, the command does not prompt for a confirmation before deleting the role assignment."
                },
                {
                  "flags": "--passthru",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--passthru",
                  "description": "If specified, displays the deleted role assignment"
                },
                {
                  "flags": "--subscription <subscription>",
                  "required": -16,
                  "optional": 0,
                  "bool": true,
                  "long": "--subscription",
                  "description": "Name or identifier of the subscription to delete the role assignment"
                }
              ]
            }
          ],
          "categories": {
            "changelog": {
              "name": "changelog",
              "description": "Gets access change history for the selected subscription for the specified time range i.e. role assignments that were added or removed, including classic administrators (co-administrators and service administrators). Maximum duration that can be queried is 15 days (going back up to past 90 days).",
              "fullName": "role assignment changelog",
              "usage": "[options] [command]",
              "options": [],
              "commands": [
                {
                  "name": "list",
                  "description": "List all access changes",
                  "fullName": "role assignment changelog list",
                  "usage": "[-b startTime] [-e endTime]\n\n           -----    Example 1   -------\n           azure role assignment changelog list\n           Gets the access change logs for the past hour.\n\n           -----    Example 2   -------\n           azure role assignment changelog list -b \"09/20/2015 15:00\" -e \"09/24/2015 15:00\"\n           Gets all access change logs between the specified dates.\n",
                  "filePath": "commands/arm/role/role.assignment.audit._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "-b --startTime <startTime>",
                      "required": -16,
                      "optional": 0,
                      "bool": true,
                      "short": "-b",
                      "long": "--startTime",
                      "description": "The start time of the query. E.g. \"2015-08-29 15:30\". If both startTime and endTime are not specified, defaults to the last one hour. Maximum query interval supported is 15 days."
                    },
                    {
                      "flags": "-e --endTime <endTime>",
                      "required": -14,
                      "optional": 0,
                      "bool": true,
                      "short": "-e",
                      "long": "--endTime",
                      "description": "The end time of the query. E.g. \"2015-08-29 15:30\".If both startTime and endTime are not specified, defaults to the last one hour. Maximum query interval supported is 15 days."
                    },
                    {
                      "flags": "-s --subscription <subscription>",
                      "required": -19,
                      "optional": 0,
                      "bool": true,
                      "short": "-s",
                      "long": "--subscription",
                      "description": "Name or identifier of the subscription where the changelog is to be retrieved."
                    }
                  ]
                }
              ],
              "categories": {}
            }
          }
        }
      }
    },
    "tag": {
      "name": "tag",
      "description": "Commands to manage your resource manager tags",
      "fullName": "tag",
      "usage": "[options] [command]",
      "options": [],
      "commands": [
        {
          "name": "create",
          "description": "add a tag",
          "fullName": "tag create",
          "usage": "[options] <name> <value>",
          "filePath": "commands/arm/tag/tag._js",
          "options": [
            {
              "flags": "-v, --verbose",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-v",
              "long": "--verbose",
              "description": "use verbose output"
            },
            {
              "flags": "-vv",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "-vv",
              "description": "more verbose with debug output"
            },
            {
              "flags": "--json",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--json",
              "description": "use json output"
            },
            {
              "flags": "-n --name <name>",
              "required": -11,
              "optional": 0,
              "bool": true,
              "short": "-n",
              "long": "--name",
              "description": "Name of the tag. If the tag name doesn't exist, create the tag name; Otherwise, add the value to the existing tag name."
            },
            {
              "flags": "--value <value>",
              "required": -9,
              "optional": 0,
              "bool": true,
              "long": "--value",
              "description": "Value of the tag. If specified, add the tag value to the tag name; Otherwise, keep the tag values unchanged."
            },
            {
              "flags": "--subscription <subscription>",
              "required": -16,
              "optional": 0,
              "bool": true,
              "long": "--subscription",
              "description": "The subscription identifier."
            }
          ]
        },
        {
          "name": "delete",
          "description": "Remove an entire tag or a tag value",
          "fullName": "tag delete",
          "usage": "[options] <name> <value>",
          "filePath": "commands/arm/tag/tag._js",
          "options": [
            {
              "flags": "-v, --verbose",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-v",
              "long": "--verbose",
              "description": "use verbose output"
            },
            {
              "flags": "-vv",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "-vv",
              "description": "more verbose with debug output"
            },
            {
              "flags": "--json",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--json",
              "description": "use json output"
            },
            {
              "flags": "-n --name <name>",
              "required": -11,
              "optional": 0,
              "bool": true,
              "short": "-n",
              "long": "--name",
              "description": "Name of the tag to remove."
            },
            {
              "flags": "--value <value>",
              "required": -9,
              "optional": 0,
              "bool": true,
              "long": "--value",
              "description": "Value of the tag to remove. If not specified, remove the entire tag. If specified, only remove the tag value."
            },
            {
              "flags": "-q, --quiet",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-q",
              "long": "--quiet",
              "description": "If not specified, will prompt for confirmation. If specified, won't prompt."
            },
            {
              "flags": "--subscription <subscription>",
              "required": -16,
              "optional": 0,
              "bool": true,
              "long": "--subscription",
              "description": "The subscription identifier."
            }
          ]
        },
        {
          "name": "list",
          "description": "Lists the tag information",
          "fullName": "tag list",
          "usage": "[options]",
          "filePath": "commands/arm/tag/tag._js",
          "options": [
            {
              "flags": "-v, --verbose",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-v",
              "long": "--verbose",
              "description": "use verbose output"
            },
            {
              "flags": "-vv",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "-vv",
              "description": "more verbose with debug output"
            },
            {
              "flags": "--json",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--json",
              "description": "use json output"
            },
            {
              "flags": "-d, --details",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-d",
              "long": "--details",
              "description": "Show tag values information as well."
            },
            {
              "flags": "--subscription <subscription>",
              "required": -16,
              "optional": 0,
              "bool": true,
              "long": "--subscription",
              "description": "The subscription identifier."
            }
          ]
        },
        {
          "name": "show",
          "description": "Get a tag",
          "fullName": "tag show",
          "usage": "[options] [name]",
          "filePath": "commands/arm/tag/tag._js",
          "options": [
            {
              "flags": "-v, --verbose",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-v",
              "long": "--verbose",
              "description": "use verbose output"
            },
            {
              "flags": "-vv",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "-vv",
              "description": "more verbose with debug output"
            },
            {
              "flags": "--json",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--json",
              "description": "use json output"
            },
            {
              "flags": "-n, --name <name>",
              "required": -12,
              "optional": 0,
              "bool": true,
              "short": "-n",
              "long": "--name",
              "description": "The tag name."
            },
            {
              "flags": "--subscription <subscription>",
              "required": -16,
              "optional": 0,
              "bool": true,
              "long": "--subscription",
              "description": "The subscription identifier."
            }
          ]
        }
      ],
      "categories": {}
    },
    "usage": {
      "name": "usage",
      "description": "Command to view your aggregated Azure usage data",
      "fullName": "usage",
      "usage": "[options] [command]",
      "options": [],
      "commands": [
        {
          "name": "list",
          "description": "List the usage aggregates for a provided time range",
          "fullName": "usage list",
          "usage": "[options] [reportedStartTime] [reportedEndTime]",
          "filePath": "commands/arm/usage/usage._js",
          "options": [
            {
              "flags": "-v, --verbose",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-v",
              "long": "--verbose",
              "description": "use verbose output"
            },
            {
              "flags": "-vv",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "-vv",
              "description": "more verbose with debug output"
            },
            {
              "flags": "--json",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--json",
              "description": "use json output"
            },
            {
              "flags": "--reportedStartTime <datetime>",
              "required": -21,
              "optional": 0,
              "bool": true,
              "long": "--reportedStartTime",
              "description": "The start of the time range to retrieve data for, in UTC format."
            },
            {
              "flags": "--reportedEndTime <datetime>",
              "required": -19,
              "optional": 0,
              "bool": true,
              "long": "--reportedEndTime",
              "description": "The end of the time range to retrieve data for, in UTC format."
            },
            {
              "flags": "--granularity <daily/hourly>",
              "required": -15,
              "optional": 0,
              "bool": true,
              "long": "--granularity",
              "description": "Value is either daily (default) or hourly to tell the API how to return the results grouped by day or hour."
            },
            {
              "flags": "--showDetails <bool>",
              "required": -15,
              "optional": 0,
              "bool": true,
              "long": "--showDetails",
              "description": "When set to true (default), the aggregates are broken down into the instance metadata which is more granular."
            },
            {
              "flags": "--continuationToken <url>",
              "required": -21,
              "optional": 0,
              "bool": true,
              "long": "--continuationToken",
              "description": "Retrieved from previous calls, this is the bookmark used for progress when the responses are paged."
            },
            {
              "flags": "--subscription <subscription>",
              "required": -16,
              "optional": 0,
              "bool": true,
              "long": "--subscription",
              "description": "the subscription identifier"
            }
          ]
        }
      ],
      "categories": {}
    },
    "vm": {
      "name": "vm",
      "description": "Commands to manage your virtual machines",
      "fullName": "vm",
      "usage": "[options] [command]",
      "options": [],
      "commands": [
        {
          "name": "create",
          "description": "Create a virtual machine in a resource group",
          "fullName": "vm create",
          "usage": "[options] <resource-group> <name> <location> <os-type>",
          "filePath": "commands/arm/vm/vm._js",
          "options": [
            {
              "flags": "-v, --verbose",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-v",
              "long": "--verbose",
              "description": "use verbose output"
            },
            {
              "flags": "-vv",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "-vv",
              "description": "more verbose with debug output"
            },
            {
              "flags": "--json",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--json",
              "description": "use json output"
            },
            {
              "flags": "-g, --resource-group <resource-group>",
              "required": -22,
              "optional": 0,
              "bool": true,
              "short": "-g",
              "long": "--resource-group",
              "description": "the resource group name"
            },
            {
              "flags": "-n, --name <name>",
              "required": -12,
              "optional": 0,
              "bool": true,
              "short": "-n",
              "long": "--name",
              "description": "the virtual machine name"
            },
            {
              "flags": "-D, --nic-id <nic-id>",
              "required": -14,
              "optional": 0,
              "bool": true,
              "short": "-D",
              "long": "--nic-id",
              "description": "the NIC identifier\n     e.g. /subscriptions/<subscriptipn-id>/resourceGroups/<resource-group-name>/providers/Microsoft.Network/networkInterfaces/<nic-name>"
            },
            {
              "flags": "-f, --nic-name <nic-name>",
              "required": -16,
              "optional": 0,
              "bool": true,
              "short": "-f",
              "long": "--nic-name",
              "description": "the NIC name\n     If this is an existing NIC then it must exists under the current resource group identified by resource-group\n     A new NIC will be created if no NIC exists with name nic-name in the current resource group\n     To create new NIC - subnet-id or vnet-name, vnet-address-prefix, subnet-name and vnet-subnet-address-prefix are required\n     Please use nic-id to refer an existing NIC in a different resource group\n     The parameter nic-name will be ignored when nic-id is specified"
            },
            {
              "flags": "-I, --nic-ids <nic-ids>",
              "required": -15,
              "optional": 0,
              "bool": true,
              "short": "-I",
              "long": "--nic-ids",
              "description": "the list of NIC identifiers separated by comma. In case of specifying multiple nics first one will be set as primary."
            },
            {
              "flags": "-N, --nic-names <nic-names>",
              "required": -17,
              "optional": 0,
              "bool": true,
              "short": "-N",
              "long": "--nic-names",
              "description": "the list of NIC names separated by comma. In case of specifying multiple nics first one will be set as primary.These NICs must exists in the same resource group as the VM. Please use nic-ids if that not the case. This parameter will be ignored if --nic-ids is specified"
            },
            {
              "flags": "-l, --location <location>",
              "required": -16,
              "optional": 0,
              "bool": true,
              "short": "-l",
              "long": "--location",
              "description": "the location"
            },
            {
              "flags": "-y, --os-type <os-type>",
              "required": -15,
              "optional": 0,
              "bool": true,
              "short": "-y",
              "long": "--os-type",
              "description": "the operating system Type, valid values are Windows, Linux"
            },
            {
              "flags": "-Q, --image-urn <image-urn>",
              "required": -17,
              "optional": 0,
              "bool": true,
              "short": "-Q",
              "long": "--image-urn",
              "description": "the image URN in the form publisherName:offer:skus:version.\n      Or the source VHD link of a user image, e.g. https://foo.blob.core.windows.net/system/Microsoft.Compute/Images/vhds/snap-bar.vhd\n      Option '-d' can be used with this option to specify the destination storage location where the new OS VHD will be created and put to.\n      In this case, OS profile credentials have to be specified, i.e. user name/password, or SSH keys, etc."
            },
            {
              "flags": "-u, --admin-username <admin-username>",
              "required": -22,
              "optional": 0,
              "bool": true,
              "short": "-u",
              "long": "--admin-username",
              "description": "the user name\n      This parameter is valid for a VM created from an image (image-urn) and ignored when VM is based on an existing disk"
            },
            {
              "flags": "-p, --admin-password <admin-password>",
              "required": -22,
              "optional": 0,
              "bool": true,
              "short": "-p",
              "long": "--admin-password",
              "description": "the password\n      This parameter is valid for a VM created from an image (image-urn) and ignored when VM is based on existing disk"
            },
            {
              "flags": "-M, --ssh-publickey-file <openssh-rsa-file|pem-file>",
              "required": -26,
              "optional": 0,
              "bool": true,
              "short": "-M",
              "long": "--ssh-publickey-file",
              "description": "path to public key PEM file or SSH Public key file for SSH authentication\n     This parameter is valid only when os-type is \"Linux\""
            },
            {
              "flags": "-G, --generate-ssh-keys",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-G",
              "long": "--generate-ssh-keys",
              "description": "Auto generate SSH keys, will be ignored if --ssh-publickey-file is specified. This parameter is valid only when os-type is \"Linux\""
            },
            {
              "flags": "-z, --vm-size <vm-size>",
              "required": -15,
              "optional": 0,
              "bool": true,
              "short": "-z",
              "long": "--vm-size",
              "description": "the virtual machine size [Standard_A1]"
            },
            {
              "flags": "-U, --public-ip-id <public-ip-id>",
              "required": -20,
              "optional": 0,
              "bool": true,
              "short": "-U",
              "long": "--public-ip-id",
              "description": "the public ip identifier\n     e.g. /subscriptions/<subscriptipn-id>/resourceGroups/<resource-group-name>/providers/Microsoft.Network/publicIPAddresses/<public-ip-name>"
            },
            {
              "flags": "-i, --public-ip-name <public-ip-name>",
              "required": -22,
              "optional": 0,
              "bool": true,
              "short": "-i",
              "long": "--public-ip-name",
              "description": "the public ip name\n     If this is an existing public IP then it must exists under the current resource group identified by resource-group\n     A new public IP will be created if no public IP exists with name public-ip-name in the current resource group\n     Please use public-ip-id to refer an existing public IP in a different resource group\n     The parameter public-ip-name will be ignored when public-ip-id is specified"
            },
            {
              "flags": "-w, --public-ip-domain-name <public-ip-domain-name>",
              "required": -29,
              "optional": 0,
              "bool": true,
              "short": "-w",
              "long": "--public-ip-domain-name",
              "description": "the public ip domain name\n     This sets the DNS to <publicip-domain-name>.<location>.cloudapp.azure.com\n     This parameter will be used only when creating new public IP"
            },
            {
              "flags": "-m, --public-ip-allocation-method <public-ip-allocation-method>",
              "required": -35,
              "optional": 0,
              "bool": true,
              "short": "-m",
              "long": "--public-ip-allocation-method",
              "description": "the public ip allocation method, valid values are \"Dynamic\"\n     This parameter will be used only when creating new public IP"
            },
            {
              "flags": "-t, --public-ip-idletimeout <public-ip-idletimeout>",
              "required": -29,
              "optional": 0,
              "bool": true,
              "short": "-t",
              "long": "--public-ip-idletimeout",
              "description": "the public ip idle timeout specified in minutes\n     This parameter will be used only when creating new public IP"
            },
            {
              "flags": "-S, --subnet-id <subnet-id>",
              "required": -17,
              "optional": 0,
              "bool": true,
              "short": "-S",
              "long": "--subnet-id",
              "description": "the subnet identifier\n     e.g. /subscriptions/<subscriptipn-id>/resourceGroups/<resource-group-name>/providers/Microsoft.Network/virtualNetworks/<vnet-name>/subnets/<subnet-name>"
            },
            {
              "flags": "-F, --vnet-name <vnet-name>",
              "required": -17,
              "optional": 0,
              "bool": true,
              "short": "-F",
              "long": "--vnet-name",
              "description": "the virtual network name\n     If this is an existing vnet then it must exists under the current resource group identified by resource-group\n     If this is an existing vnet then vnet-subnet-name is required\n          If no subnet exists with name vnet-subnet-name then a new subnet will be created\n          To create new subnet - vnet-subnet-address-prefix is required\n     A new vnet will be created if no vnet exists with name vnet-name in the current resource group\n     To create new vnet - vnet-address-prefix, vnet-subnet-name and vnet-subnet-address-prefix are required\n     Please use subnet-id to refer an existing subnet under a vnet in a different resource group\n     vnet-name, vnet-address-prefix, vnet-subnet-name and vnet-subnet-address-prefix will be ignored when subnet-id is specified"
            },
            {
              "flags": "-P, --vnet-address-prefix <vnet-address-prefix>",
              "required": -27,
              "optional": 0,
              "bool": true,
              "short": "-P",
              "long": "--vnet-address-prefix",
              "description": "the virtual network address prefix in IPv4/CIDR format"
            },
            {
              "flags": "-j, --vnet-subnet-name <vnet-subnet-name>",
              "required": -24,
              "optional": 0,
              "bool": true,
              "short": "-j",
              "long": "--vnet-subnet-name",
              "description": "the virtual network subnet name"
            },
            {
              "flags": "-k, --vnet-subnet-address-prefix <vnet-subnet-address-prefix>",
              "required": -34,
              "optional": 0,
              "bool": true,
              "short": "-k",
              "long": "--vnet-subnet-address-prefix",
              "description": "the virtual network subnet address prefix in IPv4/CIDR format"
            },
            {
              "flags": "-r, --availset-name <availset-name>",
              "required": -21,
              "optional": 0,
              "bool": true,
              "short": "-r",
              "long": "--availset-name",
              "description": "the availability set name"
            },
            {
              "flags": "-o, --storage-account-name <storage-account-name>",
              "required": -28,
              "optional": 0,
              "bool": true,
              "short": "-o",
              "long": "--storage-account-name",
              "description": "the storage account name"
            },
            {
              "flags": "-R, --storage-account-container-name <storage-account-container-name>",
              "required": -38,
              "optional": 0,
              "bool": true,
              "short": "-R",
              "long": "--storage-account-container-name",
              "description": "the storage account container name [vhds]"
            },
            {
              "flags": "-d, --os-disk-vhd <os-disk-vhd>",
              "required": -19,
              "optional": 0,
              "bool": true,
              "short": "-d",
              "long": "--os-disk-vhd",
              "description": "name or url of the OS disk Vhd\n     If this parameter is specified along with --image-urn ('-Q') parameter then OS disk created from the image will be stored in this vhd.\n     If this parameter is specified without --image-urn ('-Q') parameter then this vhd must exists and will be used as a specialized OS disk image.\n     If this parameter is specified without --image-urn ('-Q') parameter, OS profile credentials will be ignored, and the specialized credentials from the disk image will be used."
            },
            {
              "flags": "-a, --data-disk-caching <data-disk-caching>",
              "required": -25,
              "optional": 0,
              "bool": true,
              "short": "-a",
              "long": "--data-disk-caching",
              "description": "data disk caching, valid values are None, ReadOnly, ReadWrite"
            },
            {
              "flags": "-x, --data-disk-vhd <data-disk-vhd>",
              "required": -21,
              "optional": 0,
              "bool": true,
              "short": "-x",
              "long": "--data-disk-vhd",
              "description": "name or url of the data disk Vhd"
            },
            {
              "flags": "-e, --data-disk-size <data-disk-size>",
              "required": -22,
              "optional": 0,
              "bool": true,
              "short": "-e",
              "long": "--data-disk-size",
              "description": "data disk size in GB"
            },
            {
              "flags": "-Y, --data-disk-existing",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-Y",
              "long": "--data-disk-existing",
              "description": "Will use existing VHD if specified. Don't specify this param if you are creating data disk from a new VHD."
            },
            {
              "flags": "-C, --custom-data <custom-data-file>",
              "required": -19,
              "optional": 0,
              "bool": true,
              "short": "-C",
              "long": "--custom-data",
              "description": "CustomData file"
            },
            {
              "flags": "-s, --subscription <subscription>",
              "required": -20,
              "optional": 0,
              "bool": true,
              "short": "-s",
              "long": "--subscription",
              "description": "the subscription identifier"
            },
            {
              "flags": "--tags <tags>",
              "required": -8,
              "optional": 0,
              "bool": true,
              "long": "--tags",
              "description": "Tags to set to the virtual machine. Can be multiple. In the format of 'name=value'. Name is required and value is optional. For example, --tags tag1=value1;tag2"
            },
            {
              "flags": "--disable-boot-diagnostics",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--disable-boot-diagnostics",
              "description": "The switch parameter to disable the boot diagnostics (by default enabled) for VM."
            },
            {
              "flags": "--boot-diagnostics-storage-uri <boot-diagnostics-storage-uri>",
              "required": -32,
              "optional": 0,
              "bool": true,
              "long": "--boot-diagnostics-storage-uri",
              "description": "Optional. Specify storage account URL for boot diagnostics. In the format of 'https://your_stoage_account_name.blob.core.windows.net/'."
            },
            {
              "flags": "--disable-bginfo-extension",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--disable-bginfo-extension",
              "description": "The switch parameter to disable the BGInfo extension for VM."
            },
            {
              "flags": "--disk-encryption-key-vault-id <disk-encryption-key-vault-id>",
              "required": -32,
              "optional": 0,
              "bool": true,
              "long": "--disk-encryption-key-vault-id",
              "description": "The OS disk encryption key vault ID."
            },
            {
              "flags": "--disk-encryption-key-url <disk-encryption-key-url>",
              "required": -27,
              "optional": 0,
              "bool": true,
              "long": "--disk-encryption-key-url",
              "description": "The OS disk encryption key secret URL."
            },
            {
              "flags": "--key-encryption-key-vault-id <key-encryption-key-vault-id>",
              "required": -31,
              "optional": 0,
              "bool": true,
              "long": "--key-encryption-key-vault-id",
              "description": "The vault reference Url for the OS disk encryption key."
            },
            {
              "flags": "--key-encryption-key-url <key-encryption-key-url>",
              "required": -26,
              "optional": 0,
              "bool": true,
              "long": "--key-encryption-key-url",
              "description": "The Url of the master key used to encrypt the OS disk encryption key."
            }
          ]
        },
        {
          "name": "quick-create",
          "description": "Create a virtual machine with default resources in a resource group",
          "fullName": "vm quick-create",
          "usage": "[options] <resource-group> <name> <location> <os-type> <image-urn> <admin-username> <admin-password>",
          "filePath": "commands/arm/vm/vm._js",
          "options": [
            {
              "flags": "-v, --verbose",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-v",
              "long": "--verbose",
              "description": "use verbose output"
            },
            {
              "flags": "-vv",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "-vv",
              "description": "more verbose with debug output"
            },
            {
              "flags": "--json",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--json",
              "description": "use json output"
            },
            {
              "flags": "-g, --resource-group <resource-group>",
              "required": -22,
              "optional": 0,
              "bool": true,
              "short": "-g",
              "long": "--resource-group",
              "description": "the resource group name"
            },
            {
              "flags": "-n, --name <name>",
              "required": -12,
              "optional": 0,
              "bool": true,
              "short": "-n",
              "long": "--name",
              "description": "the virtual machine name"
            },
            {
              "flags": "-l, --location <location>",
              "required": -16,
              "optional": 0,
              "bool": true,
              "short": "-l",
              "long": "--location",
              "description": "the location"
            },
            {
              "flags": "-y, --os-type <os-type>",
              "required": -15,
              "optional": 0,
              "bool": true,
              "short": "-y",
              "long": "--os-type",
              "description": "the operating system Type, valid values are Windows, Linux"
            },
            {
              "flags": "-Q, --image-urn <image-urn>",
              "required": -17,
              "optional": 0,
              "bool": true,
              "short": "-Q",
              "long": "--image-urn",
              "description": "the image URN in the form \"publisherName:offer:skus:version\",\n                                               or the VHD link of a user image,\n                                               e.g. https://foo.blob.core.windows.net/bar/vhds/baz.vhd"
            },
            {
              "flags": "-z, --vm-size <vm-size>",
              "required": -15,
              "optional": 0,
              "bool": true,
              "short": "-z",
              "long": "--vm-size",
              "description": "the virtual machine size [Standard_D1]"
            },
            {
              "flags": "-u, --admin-username <admin-username>",
              "required": -22,
              "optional": 0,
              "bool": true,
              "short": "-u",
              "long": "--admin-username",
              "description": "the user name"
            },
            {
              "flags": "-p, --admin-password <admin-password>",
              "required": -22,
              "optional": 0,
              "bool": true,
              "short": "-p",
              "long": "--admin-password",
              "description": "the password, skipped if SSH public key file is specified for Linux VMs"
            },
            {
              "flags": "-M, --ssh-publickey-file <ssh-publickey-file>",
              "required": -26,
              "optional": 0,
              "bool": true,
              "short": "-M",
              "long": "--ssh-publickey-file",
              "description": "the path to public key file for SSH authentication,\n                                               & this parameter is valid only when os-type is Linux."
            },
            {
              "flags": "-s, --subscription <subscription>",
              "required": -20,
              "optional": 0,
              "bool": true,
              "short": "-s",
              "long": "--subscription",
              "description": "the subscription identifier"
            }
          ]
        },
        {
          "name": "list",
          "description": "Get all virtual machines in a resource group",
          "fullName": "vm list",
          "usage": "[options] <resource-group>",
          "filePath": "commands/arm/vm/vm._js",
          "options": [
            {
              "flags": "-v, --verbose",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-v",
              "long": "--verbose",
              "description": "use verbose output"
            },
            {
              "flags": "-vv",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "-vv",
              "description": "more verbose with debug output"
            },
            {
              "flags": "--json",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--json",
              "description": "use json output"
            },
            {
              "flags": "-g, --resource-group <resource-group>",
              "required": -22,
              "optional": 0,
              "bool": true,
              "short": "-g",
              "long": "--resource-group",
              "description": "the resource group name"
            },
            {
              "flags": "-s, --subscription <subscription>",
              "required": -20,
              "optional": 0,
              "bool": true,
              "short": "-s",
              "long": "--subscription",
              "description": "the subscription identifier"
            }
          ]
        },
        {
          "name": "show",
          "description": "Get a virtual machine in a resource group",
          "fullName": "vm show",
          "usage": "[options] <resource-group> <name>",
          "filePath": "commands/arm/vm/vm._js",
          "options": [
            {
              "flags": "-v, --verbose",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-v",
              "long": "--verbose",
              "description": "use verbose output"
            },
            {
              "flags": "-vv",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "-vv",
              "description": "more verbose with debug output"
            },
            {
              "flags": "--json",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--json",
              "description": "use json output"
            },
            {
              "flags": "-g, --resource-group <resource-group>",
              "required": -22,
              "optional": 0,
              "bool": true,
              "short": "-g",
              "long": "--resource-group",
              "description": "the resource group name"
            },
            {
              "flags": "-n, --name <name>",
              "required": -12,
              "optional": 0,
              "bool": true,
              "short": "-n",
              "long": "--name",
              "description": "the virtual machine name"
            },
            {
              "flags": "-d, --depth <depth>",
              "required": -13,
              "optional": 0,
              "bool": true,
              "short": "-d",
              "long": "--depth",
              "description": "the number of times to recurse, to recurse indefinitely pass \"full\". (valid only with --json option)"
            },
            {
              "flags": "-s, --subscription <subscription>",
              "required": -20,
              "optional": 0,
              "bool": true,
              "short": "-s",
              "long": "--subscription",
              "description": "the subscription identifier"
            }
          ]
        },
        {
          "name": "delete",
          "description": "Delete a virtual machine in a resource group",
          "fullName": "vm delete",
          "usage": "[options] <resource-group> <name>",
          "filePath": "commands/arm/vm/vm._js",
          "options": [
            {
              "flags": "-v, --verbose",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-v",
              "long": "--verbose",
              "description": "use verbose output"
            },
            {
              "flags": "-vv",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "-vv",
              "description": "more verbose with debug output"
            },
            {
              "flags": "--json",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--json",
              "description": "use json output"
            },
            {
              "flags": "-g, --resource-group <resource-group>",
              "required": -22,
              "optional": 0,
              "bool": true,
              "short": "-g",
              "long": "--resource-group",
              "description": "the resource group name"
            },
            {
              "flags": "-n, --name <name>",
              "required": -12,
              "optional": 0,
              "bool": true,
              "short": "-n",
              "long": "--name",
              "description": "the virtual machine name"
            },
            {
              "flags": "-q, --quiet",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-q",
              "long": "--quiet",
              "description": "quiet mode, do not ask for delete confirmation"
            },
            {
              "flags": "-s, --subscription <subscription>",
              "required": -20,
              "optional": 0,
              "bool": true,
              "short": "-s",
              "long": "--subscription",
              "description": "the subscription identifier"
            }
          ]
        },
        {
          "name": "stop",
          "description": "Shutdown a virtual machine in a resource group",
          "fullName": "vm stop",
          "usage": "[options] <resource-group> <name>",
          "filePath": "commands/arm/vm/vm._js",
          "options": [
            {
              "flags": "-v, --verbose",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-v",
              "long": "--verbose",
              "description": "use verbose output"
            },
            {
              "flags": "-vv",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "-vv",
              "description": "more verbose with debug output"
            },
            {
              "flags": "--json",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--json",
              "description": "use json output"
            },
            {
              "flags": "-g, --resource-group <resource-group>",
              "required": -22,
              "optional": 0,
              "bool": true,
              "short": "-g",
              "long": "--resource-group",
              "description": "the resource group name"
            },
            {
              "flags": "-n, --name <name>",
              "required": -12,
              "optional": 0,
              "bool": true,
              "short": "-n",
              "long": "--name",
              "description": "the virtual machine name"
            },
            {
              "flags": "-s, --subscription <subscription>",
              "required": -20,
              "optional": 0,
              "bool": true,
              "short": "-s",
              "long": "--subscription",
              "description": "the subscription identifier"
            }
          ]
        },
        {
          "name": "restart",
          "description": "Restart a virtual machine in a resource group",
          "fullName": "vm restart",
          "usage": "[options] <resource-group> <name>",
          "filePath": "commands/arm/vm/vm._js",
          "options": [
            {
              "flags": "-v, --verbose",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-v",
              "long": "--verbose",
              "description": "use verbose output"
            },
            {
              "flags": "-vv",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "-vv",
              "description": "more verbose with debug output"
            },
            {
              "flags": "--json",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--json",
              "description": "use json output"
            },
            {
              "flags": "-g, --resource-group <resource-group>",
              "required": -22,
              "optional": 0,
              "bool": true,
              "short": "-g",
              "long": "--resource-group",
              "description": "the resource group name"
            },
            {
              "flags": "-n, --name <name>",
              "required": -12,
              "optional": 0,
              "bool": true,
              "short": "-n",
              "long": "--name",
              "description": "the virtual machine name"
            },
            {
              "flags": "-s, --subscription <subscription>",
              "required": -20,
              "optional": 0,
              "bool": true,
              "short": "-s",
              "long": "--subscription",
              "description": "the subscription identifier"
            }
          ]
        },
        {
          "name": "start",
          "description": "Start a virtual machine in a resource group",
          "fullName": "vm start",
          "usage": "[options] <resource-group> <name>",
          "filePath": "commands/arm/vm/vm._js",
          "options": [
            {
              "flags": "-v, --verbose",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-v",
              "long": "--verbose",
              "description": "use verbose output"
            },
            {
              "flags": "-vv",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "-vv",
              "description": "more verbose with debug output"
            },
            {
              "flags": "--json",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--json",
              "description": "use json output"
            },
            {
              "flags": "-g, --resource-group <resource-group>",
              "required": -22,
              "optional": 0,
              "bool": true,
              "short": "-g",
              "long": "--resource-group",
              "description": "the resource group name"
            },
            {
              "flags": "-n, --name <name>",
              "required": -12,
              "optional": 0,
              "bool": true,
              "short": "-n",
              "long": "--name",
              "description": "the virtual machine name"
            },
            {
              "flags": "-s, --subscription <subscription>",
              "required": -20,
              "optional": 0,
              "bool": true,
              "short": "-s",
              "long": "--subscription",
              "description": "the subscription identifier"
            }
          ]
        },
        {
          "name": "deallocate",
          "description": "Shutdown a virtual machine in a resource group and release the compute resources",
          "fullName": "vm deallocate",
          "usage": "[options] <resource-group> <name>",
          "filePath": "commands/arm/vm/vm._js",
          "options": [
            {
              "flags": "-v, --verbose",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-v",
              "long": "--verbose",
              "description": "use verbose output"
            },
            {
              "flags": "-vv",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "-vv",
              "description": "more verbose with debug output"
            },
            {
              "flags": "--json",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--json",
              "description": "use json output"
            },
            {
              "flags": "-g, --resource-group <resource-group>",
              "required": -22,
              "optional": 0,
              "bool": true,
              "short": "-g",
              "long": "--resource-group",
              "description": "the resource group name"
            },
            {
              "flags": "-n, --name <name>",
              "required": -12,
              "optional": 0,
              "bool": true,
              "short": "-n",
              "long": "--name",
              "description": "the virtual machine name"
            },
            {
              "flags": "-s, --subscription <subscription>",
              "required": -20,
              "optional": 0,
              "bool": true,
              "short": "-s",
              "long": "--subscription",
              "description": "the subscription identifier"
            }
          ]
        },
        {
          "name": "sizes",
          "description": "Get all available virtual machine sizes",
          "fullName": "vm sizes",
          "usage": "[options]",
          "filePath": "commands/arm/vm/vm._js",
          "options": [
            {
              "flags": "-v, --verbose",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-v",
              "long": "--verbose",
              "description": "use verbose output"
            },
            {
              "flags": "-vv",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "-vv",
              "description": "more verbose with debug output"
            },
            {
              "flags": "--json",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--json",
              "description": "use json output"
            },
            {
              "flags": "-l, --location <location>",
              "required": -16,
              "optional": 0,
              "bool": true,
              "short": "-l",
              "long": "--location",
              "description": "the location name, use this to get the list of VM sizes available in a location"
            },
            {
              "flags": "-n, --vm-name <vm-name>",
              "required": -15,
              "optional": 0,
              "bool": true,
              "short": "-n",
              "long": "--vm-name",
              "description": "the virtual machine name, use this to get the list of VM sizes available for a specific VM"
            },
            {
              "flags": "-g, --resource-group <resourceGroup>",
              "required": -22,
              "optional": 0,
              "bool": true,
              "short": "-g",
              "long": "--resource-group",
              "description": "the resource group name, required when --vm-name is specified"
            },
            {
              "flags": "-s, --subscription <subscription>",
              "required": -20,
              "optional": 0,
              "bool": true,
              "short": "-s",
              "long": "--subscription",
              "description": "the subscription identifier"
            }
          ]
        },
        {
          "name": "capture",
          "description": "Capture a VM in a resource group as an OS Image or VM Image",
          "fullName": "vm capture",
          "usage": "[options] <resource-group> <name> <vhd-name-prefix>",
          "filePath": "commands/arm/vm/vm._js",
          "options": [
            {
              "flags": "-v, --verbose",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-v",
              "long": "--verbose",
              "description": "use verbose output"
            },
            {
              "flags": "-vv",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "-vv",
              "description": "more verbose with debug output"
            },
            {
              "flags": "--json",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--json",
              "description": "use json output"
            },
            {
              "flags": "-g, --resource-group <resource-group>",
              "required": -22,
              "optional": 0,
              "bool": true,
              "short": "-g",
              "long": "--resource-group",
              "description": "the resource group name"
            },
            {
              "flags": "-n, --name <name>",
              "required": -12,
              "optional": 0,
              "bool": true,
              "short": "-n",
              "long": "--name",
              "description": "the virtual machine name"
            },
            {
              "flags": "-p, --vhd-name-prefix <vhd-name-prefix>",
              "required": -23,
              "optional": 0,
              "bool": true,
              "short": "-p",
              "long": "--vhd-name-prefix",
              "description": "Captured virtual hard disk's name prefix"
            },
            {
              "flags": "-R, --storage-account-container-name <storage-account-container-name>",
              "required": -38,
              "optional": 0,
              "bool": true,
              "short": "-R",
              "long": "--storage-account-container-name",
              "description": "the storage account container name [vhds]"
            },
            {
              "flags": "-o, --overwrite",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-o",
              "long": "--overwrite",
              "description": "In case of conflict overwrite the target virtual hard disk if set to true."
            },
            {
              "flags": "-t, --template-file-name <template-file-name>",
              "required": -26,
              "optional": 0,
              "bool": true,
              "short": "-t",
              "long": "--template-file-name",
              "description": "Name of the file that will contain a template that can be used to create similar VMs."
            },
            {
              "flags": "-s, --subscription <id>",
              "required": -20,
              "optional": 0,
              "bool": true,
              "short": "-s",
              "long": "--subscription",
              "description": "the subscription id"
            }
          ]
        },
        {
          "name": "generalize",
          "description": "Set the state of a VM in a resource group to Generalized.",
          "fullName": "vm generalize",
          "usage": "[options] <resource-group> <name>",
          "filePath": "commands/arm/vm/vm._js",
          "options": [
            {
              "flags": "-v, --verbose",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-v",
              "long": "--verbose",
              "description": "use verbose output"
            },
            {
              "flags": "-vv",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "-vv",
              "description": "more verbose with debug output"
            },
            {
              "flags": "--json",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--json",
              "description": "use json output"
            },
            {
              "flags": "-g, --resource-group <resource-group>",
              "required": -22,
              "optional": 0,
              "bool": true,
              "short": "-g",
              "long": "--resource-group",
              "description": "the resource group name"
            },
            {
              "flags": "-n, --name <name>",
              "required": -12,
              "optional": 0,
              "bool": true,
              "short": "-n",
              "long": "--name",
              "description": "the virtual machine name"
            },
            {
              "flags": "-s, --subscription <subscription>",
              "required": -20,
              "optional": 0,
              "bool": true,
              "short": "-s",
              "long": "--subscription",
              "description": "the subscription identifier"
            }
          ]
        },
        {
          "name": "get-instance-view",
          "description": "Get instance view of a VM in a resource group.",
          "fullName": "vm get-instance-view",
          "usage": "[options] <resource-group> <name>",
          "filePath": "commands/arm/vm/vm._js",
          "options": [
            {
              "flags": "-v, --verbose",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-v",
              "long": "--verbose",
              "description": "use verbose output"
            },
            {
              "flags": "-vv",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "-vv",
              "description": "more verbose with debug output"
            },
            {
              "flags": "--json",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--json",
              "description": "use json output"
            },
            {
              "flags": "-g, --resource-group <resource-group>",
              "required": -22,
              "optional": 0,
              "bool": true,
              "short": "-g",
              "long": "--resource-group",
              "description": "the resource group name"
            },
            {
              "flags": "-n, --name <name>",
              "required": -12,
              "optional": 0,
              "bool": true,
              "short": "-n",
              "long": "--name",
              "description": "the virtual machine name"
            },
            {
              "flags": "-s, --subscription <subscription>",
              "required": -20,
              "optional": 0,
              "bool": true,
              "short": "-s",
              "long": "--subscription",
              "description": "the subscription identifier"
            }
          ]
        },
        {
          "name": "get-serial-output",
          "description": "Get serial output of a VM in a resource group.",
          "fullName": "vm get-serial-output",
          "usage": "[options] <resource-group> <name>",
          "filePath": "commands/arm/vm/vm._js",
          "options": [
            {
              "flags": "-v, --verbose",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-v",
              "long": "--verbose",
              "description": "use verbose output"
            },
            {
              "flags": "-vv",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "-vv",
              "description": "more verbose with debug output"
            },
            {
              "flags": "--json",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--json",
              "description": "use json output"
            },
            {
              "flags": "-g, --resource-group <resource-group>",
              "required": -22,
              "optional": 0,
              "bool": true,
              "short": "-g",
              "long": "--resource-group",
              "description": "the resource group name"
            },
            {
              "flags": "-n, --name <name>",
              "required": -12,
              "optional": 0,
              "bool": true,
              "short": "-n",
              "long": "--name",
              "description": "the virtual machine name"
            },
            {
              "flags": "-s, --subscription <subscription>",
              "required": -20,
              "optional": 0,
              "bool": true,
              "short": "-s",
              "long": "--subscription",
              "description": "the subscription identifier"
            },
            {
              "flags": "--max-length <max-length>",
              "required": -14,
              "optional": 0,
              "bool": true,
              "long": "--max-length",
              "description": "the max number of characters shown in one page of log output"
            }
          ]
        },
        {
          "name": "reset-access",
          "description": "Enables you to reset Remote Desktop Access or SSH settings on a Virtual Machine and to reset the password for the account that has administrator or sudo authority.",
          "fullName": "vm reset-access",
          "usage": "[options] <resource-group> <name>",
          "filePath": "commands/arm/vm/vm._js",
          "options": [
            {
              "flags": "-v, --verbose",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-v",
              "long": "--verbose",
              "description": "use verbose output"
            },
            {
              "flags": "-vv",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "-vv",
              "description": "more verbose with debug output"
            },
            {
              "flags": "--json",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--json",
              "description": "use json output"
            },
            {
              "flags": "-g, --resource-group <resource-group>",
              "required": -22,
              "optional": 0,
              "bool": true,
              "short": "-g",
              "long": "--resource-group",
              "description": "the resource group name"
            },
            {
              "flags": "-n, --name <name>",
              "required": -12,
              "optional": 0,
              "bool": true,
              "short": "-n",
              "long": "--name",
              "description": "the virtual machine name"
            },
            {
              "flags": "-u, --user-name <user-name>",
              "required": -17,
              "optional": 0,
              "bool": true,
              "short": "-u",
              "long": "--user-name",
              "description": "the user name"
            },
            {
              "flags": "-p, --password <password>",
              "required": -16,
              "optional": 0,
              "bool": true,
              "short": "-p",
              "long": "--password",
              "description": "the password"
            },
            {
              "flags": "-M, --ssh-key-file <ssh-key-file>",
              "required": -20,
              "optional": 0,
              "bool": true,
              "short": "-M",
              "long": "--ssh-key-file",
              "description": "path to public key PEM file for SSH authentication (valid only when os-type is \"Linux\")"
            },
            {
              "flags": "-r, --reset-ssh",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-r",
              "long": "--reset-ssh",
              "description": "Reset the SSH configuration to default"
            },
            {
              "flags": "-E, --extension-version <version>",
              "required": -25,
              "optional": 0,
              "bool": true,
              "short": "-E",
              "long": "--extension-version",
              "description": "Version of VM Access extension [1.1]"
            },
            {
              "flags": "-e, --expiration <expiration>",
              "required": -18,
              "optional": 0,
              "bool": true,
              "short": "-e",
              "long": "--expiration",
              "description": "password expiration"
            },
            {
              "flags": "-R, --remove-user <remove-user-name>",
              "required": -19,
              "optional": 0,
              "bool": true,
              "short": "-R",
              "long": "--remove-user",
              "description": "Remove a user account with specified name"
            },
            {
              "flags": "-s, --subscription <subscription>",
              "required": -20,
              "optional": 0,
              "bool": true,
              "short": "-s",
              "long": "--subscription",
              "description": "the subscription identifier"
            }
          ]
        },
        {
          "name": "enable-aem",
          "description": "Enable Azure Enhanced Monitoring Extension on a VM in a resource group",
          "fullName": "vm enable-aem",
          "usage": "[options] <resource-group> <name>",
          "filePath": "commands/arm/vm/vm._js",
          "options": [
            {
              "flags": "-v, --verbose",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-v",
              "long": "--verbose",
              "description": "use verbose output"
            },
            {
              "flags": "-vv",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "-vv",
              "description": "more verbose with debug output"
            },
            {
              "flags": "--json",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--json",
              "description": "use json output"
            },
            {
              "flags": "-a, --diagnostic-storage-account-name <name>",
              "required": -39,
              "optional": 0,
              "bool": true,
              "short": "-a",
              "long": "--diagnostic-storage-account-name",
              "description": "storage account name"
            },
            {
              "flags": "-q, --quiet",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-q",
              "long": "--quiet",
              "description": "quite mode(do not ask for confirmation)"
            }
          ]
        },
        {
          "name": "set",
          "description": "Update a VM in a resource group.",
          "fullName": "vm set",
          "usage": "[options] <resource-group> <name>",
          "filePath": "commands/arm/vm/vm._js",
          "options": [
            {
              "flags": "-v, --verbose",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-v",
              "long": "--verbose",
              "description": "use verbose output"
            },
            {
              "flags": "-vv",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "-vv",
              "description": "more verbose with debug output"
            },
            {
              "flags": "--json",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--json",
              "description": "use json output"
            },
            {
              "flags": "-g, --resource-group <resource-group>",
              "required": -22,
              "optional": 0,
              "bool": true,
              "short": "-g",
              "long": "--resource-group",
              "description": "the resource group name"
            },
            {
              "flags": "-n, --name <name>",
              "required": -12,
              "optional": 0,
              "bool": true,
              "short": "-n",
              "long": "--name",
              "description": "the virtual machine name"
            },
            {
              "flags": "-I, --nic-ids <nic-ids>",
              "required": -15,
              "optional": 0,
              "bool": true,
              "short": "-I",
              "long": "--nic-ids",
              "description": "the list of NIC identifiers separated by comma. In case of specifying multiple nics first one will be set as primary."
            },
            {
              "flags": "-N, --nic-names <nic-names>",
              "required": -17,
              "optional": 0,
              "bool": true,
              "short": "-N",
              "long": "--nic-names",
              "description": "the list of NIC names separated by comma. In case of specifying multiple nics first one will be set as primary.These NICs must exists in the same resource group as the VM. Please use nic-ids if that not the case. This parameter will be ignored if --nic-ids is specified"
            },
            {
              "flags": "-z, --vm-size <vm-size>",
              "required": -15,
              "optional": 0,
              "bool": true,
              "short": "-z",
              "long": "--vm-size",
              "description": "the virtual machine size"
            },
            {
              "flags": "-t, --tags <tags>",
              "required": -12,
              "optional": 0,
              "bool": true,
              "short": "-t",
              "long": "--tags",
              "description": "Tags to set to the resource group. Can be multiple. In the format of 'name=value'. Name is required and value is optional. For example, -t tag1=value1;tag2"
            },
            {
              "flags": "-T, --no-tags",
              "required": 0,
              "optional": 0,
              "bool": false,
              "short": "-T",
              "long": "--no-tags",
              "description": "Remove all tags"
            },
            {
              "flags": "-s, --subscription <subscription>",
              "required": -20,
              "optional": 0,
              "bool": true,
              "short": "-s",
              "long": "--subscription",
              "description": "the subscription identifier"
            },
            {
              "flags": "--disable-boot-diagnostics",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--disable-boot-diagnostics",
              "description": "The switch parameter to disable the boot diagnostics for VM."
            },
            {
              "flags": "--enable-boot-diagnostics",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--enable-boot-diagnostics",
              "description": "The switch parameter to enable the boot diagnostics for VM."
            },
            {
              "flags": "--boot-diagnostics-storage-uri <boot-diagnostics-storage-uri>",
              "required": -32,
              "optional": 0,
              "bool": true,
              "long": "--boot-diagnostics-storage-uri",
              "description": "The storage account URL for boot diagnostics. In the format of 'https://your_stoage_account_name.blob.core.windows.net/'."
            }
          ]
        },
        {
          "name": "list-usage",
          "description": "Get usage of compute resources.",
          "fullName": "vm list-usage",
          "usage": "[options] <location>",
          "filePath": "commands/arm/vm/vm._js",
          "options": [
            {
              "flags": "-v, --verbose",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-v",
              "long": "--verbose",
              "description": "use verbose output"
            },
            {
              "flags": "-vv",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "-vv",
              "description": "more verbose with debug output"
            },
            {
              "flags": "--json",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--json",
              "description": "use json output"
            },
            {
              "flags": "-l, --location <location>",
              "required": -16,
              "optional": 0,
              "bool": true,
              "short": "-l",
              "long": "--location",
              "description": "the location"
            },
            {
              "flags": "-s, --subscription <subscription>",
              "required": -20,
              "optional": 0,
              "bool": true,
              "short": "-s",
              "long": "--subscription",
              "description": "the subscription identifier"
            }
          ]
        },
        {
          "name": "enable-diag",
          "description": "Enable diagnostics extension on a VM in a resource group.",
          "fullName": "vm enable-diag",
          "usage": "[options] <resource-group> <name>",
          "filePath": "commands/arm/vm/vm._js",
          "options": [
            {
              "flags": "-v, --verbose",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-v",
              "long": "--verbose",
              "description": "use verbose output"
            },
            {
              "flags": "-vv",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "-vv",
              "description": "more verbose with debug output"
            },
            {
              "flags": "--json",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--json",
              "description": "use json output"
            },
            {
              "flags": "-g, --resource-group <resource-group>",
              "required": -22,
              "optional": 0,
              "bool": true,
              "short": "-g",
              "long": "--resource-group",
              "description": "the resource group name"
            },
            {
              "flags": "-n, --name <name>",
              "required": -12,
              "optional": 0,
              "bool": true,
              "short": "-n",
              "long": "--name",
              "description": "the virtual machine name"
            },
            {
              "flags": "-a, --storage-account-name <name>",
              "required": -28,
              "optional": 0,
              "bool": true,
              "short": "-a",
              "long": "--storage-account-name",
              "description": "the storage account name"
            },
            {
              "flags": "-c, --config-file <path>",
              "required": -19,
              "optional": 0,
              "bool": true,
              "short": "-c",
              "long": "--config-file",
              "description": "path for WadCfg config file (collect basic metrics if not specified)"
            },
            {
              "flags": "-e, --extension-version <version>",
              "required": -25,
              "optional": 0,
              "bool": true,
              "short": "-e",
              "long": "--extension-version",
              "description": "Version of Diagnostics extension. Default values are [1.5] for Windows and [2.2] for Linux."
            },
            {
              "flags": "-s, --subscription <subscription>",
              "required": -20,
              "optional": 0,
              "bool": true,
              "short": "-s",
              "long": "--subscription",
              "description": "the subscription identifier"
            }
          ]
        },
        {
          "name": "enable-disk-encryption",
          "description": "Enable azure disk encryption on a VM in a resource group.",
          "fullName": "vm enable-disk-encryption",
          "usage": "[options] <resource-group> <name>",
          "filePath": "commands/arm/vm/vm._js",
          "options": [
            {
              "flags": "-v, --verbose",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-v",
              "long": "--verbose",
              "description": "use verbose output"
            },
            {
              "flags": "-vv",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "-vv",
              "description": "more verbose with debug output"
            },
            {
              "flags": "--json",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--json",
              "description": "use json output"
            },
            {
              "flags": "-g, --resource-group <resource-group>",
              "required": -22,
              "optional": 0,
              "bool": true,
              "short": "-g",
              "long": "--resource-group",
              "description": "the resource group name"
            },
            {
              "flags": "-n, --name <name>",
              "required": -12,
              "optional": 0,
              "bool": true,
              "short": "-n",
              "long": "--name",
              "description": "the virtual machine name"
            },
            {
              "flags": "-a, --aad-client-id <aad-client-id>",
              "required": -21,
              "optional": 0,
              "bool": true,
              "short": "-a",
              "long": "--aad-client-id",
              "description": "Client ID of AAD app with permissions to write secrets to KeyVault"
            },
            {
              "flags": "-p, --aad-client-secret <aad-client-secret>",
              "required": -25,
              "optional": 0,
              "bool": true,
              "short": "-p",
              "long": "--aad-client-secret",
              "description": "Client Secret of AAD app with permissions to write secrets to KeyVault"
            },
            {
              "flags": "-c, --aad-client-cert-thumbprint <aad-client-cert-thumbprint>",
              "required": -34,
              "optional": 0,
              "bool": true,
              "short": "-c",
              "long": "--aad-client-cert-thumbprint",
              "description": "Thumbprint of AAD app certificate with permissions to write secrets to KeyVault"
            },
            {
              "flags": "-k, --disk-encryption-key-vault-url <disk-encryption-key-vault-url>",
              "required": -37,
              "optional": 0,
              "bool": true,
              "short": "-k",
              "long": "--disk-encryption-key-vault-url",
              "description": "URL of the KeyVault where generated encryption key will be placed to"
            },
            {
              "flags": "-r, --disk-encryption-key-vault-id <disk-encryption-key-vault-id>",
              "required": -36,
              "optional": 0,
              "bool": true,
              "short": "-r",
              "long": "--disk-encryption-key-vault-id",
              "description": "ResourceID of the KeyVault where generated encryption key will be placed to"
            },
            {
              "flags": "-u, --key-encryption-key-url <key-encryption-key-url>",
              "required": -30,
              "optional": 0,
              "bool": true,
              "short": "-u",
              "long": "--key-encryption-key-url",
              "description": "Versioned KeyVault URL of the KeyEncryptionKey used to encrypt the disk encryption key"
            },
            {
              "flags": "-i, --key-encryption-key-vault-id <key-encryption-key-vault-id>",
              "required": -35,
              "optional": 0,
              "bool": true,
              "short": "-i",
              "long": "--key-encryption-key-vault-id",
              "description": "ResourceID of the KeyVault containing the KeyEncryptionKey used to encrypt the disk encryption key"
            },
            {
              "flags": "-l, --key-encryption-algorithm <key-encryption-algorithm>",
              "required": -32,
              "optional": 0,
              "bool": true,
              "short": "-l",
              "long": "--key-encryption-algorithm",
              "description": "KeyEncryption Algorithm used to encrypt the volume encryption key"
            },
            {
              "flags": "-t, --volume-type <volume-type>",
              "required": -19,
              "optional": 0,
              "bool": true,
              "short": "-t",
              "long": "--volume-type",
              "description": "Type of the volume OS or Data or All to perform encryption operation"
            },
            {
              "flags": "-x, --sequence-version <sequence-version>",
              "required": -24,
              "optional": 0,
              "bool": true,
              "short": "-x",
              "long": "--sequence-version",
              "description": "Sequence version of encryption operation. This must be incremented to perform repeated encryption operations on the same VM"
            },
            {
              "flags": "-q, --quiet",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-q",
              "long": "--quiet",
              "description": "quiet mode, do not ask for confirmation"
            },
            {
              "flags": "-e, --extension-version <extension-version>",
              "required": -25,
              "optional": 0,
              "bool": true,
              "short": "-e",
              "long": "--extension-version",
              "description": "Version of Diagnostics extension. Default values are [1.0] for Windows"
            },
            {
              "flags": "-s, --subscription <subscription>",
              "required": -20,
              "optional": 0,
              "bool": true,
              "short": "-s",
              "long": "--subscription",
              "description": "the subscription identifier"
            }
          ]
        },
        {
          "name": "show-disk-encryption-status",
          "description": "Show azure disk encryption status of a VM in a resource group.",
          "fullName": "vm show-disk-encryption-status",
          "usage": "[options] <resource-group> <name>",
          "filePath": "commands/arm/vm/vm._js",
          "options": [
            {
              "flags": "-v, --verbose",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-v",
              "long": "--verbose",
              "description": "use verbose output"
            },
            {
              "flags": "-vv",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "-vv",
              "description": "more verbose with debug output"
            },
            {
              "flags": "--json",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--json",
              "description": "use json output"
            },
            {
              "flags": "-g, --resource-group <resource-group>",
              "required": -22,
              "optional": 0,
              "bool": true,
              "short": "-g",
              "long": "--resource-group",
              "description": "the resource group name"
            },
            {
              "flags": "-n, --name <name>",
              "required": -12,
              "optional": 0,
              "bool": true,
              "short": "-n",
              "long": "--name",
              "description": "the virtual machine name"
            },
            {
              "flags": "-s, --subscription <subscription>",
              "required": -20,
              "optional": 0,
              "bool": true,
              "short": "-s",
              "long": "--subscription",
              "description": "the subscription identifier"
            }
          ]
        }
      ],
      "categories": {
        "disk": {
          "name": "disk",
          "description": "Commands to manage your Virtual Machine data disks",
          "fullName": "vm disk",
          "usage": "[options] [command]",
          "options": [],
          "commands": [
            {
              "name": "attach-new",
              "description": "Attach a new data-disk to a VM in a resource group",
              "fullName": "vm disk attach-new",
              "usage": "[options] <resource-group> <vm-name> <size-in-gb> [vhd-name]",
              "filePath": "commands/arm/vm/vm._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "-g, --resource-group <resource-group>",
                  "required": -22,
                  "optional": 0,
                  "bool": true,
                  "short": "-g",
                  "long": "--resource-group",
                  "description": "the resource group name"
                },
                {
                  "flags": "-n, --vm-name <vm-name>",
                  "required": -15,
                  "optional": 0,
                  "bool": true,
                  "short": "-n",
                  "long": "--vm-name",
                  "description": "the virtual machine name"
                },
                {
                  "flags": "-z, --size-in-gb <size-in-gb>",
                  "required": -18,
                  "optional": 0,
                  "bool": true,
                  "short": "-z",
                  "long": "--size-in-gb",
                  "description": "the disk size in GB"
                },
                {
                  "flags": "-d, --vhd-name <vhd-name>",
                  "required": -16,
                  "optional": 0,
                  "bool": true,
                  "short": "-d",
                  "long": "--vhd-name",
                  "description": "the name for the new VHD"
                },
                {
                  "flags": "-c, --host-caching <name>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "short": "-c",
                  "long": "--host-caching",
                  "description": "the caching behaviour of disk [None, ReadOnly, ReadWrite]"
                },
                {
                  "flags": "-o, --storage-account-name <storageAccountName>",
                  "required": -28,
                  "optional": 0,
                  "bool": true,
                  "short": "-o",
                  "long": "--storage-account-name",
                  "description": "the storage account name"
                },
                {
                  "flags": "-r, --storage-account-container-name <storageAccountContainerName>",
                  "required": -38,
                  "optional": 0,
                  "bool": true,
                  "short": "-r",
                  "long": "--storage-account-container-name",
                  "description": "the storage account container name [vhds]"
                },
                {
                  "flags": "-l, --lun <lun>",
                  "required": -11,
                  "optional": 0,
                  "bool": true,
                  "short": "-l",
                  "long": "--lun",
                  "description": "zero based logical unit number of the data disk"
                },
                {
                  "flags": "-s, --subscription <id>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "short": "-s",
                  "long": "--subscription",
                  "description": "the subscription id"
                }
              ]
            },
            {
              "name": "detach",
              "description": "Detach a data-disk attached to a VM in a resource group",
              "fullName": "vm disk detach",
              "usage": "[options] <resource-group> <vm-name> <lun>",
              "filePath": "commands/arm/vm/vm._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "-g, --resource-group <resource-group>",
                  "required": -22,
                  "optional": 0,
                  "bool": true,
                  "short": "-g",
                  "long": "--resource-group",
                  "description": "the resource group name"
                },
                {
                  "flags": "-n, --vm-name <vm-name>",
                  "required": -15,
                  "optional": 0,
                  "bool": true,
                  "short": "-n",
                  "long": "--vm-name",
                  "description": "the virtual machine name"
                },
                {
                  "flags": "-l, --lun <lun>",
                  "required": -11,
                  "optional": 0,
                  "bool": true,
                  "short": "-l",
                  "long": "--lun",
                  "description": "the data disk lun"
                },
                {
                  "flags": "-s, --subscription <id>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "short": "-s",
                  "long": "--subscription",
                  "description": "the subscription id"
                }
              ]
            },
            {
              "name": "attach",
              "description": "Attach a new data-disk to a VM in a resource group",
              "fullName": "vm disk attach",
              "usage": "[options] <resource-group> <vm-name> [vhd-url]",
              "filePath": "commands/arm/vm/vm._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "-g, --resource-group <resource-group>",
                  "required": -22,
                  "optional": 0,
                  "bool": true,
                  "short": "-g",
                  "long": "--resource-group",
                  "description": "the resource group name"
                },
                {
                  "flags": "-n, --vm-name <vm-name>",
                  "required": -15,
                  "optional": 0,
                  "bool": true,
                  "short": "-n",
                  "long": "--vm-name",
                  "description": "the virtual machine name"
                },
                {
                  "flags": "-d, --vhd-url <vhd-url>",
                  "required": -15,
                  "optional": 0,
                  "bool": true,
                  "short": "-d",
                  "long": "--vhd-url",
                  "description": "the URL of existing VHD"
                },
                {
                  "flags": "-c, --host-caching <name>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "short": "-c",
                  "long": "--host-caching",
                  "description": "the caching behaviour of disk [None, ReadOnly, ReadWrite]"
                },
                {
                  "flags": "-l, --lun <lun>",
                  "required": -11,
                  "optional": 0,
                  "bool": true,
                  "short": "-l",
                  "long": "--lun",
                  "description": "zero based logical unit number of the data disk"
                },
                {
                  "flags": "-s, --subscription <id>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "short": "-s",
                  "long": "--subscription",
                  "description": "the subscription id"
                }
              ]
            },
            {
              "name": "list",
              "description": "Get all data disks of a VM in a resource group",
              "fullName": "vm disk list",
              "usage": "[options] <resource-group> <vm-name>",
              "filePath": "commands/arm/vm/vm._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "-g, --resource-group <resource-group>",
                  "required": -22,
                  "optional": 0,
                  "bool": true,
                  "short": "-g",
                  "long": "--resource-group",
                  "description": "the resource group name"
                },
                {
                  "flags": "-n, --vm-name <vm-name>",
                  "required": -15,
                  "optional": 0,
                  "bool": true,
                  "short": "-n",
                  "long": "--vm-name",
                  "description": "the virtual machine name"
                },
                {
                  "flags": "-s, --subscription <id>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "short": "-s",
                  "long": "--subscription",
                  "description": "the subscription id"
                }
              ]
            }
          ],
          "categories": {}
        },
        "extension": {
          "name": "extension",
          "description": "Commands to manage VM resource extensions",
          "fullName": "vm extension",
          "usage": "[options] [command]",
          "options": [],
          "commands": [
            {
              "name": "set",
              "description": "Enable/disable resource extensions for a VM in a resource group",
              "fullName": "vm extension set",
              "usage": "[options] <resource-group> <vm-name> <name> <publisher-name> <version>",
              "filePath": "commands/arm/vm/vm._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "-g, --resource-group <resource-group>",
                  "required": -22,
                  "optional": 0,
                  "bool": true,
                  "short": "-g",
                  "long": "--resource-group",
                  "description": "the resource group name"
                },
                {
                  "flags": "-m, --vm-name <vm-name>",
                  "required": -15,
                  "optional": 0,
                  "bool": true,
                  "short": "-m",
                  "long": "--vm-name",
                  "description": "the virtual machine name"
                },
                {
                  "flags": "-n, --name <name>",
                  "required": -12,
                  "optional": 0,
                  "bool": true,
                  "short": "-n",
                  "long": "--name",
                  "description": "the extension name"
                },
                {
                  "flags": "-p, --publisher-name <publisher-name>",
                  "required": -22,
                  "optional": 0,
                  "bool": true,
                  "short": "-p",
                  "long": "--publisher-name",
                  "description": "the publisher name"
                },
                {
                  "flags": "-o, --version <version>",
                  "required": -15,
                  "optional": 0,
                  "bool": true,
                  "short": "-o",
                  "long": "--version",
                  "description": "the extension version"
                },
                {
                  "flags": "-r, --reference-name <reference-name>",
                  "required": -22,
                  "optional": 0,
                  "bool": true,
                  "short": "-r",
                  "long": "--reference-name",
                  "description": "extension's reference name"
                },
                {
                  "flags": "-i, --public-config <public-config>",
                  "required": -21,
                  "optional": 0,
                  "bool": true,
                  "short": "-i",
                  "long": "--public-config",
                  "description": "public configuration text"
                },
                {
                  "flags": "-c, --public-config-path <public-config-path>",
                  "required": -26,
                  "optional": 0,
                  "bool": true,
                  "short": "-c",
                  "long": "--public-config-path",
                  "description": "public configuration file path"
                },
                {
                  "flags": "-f, --private-config <private-config>",
                  "required": -22,
                  "optional": 0,
                  "bool": true,
                  "short": "-f",
                  "long": "--private-config",
                  "description": "private configuration text"
                },
                {
                  "flags": "-e, --private-config-path <private-config-path>",
                  "required": -27,
                  "optional": 0,
                  "bool": true,
                  "short": "-e",
                  "long": "--private-config-path",
                  "description": "private configuration file path"
                },
                {
                  "flags": "-u, --uninstall",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-u",
                  "long": "--uninstall",
                  "description": "uninstall extension"
                },
                {
                  "flags": "-t, --tags <tags>",
                  "required": -12,
                  "optional": 0,
                  "bool": true,
                  "short": "-t",
                  "long": "--tags",
                  "description": "Tags to set to the resource group. Can be mutliple. In the format of 'name=value'. Name is required and value is optional. For example, -t tag1=value1;tag2"
                },
                {
                  "flags": "-q, --quiet",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-q",
                  "long": "--quiet",
                  "description": "quiet mode, do not ask for uninstall confirmation"
                },
                {
                  "flags": "-s, --subscription <id>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "short": "-s",
                  "long": "--subscription",
                  "description": "the subscription id"
                }
              ]
            },
            {
              "name": "set-chef",
              "description": "Enable/disable chef extension for a VM in a resource group",
              "fullName": "vm extension set-chef",
              "usage": "[options] <resource-group> <vm-name> ",
              "filePath": "commands/arm/vm/vm._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "-g, --resource-group <resource-group>",
                  "required": -22,
                  "optional": 0,
                  "bool": true,
                  "short": "-g",
                  "long": "--resource-group",
                  "description": "the resource group name"
                },
                {
                  "flags": "-m, --vm-name <vm-name>",
                  "required": -15,
                  "optional": 0,
                  "bool": true,
                  "short": "-m",
                  "long": "--vm-name",
                  "description": "the virtual machine name"
                },
                {
                  "flags": "-o, --version <version>",
                  "required": -15,
                  "optional": 0,
                  "bool": true,
                  "short": "-o",
                  "long": "--version",
                  "description": "the extension version"
                },
                {
                  "flags": "-R, --run-list <run-list>",
                  "required": -16,
                  "optional": 0,
                  "bool": true,
                  "short": "-R",
                  "long": "--run-list",
                  "description": "Runlist of roles/recipes to apply to VM"
                },
                {
                  "flags": "-O, --validation-pem <validation-pem>",
                  "required": -22,
                  "optional": 0,
                  "bool": true,
                  "short": "-O",
                  "long": "--validation-pem",
                  "description": "chef validation pem file path. Not required if -C or --client-pem option specified"
                },
                {
                  "flags": "-c, --client-config <client-config>",
                  "required": -21,
                  "optional": 0,
                  "bool": true,
                  "short": "-c",
                  "long": "--client-config",
                  "description": "chef client configuration file(i.e client.rb) path"
                },
                {
                  "flags": "-C, --client-pem <client-pem>",
                  "required": -18,
                  "optional": 0,
                  "bool": true,
                  "short": "-C",
                  "long": "--client-pem",
                  "description": "chef client pem file path i.e required in validator less bootstrap"
                },
                {
                  "flags": "-a, --auto-update-client",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-a",
                  "long": "--auto-update-client",
                  "description": "auto update chef client"
                },
                {
                  "flags": "-j, --bootstrap-options <bootstrap-json-attribute>",
                  "required": -25,
                  "optional": 0,
                  "bool": true,
                  "short": "-j",
                  "long": "--bootstrap-options",
                  "description": "Bootstrap options in JSON format. Ex: -j '{\"chef_node_name\":\"test_node\"}'"
                },
                {
                  "flags": "-D, --delete-chef-config",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-D",
                  "long": "--delete-chef-config",
                  "description": "delete chef config files during update/uninstall extension"
                },
                {
                  "flags": "-u, --uninstall",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-u",
                  "long": "--uninstall",
                  "description": "uninstall extension"
                },
                {
                  "flags": "-t, --tags <tags>",
                  "required": -12,
                  "optional": 0,
                  "bool": true,
                  "short": "-t",
                  "long": "--tags",
                  "description": "Tags to set to the resource group. Can be multiple. In the format of 'name=value'. Name is required and value is optional. For example, -t tag1=value1;tag2"
                },
                {
                  "flags": "-q, --quiet",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-q",
                  "long": "--quiet",
                  "description": "quiet mode, do not ask for uninstall confirmation"
                },
                {
                  "flags": "-s, --subscription <id>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "short": "-s",
                  "long": "--subscription",
                  "description": "the subscription id"
                }
              ]
            },
            {
              "name": "get",
              "description": "Get extensions installed on a virtual machine in a resource group",
              "fullName": "vm extension get",
              "usage": "[options] <resource-group> <vm-name>",
              "filePath": "commands/arm/vm/vm._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "-g, --resource-group <resource-group>",
                  "required": -22,
                  "optional": 0,
                  "bool": true,
                  "short": "-g",
                  "long": "--resource-group",
                  "description": "the resource group name"
                },
                {
                  "flags": "-m, --vm-name <vm-name>",
                  "required": -15,
                  "optional": 0,
                  "bool": true,
                  "short": "-m",
                  "long": "--vm-name",
                  "description": "the virtual machine name"
                },
                {
                  "flags": "-s, --subscription <id>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "short": "-s",
                  "long": "--subscription",
                  "description": "the subscription id"
                }
              ]
            },
            {
              "name": "get-chef",
              "description": "Get chef extension installed on a virtual machine in a resource group",
              "fullName": "vm extension get-chef",
              "usage": "[options] <resource-group> <vm-name>",
              "filePath": "commands/arm/vm/vm._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "-g, --resource-group <resource-group>",
                  "required": -22,
                  "optional": 0,
                  "bool": true,
                  "short": "-g",
                  "long": "--resource-group",
                  "description": "the resource group name"
                },
                {
                  "flags": "-m, --vm-name <vm-name>",
                  "required": -15,
                  "optional": 0,
                  "bool": true,
                  "short": "-m",
                  "long": "--vm-name",
                  "description": "the virtual machine name"
                },
                {
                  "flags": "-s, --subscription <id>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "short": "-s",
                  "long": "--subscription",
                  "description": "the subscription id"
                }
              ]
            }
          ],
          "categories": {}
        },
        "extension-image": {
          "name": "extension-image",
          "description": "Commands to query available VM resource extensions",
          "fullName": "vm extension-image",
          "usage": "[options] [command]",
          "options": [],
          "commands": [
            {
              "name": "list-publishers",
              "description": "Lists virtual machine/extension image publishers",
              "fullName": "vm extension-image list-publishers",
              "usage": "[options] <location>",
              "filePath": "commands/arm/vm/vm._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "-l, --location <location>",
                  "required": -16,
                  "optional": 0,
                  "bool": true,
                  "short": "-l",
                  "long": "--location",
                  "description": "the location"
                },
                {
                  "flags": "-s, --subscription <subscription>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "short": "-s",
                  "long": "--subscription",
                  "description": "the subscription identifier"
                }
              ]
            },
            {
              "name": "list-types",
              "description": "Lists virtual machine extension image types by a publisher",
              "fullName": "vm extension-image list-types",
              "usage": "[options] <location> <publisher>",
              "filePath": "commands/arm/vm/vm._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "-l, --location <location>",
                  "required": -16,
                  "optional": 0,
                  "bool": true,
                  "short": "-l",
                  "long": "--location",
                  "description": "the location"
                },
                {
                  "flags": "-p, --publisher <publisher>",
                  "required": -17,
                  "optional": 0,
                  "bool": true,
                  "short": "-p",
                  "long": "--publisher",
                  "description": "the publisher name"
                },
                {
                  "flags": "-s, --subscription <subscription>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "short": "-s",
                  "long": "--subscription",
                  "description": "the subscription identifier"
                }
              ]
            },
            {
              "name": "list-versions",
              "description": "Lists virtual machine extension image versions by publisher and type input",
              "fullName": "vm extension-image list-versions",
              "usage": "[options] <location> <publisher> <typeName>",
              "filePath": "commands/arm/vm/vm._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "-l, --location <location>",
                  "required": -16,
                  "optional": 0,
                  "bool": true,
                  "short": "-l",
                  "long": "--location",
                  "description": "the location"
                },
                {
                  "flags": "-p, --publisher <publisher>",
                  "required": -17,
                  "optional": 0,
                  "bool": true,
                  "short": "-p",
                  "long": "--publisher",
                  "description": "the publisher name"
                },
                {
                  "flags": "-t, --typeName <typeName>",
                  "required": -16,
                  "optional": 0,
                  "bool": true,
                  "short": "-t",
                  "long": "--typeName",
                  "description": "the type name"
                },
                {
                  "flags": "-s, --subscription <subscription>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "short": "-s",
                  "long": "--subscription",
                  "description": "the subscription identifier"
                }
              ]
            },
            {
              "name": "list",
              "description": "Lists virtual machine extension images by publisher, and type input",
              "fullName": "vm extension-image list",
              "usage": "[options] <location> <publisher> <typeName>",
              "filePath": "commands/arm/vm/vm._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "-l, --location <location>",
                  "required": -16,
                  "optional": 0,
                  "bool": true,
                  "short": "-l",
                  "long": "--location",
                  "description": "the location"
                },
                {
                  "flags": "-p, --publisher <publisher>",
                  "required": -17,
                  "optional": 0,
                  "bool": true,
                  "short": "-p",
                  "long": "--publisher",
                  "description": "the publisher name"
                },
                {
                  "flags": "-t, --typeName <typeName>",
                  "required": -16,
                  "optional": 0,
                  "bool": true,
                  "short": "-t",
                  "long": "--typeName",
                  "description": "the type name"
                },
                {
                  "flags": "-s, --subscription <subscription>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "short": "-s",
                  "long": "--subscription",
                  "description": "the subscription identifier"
                }
              ]
            },
            {
              "name": "show",
              "description": "Lists virtual machine extension image versions by publisher, type and version input",
              "fullName": "vm extension-image show",
              "usage": "[options] <location> <publisher> <typeName> <version>",
              "filePath": "commands/arm/vm/vm._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "-l, --location <location>",
                  "required": -16,
                  "optional": 0,
                  "bool": true,
                  "short": "-l",
                  "long": "--location",
                  "description": "the location"
                },
                {
                  "flags": "-p, --publisher <publisher>",
                  "required": -17,
                  "optional": 0,
                  "bool": true,
                  "short": "-p",
                  "long": "--publisher",
                  "description": "the publisher name"
                },
                {
                  "flags": "-t, --typeName <typeName>",
                  "required": -16,
                  "optional": 0,
                  "bool": true,
                  "short": "-t",
                  "long": "--typeName",
                  "description": "the type name"
                },
                {
                  "flags": "-v, --version <version>",
                  "required": -15,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--version",
                  "description": "the version"
                },
                {
                  "flags": "-s, --subscription <subscription>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "short": "-s",
                  "long": "--subscription",
                  "description": "the subscription identifier"
                }
              ]
            }
          ],
          "categories": {}
        },
        "docker": {
          "name": "docker",
          "description": "Commands to manage your Docker Virtual Machine",
          "fullName": "vm docker",
          "usage": "[options] [command]",
          "options": [],
          "commands": [
            {
              "name": "create",
              "description": "Create a Docker virtual machine in a resource group",
              "fullName": "vm docker create",
              "usage": "[options] <resource-group> <name> <location> <os-type>",
              "filePath": "commands/arm/vm/vm._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "-g, --resource-group <resource-group>",
                  "required": -22,
                  "optional": 0,
                  "bool": true,
                  "short": "-g",
                  "long": "--resource-group",
                  "description": "the name of the resource group"
                },
                {
                  "flags": "-n, --name <name>",
                  "required": -12,
                  "optional": 0,
                  "bool": true,
                  "short": "-n",
                  "long": "--name",
                  "description": "the virtual machine name"
                },
                {
                  "flags": "-T, --docker-port <port>",
                  "required": -19,
                  "optional": 0,
                  "bool": true,
                  "short": "-T",
                  "long": "--docker-port",
                  "description": "Port to use for docker [2376]"
                },
                {
                  "flags": "-O, --docker-cert-dir <dir>",
                  "required": -23,
                  "optional": 0,
                  "bool": true,
                  "short": "-O",
                  "long": "--docker-cert-dir",
                  "description": "Directory containing docker certs [~/.docker/]"
                },
                {
                  "flags": "-E, --docker-extension-version <version>",
                  "required": -32,
                  "optional": 0,
                  "bool": true,
                  "short": "-E",
                  "long": "--docker-extension-version",
                  "description": "Version of Docker Azure extension [1.0]"
                },
                {
                  "flags": "-c, --docker-cert-cn [CN]",
                  "required": 0,
                  "optional": -22,
                  "bool": true,
                  "short": "-c",
                  "long": "--docker-cert-cn",
                  "description": "Docker server certificate's CN. Can be set if you are using --tlsverify option for Docker connections. Default value is [*]"
                },
                {
                  "flags": "-D, --nic-id <nic-id>",
                  "required": -14,
                  "optional": 0,
                  "bool": true,
                  "short": "-D",
                  "long": "--nic-id",
                  "description": "the NIC identifier\n     e.g. /subscriptions/<subscriptipn-id>/resourceGroups/<resource-group-name>/providers/Microsoft.Network/networkInterfaces/<nic-name>"
                },
                {
                  "flags": "-f, --nic-name <nic-name>",
                  "required": -16,
                  "optional": 0,
                  "bool": true,
                  "short": "-f",
                  "long": "--nic-name",
                  "description": "the NIC name\n     If this is an existing NIC then it must exists under the current resource group identified by resource-group\n     A new NIC will be created if no NIC exists with name nic-name in the current resource group\n     To create new NIC - subnet-id or vnet-name, vnet-address-prefix, subnet-name and vnet-subnet-address-prefix are required\n     Please use nic-id to refer an existing NIC in a different resource group\n     The parameter nic-name will be ignored when nic-id is specified"
                },
                {
                  "flags": "-I, --nic-ids <nic-ids>",
                  "required": -15,
                  "optional": 0,
                  "bool": true,
                  "short": "-I",
                  "long": "--nic-ids",
                  "description": "the list of NIC identifiers separated by comma. In case of specifying multiple nics first one will be set as primary."
                },
                {
                  "flags": "-N, --nic-names <nic-names>",
                  "required": -17,
                  "optional": 0,
                  "bool": true,
                  "short": "-N",
                  "long": "--nic-names",
                  "description": "the list of NIC names separated by comma. In case of specifying multiple nics first one will be set as primary.These NICs must exists in the same resource group as the VM. Please use nic-ids if that not the case. This parameter will be ignored if --nic-ids is specified"
                },
                {
                  "flags": "-l, --location <location>",
                  "required": -16,
                  "optional": 0,
                  "bool": true,
                  "short": "-l",
                  "long": "--location",
                  "description": "the location"
                },
                {
                  "flags": "-y, --os-type <os-type>",
                  "required": -15,
                  "optional": 0,
                  "bool": true,
                  "short": "-y",
                  "long": "--os-type",
                  "description": "the operating system Type, valid values are Windows, Linux"
                },
                {
                  "flags": "-Q, --image-urn <image-urn>",
                  "required": -17,
                  "optional": 0,
                  "bool": true,
                  "short": "-Q",
                  "long": "--image-urn",
                  "description": "the image URN in the form publisherName:offer:skus:version"
                },
                {
                  "flags": "-u, --admin-username <admin-username>",
                  "required": -22,
                  "optional": 0,
                  "bool": true,
                  "short": "-u",
                  "long": "--admin-username",
                  "description": "the user name\n      This parameter is valid for a VM created from an image (image-urn) and ignored when VM is based on disk (os-disk-*)"
                },
                {
                  "flags": "-p, --admin-password <admin-password>",
                  "required": -22,
                  "optional": 0,
                  "bool": true,
                  "short": "-p",
                  "long": "--admin-password",
                  "description": "the password\n      This parameter is valid for a VM created from an image (image-urn) and ignored when VM is based on disk (os-disk-*)"
                },
                {
                  "flags": "-M, --ssh-publickey-file <openssh-rsa-file|pem-file>",
                  "required": -26,
                  "optional": 0,
                  "bool": true,
                  "short": "-M",
                  "long": "--ssh-publickey-file",
                  "description": "path to public key PEM file or SSH Public key file for SSH authentication\n     This parameter is valid only when os-type is \"Linux\""
                },
                {
                  "flags": "-G, --generate-ssh-keys",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-G",
                  "long": "--generate-ssh-keys",
                  "description": "Auto generate SSH keys, --ssh-publickey-file will be ignored. This parameter is valid only when os-type is \"Linux\""
                },
                {
                  "flags": "-z, --vm-size <vm-size>",
                  "required": -15,
                  "optional": 0,
                  "bool": true,
                  "short": "-z",
                  "long": "--vm-size",
                  "description": "the virtual machine size [Standard_A1]"
                },
                {
                  "flags": "-U, --public-ip-id <public-ip-id>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "short": "-U",
                  "long": "--public-ip-id",
                  "description": "the public ip identifier\n     e.g. /subscriptions/<subscriptipn-id>/resourceGroups/<resource-group-name>/providers/Microsoft.Network/publicIPAddresses/<public-ip-name>"
                },
                {
                  "flags": "-i, --public-ip-name <public-ip-name>",
                  "required": -22,
                  "optional": 0,
                  "bool": true,
                  "short": "-i",
                  "long": "--public-ip-name",
                  "description": "the public ip name\n     If this is an existing public IP then it must exists under the current resource group identified by resource-group\n     A new public IP will be created if no public IP exists with name public-ip-name in the current resource group\n     Please use public-ip-id to refer an existing public IP in a different resource group\n     The parameter public-ip-name will be ignored when public-ip-id is specified"
                },
                {
                  "flags": "-w, --public-ip-domain-name <public-ip-domain-name>",
                  "required": -29,
                  "optional": 0,
                  "bool": true,
                  "short": "-w",
                  "long": "--public-ip-domain-name",
                  "description": "the public ip domain name\n     This sets the DNS to <publicip-domain-name>.<location>.cloudapp.azure.com\n     This parameter will be used only when creating new public IP"
                },
                {
                  "flags": "-m, --public-ip-allocationmethod <public-ip-allocationmethod>",
                  "required": -34,
                  "optional": 0,
                  "bool": true,
                  "short": "-m",
                  "long": "--public-ip-allocationmethod",
                  "description": "the public ip allocation method, valid values are \"Dynamic\"\n     This parameter will be used only when creating new public IP"
                },
                {
                  "flags": "-t, --public-ip-idletimeout <public-ip-idletimeout>",
                  "required": -29,
                  "optional": 0,
                  "bool": true,
                  "short": "-t",
                  "long": "--public-ip-idletimeout",
                  "description": "the public ip idle timeout specified in minutes\n     This parameter will be used only when creating new public IP"
                },
                {
                  "flags": "-S, --subnet-id <subnet-id>",
                  "required": -17,
                  "optional": 0,
                  "bool": true,
                  "short": "-S",
                  "long": "--subnet-id",
                  "description": "the subnet identifier\n     e.g. /subscriptions/<subscriptipn-id>/resourceGroups/<resource-group-name>/providers/Microsoft.Network/virtualNetworks/<vnet-name>/subnets/<subnet-name>"
                },
                {
                  "flags": "-F, --vnet-name <vnet-name>",
                  "required": -17,
                  "optional": 0,
                  "bool": true,
                  "short": "-F",
                  "long": "--vnet-name",
                  "description": "the virtual network name\n     If this is an existing vnet then it must exists under the current resource group identified by resource-group\n     If this is an existing vnet then vnet-subnet-name is required\n          If no subnet exists with name vnet-subnet-name then a new subnet will be created\n          To create new subnet vnet-subnet-address-prefix is required\n     A new vnet will be created if no vnet exists with name vnet-name in the current resource group\n     To create new vnet, vnet-address-prefix, vnet-subnet-name and vnet-subnet-address-prefix are required\n     Please use subnet-id to refer an existing subnet under a vnet in a different resource group\n     vnet-name, vnet-address-prefix, vnet-subnet-name and vnet-subnet-address-prefix will be ignored when subnet-id is specified"
                },
                {
                  "flags": "-P, --vnet-address-prefix <vnet-address-prefix>",
                  "required": -27,
                  "optional": 0,
                  "bool": true,
                  "short": "-P",
                  "long": "--vnet-address-prefix",
                  "description": "the virtual network address prefix in IPv4/CIDR format"
                },
                {
                  "flags": "-j, --vnet-subnet-name <vnet-subnet-name>",
                  "required": -24,
                  "optional": 0,
                  "bool": true,
                  "short": "-j",
                  "long": "--vnet-subnet-name",
                  "description": "the virtual network subnet name"
                },
                {
                  "flags": "-k, --vnet-subnet-address-prefix <vnet-subnet-address-prefix>",
                  "required": -34,
                  "optional": 0,
                  "bool": true,
                  "short": "-k",
                  "long": "--vnet-subnet-address-prefix",
                  "description": "the virtual network subnet address prefix in IPv4/CIDR format"
                },
                {
                  "flags": "-r, --availset-name <availset-name>",
                  "required": -21,
                  "optional": 0,
                  "bool": true,
                  "short": "-r",
                  "long": "--availset-name",
                  "description": "the availability set name"
                },
                {
                  "flags": "-o, --storage-account-name <storage-account-name>",
                  "required": -28,
                  "optional": 0,
                  "bool": true,
                  "short": "-o",
                  "long": "--storage-account-name",
                  "description": "the storage account name"
                },
                {
                  "flags": "-R, --storage-account-container-name <storage-account-container-name>",
                  "required": -38,
                  "optional": 0,
                  "bool": true,
                  "short": "-R",
                  "long": "--storage-account-container-name",
                  "description": "the storage account container name [vhds]"
                },
                {
                  "flags": "-d, --os-disk-vhd <os-disk-vhd>",
                  "required": -19,
                  "optional": 0,
                  "bool": true,
                  "short": "-d",
                  "long": "--os-disk-vhd",
                  "description": "name or url of the OS disk Vhd\n     If this parameter is specified along with --image-urn parameter then OS disk created from the image will be stored in this vhd\n     If this parameter is specified without --image-urn parameter then this vhd must exists and will be used as OS Disk"
                },
                {
                  "flags": "-a, --data-disk-caching <data-disk-caching>",
                  "required": -25,
                  "optional": 0,
                  "bool": true,
                  "short": "-a",
                  "long": "--data-disk-caching",
                  "description": "data disk caching, valid values are None, ReadOnly, ReadWrite"
                },
                {
                  "flags": "-x, --data-disk-vhd <data-disk-vhd>",
                  "required": -21,
                  "optional": 0,
                  "bool": true,
                  "short": "-x",
                  "long": "--data-disk-vhd",
                  "description": "name or url of the data disk Vhd"
                },
                {
                  "flags": "-e, --data-disk-size <data-disk-size>",
                  "required": -22,
                  "optional": 0,
                  "bool": true,
                  "short": "-e",
                  "long": "--data-disk-size",
                  "description": "data disk size in GB"
                },
                {
                  "flags": "-Y, --data-disk-existing",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-Y",
                  "long": "--data-disk-existing",
                  "description": "Will use existing VHD if specified. Don't specify this param if you are creating data disk from a new VHD."
                },
                {
                  "flags": "-C, --custom-data <custom-data-file>",
                  "required": -19,
                  "optional": 0,
                  "bool": true,
                  "short": "-C",
                  "long": "--custom-data",
                  "description": "CustomData file"
                },
                {
                  "flags": "-s, --subscription <subscription>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "short": "-s",
                  "long": "--subscription",
                  "description": "the subscription identifier"
                }
              ]
            }
          ],
          "categories": {}
        },
        "image": {
          "name": "image",
          "description": "Commands to manage VM images",
          "fullName": "vm image",
          "usage": "[options] [command]",
          "options": [],
          "commands": [
            {
              "name": "list-publishers",
              "description": "Lists virtual machines image publishers",
              "fullName": "vm image list-publishers",
              "usage": "[options] <location>",
              "filePath": "commands/arm/vm/vm._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "-l, --location <location>",
                  "required": -16,
                  "optional": 0,
                  "bool": true,
                  "short": "-l",
                  "long": "--location",
                  "description": "the location"
                },
                {
                  "flags": "-s, --subscription <subscription>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "short": "-s",
                  "long": "--subscription",
                  "description": "the subscription identifier"
                }
              ]
            },
            {
              "name": "list-offers",
              "description": "Lists virtual machines image offers by a publisher",
              "fullName": "vm image list-offers",
              "usage": "[options] <location> <publisher>",
              "filePath": "commands/arm/vm/vm._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "-l, --location <location>",
                  "required": -16,
                  "optional": 0,
                  "bool": true,
                  "short": "-l",
                  "long": "--location",
                  "description": "the location"
                },
                {
                  "flags": "-p, --publisher <publisher>",
                  "required": -17,
                  "optional": 0,
                  "bool": true,
                  "short": "-p",
                  "long": "--publisher",
                  "description": "the publisher name"
                },
                {
                  "flags": "-s, --subscription <subscription>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "short": "-s",
                  "long": "--subscription",
                  "description": "the subscription identifier"
                }
              ]
            },
            {
              "name": "list-skus",
              "description": "Lists virtual machines image skus for a specific offer from a publisher",
              "fullName": "vm image list-skus",
              "usage": "[options] <location> <publisher> <offer>",
              "filePath": "commands/arm/vm/vm._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "-l, --location <location>",
                  "required": -16,
                  "optional": 0,
                  "bool": true,
                  "short": "-l",
                  "long": "--location",
                  "description": "the location"
                },
                {
                  "flags": "-p, --publisher <publisher>",
                  "required": -17,
                  "optional": 0,
                  "bool": true,
                  "short": "-p",
                  "long": "--publisher",
                  "description": "the publisher name"
                },
                {
                  "flags": "-o, --offer <offer>",
                  "required": -13,
                  "optional": 0,
                  "bool": true,
                  "short": "-o",
                  "long": "--offer",
                  "description": "the offer"
                },
                {
                  "flags": "-s, --subscription <subscription>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "short": "-s",
                  "long": "--subscription",
                  "description": "the subscription identifier"
                }
              ]
            },
            {
              "name": "list",
              "description": "Lists the virtual machines images",
              "fullName": "vm image list",
              "usage": "[options] <location> <publisher> [offer] [sku]",
              "filePath": "commands/arm/vm/vm._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "-l, --location <location>",
                  "required": -16,
                  "optional": 0,
                  "bool": true,
                  "short": "-l",
                  "long": "--location",
                  "description": "the location"
                },
                {
                  "flags": "-p, --publisher <publisher>",
                  "required": -17,
                  "optional": 0,
                  "bool": true,
                  "short": "-p",
                  "long": "--publisher",
                  "description": "the publisher name"
                },
                {
                  "flags": "-o, --offer <offer>",
                  "required": -13,
                  "optional": 0,
                  "bool": true,
                  "short": "-o",
                  "long": "--offer",
                  "description": "the offer"
                },
                {
                  "flags": "-k, --sku <sku>",
                  "required": -11,
                  "optional": 0,
                  "bool": true,
                  "short": "-k",
                  "long": "--sku",
                  "description": "the sku"
                },
                {
                  "flags": "-s, --subscription <subscription>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "short": "-s",
                  "long": "--subscription",
                  "description": "the subscription identifier"
                }
              ]
            },
            {
              "name": "show",
              "description": "Lists the virtual machines images",
              "fullName": "vm image show",
              "usage": "[options] <location> <publisher> [offer] [sku]",
              "filePath": "commands/arm/vm/vm._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "-l, --location <location>",
                  "required": -16,
                  "optional": 0,
                  "bool": true,
                  "short": "-l",
                  "long": "--location",
                  "description": "the location"
                },
                {
                  "flags": "-p, --publisher <publisher>",
                  "required": -17,
                  "optional": 0,
                  "bool": true,
                  "short": "-p",
                  "long": "--publisher",
                  "description": "the publisher name"
                },
                {
                  "flags": "-o, --offer <offer>",
                  "required": -13,
                  "optional": 0,
                  "bool": true,
                  "short": "-o",
                  "long": "--offer",
                  "description": "the offer"
                },
                {
                  "flags": "-k, --sku <sku>",
                  "required": -11,
                  "optional": 0,
                  "bool": true,
                  "short": "-k",
                  "long": "--sku",
                  "description": "the sku"
                },
                {
                  "flags": "-v, --version <version>",
                  "required": -15,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--version",
                  "description": "the version"
                },
                {
                  "flags": "-s, --subscription <subscription>",
                  "required": -20,
                  "optional": 0,
                  "bool": true,
                  "short": "-s",
                  "long": "--subscription",
                  "description": "the subscription identifier"
                }
              ]
            }
          ],
          "categories": {}
        }
      }
    },
    "virtual-network-gateway-connections": {
      "name": "virtual-network-gateway-connections",
      "description": "Commands to manage your virtual network gateway connections.  ",
      "fullName": "virtual-network-gateway-connections",
      "usage": "[options] [command]",
      "options": [],
      "commands": [
        {
          "name": "create-or-update",
          "description": "Commands to manage your virtual network gateway connections by the create-or-update method.",
          "fullName": "virtual-network-gateway-connections create-or-update",
          "usage": "[options] <resource-group-name> <virtual-network-gateway-connection-name> <parameters>",
          "filePath": "commands/arm/vnet/vnet._js",
          "options": [
            {
              "flags": "-v, --verbose",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-v",
              "long": "--verbose",
              "description": "use verbose output"
            },
            {
              "flags": "-vv",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "-vv",
              "description": "more verbose with debug output"
            },
            {
              "flags": "--json",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--json",
              "description": "use json output"
            },
            {
              "flags": "-g, --resource-group-name <resource-group-name>",
              "required": -27,
              "optional": 0,
              "bool": true,
              "short": "-g",
              "long": "--resource-group-name",
              "description": "resource-group-name"
            },
            {
              "flags": "--virtual-network-gateway-connection-name <virtual-network-gateway-connection-name>",
              "required": -43,
              "optional": 0,
              "bool": true,
              "long": "--virtual-network-gateway-connection-name",
              "description": "virtual-network-gateway-connection-name"
            },
            {
              "flags": "-p, --parameters <parameters>",
              "required": -18,
              "optional": 0,
              "bool": true,
              "short": "-p",
              "long": "--parameters",
              "description": "parameters"
            },
            {
              "flags": "--parameter-file <parameter-file>",
              "required": -18,
              "optional": 0,
              "bool": true,
              "long": "--parameter-file",
              "description": "the input parameter file"
            },
            {
              "flags": "-s, --subscription <subscription>",
              "required": -20,
              "optional": 0,
              "bool": true,
              "short": "-s",
              "long": "--subscription",
              "description": "the subscription identifier"
            }
          ]
        },
        {
          "name": "delete",
          "description": "Commands to manage your virtual network gateway connections by the delete method.",
          "fullName": "virtual-network-gateway-connections delete",
          "usage": "[options] <resource-group-name> <virtual-network-gateway-connection-name>",
          "filePath": "commands/arm/vnet/vnet._js",
          "options": [
            {
              "flags": "-v, --verbose",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-v",
              "long": "--verbose",
              "description": "use verbose output"
            },
            {
              "flags": "-vv",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "-vv",
              "description": "more verbose with debug output"
            },
            {
              "flags": "--json",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--json",
              "description": "use json output"
            },
            {
              "flags": "-g, --resource-group-name <resource-group-name>",
              "required": -27,
              "optional": 0,
              "bool": true,
              "short": "-g",
              "long": "--resource-group-name",
              "description": "resource-group-name"
            },
            {
              "flags": "--virtual-network-gateway-connection-name <virtual-network-gateway-connection-name>",
              "required": -43,
              "optional": 0,
              "bool": true,
              "long": "--virtual-network-gateway-connection-name",
              "description": "virtual-network-gateway-connection-name"
            },
            {
              "flags": "--parameter-file <parameter-file>",
              "required": -18,
              "optional": 0,
              "bool": true,
              "long": "--parameter-file",
              "description": "the input parameter file"
            },
            {
              "flags": "-s, --subscription <subscription>",
              "required": -20,
              "optional": 0,
              "bool": true,
              "short": "-s",
              "long": "--subscription",
              "description": "the subscription identifier"
            }
          ]
        },
        {
          "name": "get",
          "description": "Commands to manage your virtual network gateway connections by the get method.",
          "fullName": "virtual-network-gateway-connections get",
          "usage": "[options] <resource-group-name> <virtual-network-gateway-connection-name>",
          "filePath": "commands/arm/vnet/vnet._js",
          "options": [
            {
              "flags": "-v, --verbose",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-v",
              "long": "--verbose",
              "description": "use verbose output"
            },
            {
              "flags": "-vv",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "-vv",
              "description": "more verbose with debug output"
            },
            {
              "flags": "--json",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--json",
              "description": "use json output"
            },
            {
              "flags": "-g, --resource-group-name <resource-group-name>",
              "required": -27,
              "optional": 0,
              "bool": true,
              "short": "-g",
              "long": "--resource-group-name",
              "description": "resource-group-name"
            },
            {
              "flags": "--virtual-network-gateway-connection-name <virtual-network-gateway-connection-name>",
              "required": -43,
              "optional": 0,
              "bool": true,
              "long": "--virtual-network-gateway-connection-name",
              "description": "virtual-network-gateway-connection-name"
            },
            {
              "flags": "--parameter-file <parameter-file>",
              "required": -18,
              "optional": 0,
              "bool": true,
              "long": "--parameter-file",
              "description": "the input parameter file"
            },
            {
              "flags": "-s, --subscription <subscription>",
              "required": -20,
              "optional": 0,
              "bool": true,
              "short": "-s",
              "long": "--subscription",
              "description": "the subscription identifier"
            }
          ]
        },
        {
          "name": "get-shared-key",
          "description": "Commands to manage your virtual network gateway connections by the get-shared-key method.",
          "fullName": "virtual-network-gateway-connections get-shared-key",
          "usage": "[options] <resource-group-name> <connection-shared-key-name>",
          "filePath": "commands/arm/vnet/vnet._js",
          "options": [
            {
              "flags": "-v, --verbose",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-v",
              "long": "--verbose",
              "description": "use verbose output"
            },
            {
              "flags": "-vv",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "-vv",
              "description": "more verbose with debug output"
            },
            {
              "flags": "--json",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--json",
              "description": "use json output"
            },
            {
              "flags": "-g, --resource-group-name <resource-group-name>",
              "required": -27,
              "optional": 0,
              "bool": true,
              "short": "-g",
              "long": "--resource-group-name",
              "description": "resource-group-name"
            },
            {
              "flags": "--connection-shared-key-name <connection-shared-key-name>",
              "required": -30,
              "optional": 0,
              "bool": true,
              "long": "--connection-shared-key-name",
              "description": "connection-shared-key-name"
            },
            {
              "flags": "--parameter-file <parameter-file>",
              "required": -18,
              "optional": 0,
              "bool": true,
              "long": "--parameter-file",
              "description": "the input parameter file"
            },
            {
              "flags": "-s, --subscription <subscription>",
              "required": -20,
              "optional": 0,
              "bool": true,
              "short": "-s",
              "long": "--subscription",
              "description": "the subscription identifier"
            }
          ]
        },
        {
          "name": "list",
          "description": "Commands to manage your virtual network gateway connections by the list method.",
          "fullName": "virtual-network-gateway-connections list",
          "usage": "[options] <resource-group-name>",
          "filePath": "commands/arm/vnet/vnet._js",
          "options": [
            {
              "flags": "-v, --verbose",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-v",
              "long": "--verbose",
              "description": "use verbose output"
            },
            {
              "flags": "-vv",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "-vv",
              "description": "more verbose with debug output"
            },
            {
              "flags": "--json",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--json",
              "description": "use json output"
            },
            {
              "flags": "-g, --resource-group-name <resource-group-name>",
              "required": -27,
              "optional": 0,
              "bool": true,
              "short": "-g",
              "long": "--resource-group-name",
              "description": "resource-group-name"
            },
            {
              "flags": "--parameter-file <parameter-file>",
              "required": -18,
              "optional": 0,
              "bool": true,
              "long": "--parameter-file",
              "description": "the input parameter file"
            },
            {
              "flags": "-s, --subscription <subscription>",
              "required": -20,
              "optional": 0,
              "bool": true,
              "short": "-s",
              "long": "--subscription",
              "description": "the subscription identifier"
            }
          ]
        },
        {
          "name": "list-next",
          "description": "Commands to manage your virtual network gateway connections by the list-next method.",
          "fullName": "virtual-network-gateway-connections list-next",
          "usage": "[options] <next-page-link>",
          "filePath": "commands/arm/vnet/vnet._js",
          "options": [
            {
              "flags": "-v, --verbose",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-v",
              "long": "--verbose",
              "description": "use verbose output"
            },
            {
              "flags": "-vv",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "-vv",
              "description": "more verbose with debug output"
            },
            {
              "flags": "--json",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--json",
              "description": "use json output"
            },
            {
              "flags": "--next-page-link <next-page-link>",
              "required": -18,
              "optional": 0,
              "bool": true,
              "long": "--next-page-link",
              "description": "next-page-link"
            },
            {
              "flags": "--parameter-file <parameter-file>",
              "required": -18,
              "optional": 0,
              "bool": true,
              "long": "--parameter-file",
              "description": "the input parameter file"
            },
            {
              "flags": "-s, --subscription <subscription>",
              "required": -20,
              "optional": 0,
              "bool": true,
              "short": "-s",
              "long": "--subscription",
              "description": "the subscription identifier"
            }
          ]
        },
        {
          "name": "reset-shared-key",
          "description": "Commands to manage your virtual network gateway connections by the reset-shared-key method.",
          "fullName": "virtual-network-gateway-connections reset-shared-key",
          "usage": "[options] <resource-group-name> <virtual-network-gateway-connection-name> <parameters>",
          "filePath": "commands/arm/vnet/vnet._js",
          "options": [
            {
              "flags": "-v, --verbose",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-v",
              "long": "--verbose",
              "description": "use verbose output"
            },
            {
              "flags": "-vv",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "-vv",
              "description": "more verbose with debug output"
            },
            {
              "flags": "--json",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--json",
              "description": "use json output"
            },
            {
              "flags": "-g, --resource-group-name <resource-group-name>",
              "required": -27,
              "optional": 0,
              "bool": true,
              "short": "-g",
              "long": "--resource-group-name",
              "description": "resource-group-name"
            },
            {
              "flags": "--virtual-network-gateway-connection-name <virtual-network-gateway-connection-name>",
              "required": -43,
              "optional": 0,
              "bool": true,
              "long": "--virtual-network-gateway-connection-name",
              "description": "virtual-network-gateway-connection-name"
            },
            {
              "flags": "-p, --parameters <parameters>",
              "required": -18,
              "optional": 0,
              "bool": true,
              "short": "-p",
              "long": "--parameters",
              "description": "parameters"
            },
            {
              "flags": "--parameter-file <parameter-file>",
              "required": -18,
              "optional": 0,
              "bool": true,
              "long": "--parameter-file",
              "description": "the input parameter file"
            },
            {
              "flags": "-s, --subscription <subscription>",
              "required": -20,
              "optional": 0,
              "bool": true,
              "short": "-s",
              "long": "--subscription",
              "description": "the subscription identifier"
            }
          ]
        },
        {
          "name": "set-shared-key",
          "description": "Commands to manage your virtual network gateway connections by the set-shared-key method.",
          "fullName": "virtual-network-gateway-connections set-shared-key",
          "usage": "[options] <resource-group-name> <virtual-network-gateway-connection-name> <value>",
          "filePath": "commands/arm/vnet/vnet._js",
          "options": [
            {
              "flags": "-v, --verbose",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-v",
              "long": "--verbose",
              "description": "use verbose output"
            },
            {
              "flags": "-vv",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "-vv",
              "description": "more verbose with debug output"
            },
            {
              "flags": "--json",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--json",
              "description": "use json output"
            },
            {
              "flags": "-g, --resource-group-name <resource-group-name>",
              "required": -27,
              "optional": 0,
              "bool": true,
              "short": "-g",
              "long": "--resource-group-name",
              "description": "resource-group-name"
            },
            {
              "flags": "--virtual-network-gateway-connection-name <virtual-network-gateway-connection-name>",
              "required": -43,
              "optional": 0,
              "bool": true,
              "long": "--virtual-network-gateway-connection-name",
              "description": "virtual-network-gateway-connection-name"
            },
            {
              "flags": "--value <value>",
              "required": -9,
              "optional": 0,
              "bool": true,
              "long": "--value",
              "description": "value"
            },
            {
              "flags": "--parameter-file <parameter-file>",
              "required": -18,
              "optional": 0,
              "bool": true,
              "long": "--parameter-file",
              "description": "the input parameter file"
            },
            {
              "flags": "-s, --subscription <subscription>",
              "required": -20,
              "optional": 0,
              "bool": true,
              "short": "-s",
              "long": "--subscription",
              "description": "the subscription identifier"
            }
          ]
        }
      ],
      "categories": {
        "create-or-update-parameters": {
          "name": "create-or-update-parameters",
          "description": "Commands to manage the parameter input file for your virtual-network-gateway-connections.",
          "fullName": "virtual-network-gateway-connections create-or-update-parameters",
          "usage": "[options] [command]",
          "options": [],
          "commands": [
            {
              "name": "generate",
              "description": "Generate virtualNetworkGatewayConnectionsCreateOrUpdate parameter string or files.",
              "fullName": "virtual-network-gateway-connections create-or-update-parameters generate",
              "usage": "[options]",
              "filePath": "commands/arm/vnet/vnet._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "--parameter-file <parameter-file>",
                  "required": -18,
                  "optional": 0,
                  "bool": true,
                  "long": "--parameter-file",
                  "description": "The parameter file path."
                }
              ]
            },
            {
              "name": "patch",
              "description": "Command to patch virtualNetworkGatewayConnectionsCreateOrUpdate parameter JSON file.",
              "fullName": "virtual-network-gateway-connections create-or-update-parameters patch",
              "usage": "[options]",
              "filePath": "commands/arm/vnet/vnet._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "--parameter-file <parameter-file>",
                  "required": -18,
                  "optional": 0,
                  "bool": true,
                  "long": "--parameter-file",
                  "description": "The parameter file path."
                },
                {
                  "flags": "--operation <operation>",
                  "required": -13,
                  "optional": 0,
                  "bool": true,
                  "long": "--operation",
                  "description": "The JSON patch operation: add, remove, or replace."
                },
                {
                  "flags": "--path <path>",
                  "required": -8,
                  "optional": 0,
                  "bool": true,
                  "long": "--path",
                  "description": "The JSON data path, e.g.: \"foo/1\"."
                },
                {
                  "flags": "--value <value>",
                  "required": -9,
                  "optional": 0,
                  "bool": true,
                  "long": "--value",
                  "description": "The JSON value."
                },
                {
                  "flags": "--parse",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--parse",
                  "description": "Parse the JSON value to object."
                }
              ]
            }
          ],
          "categories": {
            "virtual-network-gateway-connection": {
              "name": "virtual-network-gateway-connection",
              "description": "Commands to set/remove/add virtual-network-gateway-connection of virtual-network-gateway-connections in create-or-update-parameters file.",
              "fullName": "virtual-network-gateway-connections create-or-update-parameters virtual-network-gateway-connection",
              "usage": "[options] [command]",
              "options": [],
              "commands": [
                {
                  "name": "set",
                  "description": "Set virtual-network-gateway-connection in create-or-update-parameters string or files, e.g. \r\n{\r\n  \"etag\":\"\",\r\n  \"authorizationKey\":\"\",\r\n  \"virtualNetworkGateway1\":{\r\n    \"etag\":\"\",\r\n    \"ipConfigurations\":[\r\n      {\r\n        \"name\":\"\",\r\n        \"etag\":\"\",\r\n        \"privateIPAddress\":\"\",\r\n        \"privateIPAllocationMethod\":\"\",\r\n        \"subnet\":{\r\n          \"id\":\"\"\r\n        },\r\n        \"publicIPAddress\":null,\r\n        \"provisioningState\":\"\",\r\n        \"id\":\"\"\r\n      }\r\n    ],\r\n    \"gatewayType\":\"\",\r\n    \"vpnType\":\"\",\r\n    \"enableBgp\":null,\r\n    \"gatewayDefaultSite\":null,\r\n    \"sku\":{\r\n      \"name\":\"\",\r\n      \"tier\":\"\",\r\n      \"capacity\":null\r\n    },\r\n    \"vpnClientConfiguration\":{\r\n      \"vpnClientAddressPool\":{\r\n        \"addressPrefixes\":[\r\n          \"\"\r\n        ]\r\n      },\r\n      \"vpnClientRootCertificates\":[\r\n        {\r\n          \"name\":\"\",\r\n          \"etag\":\"\",\r\n          \"publicCertData\":\"\",\r\n          \"provisioningState\":\"\",\r\n          \"id\":\"\"\r\n        }\r\n      ],\r\n      \"vpnClientRevokedCertificates\":[\r\n        {\r\n          \"name\":\"\",\r\n          \"etag\":\"\",\r\n          \"thumbprint\":\"\",\r\n          \"provisioningState\":\"\",\r\n          \"id\":\"\"\r\n        }\r\n      ]\r\n    },\r\n    \"resourceGuid\":\"\",\r\n    \"provisioningState\":\"\",\r\n    \"id\":\"\",\r\n    \"name\":null,\r\n    \"type\":null,\r\n    \"location\":\"\",\r\n    \"tags\":{\r\n    }\r\n  },\r\n  \"virtualNetworkGateway2\":null,\r\n  \"localNetworkGateway2\":{\r\n    \"etag\":\"\",\r\n    \"localNetworkAddressSpace\":null,\r\n    \"gatewayIpAddress\":\"\",\r\n    \"resourceGuid\":\"\",\r\n    \"provisioningState\":\"\",\r\n    \"id\":\"\",\r\n    \"name\":null,\r\n    \"type\":null,\r\n    \"location\":\"\",\r\n    \"tags\":{\r\n    }\r\n  },\r\n  \"connectionType\":\"\",\r\n  \"routingWeight\":null,\r\n  \"sharedKey\":\"\",\r\n  \"connectionStatus\":\"\",\r\n  \"egressBytesTransferred\":null,\r\n  \"ingressBytesTransferred\":null,\r\n  \"peer\":null,\r\n  \"resourceGuid\":\"\",\r\n  \"provisioningState\":\"\",\r\n  \"id\":\"\",\r\n  \"name\":null,\r\n  \"type\":null,\r\n  \"location\":\"\",\r\n  \"tags\":{\r\n  }\r\n}\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "virtual-network-gateway-connections create-or-update-parameters virtual-network-gateway-connection set",
                  "usage": "[options]",
                  "filePath": "commands/arm/vnet/vnet._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--parse",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--parse",
                      "description": "Parse the input value string to a JSON object."
                    },
                    {
                      "flags": "--etag <etag>",
                      "required": -8,
                      "optional": 0,
                      "bool": true,
                      "long": "--etag",
                      "description": "Set the etag value."
                    },
                    {
                      "flags": "--authorization-key <authorizationKey>",
                      "required": -21,
                      "optional": 0,
                      "bool": true,
                      "long": "--authorization-key",
                      "description": "Set the authorization-key value."
                    },
                    {
                      "flags": "--virtual-network-gateway <virtualNetworkGateway2>",
                      "required": -27,
                      "optional": 0,
                      "bool": true,
                      "long": "--virtual-network-gateway",
                      "description": "Set the virtual-network-gateway value."
                    },
                    {
                      "flags": "--local-network-gateway <localNetworkGateway2>",
                      "required": -25,
                      "optional": 0,
                      "bool": true,
                      "long": "--local-network-gateway",
                      "description": "Set the local-network-gateway value."
                    },
                    {
                      "flags": "--connection-type <connectionType>",
                      "required": -19,
                      "optional": 0,
                      "bool": true,
                      "long": "--connection-type",
                      "description": "Set the connection-type value."
                    },
                    {
                      "flags": "--routing-weight <routingWeight>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--routing-weight",
                      "description": "Set the routing-weight value."
                    },
                    {
                      "flags": "--shared-key <sharedKey>",
                      "required": -14,
                      "optional": 0,
                      "bool": true,
                      "long": "--shared-key",
                      "description": "Set the shared-key value."
                    },
                    {
                      "flags": "--connection-status <connectionStatus>",
                      "required": -21,
                      "optional": 0,
                      "bool": true,
                      "long": "--connection-status",
                      "description": "Set the connection-status value."
                    },
                    {
                      "flags": "--egress-bytes-transferred <egressBytesTransferred>",
                      "required": -28,
                      "optional": 0,
                      "bool": true,
                      "long": "--egress-bytes-transferred",
                      "description": "Set the egress-bytes-transferred value."
                    },
                    {
                      "flags": "--ingress-bytes-transferred <ingressBytesTransferred>",
                      "required": -29,
                      "optional": 0,
                      "bool": true,
                      "long": "--ingress-bytes-transferred",
                      "description": "Set the ingress-bytes-transferred value."
                    },
                    {
                      "flags": "--peer <peer>",
                      "required": -8,
                      "optional": 0,
                      "bool": true,
                      "long": "--peer",
                      "description": "Set the peer value."
                    },
                    {
                      "flags": "--resource-guid <resourceGuid>",
                      "required": -17,
                      "optional": 0,
                      "bool": true,
                      "long": "--resource-guid",
                      "description": "Set the resource-guid value."
                    },
                    {
                      "flags": "--provisioning-state <provisioningState>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "long": "--provisioning-state",
                      "description": "Set the provisioning-state value."
                    },
                    {
                      "flags": "--id <id>",
                      "required": -6,
                      "optional": 0,
                      "bool": true,
                      "long": "--id",
                      "description": "Set the id value."
                    },
                    {
                      "flags": "--name <name>",
                      "required": -8,
                      "optional": 0,
                      "bool": true,
                      "long": "--name",
                      "description": "Set the name value."
                    },
                    {
                      "flags": "--type <type>",
                      "required": -8,
                      "optional": 0,
                      "bool": true,
                      "long": "--type",
                      "description": "Set the type value."
                    },
                    {
                      "flags": "--location <location>",
                      "required": -12,
                      "optional": 0,
                      "bool": true,
                      "long": "--location",
                      "description": "Set the location value."
                    },
                    {
                      "flags": "--tags <tags>",
                      "required": -8,
                      "optional": 0,
                      "bool": true,
                      "long": "--tags",
                      "description": "Set the tags value."
                    }
                  ]
                },
                {
                  "name": "remove",
                  "description": "Remove virtual-network-gateway-connection in create-or-update-parameters string or files, e.g. \r\n{\r\n  \"etag\":\"\",\r\n  \"authorizationKey\":\"\",\r\n  \"virtualNetworkGateway1\":{\r\n    \"etag\":\"\",\r\n    \"ipConfigurations\":[\r\n      {\r\n        \"name\":\"\",\r\n        \"etag\":\"\",\r\n        \"privateIPAddress\":\"\",\r\n        \"privateIPAllocationMethod\":\"\",\r\n        \"subnet\":{\r\n          \"id\":\"\"\r\n        },\r\n        \"publicIPAddress\":null,\r\n        \"provisioningState\":\"\",\r\n        \"id\":\"\"\r\n      }\r\n    ],\r\n    \"gatewayType\":\"\",\r\n    \"vpnType\":\"\",\r\n    \"enableBgp\":null,\r\n    \"gatewayDefaultSite\":null,\r\n    \"sku\":{\r\n      \"name\":\"\",\r\n      \"tier\":\"\",\r\n      \"capacity\":null\r\n    },\r\n    \"vpnClientConfiguration\":{\r\n      \"vpnClientAddressPool\":{\r\n        \"addressPrefixes\":[\r\n          \"\"\r\n        ]\r\n      },\r\n      \"vpnClientRootCertificates\":[\r\n        {\r\n          \"name\":\"\",\r\n          \"etag\":\"\",\r\n          \"publicCertData\":\"\",\r\n          \"provisioningState\":\"\",\r\n          \"id\":\"\"\r\n        }\r\n      ],\r\n      \"vpnClientRevokedCertificates\":[\r\n        {\r\n          \"name\":\"\",\r\n          \"etag\":\"\",\r\n          \"thumbprint\":\"\",\r\n          \"provisioningState\":\"\",\r\n          \"id\":\"\"\r\n        }\r\n      ]\r\n    },\r\n    \"resourceGuid\":\"\",\r\n    \"provisioningState\":\"\",\r\n    \"id\":\"\",\r\n    \"name\":null,\r\n    \"type\":null,\r\n    \"location\":\"\",\r\n    \"tags\":{\r\n    }\r\n  },\r\n  \"virtualNetworkGateway2\":null,\r\n  \"localNetworkGateway2\":{\r\n    \"etag\":\"\",\r\n    \"localNetworkAddressSpace\":null,\r\n    \"gatewayIpAddress\":\"\",\r\n    \"resourceGuid\":\"\",\r\n    \"provisioningState\":\"\",\r\n    \"id\":\"\",\r\n    \"name\":null,\r\n    \"type\":null,\r\n    \"location\":\"\",\r\n    \"tags\":{\r\n    }\r\n  },\r\n  \"connectionType\":\"\",\r\n  \"routingWeight\":null,\r\n  \"sharedKey\":\"\",\r\n  \"connectionStatus\":\"\",\r\n  \"egressBytesTransferred\":null,\r\n  \"ingressBytesTransferred\":null,\r\n  \"peer\":null,\r\n  \"resourceGuid\":\"\",\r\n  \"provisioningState\":\"\",\r\n  \"id\":\"\",\r\n  \"name\":null,\r\n  \"type\":null,\r\n  \"location\":\"\",\r\n  \"tags\":{\r\n  }\r\n}\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "virtual-network-gateway-connections create-or-update-parameters virtual-network-gateway-connection remove",
                  "usage": "[options]",
                  "filePath": "commands/arm/vnet/vnet._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--etag",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--etag",
                      "description": "Remove the etag value."
                    },
                    {
                      "flags": "--authorization-key",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--authorization-key",
                      "description": "Remove the authorization-key value."
                    },
                    {
                      "flags": "--virtual-network-gateway",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--virtual-network-gateway",
                      "description": "Remove the virtual-network-gateway value."
                    },
                    {
                      "flags": "--local-network-gateway",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--local-network-gateway",
                      "description": "Remove the local-network-gateway value."
                    },
                    {
                      "flags": "--connection-type",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--connection-type",
                      "description": "Remove the connection-type value."
                    },
                    {
                      "flags": "--routing-weight",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--routing-weight",
                      "description": "Remove the routing-weight value."
                    },
                    {
                      "flags": "--shared-key",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--shared-key",
                      "description": "Remove the shared-key value."
                    },
                    {
                      "flags": "--connection-status",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--connection-status",
                      "description": "Remove the connection-status value."
                    },
                    {
                      "flags": "--egress-bytes-transferred",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--egress-bytes-transferred",
                      "description": "Remove the egress-bytes-transferred value."
                    },
                    {
                      "flags": "--ingress-bytes-transferred",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--ingress-bytes-transferred",
                      "description": "Remove the ingress-bytes-transferred value."
                    },
                    {
                      "flags": "--peer",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--peer",
                      "description": "Remove the peer value."
                    },
                    {
                      "flags": "--resource-guid",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--resource-guid",
                      "description": "Remove the resource-guid value."
                    },
                    {
                      "flags": "--provisioning-state",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--provisioning-state",
                      "description": "Remove the provisioning-state value."
                    },
                    {
                      "flags": "--id",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--id",
                      "description": "Remove the id value."
                    },
                    {
                      "flags": "--name",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--name",
                      "description": "Remove the name value."
                    },
                    {
                      "flags": "--type",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--type",
                      "description": "Remove the type value."
                    },
                    {
                      "flags": "--location",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--location",
                      "description": "Remove the location value."
                    },
                    {
                      "flags": "--tags",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--tags",
                      "description": "Remove the tags value."
                    }
                  ]
                },
                {
                  "name": "add",
                  "description": "Add virtual-network-gateway-connection in create-or-update-parameters string or files, e.g. \r\n{\r\n  \"etag\":\"\",\r\n  \"authorizationKey\":\"\",\r\n  \"virtualNetworkGateway1\":{\r\n    \"etag\":\"\",\r\n    \"ipConfigurations\":[\r\n      {\r\n        \"name\":\"\",\r\n        \"etag\":\"\",\r\n        \"privateIPAddress\":\"\",\r\n        \"privateIPAllocationMethod\":\"\",\r\n        \"subnet\":{\r\n          \"id\":\"\"\r\n        },\r\n        \"publicIPAddress\":null,\r\n        \"provisioningState\":\"\",\r\n        \"id\":\"\"\r\n      }\r\n    ],\r\n    \"gatewayType\":\"\",\r\n    \"vpnType\":\"\",\r\n    \"enableBgp\":null,\r\n    \"gatewayDefaultSite\":null,\r\n    \"sku\":{\r\n      \"name\":\"\",\r\n      \"tier\":\"\",\r\n      \"capacity\":null\r\n    },\r\n    \"vpnClientConfiguration\":{\r\n      \"vpnClientAddressPool\":{\r\n        \"addressPrefixes\":[\r\n          \"\"\r\n        ]\r\n      },\r\n      \"vpnClientRootCertificates\":[\r\n        {\r\n          \"name\":\"\",\r\n          \"etag\":\"\",\r\n          \"publicCertData\":\"\",\r\n          \"provisioningState\":\"\",\r\n          \"id\":\"\"\r\n        }\r\n      ],\r\n      \"vpnClientRevokedCertificates\":[\r\n        {\r\n          \"name\":\"\",\r\n          \"etag\":\"\",\r\n          \"thumbprint\":\"\",\r\n          \"provisioningState\":\"\",\r\n          \"id\":\"\"\r\n        }\r\n      ]\r\n    },\r\n    \"resourceGuid\":\"\",\r\n    \"provisioningState\":\"\",\r\n    \"id\":\"\",\r\n    \"name\":null,\r\n    \"type\":null,\r\n    \"location\":\"\",\r\n    \"tags\":{\r\n    }\r\n  },\r\n  \"virtualNetworkGateway2\":null,\r\n  \"localNetworkGateway2\":{\r\n    \"etag\":\"\",\r\n    \"localNetworkAddressSpace\":null,\r\n    \"gatewayIpAddress\":\"\",\r\n    \"resourceGuid\":\"\",\r\n    \"provisioningState\":\"\",\r\n    \"id\":\"\",\r\n    \"name\":null,\r\n    \"type\":null,\r\n    \"location\":\"\",\r\n    \"tags\":{\r\n    }\r\n  },\r\n  \"connectionType\":\"\",\r\n  \"routingWeight\":null,\r\n  \"sharedKey\":\"\",\r\n  \"connectionStatus\":\"\",\r\n  \"egressBytesTransferred\":null,\r\n  \"ingressBytesTransferred\":null,\r\n  \"peer\":null,\r\n  \"resourceGuid\":\"\",\r\n  \"provisioningState\":\"\",\r\n  \"id\":\"\",\r\n  \"name\":null,\r\n  \"type\":null,\r\n  \"location\":\"\",\r\n  \"tags\":{\r\n  }\r\n}\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "virtual-network-gateway-connections create-or-update-parameters virtual-network-gateway-connection add",
                  "usage": "[options]",
                  "filePath": "commands/arm/vnet/vnet._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--key <key>",
                      "required": -7,
                      "optional": 0,
                      "bool": true,
                      "long": "--key",
                      "description": "The JSON key."
                    },
                    {
                      "flags": "--value <value>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--value",
                      "description": "The JSON value."
                    },
                    {
                      "flags": "--parse",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--parse",
                      "description": "Parse the input value string to a JSON object."
                    },
                    {
                      "flags": "--etag <etag>",
                      "required": -8,
                      "optional": 0,
                      "bool": true,
                      "long": "--etag",
                      "description": "Add the etag value."
                    },
                    {
                      "flags": "--authorization-key <authorizationKey>",
                      "required": -21,
                      "optional": 0,
                      "bool": true,
                      "long": "--authorization-key",
                      "description": "Add the authorization-key value."
                    },
                    {
                      "flags": "--virtual-network-gateway <virtualNetworkGateway2>",
                      "required": -27,
                      "optional": 0,
                      "bool": true,
                      "long": "--virtual-network-gateway",
                      "description": "Add the virtual-network-gateway value."
                    },
                    {
                      "flags": "--local-network-gateway <localNetworkGateway2>",
                      "required": -25,
                      "optional": 0,
                      "bool": true,
                      "long": "--local-network-gateway",
                      "description": "Add the local-network-gateway value."
                    },
                    {
                      "flags": "--connection-type <connectionType>",
                      "required": -19,
                      "optional": 0,
                      "bool": true,
                      "long": "--connection-type",
                      "description": "Add the connection-type value."
                    },
                    {
                      "flags": "--routing-weight <routingWeight>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--routing-weight",
                      "description": "Add the routing-weight value."
                    },
                    {
                      "flags": "--shared-key <sharedKey>",
                      "required": -14,
                      "optional": 0,
                      "bool": true,
                      "long": "--shared-key",
                      "description": "Add the shared-key value."
                    },
                    {
                      "flags": "--connection-status <connectionStatus>",
                      "required": -21,
                      "optional": 0,
                      "bool": true,
                      "long": "--connection-status",
                      "description": "Add the connection-status value."
                    },
                    {
                      "flags": "--egress-bytes-transferred <egressBytesTransferred>",
                      "required": -28,
                      "optional": 0,
                      "bool": true,
                      "long": "--egress-bytes-transferred",
                      "description": "Add the egress-bytes-transferred value."
                    },
                    {
                      "flags": "--ingress-bytes-transferred <ingressBytesTransferred>",
                      "required": -29,
                      "optional": 0,
                      "bool": true,
                      "long": "--ingress-bytes-transferred",
                      "description": "Add the ingress-bytes-transferred value."
                    },
                    {
                      "flags": "--peer <peer>",
                      "required": -8,
                      "optional": 0,
                      "bool": true,
                      "long": "--peer",
                      "description": "Add the peer value."
                    },
                    {
                      "flags": "--resource-guid <resourceGuid>",
                      "required": -17,
                      "optional": 0,
                      "bool": true,
                      "long": "--resource-guid",
                      "description": "Add the resource-guid value."
                    },
                    {
                      "flags": "--provisioning-state <provisioningState>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "long": "--provisioning-state",
                      "description": "Add the provisioning-state value."
                    },
                    {
                      "flags": "--id <id>",
                      "required": -6,
                      "optional": 0,
                      "bool": true,
                      "long": "--id",
                      "description": "Add the id value."
                    },
                    {
                      "flags": "--name <name>",
                      "required": -8,
                      "optional": 0,
                      "bool": true,
                      "long": "--name",
                      "description": "Add the name value."
                    },
                    {
                      "flags": "--type <type>",
                      "required": -8,
                      "optional": 0,
                      "bool": true,
                      "long": "--type",
                      "description": "Add the type value."
                    },
                    {
                      "flags": "--location <location>",
                      "required": -12,
                      "optional": 0,
                      "bool": true,
                      "long": "--location",
                      "description": "Add the location value."
                    },
                    {
                      "flags": "--tags <tags>",
                      "required": -8,
                      "optional": 0,
                      "bool": true,
                      "long": "--tags",
                      "description": "Add the tags value."
                    }
                  ]
                }
              ],
              "categories": {}
            },
            "virtual-network-gateway": {
              "name": "virtual-network-gateway",
              "description": "Commands to set/remove/add virtual-network-gateway of virtual-network-gateway-connections in create-or-update-parameters file.",
              "fullName": "virtual-network-gateway-connections create-or-update-parameters virtual-network-gateway",
              "usage": "[options] [command]",
              "options": [],
              "commands": [
                {
                  "name": "set",
                  "description": "Set virtual-network-gateway in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"virtualNetworkGateway1\" : {\r\n             \"etag\":\"\",\r\n             \"ipConfigurations\":[\r\n               {\r\n                 \"name\":\"\",\r\n                 \"etag\":\"\",\r\n                 \"privateIPAddress\":\"\",\r\n                 \"privateIPAllocationMethod\":\"\",\r\n                 \"subnet\":{\r\n                   \"id\":\"\"\r\n                 },\r\n                 \"publicIPAddress\":null,\r\n                 \"provisioningState\":\"\",\r\n                 \"id\":\"\"\r\n               }\r\n             ],\r\n             \"gatewayType\":\"\",\r\n             \"vpnType\":\"\",\r\n             \"enableBgp\":null,\r\n             \"gatewayDefaultSite\":null,\r\n             \"sku\":{\r\n               \"name\":\"\",\r\n               \"tier\":\"\",\r\n               \"capacity\":null\r\n             },\r\n             \"vpnClientConfiguration\":{\r\n               \"vpnClientAddressPool\":{\r\n                 \"addressPrefixes\":[\r\n                   \"\"\r\n                 ]\r\n               },\r\n               \"vpnClientRootCertificates\":[\r\n                 {\r\n                   \"name\":\"\",\r\n                   \"etag\":\"\",\r\n                   \"publicCertData\":\"\",\r\n                   \"provisioningState\":\"\",\r\n                   \"id\":\"\"\r\n                 }\r\n               ],\r\n               \"vpnClientRevokedCertificates\":[\r\n                 {\r\n                   \"name\":\"\",\r\n                   \"etag\":\"\",\r\n                   \"thumbprint\":\"\",\r\n                   \"provisioningState\":\"\",\r\n                   \"id\":\"\"\r\n                 }\r\n               ]\r\n             },\r\n             \"resourceGuid\":\"\",\r\n             \"provisioningState\":\"\",\r\n             \"id\":\"\",\r\n             \"name\":null,\r\n             \"type\":null,\r\n             \"location\":\"\",\r\n             \"tags\":{\r\n             }\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "virtual-network-gateway-connections create-or-update-parameters virtual-network-gateway set",
                  "usage": "[options]",
                  "filePath": "commands/arm/vnet/vnet._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--parse",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--parse",
                      "description": "Parse the input value string to a JSON object."
                    },
                    {
                      "flags": "--etag <etag>",
                      "required": -8,
                      "optional": 0,
                      "bool": true,
                      "long": "--etag",
                      "description": "Set the etag value."
                    },
                    {
                      "flags": "--ip-configurations <ipConfigurations>",
                      "required": -21,
                      "optional": 0,
                      "bool": true,
                      "long": "--ip-configurations",
                      "description": "Set the ip-configurations value."
                    },
                    {
                      "flags": "--gateway-type <gatewayType>",
                      "required": -16,
                      "optional": 0,
                      "bool": true,
                      "long": "--gateway-type",
                      "description": "Set the gateway-type value."
                    },
                    {
                      "flags": "--vpn-type <vpnType>",
                      "required": -12,
                      "optional": 0,
                      "bool": true,
                      "long": "--vpn-type",
                      "description": "Set the vpn-type value."
                    },
                    {
                      "flags": "--enable-bgp <enableBgp>",
                      "required": -14,
                      "optional": 0,
                      "bool": true,
                      "long": "--enable-bgp",
                      "description": "Set the enable-bgp value."
                    },
                    {
                      "flags": "--gateway-default-site <gatewayDefaultSite>",
                      "required": -24,
                      "optional": 0,
                      "bool": true,
                      "long": "--gateway-default-site",
                      "description": "Set the gateway-default-site value."
                    },
                    {
                      "flags": "--sku <sku>",
                      "required": -7,
                      "optional": 0,
                      "bool": true,
                      "long": "--sku",
                      "description": "Set the sku value."
                    },
                    {
                      "flags": "--vpn-client-configuration <vpnClientConfiguration>",
                      "required": -28,
                      "optional": 0,
                      "bool": true,
                      "long": "--vpn-client-configuration",
                      "description": "Set the vpn-client-configuration value."
                    },
                    {
                      "flags": "--resource-guid <resourceGuid>",
                      "required": -17,
                      "optional": 0,
                      "bool": true,
                      "long": "--resource-guid",
                      "description": "Set the resource-guid value."
                    },
                    {
                      "flags": "--provisioning-state <provisioningState>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "long": "--provisioning-state",
                      "description": "Set the provisioning-state value."
                    },
                    {
                      "flags": "--id <id>",
                      "required": -6,
                      "optional": 0,
                      "bool": true,
                      "long": "--id",
                      "description": "Set the id value."
                    },
                    {
                      "flags": "--name <name>",
                      "required": -8,
                      "optional": 0,
                      "bool": true,
                      "long": "--name",
                      "description": "Set the name value."
                    },
                    {
                      "flags": "--type <type>",
                      "required": -8,
                      "optional": 0,
                      "bool": true,
                      "long": "--type",
                      "description": "Set the type value."
                    },
                    {
                      "flags": "--location <location>",
                      "required": -12,
                      "optional": 0,
                      "bool": true,
                      "long": "--location",
                      "description": "Set the location value."
                    },
                    {
                      "flags": "--tags <tags>",
                      "required": -8,
                      "optional": 0,
                      "bool": true,
                      "long": "--tags",
                      "description": "Set the tags value."
                    }
                  ]
                },
                {
                  "name": "remove",
                  "description": "Remove virtual-network-gateway in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"virtualNetworkGateway2\" : {\r\n             \"etag\":\"\",\r\n             \"ipConfigurations\":[\r\n               {\r\n                 \"name\":\"\",\r\n                 \"etag\":\"\",\r\n                 \"privateIPAddress\":\"\",\r\n                 \"privateIPAllocationMethod\":\"\",\r\n                 \"subnet\":{\r\n                   \"id\":\"\"\r\n                 },\r\n                 \"publicIPAddress\":null,\r\n                 \"provisioningState\":\"\",\r\n                 \"id\":\"\"\r\n               }\r\n             ],\r\n             \"gatewayType\":\"\",\r\n             \"vpnType\":\"\",\r\n             \"enableBgp\":null,\r\n             \"gatewayDefaultSite\":null,\r\n             \"sku\":{\r\n               \"name\":\"\",\r\n               \"tier\":\"\",\r\n               \"capacity\":null\r\n             },\r\n             \"vpnClientConfiguration\":{\r\n               \"vpnClientAddressPool\":{\r\n                 \"addressPrefixes\":[\r\n                   \"\"\r\n                 ]\r\n               },\r\n               \"vpnClientRootCertificates\":[\r\n                 {\r\n                   \"name\":\"\",\r\n                   \"etag\":\"\",\r\n                   \"publicCertData\":\"\",\r\n                   \"provisioningState\":\"\",\r\n                   \"id\":\"\"\r\n                 }\r\n               ],\r\n               \"vpnClientRevokedCertificates\":[\r\n                 {\r\n                   \"name\":\"\",\r\n                   \"etag\":\"\",\r\n                   \"thumbprint\":\"\",\r\n                   \"provisioningState\":\"\",\r\n                   \"id\":\"\"\r\n                 }\r\n               ]\r\n             },\r\n             \"resourceGuid\":\"\",\r\n             \"provisioningState\":\"\",\r\n             \"id\":\"\",\r\n             \"name\":null,\r\n             \"type\":null,\r\n             \"location\":\"\",\r\n             \"tags\":{\r\n             }\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "virtual-network-gateway-connections create-or-update-parameters virtual-network-gateway remove",
                  "usage": "[options]",
                  "filePath": "commands/arm/vnet/vnet._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    }
                  ]
                },
                {
                  "name": "add",
                  "description": "Add virtual-network-gateway in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"virtualNetworkGateway2\" : {\r\n             \"etag\":\"\",\r\n             \"ipConfigurations\":[\r\n               {\r\n                 \"name\":\"\",\r\n                 \"etag\":\"\",\r\n                 \"privateIPAddress\":\"\",\r\n                 \"privateIPAllocationMethod\":\"\",\r\n                 \"subnet\":{\r\n                   \"id\":\"\"\r\n                 },\r\n                 \"publicIPAddress\":null,\r\n                 \"provisioningState\":\"\",\r\n                 \"id\":\"\"\r\n               }\r\n             ],\r\n             \"gatewayType\":\"\",\r\n             \"vpnType\":\"\",\r\n             \"enableBgp\":null,\r\n             \"gatewayDefaultSite\":null,\r\n             \"sku\":{\r\n               \"name\":\"\",\r\n               \"tier\":\"\",\r\n               \"capacity\":null\r\n             },\r\n             \"vpnClientConfiguration\":{\r\n               \"vpnClientAddressPool\":{\r\n                 \"addressPrefixes\":[\r\n                   \"\"\r\n                 ]\r\n               },\r\n               \"vpnClientRootCertificates\":[\r\n                 {\r\n                   \"name\":\"\",\r\n                   \"etag\":\"\",\r\n                   \"publicCertData\":\"\",\r\n                   \"provisioningState\":\"\",\r\n                   \"id\":\"\"\r\n                 }\r\n               ],\r\n               \"vpnClientRevokedCertificates\":[\r\n                 {\r\n                   \"name\":\"\",\r\n                   \"etag\":\"\",\r\n                   \"thumbprint\":\"\",\r\n                   \"provisioningState\":\"\",\r\n                   \"id\":\"\"\r\n                 }\r\n               ]\r\n             },\r\n             \"resourceGuid\":\"\",\r\n             \"provisioningState\":\"\",\r\n             \"id\":\"\",\r\n             \"name\":null,\r\n             \"type\":null,\r\n             \"location\":\"\",\r\n             \"tags\":{\r\n             }\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "virtual-network-gateway-connections create-or-update-parameters virtual-network-gateway add",
                  "usage": "[options]",
                  "filePath": "commands/arm/vnet/vnet._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--key <key>",
                      "required": -7,
                      "optional": 0,
                      "bool": true,
                      "long": "--key",
                      "description": "The JSON key."
                    },
                    {
                      "flags": "--value <value>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--value",
                      "description": "The JSON value."
                    },
                    {
                      "flags": "--parse",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--parse",
                      "description": "Parse the input value string to a JSON object."
                    }
                  ]
                }
              ],
              "categories": {}
            },
            "ip-configurations": {
              "name": "ip-configurations",
              "description": "Commands to set/remove/add ip-configurations of virtual-network-gateway-connections in create-or-update-parameters file.",
              "fullName": "virtual-network-gateway-connections create-or-update-parameters ip-configurations",
              "usage": "[options] [command]",
              "options": [],
              "commands": [
                {
                  "name": "set",
                  "description": "Set ip-configurations in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"ipConfigurations\" : {\r\n             \"name\":\"\",\r\n             \"etag\":\"\",\r\n             \"privateIPAddress\":\"\",\r\n             \"privateIPAllocationMethod\":\"\",\r\n             \"subnet\":{\r\n               \"id\":\"\"\r\n             },\r\n             \"publicIPAddress\":null,\r\n             \"provisioningState\":\"\",\r\n             \"id\":\"\"\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "virtual-network-gateway-connections create-or-update-parameters ip-configurations set",
                  "usage": "[options]",
                  "filePath": "commands/arm/vnet/vnet._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--index <index>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--index",
                      "description": "Indexer: index."
                    },
                    {
                      "flags": "--value <value>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--value",
                      "description": "The input string value for the indexed item."
                    },
                    {
                      "flags": "--parse",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--parse",
                      "description": "Parse the input value string to a JSON object."
                    },
                    {
                      "flags": "--name <name>",
                      "required": -8,
                      "optional": 0,
                      "bool": true,
                      "long": "--name",
                      "description": "Set the name value."
                    },
                    {
                      "flags": "--etag <etag>",
                      "required": -8,
                      "optional": 0,
                      "bool": true,
                      "long": "--etag",
                      "description": "Set the etag value."
                    },
                    {
                      "flags": "--private-ip-address <privateIPAddress>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "long": "--private-ip-address",
                      "description": "Set the private-ip-address value."
                    },
                    {
                      "flags": "--private-ip-allocation-method <privateIPAllocationMethod>",
                      "required": -32,
                      "optional": 0,
                      "bool": true,
                      "long": "--private-ip-allocation-method",
                      "description": "Set the private-ip-allocation-method value."
                    },
                    {
                      "flags": "--subnet <subnet>",
                      "required": -10,
                      "optional": 0,
                      "bool": true,
                      "long": "--subnet",
                      "description": "Set the subnet value."
                    },
                    {
                      "flags": "--public-ip-address <publicIPAddress>",
                      "required": -21,
                      "optional": 0,
                      "bool": true,
                      "long": "--public-ip-address",
                      "description": "Set the public-ip-address value."
                    },
                    {
                      "flags": "--provisioning-state <provisioningState>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "long": "--provisioning-state",
                      "description": "Set the provisioning-state value."
                    },
                    {
                      "flags": "--id <id>",
                      "required": -6,
                      "optional": 0,
                      "bool": true,
                      "long": "--id",
                      "description": "Set the id value."
                    }
                  ]
                },
                {
                  "name": "remove",
                  "description": "Remove ip-configurations in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"ipConfigurations\" : {\r\n             \"name\":\"\",\r\n             \"etag\":\"\",\r\n             \"privateIPAddress\":\"\",\r\n             \"privateIPAllocationMethod\":\"\",\r\n             \"subnet\":{\r\n               \"id\":\"\"\r\n             },\r\n             \"publicIPAddress\":null,\r\n             \"provisioningState\":\"\",\r\n             \"id\":\"\"\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "virtual-network-gateway-connections create-or-update-parameters ip-configurations remove",
                  "usage": "[options]",
                  "filePath": "commands/arm/vnet/vnet._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--index <index>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--index",
                      "description": "Indexer: index."
                    },
                    {
                      "flags": "--name",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--name",
                      "description": "Remove the name value."
                    },
                    {
                      "flags": "--etag",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--etag",
                      "description": "Remove the etag value."
                    },
                    {
                      "flags": "--private-ip-address",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--private-ip-address",
                      "description": "Remove the private-ip-address value."
                    },
                    {
                      "flags": "--private-ip-allocation-method",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--private-ip-allocation-method",
                      "description": "Remove the private-ip-allocation-method value."
                    },
                    {
                      "flags": "--subnet",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--subnet",
                      "description": "Remove the subnet value."
                    },
                    {
                      "flags": "--public-ip-address",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--public-ip-address",
                      "description": "Remove the public-ip-address value."
                    },
                    {
                      "flags": "--provisioning-state",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--provisioning-state",
                      "description": "Remove the provisioning-state value."
                    },
                    {
                      "flags": "--id",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--id",
                      "description": "Remove the id value."
                    }
                  ]
                },
                {
                  "name": "add",
                  "description": "Add ip-configurations in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"ipConfigurations\" : {\r\n             \"name\":\"\",\r\n             \"etag\":\"\",\r\n             \"privateIPAddress\":\"\",\r\n             \"privateIPAllocationMethod\":\"\",\r\n             \"subnet\":{\r\n               \"id\":\"\"\r\n             },\r\n             \"publicIPAddress\":null,\r\n             \"provisioningState\":\"\",\r\n             \"id\":\"\"\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "virtual-network-gateway-connections create-or-update-parameters ip-configurations add",
                  "usage": "[options]",
                  "filePath": "commands/arm/vnet/vnet._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--key <key>",
                      "required": -7,
                      "optional": 0,
                      "bool": true,
                      "long": "--key",
                      "description": "The JSON key."
                    },
                    {
                      "flags": "--value <value>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--value",
                      "description": "The JSON value."
                    },
                    {
                      "flags": "--parse",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--parse",
                      "description": "Parse the input value string to a JSON object."
                    },
                    {
                      "flags": "--name <name>",
                      "required": -8,
                      "optional": 0,
                      "bool": true,
                      "long": "--name",
                      "description": "Add the name value."
                    },
                    {
                      "flags": "--etag <etag>",
                      "required": -8,
                      "optional": 0,
                      "bool": true,
                      "long": "--etag",
                      "description": "Add the etag value."
                    },
                    {
                      "flags": "--private-ip-address <privateIPAddress>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "long": "--private-ip-address",
                      "description": "Add the private-ip-address value."
                    },
                    {
                      "flags": "--private-ip-allocation-method <privateIPAllocationMethod>",
                      "required": -32,
                      "optional": 0,
                      "bool": true,
                      "long": "--private-ip-allocation-method",
                      "description": "Add the private-ip-allocation-method value."
                    },
                    {
                      "flags": "--subnet <subnet>",
                      "required": -10,
                      "optional": 0,
                      "bool": true,
                      "long": "--subnet",
                      "description": "Add the subnet value."
                    },
                    {
                      "flags": "--public-ip-address <publicIPAddress>",
                      "required": -21,
                      "optional": 0,
                      "bool": true,
                      "long": "--public-ip-address",
                      "description": "Add the public-ip-address value."
                    },
                    {
                      "flags": "--provisioning-state <provisioningState>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "long": "--provisioning-state",
                      "description": "Add the provisioning-state value."
                    },
                    {
                      "flags": "--id <id>",
                      "required": -6,
                      "optional": 0,
                      "bool": true,
                      "long": "--id",
                      "description": "Add the id value."
                    }
                  ]
                }
              ],
              "categories": {}
            },
            "subnet": {
              "name": "subnet",
              "description": "Commands to set/remove/add subnet of virtual-network-gateway-connections in create-or-update-parameters file.",
              "fullName": "virtual-network-gateway-connections create-or-update-parameters subnet",
              "usage": "[options] [command]",
              "options": [],
              "commands": [
                {
                  "name": "set",
                  "description": "Set subnet in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"subnet\" : {\r\n             \"id\":\"\"\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "virtual-network-gateway-connections create-or-update-parameters subnet set",
                  "usage": "[options]",
                  "filePath": "commands/arm/vnet/vnet._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--ip-configurations-index <ip-configurations-index>",
                      "required": -27,
                      "optional": 0,
                      "bool": true,
                      "long": "--ip-configurations-index",
                      "description": "Indexer: ip-configurations-index."
                    },
                    {
                      "flags": "--parse",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--parse",
                      "description": "Parse the input value string to a JSON object."
                    },
                    {
                      "flags": "--id <id>",
                      "required": -6,
                      "optional": 0,
                      "bool": true,
                      "long": "--id",
                      "description": "Set the id value."
                    }
                  ]
                },
                {
                  "name": "remove",
                  "description": "Remove subnet in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"subnet\" : {\r\n             \"id\":\"\"\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "virtual-network-gateway-connections create-or-update-parameters subnet remove",
                  "usage": "[options]",
                  "filePath": "commands/arm/vnet/vnet._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--ip-configurations-index <ip-configurations-index>",
                      "required": -27,
                      "optional": 0,
                      "bool": true,
                      "long": "--ip-configurations-index",
                      "description": "Indexer: ip-configurations-index."
                    },
                    {
                      "flags": "--id",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--id",
                      "description": "Remove the id value."
                    }
                  ]
                },
                {
                  "name": "add",
                  "description": "Add subnet in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"subnet\" : {\r\n             \"id\":\"\"\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "virtual-network-gateway-connections create-or-update-parameters subnet add",
                  "usage": "[options]",
                  "filePath": "commands/arm/vnet/vnet._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--key <key>",
                      "required": -7,
                      "optional": 0,
                      "bool": true,
                      "long": "--key",
                      "description": "The JSON key."
                    },
                    {
                      "flags": "--value <value>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--value",
                      "description": "The JSON value."
                    },
                    {
                      "flags": "--parse",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--parse",
                      "description": "Parse the input value string to a JSON object."
                    },
                    {
                      "flags": "--id <id>",
                      "required": -6,
                      "optional": 0,
                      "bool": true,
                      "long": "--id",
                      "description": "Add the id value."
                    }
                  ]
                }
              ],
              "categories": {}
            },
            "public-ip-address": {
              "name": "public-ip-address",
              "description": "Commands to set/remove/add public-ip-address of virtual-network-gateway-connections in create-or-update-parameters file.",
              "fullName": "virtual-network-gateway-connections create-or-update-parameters public-ip-address",
              "usage": "[options] [command]",
              "options": [],
              "commands": [
                {
                  "name": "remove",
                  "description": "Remove public-ip-address in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"publicIPAddress\" : {\r\n             \"id\":\"\"\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "virtual-network-gateway-connections create-or-update-parameters public-ip-address remove",
                  "usage": "[options]",
                  "filePath": "commands/arm/vnet/vnet._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--ip-configurations-index <ip-configurations-index>",
                      "required": -27,
                      "optional": 0,
                      "bool": true,
                      "long": "--ip-configurations-index",
                      "description": "Indexer: ip-configurations-index."
                    }
                  ]
                },
                {
                  "name": "add",
                  "description": "Add public-ip-address in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"publicIPAddress\" : {\r\n             \"id\":\"\"\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "virtual-network-gateway-connections create-or-update-parameters public-ip-address add",
                  "usage": "[options]",
                  "filePath": "commands/arm/vnet/vnet._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--key <key>",
                      "required": -7,
                      "optional": 0,
                      "bool": true,
                      "long": "--key",
                      "description": "The JSON key."
                    },
                    {
                      "flags": "--value <value>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--value",
                      "description": "The JSON value."
                    },
                    {
                      "flags": "--parse",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--parse",
                      "description": "Parse the input value string to a JSON object."
                    }
                  ]
                }
              ],
              "categories": {}
            },
            "gateway-default-site": {
              "name": "gateway-default-site",
              "description": "Commands to set/remove/add gateway-default-site of virtual-network-gateway-connections in create-or-update-parameters file.",
              "fullName": "virtual-network-gateway-connections create-or-update-parameters gateway-default-site",
              "usage": "[options] [command]",
              "options": [],
              "commands": [
                {
                  "name": "remove",
                  "description": "Remove gateway-default-site in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"gatewayDefaultSite\" : {\r\n             \"id\":\"\"\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "virtual-network-gateway-connections create-or-update-parameters gateway-default-site remove",
                  "usage": "[options]",
                  "filePath": "commands/arm/vnet/vnet._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    }
                  ]
                },
                {
                  "name": "add",
                  "description": "Add gateway-default-site in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"gatewayDefaultSite\" : {\r\n             \"id\":\"\"\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "virtual-network-gateway-connections create-or-update-parameters gateway-default-site add",
                  "usage": "[options]",
                  "filePath": "commands/arm/vnet/vnet._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--key <key>",
                      "required": -7,
                      "optional": 0,
                      "bool": true,
                      "long": "--key",
                      "description": "The JSON key."
                    },
                    {
                      "flags": "--value <value>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--value",
                      "description": "The JSON value."
                    },
                    {
                      "flags": "--parse",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--parse",
                      "description": "Parse the input value string to a JSON object."
                    }
                  ]
                }
              ],
              "categories": {}
            },
            "sku": {
              "name": "sku",
              "description": "Commands to set/remove/add sku of virtual-network-gateway-connections in create-or-update-parameters file.",
              "fullName": "virtual-network-gateway-connections create-or-update-parameters sku",
              "usage": "[options] [command]",
              "options": [],
              "commands": [
                {
                  "name": "set",
                  "description": "Set sku in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"sku\" : {\r\n             \"name\":\"\",\r\n             \"tier\":\"\",\r\n             \"capacity\":null\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "virtual-network-gateway-connections create-or-update-parameters sku set",
                  "usage": "[options]",
                  "filePath": "commands/arm/vnet/vnet._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--parse",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--parse",
                      "description": "Parse the input value string to a JSON object."
                    },
                    {
                      "flags": "--name <name>",
                      "required": -8,
                      "optional": 0,
                      "bool": true,
                      "long": "--name",
                      "description": "Set the name value."
                    },
                    {
                      "flags": "--tier <tier>",
                      "required": -8,
                      "optional": 0,
                      "bool": true,
                      "long": "--tier",
                      "description": "Set the tier value."
                    },
                    {
                      "flags": "--capacity <capacity>",
                      "required": -12,
                      "optional": 0,
                      "bool": true,
                      "long": "--capacity",
                      "description": "Set the capacity value."
                    }
                  ]
                },
                {
                  "name": "remove",
                  "description": "Remove sku in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"sku\" : {\r\n             \"name\":\"\",\r\n             \"tier\":\"\",\r\n             \"capacity\":null\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "virtual-network-gateway-connections create-or-update-parameters sku remove",
                  "usage": "[options]",
                  "filePath": "commands/arm/vnet/vnet._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--name",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--name",
                      "description": "Remove the name value."
                    },
                    {
                      "flags": "--tier",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--tier",
                      "description": "Remove the tier value."
                    },
                    {
                      "flags": "--capacity",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--capacity",
                      "description": "Remove the capacity value."
                    }
                  ]
                },
                {
                  "name": "add",
                  "description": "Add sku in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"sku\" : {\r\n             \"name\":\"\",\r\n             \"tier\":\"\",\r\n             \"capacity\":null\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "virtual-network-gateway-connections create-or-update-parameters sku add",
                  "usage": "[options]",
                  "filePath": "commands/arm/vnet/vnet._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--key <key>",
                      "required": -7,
                      "optional": 0,
                      "bool": true,
                      "long": "--key",
                      "description": "The JSON key."
                    },
                    {
                      "flags": "--value <value>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--value",
                      "description": "The JSON value."
                    },
                    {
                      "flags": "--parse",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--parse",
                      "description": "Parse the input value string to a JSON object."
                    },
                    {
                      "flags": "--name <name>",
                      "required": -8,
                      "optional": 0,
                      "bool": true,
                      "long": "--name",
                      "description": "Add the name value."
                    },
                    {
                      "flags": "--tier <tier>",
                      "required": -8,
                      "optional": 0,
                      "bool": true,
                      "long": "--tier",
                      "description": "Add the tier value."
                    },
                    {
                      "flags": "--capacity <capacity>",
                      "required": -12,
                      "optional": 0,
                      "bool": true,
                      "long": "--capacity",
                      "description": "Add the capacity value."
                    }
                  ]
                }
              ],
              "categories": {}
            },
            "vpn-client-configuration": {
              "name": "vpn-client-configuration",
              "description": "Commands to set/remove/add vpn-client-configuration of virtual-network-gateway-connections in create-or-update-parameters file.",
              "fullName": "virtual-network-gateway-connections create-or-update-parameters vpn-client-configuration",
              "usage": "[options] [command]",
              "options": [],
              "commands": [
                {
                  "name": "set",
                  "description": "Set vpn-client-configuration in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"vpnClientConfiguration\" : {\r\n             \"vpnClientAddressPool\":{\r\n               \"addressPrefixes\":[\r\n                 \"\"\r\n               ]\r\n             },\r\n             \"vpnClientRootCertificates\":[\r\n               {\r\n                 \"name\":\"\",\r\n                 \"etag\":\"\",\r\n                 \"publicCertData\":\"\",\r\n                 \"provisioningState\":\"\",\r\n                 \"id\":\"\"\r\n               }\r\n             ],\r\n             \"vpnClientRevokedCertificates\":[\r\n               {\r\n                 \"name\":\"\",\r\n                 \"etag\":\"\",\r\n                 \"thumbprint\":\"\",\r\n                 \"provisioningState\":\"\",\r\n                 \"id\":\"\"\r\n               }\r\n             ]\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "virtual-network-gateway-connections create-or-update-parameters vpn-client-configuration set",
                  "usage": "[options]",
                  "filePath": "commands/arm/vnet/vnet._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--parse",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--parse",
                      "description": "Parse the input value string to a JSON object."
                    },
                    {
                      "flags": "--vpn-client-address-pool <vpnClientAddressPool>",
                      "required": -27,
                      "optional": 0,
                      "bool": true,
                      "long": "--vpn-client-address-pool",
                      "description": "Set the vpn-client-address-pool value."
                    },
                    {
                      "flags": "--vpn-client-root-certificates <vpnClientRootCertificates>",
                      "required": -32,
                      "optional": 0,
                      "bool": true,
                      "long": "--vpn-client-root-certificates",
                      "description": "Set the vpn-client-root-certificates value."
                    },
                    {
                      "flags": "--vpn-client-revoked-certificates <vpnClientRevokedCertificates>",
                      "required": -35,
                      "optional": 0,
                      "bool": true,
                      "long": "--vpn-client-revoked-certificates",
                      "description": "Set the vpn-client-revoked-certificates value."
                    }
                  ]
                },
                {
                  "name": "remove",
                  "description": "Remove vpn-client-configuration in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"vpnClientConfiguration\" : {\r\n             \"vpnClientAddressPool\":{\r\n               \"addressPrefixes\":[\r\n                 \"\"\r\n               ]\r\n             },\r\n             \"vpnClientRootCertificates\":[\r\n               {\r\n                 \"name\":\"\",\r\n                 \"etag\":\"\",\r\n                 \"publicCertData\":\"\",\r\n                 \"provisioningState\":\"\",\r\n                 \"id\":\"\"\r\n               }\r\n             ],\r\n             \"vpnClientRevokedCertificates\":[\r\n               {\r\n                 \"name\":\"\",\r\n                 \"etag\":\"\",\r\n                 \"thumbprint\":\"\",\r\n                 \"provisioningState\":\"\",\r\n                 \"id\":\"\"\r\n               }\r\n             ]\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "virtual-network-gateway-connections create-or-update-parameters vpn-client-configuration remove",
                  "usage": "[options]",
                  "filePath": "commands/arm/vnet/vnet._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--vpn-client-address-pool",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--vpn-client-address-pool",
                      "description": "Remove the vpn-client-address-pool value."
                    },
                    {
                      "flags": "--vpn-client-root-certificates",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--vpn-client-root-certificates",
                      "description": "Remove the vpn-client-root-certificates value."
                    },
                    {
                      "flags": "--vpn-client-revoked-certificates",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--vpn-client-revoked-certificates",
                      "description": "Remove the vpn-client-revoked-certificates value."
                    }
                  ]
                },
                {
                  "name": "add",
                  "description": "Add vpn-client-configuration in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"vpnClientConfiguration\" : {\r\n             \"vpnClientAddressPool\":{\r\n               \"addressPrefixes\":[\r\n                 \"\"\r\n               ]\r\n             },\r\n             \"vpnClientRootCertificates\":[\r\n               {\r\n                 \"name\":\"\",\r\n                 \"etag\":\"\",\r\n                 \"publicCertData\":\"\",\r\n                 \"provisioningState\":\"\",\r\n                 \"id\":\"\"\r\n               }\r\n             ],\r\n             \"vpnClientRevokedCertificates\":[\r\n               {\r\n                 \"name\":\"\",\r\n                 \"etag\":\"\",\r\n                 \"thumbprint\":\"\",\r\n                 \"provisioningState\":\"\",\r\n                 \"id\":\"\"\r\n               }\r\n             ]\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "virtual-network-gateway-connections create-or-update-parameters vpn-client-configuration add",
                  "usage": "[options]",
                  "filePath": "commands/arm/vnet/vnet._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--key <key>",
                      "required": -7,
                      "optional": 0,
                      "bool": true,
                      "long": "--key",
                      "description": "The JSON key."
                    },
                    {
                      "flags": "--value <value>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--value",
                      "description": "The JSON value."
                    },
                    {
                      "flags": "--parse",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--parse",
                      "description": "Parse the input value string to a JSON object."
                    },
                    {
                      "flags": "--vpn-client-address-pool <vpnClientAddressPool>",
                      "required": -27,
                      "optional": 0,
                      "bool": true,
                      "long": "--vpn-client-address-pool",
                      "description": "Add the vpn-client-address-pool value."
                    },
                    {
                      "flags": "--vpn-client-root-certificates <vpnClientRootCertificates>",
                      "required": -32,
                      "optional": 0,
                      "bool": true,
                      "long": "--vpn-client-root-certificates",
                      "description": "Add the vpn-client-root-certificates value."
                    },
                    {
                      "flags": "--vpn-client-revoked-certificates <vpnClientRevokedCertificates>",
                      "required": -35,
                      "optional": 0,
                      "bool": true,
                      "long": "--vpn-client-revoked-certificates",
                      "description": "Add the vpn-client-revoked-certificates value."
                    }
                  ]
                }
              ],
              "categories": {}
            },
            "vpn-client-address-pool": {
              "name": "vpn-client-address-pool",
              "description": "Commands to set/remove/add vpn-client-address-pool of virtual-network-gateway-connections in create-or-update-parameters file.",
              "fullName": "virtual-network-gateway-connections create-or-update-parameters vpn-client-address-pool",
              "usage": "[options] [command]",
              "options": [],
              "commands": [
                {
                  "name": "set",
                  "description": "Set vpn-client-address-pool in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"vpnClientAddressPool\" : {\r\n             \"addressPrefixes\":[\r\n               \"\"\r\n             ]\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "virtual-network-gateway-connections create-or-update-parameters vpn-client-address-pool set",
                  "usage": "[options]",
                  "filePath": "commands/arm/vnet/vnet._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--parse",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--parse",
                      "description": "Parse the input value string to a JSON object."
                    },
                    {
                      "flags": "--address-prefixes <addressPrefixes>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "long": "--address-prefixes",
                      "description": "Set the address-prefixes value."
                    }
                  ]
                },
                {
                  "name": "remove",
                  "description": "Remove vpn-client-address-pool in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"vpnClientAddressPool\" : {\r\n             \"addressPrefixes\":[\r\n               \"\"\r\n             ]\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "virtual-network-gateway-connections create-or-update-parameters vpn-client-address-pool remove",
                  "usage": "[options]",
                  "filePath": "commands/arm/vnet/vnet._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--address-prefixes",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--address-prefixes",
                      "description": "Remove the address-prefixes value."
                    }
                  ]
                },
                {
                  "name": "add",
                  "description": "Add vpn-client-address-pool in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"vpnClientAddressPool\" : {\r\n             \"addressPrefixes\":[\r\n               \"\"\r\n             ]\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "virtual-network-gateway-connections create-or-update-parameters vpn-client-address-pool add",
                  "usage": "[options]",
                  "filePath": "commands/arm/vnet/vnet._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--key <key>",
                      "required": -7,
                      "optional": 0,
                      "bool": true,
                      "long": "--key",
                      "description": "The JSON key."
                    },
                    {
                      "flags": "--value <value>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--value",
                      "description": "The JSON value."
                    },
                    {
                      "flags": "--parse",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--parse",
                      "description": "Parse the input value string to a JSON object."
                    },
                    {
                      "flags": "--address-prefixes <addressPrefixes>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "long": "--address-prefixes",
                      "description": "Add the address-prefixes value."
                    }
                  ]
                }
              ],
              "categories": {}
            },
            "address-prefixes": {
              "name": "address-prefixes",
              "description": "Commands to set/remove/add address-prefixes of virtual-network-gateway-connections in create-or-update-parameters file.",
              "fullName": "virtual-network-gateway-connections create-or-update-parameters address-prefixes",
              "usage": "[options] [command]",
              "options": [],
              "commands": [
                {
                  "name": "set",
                  "description": "Set address-prefixes in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"addressPrefixes\" : \"\"\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "virtual-network-gateway-connections create-or-update-parameters address-prefixes set",
                  "usage": "[options]",
                  "filePath": "commands/arm/vnet/vnet._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--index <index>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--index",
                      "description": "Indexer: index."
                    },
                    {
                      "flags": "--value <value>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--value",
                      "description": "The input string value for the indexed item."
                    },
                    {
                      "flags": "--parse",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--parse",
                      "description": "Parse the input value string to a JSON object."
                    }
                  ]
                },
                {
                  "name": "remove",
                  "description": "Remove address-prefixes in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"addressPrefixes\" : \"\"\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "virtual-network-gateway-connections create-or-update-parameters address-prefixes remove",
                  "usage": "[options]",
                  "filePath": "commands/arm/vnet/vnet._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--index <index>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--index",
                      "description": "Indexer: index."
                    }
                  ]
                },
                {
                  "name": "add",
                  "description": "Add address-prefixes in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"addressPrefixes\" : \"\"\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "virtual-network-gateway-connections create-or-update-parameters address-prefixes add",
                  "usage": "[options]",
                  "filePath": "commands/arm/vnet/vnet._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--key <key>",
                      "required": -7,
                      "optional": 0,
                      "bool": true,
                      "long": "--key",
                      "description": "The JSON key."
                    },
                    {
                      "flags": "--value <value>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--value",
                      "description": "The JSON value."
                    },
                    {
                      "flags": "--parse",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--parse",
                      "description": "Parse the input value string to a JSON object."
                    }
                  ]
                }
              ],
              "categories": {}
            },
            "vpn-client-root-certificates": {
              "name": "vpn-client-root-certificates",
              "description": "Commands to set/remove/add vpn-client-root-certificates of virtual-network-gateway-connections in create-or-update-parameters file.",
              "fullName": "virtual-network-gateway-connections create-or-update-parameters vpn-client-root-certificates",
              "usage": "[options] [command]",
              "options": [],
              "commands": [
                {
                  "name": "set",
                  "description": "Set vpn-client-root-certificates in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"vpnClientRootCertificates\" : {\r\n             \"name\":\"\",\r\n             \"etag\":\"\",\r\n             \"publicCertData\":\"\",\r\n             \"provisioningState\":\"\",\r\n             \"id\":\"\"\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "virtual-network-gateway-connections create-or-update-parameters vpn-client-root-certificates set",
                  "usage": "[options]",
                  "filePath": "commands/arm/vnet/vnet._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--index <index>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--index",
                      "description": "Indexer: index."
                    },
                    {
                      "flags": "--value <value>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--value",
                      "description": "The input string value for the indexed item."
                    },
                    {
                      "flags": "--parse",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--parse",
                      "description": "Parse the input value string to a JSON object."
                    },
                    {
                      "flags": "--name <name>",
                      "required": -8,
                      "optional": 0,
                      "bool": true,
                      "long": "--name",
                      "description": "Set the name value."
                    },
                    {
                      "flags": "--etag <etag>",
                      "required": -8,
                      "optional": 0,
                      "bool": true,
                      "long": "--etag",
                      "description": "Set the etag value."
                    },
                    {
                      "flags": "--public-cert-data <publicCertData>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "long": "--public-cert-data",
                      "description": "Set the public-cert-data value."
                    },
                    {
                      "flags": "--provisioning-state <provisioningState>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "long": "--provisioning-state",
                      "description": "Set the provisioning-state value."
                    },
                    {
                      "flags": "--id <id>",
                      "required": -6,
                      "optional": 0,
                      "bool": true,
                      "long": "--id",
                      "description": "Set the id value."
                    }
                  ]
                },
                {
                  "name": "remove",
                  "description": "Remove vpn-client-root-certificates in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"vpnClientRootCertificates\" : {\r\n             \"name\":\"\",\r\n             \"etag\":\"\",\r\n             \"publicCertData\":\"\",\r\n             \"provisioningState\":\"\",\r\n             \"id\":\"\"\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "virtual-network-gateway-connections create-or-update-parameters vpn-client-root-certificates remove",
                  "usage": "[options]",
                  "filePath": "commands/arm/vnet/vnet._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--index <index>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--index",
                      "description": "Indexer: index."
                    },
                    {
                      "flags": "--name",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--name",
                      "description": "Remove the name value."
                    },
                    {
                      "flags": "--etag",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--etag",
                      "description": "Remove the etag value."
                    },
                    {
                      "flags": "--public-cert-data",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--public-cert-data",
                      "description": "Remove the public-cert-data value."
                    },
                    {
                      "flags": "--provisioning-state",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--provisioning-state",
                      "description": "Remove the provisioning-state value."
                    },
                    {
                      "flags": "--id",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--id",
                      "description": "Remove the id value."
                    }
                  ]
                },
                {
                  "name": "add",
                  "description": "Add vpn-client-root-certificates in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"vpnClientRootCertificates\" : {\r\n             \"name\":\"\",\r\n             \"etag\":\"\",\r\n             \"publicCertData\":\"\",\r\n             \"provisioningState\":\"\",\r\n             \"id\":\"\"\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "virtual-network-gateway-connections create-or-update-parameters vpn-client-root-certificates add",
                  "usage": "[options]",
                  "filePath": "commands/arm/vnet/vnet._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--key <key>",
                      "required": -7,
                      "optional": 0,
                      "bool": true,
                      "long": "--key",
                      "description": "The JSON key."
                    },
                    {
                      "flags": "--value <value>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--value",
                      "description": "The JSON value."
                    },
                    {
                      "flags": "--parse",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--parse",
                      "description": "Parse the input value string to a JSON object."
                    },
                    {
                      "flags": "--name <name>",
                      "required": -8,
                      "optional": 0,
                      "bool": true,
                      "long": "--name",
                      "description": "Add the name value."
                    },
                    {
                      "flags": "--etag <etag>",
                      "required": -8,
                      "optional": 0,
                      "bool": true,
                      "long": "--etag",
                      "description": "Add the etag value."
                    },
                    {
                      "flags": "--public-cert-data <publicCertData>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "long": "--public-cert-data",
                      "description": "Add the public-cert-data value."
                    },
                    {
                      "flags": "--provisioning-state <provisioningState>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "long": "--provisioning-state",
                      "description": "Add the provisioning-state value."
                    },
                    {
                      "flags": "--id <id>",
                      "required": -6,
                      "optional": 0,
                      "bool": true,
                      "long": "--id",
                      "description": "Add the id value."
                    }
                  ]
                }
              ],
              "categories": {}
            },
            "vpn-client-revoked-certificates": {
              "name": "vpn-client-revoked-certificates",
              "description": "Commands to set/remove/add vpn-client-revoked-certificates of virtual-network-gateway-connections in create-or-update-parameters file.",
              "fullName": "virtual-network-gateway-connections create-or-update-parameters vpn-client-revoked-certificates",
              "usage": "[options] [command]",
              "options": [],
              "commands": [
                {
                  "name": "set",
                  "description": "Set vpn-client-revoked-certificates in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"vpnClientRevokedCertificates\" : {\r\n             \"name\":\"\",\r\n             \"etag\":\"\",\r\n             \"thumbprint\":\"\",\r\n             \"provisioningState\":\"\",\r\n             \"id\":\"\"\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "virtual-network-gateway-connections create-or-update-parameters vpn-client-revoked-certificates set",
                  "usage": "[options]",
                  "filePath": "commands/arm/vnet/vnet._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--index <index>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--index",
                      "description": "Indexer: index."
                    },
                    {
                      "flags": "--value <value>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--value",
                      "description": "The input string value for the indexed item."
                    },
                    {
                      "flags": "--parse",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--parse",
                      "description": "Parse the input value string to a JSON object."
                    },
                    {
                      "flags": "--name <name>",
                      "required": -8,
                      "optional": 0,
                      "bool": true,
                      "long": "--name",
                      "description": "Set the name value."
                    },
                    {
                      "flags": "--etag <etag>",
                      "required": -8,
                      "optional": 0,
                      "bool": true,
                      "long": "--etag",
                      "description": "Set the etag value."
                    },
                    {
                      "flags": "--thumbprint <thumbprint>",
                      "required": -14,
                      "optional": 0,
                      "bool": true,
                      "long": "--thumbprint",
                      "description": "Set the thumbprint value."
                    },
                    {
                      "flags": "--provisioning-state <provisioningState>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "long": "--provisioning-state",
                      "description": "Set the provisioning-state value."
                    },
                    {
                      "flags": "--id <id>",
                      "required": -6,
                      "optional": 0,
                      "bool": true,
                      "long": "--id",
                      "description": "Set the id value."
                    }
                  ]
                },
                {
                  "name": "remove",
                  "description": "Remove vpn-client-revoked-certificates in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"vpnClientRevokedCertificates\" : {\r\n             \"name\":\"\",\r\n             \"etag\":\"\",\r\n             \"thumbprint\":\"\",\r\n             \"provisioningState\":\"\",\r\n             \"id\":\"\"\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "virtual-network-gateway-connections create-or-update-parameters vpn-client-revoked-certificates remove",
                  "usage": "[options]",
                  "filePath": "commands/arm/vnet/vnet._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--index <index>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--index",
                      "description": "Indexer: index."
                    },
                    {
                      "flags": "--name",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--name",
                      "description": "Remove the name value."
                    },
                    {
                      "flags": "--etag",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--etag",
                      "description": "Remove the etag value."
                    },
                    {
                      "flags": "--thumbprint",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--thumbprint",
                      "description": "Remove the thumbprint value."
                    },
                    {
                      "flags": "--provisioning-state",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--provisioning-state",
                      "description": "Remove the provisioning-state value."
                    },
                    {
                      "flags": "--id",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--id",
                      "description": "Remove the id value."
                    }
                  ]
                },
                {
                  "name": "add",
                  "description": "Add vpn-client-revoked-certificates in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"vpnClientRevokedCertificates\" : {\r\n             \"name\":\"\",\r\n             \"etag\":\"\",\r\n             \"thumbprint\":\"\",\r\n             \"provisioningState\":\"\",\r\n             \"id\":\"\"\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "virtual-network-gateway-connections create-or-update-parameters vpn-client-revoked-certificates add",
                  "usage": "[options]",
                  "filePath": "commands/arm/vnet/vnet._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--key <key>",
                      "required": -7,
                      "optional": 0,
                      "bool": true,
                      "long": "--key",
                      "description": "The JSON key."
                    },
                    {
                      "flags": "--value <value>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--value",
                      "description": "The JSON value."
                    },
                    {
                      "flags": "--parse",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--parse",
                      "description": "Parse the input value string to a JSON object."
                    },
                    {
                      "flags": "--name <name>",
                      "required": -8,
                      "optional": 0,
                      "bool": true,
                      "long": "--name",
                      "description": "Add the name value."
                    },
                    {
                      "flags": "--etag <etag>",
                      "required": -8,
                      "optional": 0,
                      "bool": true,
                      "long": "--etag",
                      "description": "Add the etag value."
                    },
                    {
                      "flags": "--thumbprint <thumbprint>",
                      "required": -14,
                      "optional": 0,
                      "bool": true,
                      "long": "--thumbprint",
                      "description": "Add the thumbprint value."
                    },
                    {
                      "flags": "--provisioning-state <provisioningState>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "long": "--provisioning-state",
                      "description": "Add the provisioning-state value."
                    },
                    {
                      "flags": "--id <id>",
                      "required": -6,
                      "optional": 0,
                      "bool": true,
                      "long": "--id",
                      "description": "Add the id value."
                    }
                  ]
                }
              ],
              "categories": {}
            },
            "local-network-gateway": {
              "name": "local-network-gateway",
              "description": "Commands to set/remove/add local-network-gateway of virtual-network-gateway-connections in create-or-update-parameters file.",
              "fullName": "virtual-network-gateway-connections create-or-update-parameters local-network-gateway",
              "usage": "[options] [command]",
              "options": [],
              "commands": [
                {
                  "name": "set",
                  "description": "Set local-network-gateway in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"localNetworkGateway2\" : {\r\n             \"etag\":\"\",\r\n             \"localNetworkAddressSpace\":{\r\n               \"addressPrefixes\":[\r\n                 \"\"\r\n               ]\r\n             },\r\n             \"gatewayIpAddress\":\"\",\r\n             \"resourceGuid\":\"\",\r\n             \"provisioningState\":\"\",\r\n             \"id\":\"\",\r\n             \"name\":null,\r\n             \"type\":null,\r\n             \"location\":\"\",\r\n             \"tags\":{\r\n             }\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "virtual-network-gateway-connections create-or-update-parameters local-network-gateway set",
                  "usage": "[options]",
                  "filePath": "commands/arm/vnet/vnet._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--parse",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--parse",
                      "description": "Parse the input value string to a JSON object."
                    },
                    {
                      "flags": "--etag <etag>",
                      "required": -8,
                      "optional": 0,
                      "bool": true,
                      "long": "--etag",
                      "description": "Set the etag value."
                    },
                    {
                      "flags": "--local-network-address-space <localNetworkAddressSpace>",
                      "required": -31,
                      "optional": 0,
                      "bool": true,
                      "long": "--local-network-address-space",
                      "description": "Set the local-network-address-space value."
                    },
                    {
                      "flags": "--gateway-ip-address <gatewayIpAddress>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "long": "--gateway-ip-address",
                      "description": "Set the gateway-ip-address value."
                    },
                    {
                      "flags": "--resource-guid <resourceGuid>",
                      "required": -17,
                      "optional": 0,
                      "bool": true,
                      "long": "--resource-guid",
                      "description": "Set the resource-guid value."
                    },
                    {
                      "flags": "--provisioning-state <provisioningState>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "long": "--provisioning-state",
                      "description": "Set the provisioning-state value."
                    },
                    {
                      "flags": "--id <id>",
                      "required": -6,
                      "optional": 0,
                      "bool": true,
                      "long": "--id",
                      "description": "Set the id value."
                    },
                    {
                      "flags": "--name <name>",
                      "required": -8,
                      "optional": 0,
                      "bool": true,
                      "long": "--name",
                      "description": "Set the name value."
                    },
                    {
                      "flags": "--type <type>",
                      "required": -8,
                      "optional": 0,
                      "bool": true,
                      "long": "--type",
                      "description": "Set the type value."
                    },
                    {
                      "flags": "--location <location>",
                      "required": -12,
                      "optional": 0,
                      "bool": true,
                      "long": "--location",
                      "description": "Set the location value."
                    },
                    {
                      "flags": "--tags <tags>",
                      "required": -8,
                      "optional": 0,
                      "bool": true,
                      "long": "--tags",
                      "description": "Set the tags value."
                    }
                  ]
                },
                {
                  "name": "remove",
                  "description": "Remove local-network-gateway in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"localNetworkGateway2\" : {\r\n             \"etag\":\"\",\r\n             \"localNetworkAddressSpace\":{\r\n               \"addressPrefixes\":[\r\n                 \"\"\r\n               ]\r\n             },\r\n             \"gatewayIpAddress\":\"\",\r\n             \"resourceGuid\":\"\",\r\n             \"provisioningState\":\"\",\r\n             \"id\":\"\",\r\n             \"name\":null,\r\n             \"type\":null,\r\n             \"location\":\"\",\r\n             \"tags\":{\r\n             }\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "virtual-network-gateway-connections create-or-update-parameters local-network-gateway remove",
                  "usage": "[options]",
                  "filePath": "commands/arm/vnet/vnet._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--etag",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--etag",
                      "description": "Remove the etag value."
                    },
                    {
                      "flags": "--local-network-address-space",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--local-network-address-space",
                      "description": "Remove the local-network-address-space value."
                    },
                    {
                      "flags": "--gateway-ip-address",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--gateway-ip-address",
                      "description": "Remove the gateway-ip-address value."
                    },
                    {
                      "flags": "--resource-guid",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--resource-guid",
                      "description": "Remove the resource-guid value."
                    },
                    {
                      "flags": "--provisioning-state",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--provisioning-state",
                      "description": "Remove the provisioning-state value."
                    },
                    {
                      "flags": "--id",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--id",
                      "description": "Remove the id value."
                    },
                    {
                      "flags": "--name",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--name",
                      "description": "Remove the name value."
                    },
                    {
                      "flags": "--type",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--type",
                      "description": "Remove the type value."
                    },
                    {
                      "flags": "--location",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--location",
                      "description": "Remove the location value."
                    },
                    {
                      "flags": "--tags",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--tags",
                      "description": "Remove the tags value."
                    }
                  ]
                },
                {
                  "name": "add",
                  "description": "Add local-network-gateway in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"localNetworkGateway2\" : {\r\n             \"etag\":\"\",\r\n             \"localNetworkAddressSpace\":{\r\n               \"addressPrefixes\":[\r\n                 \"\"\r\n               ]\r\n             },\r\n             \"gatewayIpAddress\":\"\",\r\n             \"resourceGuid\":\"\",\r\n             \"provisioningState\":\"\",\r\n             \"id\":\"\",\r\n             \"name\":null,\r\n             \"type\":null,\r\n             \"location\":\"\",\r\n             \"tags\":{\r\n             }\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "virtual-network-gateway-connections create-or-update-parameters local-network-gateway add",
                  "usage": "[options]",
                  "filePath": "commands/arm/vnet/vnet._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--key <key>",
                      "required": -7,
                      "optional": 0,
                      "bool": true,
                      "long": "--key",
                      "description": "The JSON key."
                    },
                    {
                      "flags": "--value <value>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--value",
                      "description": "The JSON value."
                    },
                    {
                      "flags": "--parse",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--parse",
                      "description": "Parse the input value string to a JSON object."
                    },
                    {
                      "flags": "--etag <etag>",
                      "required": -8,
                      "optional": 0,
                      "bool": true,
                      "long": "--etag",
                      "description": "Add the etag value."
                    },
                    {
                      "flags": "--local-network-address-space <localNetworkAddressSpace>",
                      "required": -31,
                      "optional": 0,
                      "bool": true,
                      "long": "--local-network-address-space",
                      "description": "Add the local-network-address-space value."
                    },
                    {
                      "flags": "--gateway-ip-address <gatewayIpAddress>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "long": "--gateway-ip-address",
                      "description": "Add the gateway-ip-address value."
                    },
                    {
                      "flags": "--resource-guid <resourceGuid>",
                      "required": -17,
                      "optional": 0,
                      "bool": true,
                      "long": "--resource-guid",
                      "description": "Add the resource-guid value."
                    },
                    {
                      "flags": "--provisioning-state <provisioningState>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "long": "--provisioning-state",
                      "description": "Add the provisioning-state value."
                    },
                    {
                      "flags": "--id <id>",
                      "required": -6,
                      "optional": 0,
                      "bool": true,
                      "long": "--id",
                      "description": "Add the id value."
                    },
                    {
                      "flags": "--name <name>",
                      "required": -8,
                      "optional": 0,
                      "bool": true,
                      "long": "--name",
                      "description": "Add the name value."
                    },
                    {
                      "flags": "--type <type>",
                      "required": -8,
                      "optional": 0,
                      "bool": true,
                      "long": "--type",
                      "description": "Add the type value."
                    },
                    {
                      "flags": "--location <location>",
                      "required": -12,
                      "optional": 0,
                      "bool": true,
                      "long": "--location",
                      "description": "Add the location value."
                    },
                    {
                      "flags": "--tags <tags>",
                      "required": -8,
                      "optional": 0,
                      "bool": true,
                      "long": "--tags",
                      "description": "Add the tags value."
                    }
                  ]
                }
              ],
              "categories": {}
            },
            "local-network-address-space": {
              "name": "local-network-address-space",
              "description": "Commands to set/remove/add local-network-address-space of virtual-network-gateway-connections in create-or-update-parameters file.",
              "fullName": "virtual-network-gateway-connections create-or-update-parameters local-network-address-space",
              "usage": "[options] [command]",
              "options": [],
              "commands": [
                {
                  "name": "remove",
                  "description": "Remove local-network-address-space in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"localNetworkAddressSpace\" : {\r\n             \"addressPrefixes\":[\r\n               \"\"\r\n             ]\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "virtual-network-gateway-connections create-or-update-parameters local-network-address-space remove",
                  "usage": "[options]",
                  "filePath": "commands/arm/vnet/vnet._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    }
                  ]
                },
                {
                  "name": "add",
                  "description": "Add local-network-address-space in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"localNetworkAddressSpace\" : {\r\n             \"addressPrefixes\":[\r\n               \"\"\r\n             ]\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "virtual-network-gateway-connections create-or-update-parameters local-network-address-space add",
                  "usage": "[options]",
                  "filePath": "commands/arm/vnet/vnet._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--key <key>",
                      "required": -7,
                      "optional": 0,
                      "bool": true,
                      "long": "--key",
                      "description": "The JSON key."
                    },
                    {
                      "flags": "--value <value>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--value",
                      "description": "The JSON value."
                    },
                    {
                      "flags": "--parse",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--parse",
                      "description": "Parse the input value string to a JSON object."
                    }
                  ]
                }
              ],
              "categories": {}
            },
            "peer": {
              "name": "peer",
              "description": "Commands to set/remove/add peer of virtual-network-gateway-connections in create-or-update-parameters file.",
              "fullName": "virtual-network-gateway-connections create-or-update-parameters peer",
              "usage": "[options] [command]",
              "options": [],
              "commands": [
                {
                  "name": "remove",
                  "description": "Remove peer in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"peer\" : {\r\n             \"id\":\"\"\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "virtual-network-gateway-connections create-or-update-parameters peer remove",
                  "usage": "[options]",
                  "filePath": "commands/arm/vnet/vnet._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    }
                  ]
                },
                {
                  "name": "add",
                  "description": "Add peer in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"peer\" : {\r\n             \"id\":\"\"\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "virtual-network-gateway-connections create-or-update-parameters peer add",
                  "usage": "[options]",
                  "filePath": "commands/arm/vnet/vnet._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--key <key>",
                      "required": -7,
                      "optional": 0,
                      "bool": true,
                      "long": "--key",
                      "description": "The JSON key."
                    },
                    {
                      "flags": "--value <value>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--value",
                      "description": "The JSON value."
                    },
                    {
                      "flags": "--parse",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--parse",
                      "description": "Parse the input value string to a JSON object."
                    }
                  ]
                }
              ],
              "categories": {}
            }
          }
        },
        "reset-shared-key-parameters": {
          "name": "reset-shared-key-parameters",
          "description": "Commands to manage the parameter input file for your virtual-network-gateway-connections.",
          "fullName": "virtual-network-gateway-connections reset-shared-key-parameters",
          "usage": "[options] [command]",
          "options": [],
          "commands": [
            {
              "name": "generate",
              "description": "Generate virtualNetworkGatewayConnectionsResetSharedKey parameter string or files.",
              "fullName": "virtual-network-gateway-connections reset-shared-key-parameters generate",
              "usage": "[options]",
              "filePath": "commands/arm/vnet/vnet._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "--parameter-file <parameter-file>",
                  "required": -18,
                  "optional": 0,
                  "bool": true,
                  "long": "--parameter-file",
                  "description": "The parameter file path."
                }
              ]
            },
            {
              "name": "patch",
              "description": "Command to patch virtualNetworkGatewayConnectionsResetSharedKey parameter JSON file.",
              "fullName": "virtual-network-gateway-connections reset-shared-key-parameters patch",
              "usage": "[options]",
              "filePath": "commands/arm/vnet/vnet._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "--parameter-file <parameter-file>",
                  "required": -18,
                  "optional": 0,
                  "bool": true,
                  "long": "--parameter-file",
                  "description": "The parameter file path."
                },
                {
                  "flags": "--operation <operation>",
                  "required": -13,
                  "optional": 0,
                  "bool": true,
                  "long": "--operation",
                  "description": "The JSON patch operation: add, remove, or replace."
                },
                {
                  "flags": "--path <path>",
                  "required": -8,
                  "optional": 0,
                  "bool": true,
                  "long": "--path",
                  "description": "The JSON data path, e.g.: \"foo/1\"."
                },
                {
                  "flags": "--value <value>",
                  "required": -9,
                  "optional": 0,
                  "bool": true,
                  "long": "--value",
                  "description": "The JSON value."
                },
                {
                  "flags": "--parse",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--parse",
                  "description": "Parse the JSON value to object."
                }
              ]
            }
          ],
          "categories": {
            "connection-reset-shared-key": {
              "name": "connection-reset-shared-key",
              "description": "Commands to set/remove/add connection-reset-shared-key of virtual-network-gateway-connections in reset-shared-key-parameters file.",
              "fullName": "virtual-network-gateway-connections reset-shared-key-parameters connection-reset-shared-key",
              "usage": "[options] [command]",
              "options": [],
              "commands": [
                {
                  "name": "set",
                  "description": "Set connection-reset-shared-key in reset-shared-key-parameters string or files, e.g. \r\n{\r\n  \"keyLength\":null\r\n}\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "virtual-network-gateway-connections reset-shared-key-parameters connection-reset-shared-key set",
                  "usage": "[options]",
                  "filePath": "commands/arm/vnet/vnet._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--parse",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--parse",
                      "description": "Parse the input value string to a JSON object."
                    },
                    {
                      "flags": "--key-length <keyLength>",
                      "required": -14,
                      "optional": 0,
                      "bool": true,
                      "long": "--key-length",
                      "description": "Set the key-length value."
                    }
                  ]
                },
                {
                  "name": "remove",
                  "description": "Remove connection-reset-shared-key in reset-shared-key-parameters string or files, e.g. \r\n{\r\n  \"keyLength\":null\r\n}\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "virtual-network-gateway-connections reset-shared-key-parameters connection-reset-shared-key remove",
                  "usage": "[options]",
                  "filePath": "commands/arm/vnet/vnet._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--key-length",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--key-length",
                      "description": "Remove the key-length value."
                    }
                  ]
                },
                {
                  "name": "add",
                  "description": "Add connection-reset-shared-key in reset-shared-key-parameters string or files, e.g. \r\n{\r\n  \"keyLength\":null\r\n}\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "virtual-network-gateway-connections reset-shared-key-parameters connection-reset-shared-key add",
                  "usage": "[options]",
                  "filePath": "commands/arm/vnet/vnet._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--key <key>",
                      "required": -7,
                      "optional": 0,
                      "bool": true,
                      "long": "--key",
                      "description": "The JSON key."
                    },
                    {
                      "flags": "--value <value>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--value",
                      "description": "The JSON value."
                    },
                    {
                      "flags": "--parse",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--parse",
                      "description": "Parse the input value string to a JSON object."
                    },
                    {
                      "flags": "--key-length <keyLength>",
                      "required": -14,
                      "optional": 0,
                      "bool": true,
                      "long": "--key-length",
                      "description": "Add the key-length value."
                    }
                  ]
                }
              ],
              "categories": {}
            }
          }
        }
      }
    },
    "virtual-networks": {
      "name": "virtual-networks",
      "description": "Commands to manage your virtual networks.  ",
      "fullName": "virtual-networks",
      "usage": "[options] [command]",
      "options": [],
      "commands": [
        {
          "name": "create-or-update",
          "description": "Commands to manage your virtual networks by the create-or-update method.",
          "fullName": "virtual-networks create-or-update",
          "usage": "[options] <resource-group-name> <virtual-network-name> <parameters>",
          "filePath": "commands/arm/vnet/vnet._js",
          "options": [
            {
              "flags": "-v, --verbose",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-v",
              "long": "--verbose",
              "description": "use verbose output"
            },
            {
              "flags": "-vv",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "-vv",
              "description": "more verbose with debug output"
            },
            {
              "flags": "--json",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--json",
              "description": "use json output"
            },
            {
              "flags": "-g, --resource-group-name <resource-group-name>",
              "required": -27,
              "optional": 0,
              "bool": true,
              "short": "-g",
              "long": "--resource-group-name",
              "description": "resource-group-name"
            },
            {
              "flags": "--virtual-network-name <virtual-network-name>",
              "required": -24,
              "optional": 0,
              "bool": true,
              "long": "--virtual-network-name",
              "description": "virtual-network-name"
            },
            {
              "flags": "-p, --parameters <parameters>",
              "required": -18,
              "optional": 0,
              "bool": true,
              "short": "-p",
              "long": "--parameters",
              "description": "parameters"
            },
            {
              "flags": "--parameter-file <parameter-file>",
              "required": -18,
              "optional": 0,
              "bool": true,
              "long": "--parameter-file",
              "description": "the input parameter file"
            },
            {
              "flags": "-s, --subscription <subscription>",
              "required": -20,
              "optional": 0,
              "bool": true,
              "short": "-s",
              "long": "--subscription",
              "description": "the subscription identifier"
            }
          ]
        },
        {
          "name": "delete",
          "description": "Commands to manage your virtual networks by the delete method.",
          "fullName": "virtual-networks delete",
          "usage": "[options] <resource-group-name> <virtual-network-name>",
          "filePath": "commands/arm/vnet/vnet._js",
          "options": [
            {
              "flags": "-v, --verbose",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-v",
              "long": "--verbose",
              "description": "use verbose output"
            },
            {
              "flags": "-vv",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "-vv",
              "description": "more verbose with debug output"
            },
            {
              "flags": "--json",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--json",
              "description": "use json output"
            },
            {
              "flags": "-g, --resource-group-name <resource-group-name>",
              "required": -27,
              "optional": 0,
              "bool": true,
              "short": "-g",
              "long": "--resource-group-name",
              "description": "resource-group-name"
            },
            {
              "flags": "--virtual-network-name <virtual-network-name>",
              "required": -24,
              "optional": 0,
              "bool": true,
              "long": "--virtual-network-name",
              "description": "virtual-network-name"
            },
            {
              "flags": "--parameter-file <parameter-file>",
              "required": -18,
              "optional": 0,
              "bool": true,
              "long": "--parameter-file",
              "description": "the input parameter file"
            },
            {
              "flags": "-s, --subscription <subscription>",
              "required": -20,
              "optional": 0,
              "bool": true,
              "short": "-s",
              "long": "--subscription",
              "description": "the subscription identifier"
            }
          ]
        },
        {
          "name": "get",
          "description": "Commands to manage your virtual networks by the get method.",
          "fullName": "virtual-networks get",
          "usage": "[options] <resource-group-name> <virtual-network-name> <expand>",
          "filePath": "commands/arm/vnet/vnet._js",
          "options": [
            {
              "flags": "-v, --verbose",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-v",
              "long": "--verbose",
              "description": "use verbose output"
            },
            {
              "flags": "-vv",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "-vv",
              "description": "more verbose with debug output"
            },
            {
              "flags": "--json",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--json",
              "description": "use json output"
            },
            {
              "flags": "-g, --resource-group-name <resource-group-name>",
              "required": -27,
              "optional": 0,
              "bool": true,
              "short": "-g",
              "long": "--resource-group-name",
              "description": "resource-group-name"
            },
            {
              "flags": "--virtual-network-name <virtual-network-name>",
              "required": -24,
              "optional": 0,
              "bool": true,
              "long": "--virtual-network-name",
              "description": "virtual-network-name"
            },
            {
              "flags": "--expand <expand>",
              "required": -10,
              "optional": 0,
              "bool": true,
              "long": "--expand",
              "description": "expand"
            },
            {
              "flags": "--parameter-file <parameter-file>",
              "required": -18,
              "optional": 0,
              "bool": true,
              "long": "--parameter-file",
              "description": "the input parameter file"
            },
            {
              "flags": "-s, --subscription <subscription>",
              "required": -20,
              "optional": 0,
              "bool": true,
              "short": "-s",
              "long": "--subscription",
              "description": "the subscription identifier"
            }
          ]
        },
        {
          "name": "list",
          "description": "Commands to manage your virtual networks by the list method.",
          "fullName": "virtual-networks list",
          "usage": "[options] <resource-group-name>",
          "filePath": "commands/arm/vnet/vnet._js",
          "options": [
            {
              "flags": "-v, --verbose",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-v",
              "long": "--verbose",
              "description": "use verbose output"
            },
            {
              "flags": "-vv",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "-vv",
              "description": "more verbose with debug output"
            },
            {
              "flags": "--json",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--json",
              "description": "use json output"
            },
            {
              "flags": "-g, --resource-group-name <resource-group-name>",
              "required": -27,
              "optional": 0,
              "bool": true,
              "short": "-g",
              "long": "--resource-group-name",
              "description": "resource-group-name"
            },
            {
              "flags": "--parameter-file <parameter-file>",
              "required": -18,
              "optional": 0,
              "bool": true,
              "long": "--parameter-file",
              "description": "the input parameter file"
            },
            {
              "flags": "-s, --subscription <subscription>",
              "required": -20,
              "optional": 0,
              "bool": true,
              "short": "-s",
              "long": "--subscription",
              "description": "the subscription identifier"
            }
          ]
        },
        {
          "name": "list-all",
          "description": "Commands to manage your virtual networks by the list-all method.",
          "fullName": "virtual-networks list-all",
          "usage": "[options]",
          "filePath": "commands/arm/vnet/vnet._js",
          "options": [
            {
              "flags": "-v, --verbose",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-v",
              "long": "--verbose",
              "description": "use verbose output"
            },
            {
              "flags": "-vv",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "-vv",
              "description": "more verbose with debug output"
            },
            {
              "flags": "--json",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--json",
              "description": "use json output"
            },
            {
              "flags": "--parameter-file <parameter-file>",
              "required": -18,
              "optional": 0,
              "bool": true,
              "long": "--parameter-file",
              "description": "the input parameter file"
            },
            {
              "flags": "-s, --subscription <subscription>",
              "required": -20,
              "optional": 0,
              "bool": true,
              "short": "-s",
              "long": "--subscription",
              "description": "the subscription identifier"
            }
          ]
        },
        {
          "name": "list-all-next",
          "description": "Commands to manage your virtual networks by the list-all-next method.",
          "fullName": "virtual-networks list-all-next",
          "usage": "[options] <next-page-link>",
          "filePath": "commands/arm/vnet/vnet._js",
          "options": [
            {
              "flags": "-v, --verbose",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-v",
              "long": "--verbose",
              "description": "use verbose output"
            },
            {
              "flags": "-vv",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "-vv",
              "description": "more verbose with debug output"
            },
            {
              "flags": "--json",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--json",
              "description": "use json output"
            },
            {
              "flags": "--next-page-link <next-page-link>",
              "required": -18,
              "optional": 0,
              "bool": true,
              "long": "--next-page-link",
              "description": "next-page-link"
            },
            {
              "flags": "--parameter-file <parameter-file>",
              "required": -18,
              "optional": 0,
              "bool": true,
              "long": "--parameter-file",
              "description": "the input parameter file"
            },
            {
              "flags": "-s, --subscription <subscription>",
              "required": -20,
              "optional": 0,
              "bool": true,
              "short": "-s",
              "long": "--subscription",
              "description": "the subscription identifier"
            }
          ]
        },
        {
          "name": "list-next",
          "description": "Commands to manage your virtual networks by the list-next method.",
          "fullName": "virtual-networks list-next",
          "usage": "[options] <next-page-link>",
          "filePath": "commands/arm/vnet/vnet._js",
          "options": [
            {
              "flags": "-v, --verbose",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-v",
              "long": "--verbose",
              "description": "use verbose output"
            },
            {
              "flags": "-vv",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "-vv",
              "description": "more verbose with debug output"
            },
            {
              "flags": "--json",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--json",
              "description": "use json output"
            },
            {
              "flags": "--next-page-link <next-page-link>",
              "required": -18,
              "optional": 0,
              "bool": true,
              "long": "--next-page-link",
              "description": "next-page-link"
            },
            {
              "flags": "--parameter-file <parameter-file>",
              "required": -18,
              "optional": 0,
              "bool": true,
              "long": "--parameter-file",
              "description": "the input parameter file"
            },
            {
              "flags": "-s, --subscription <subscription>",
              "required": -20,
              "optional": 0,
              "bool": true,
              "short": "-s",
              "long": "--subscription",
              "description": "the subscription identifier"
            }
          ]
        }
      ],
      "categories": {
        "create-or-update-parameters": {
          "name": "create-or-update-parameters",
          "description": "Commands to manage the parameter input file for your virtual-networks.",
          "fullName": "virtual-networks create-or-update-parameters",
          "usage": "[options] [command]",
          "options": [],
          "commands": [
            {
              "name": "generate",
              "description": "Generate virtualNetworksCreateOrUpdate parameter string or files.",
              "fullName": "virtual-networks create-or-update-parameters generate",
              "usage": "[options]",
              "filePath": "commands/arm/vnet/vnet._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "--parameter-file <parameter-file>",
                  "required": -18,
                  "optional": 0,
                  "bool": true,
                  "long": "--parameter-file",
                  "description": "The parameter file path."
                }
              ]
            },
            {
              "name": "patch",
              "description": "Command to patch virtualNetworksCreateOrUpdate parameter JSON file.",
              "fullName": "virtual-networks create-or-update-parameters patch",
              "usage": "[options]",
              "filePath": "commands/arm/vnet/vnet._js",
              "options": [
                {
                  "flags": "-v, --verbose",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "short": "-v",
                  "long": "--verbose",
                  "description": "use verbose output"
                },
                {
                  "flags": "-vv",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "-vv",
                  "description": "more verbose with debug output"
                },
                {
                  "flags": "--json",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--json",
                  "description": "use json output"
                },
                {
                  "flags": "--parameter-file <parameter-file>",
                  "required": -18,
                  "optional": 0,
                  "bool": true,
                  "long": "--parameter-file",
                  "description": "The parameter file path."
                },
                {
                  "flags": "--operation <operation>",
                  "required": -13,
                  "optional": 0,
                  "bool": true,
                  "long": "--operation",
                  "description": "The JSON patch operation: add, remove, or replace."
                },
                {
                  "flags": "--path <path>",
                  "required": -8,
                  "optional": 0,
                  "bool": true,
                  "long": "--path",
                  "description": "The JSON data path, e.g.: \"foo/1\"."
                },
                {
                  "flags": "--value <value>",
                  "required": -9,
                  "optional": 0,
                  "bool": true,
                  "long": "--value",
                  "description": "The JSON value."
                },
                {
                  "flags": "--parse",
                  "required": 0,
                  "optional": 0,
                  "bool": true,
                  "long": "--parse",
                  "description": "Parse the JSON value to object."
                }
              ]
            }
          ],
          "categories": {
            "virtual-network": {
              "name": "virtual-network",
              "description": "Commands to set/remove/add virtual-network of virtual-networks in create-or-update-parameters file.",
              "fullName": "virtual-networks create-or-update-parameters virtual-network",
              "usage": "[options] [command]",
              "options": [],
              "commands": [
                {
                  "name": "set",
                  "description": "Set virtual-network in create-or-update-parameters string or files, e.g. \r\n{\r\n  \"etag\":\"\",\r\n  \"addressSpace\":{\r\n    \"addressPrefixes\":[\r\n      \"\"\r\n    ]\r\n  },\r\n  \"dhcpOptions\":{\r\n    \"dnsServers\":[\r\n      \"\"\r\n    ]\r\n  },\r\n  \"subnets\":[\r\n    {\r\n      \"name\":\"\",\r\n      \"etag\":\"\",\r\n      \"addressPrefix\":\"\",\r\n      \"networkSecurityGroup\":{\r\n        \"etag\":\"\",\r\n        \"securityRules\":[\r\n          {\r\n            \"name\":\"\",\r\n            \"etag\":\"\",\r\n            \"description\":\"\",\r\n            \"protocol\":\"\",\r\n            \"sourcePortRange\":\"\",\r\n            \"destinationPortRange\":\"\",\r\n            \"sourceAddressPrefix\":\"\",\r\n            \"destinationAddressPrefix\":\"\",\r\n            \"access\":\"\",\r\n            \"priority\":null,\r\n            \"direction\":\"\",\r\n            \"provisioningState\":\"\",\r\n            \"id\":\"\"\r\n          }\r\n        ],\r\n        \"defaultSecurityRules\":[\r\nnull\r\n        ],\r\n        \"networkInterfaces\":[\r\n          {\r\n            \"etag\":\"\",\r\n            \"virtualMachine\":{\r\n              \"id\":\"\"\r\n            },\r\n            \"networkSecurityGroup\":null,\r\n            \"ipConfigurations\":[\r\n              {\r\n                \"name\":\"\",\r\n                \"etag\":\"\",\r\n                \"loadBalancerBackendAddressPools\":[\r\n                  {\r\n                    \"name\":\"\",\r\n                    \"etag\":\"\",\r\n                    \"backendIPConfigurations\":[\r\nnull\r\n                    ],\r\n                    \"loadBalancingRules\":[\r\nnull\r\n                    ],\r\n                    \"outboundNatRule\":null,\r\n                    \"provisioningState\":\"\",\r\n                    \"id\":\"\"\r\n                  }\r\n                ],\r\n                \"loadBalancerInboundNatRules\":[\r\n                  {\r\n                    \"name\":\"\",\r\n                    \"etag\":\"\",\r\n                    \"frontendIPConfiguration\":null,\r\n                    \"backendIPConfiguration\":null,\r\n                    \"protocol\":\"\",\r\n                    \"frontendPort\":null,\r\n                    \"backendPort\":null,\r\n                    \"idleTimeoutInMinutes\":null,\r\n                    \"enableFloatingIP\":null,\r\n                    \"provisioningState\":\"\",\r\n                    \"id\":\"\"\r\n                  }\r\n                ],\r\n                \"privateIPAddress\":\"\",\r\n                \"privateIPAllocationMethod\":\"\",\r\n                \"subnet\":null,\r\n                \"publicIPAddress\":{\r\n                  \"etag\":\"\",\r\n                  \"publicIPAllocationMethod\":\"\",\r\n                  \"ipConfiguration\":{\r\n                    \"name\":\"\",\r\n                    \"etag\":\"\",\r\n                    \"privateIPAddress\":\"\",\r\n                    \"privateIPAllocationMethod\":\"\",\r\n                    \"subnet\":null,\r\n                    \"publicIPAddress\":null,\r\n                    \"provisioningState\":\"\",\r\n                    \"id\":\"\"\r\n                  },\r\n                  \"dnsSettings\":{\r\n                    \"domainNameLabel\":\"\",\r\n                    \"fqdn\":\"\",\r\n                    \"reverseFqdn\":\"\"\r\n                  },\r\n                  \"ipAddress\":\"\",\r\n                  \"idleTimeoutInMinutes\":null,\r\n                  \"resourceGuid\":\"\",\r\n                  \"provisioningState\":\"\",\r\n                  \"id\":\"\",\r\n                  \"name\":null,\r\n                  \"type\":null,\r\n                  \"location\":\"\",\r\n                  \"tags\":{\r\n                  }\r\n                },\r\n                \"provisioningState\":\"\",\r\n                \"id\":\"\"\r\n              }\r\n            ],\r\n            \"dnsSettings\":{\r\n              \"dnsServers\":[\r\n                \"\"\r\n              ],\r\n              \"appliedDnsServers\":[\r\n                \"\"\r\n              ],\r\n              \"internalDnsNameLabel\":\"\",\r\n              \"internalFqdn\":\"\"\r\n            },\r\n            \"macAddress\":\"\",\r\n            \"primary\":null,\r\n            \"enableIPForwarding\":null,\r\n            \"resourceGuid\":\"\",\r\n            \"provisioningState\":\"\",\r\n            \"id\":\"\",\r\n            \"name\":null,\r\n            \"type\":null,\r\n            \"location\":\"\",\r\n            \"tags\":{\r\n            }\r\n          }\r\n        ],\r\n        \"subnets\":[\r\nnull\r\n        ],\r\n        \"resourceGuid\":\"\",\r\n        \"provisioningState\":\"\",\r\n        \"id\":\"\",\r\n        \"name\":null,\r\n        \"type\":null,\r\n        \"location\":\"\",\r\n        \"tags\":{\r\n        }\r\n      },\r\n      \"routeTable\":{\r\n        \"etag\":\"\",\r\n        \"routes\":[\r\n          {\r\n            \"name\":\"\",\r\n            \"etag\":\"\",\r\n            \"addressPrefix\":\"\",\r\n            \"nextHopType\":\"\",\r\n            \"nextHopIpAddress\":\"\",\r\n            \"provisioningState\":\"\",\r\n            \"id\":\"\"\r\n          }\r\n        ],\r\n        \"subnets\":[\r\nnull\r\n        ],\r\n        \"provisioningState\":\"\",\r\n        \"id\":\"\",\r\n        \"name\":null,\r\n        \"type\":null,\r\n        \"location\":\"\",\r\n        \"tags\":{\r\n        }\r\n      },\r\n      \"ipConfigurations\":[\r\nnull\r\n      ],\r\n      \"provisioningState\":\"\",\r\n      \"id\":\"\"\r\n    }\r\n  ],\r\n  \"resourceGuid\":\"\",\r\n  \"provisioningState\":\"\",\r\n  \"id\":\"\",\r\n  \"name\":null,\r\n  \"type\":null,\r\n  \"location\":\"\",\r\n  \"tags\":{\r\n  }\r\n}\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "virtual-networks create-or-update-parameters virtual-network set",
                  "usage": "[options]",
                  "filePath": "commands/arm/vnet/vnet._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--parse",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--parse",
                      "description": "Parse the input value string to a JSON object."
                    },
                    {
                      "flags": "--etag <etag>",
                      "required": -8,
                      "optional": 0,
                      "bool": true,
                      "long": "--etag",
                      "description": "Set the etag value."
                    },
                    {
                      "flags": "--address-space <addressSpace>",
                      "required": -17,
                      "optional": 0,
                      "bool": true,
                      "long": "--address-space",
                      "description": "Set the address-space value."
                    },
                    {
                      "flags": "--dhcp-options <dhcpOptions>",
                      "required": -16,
                      "optional": 0,
                      "bool": true,
                      "long": "--dhcp-options",
                      "description": "Set the dhcp-options value."
                    },
                    {
                      "flags": "--subnets <subnets>",
                      "required": -11,
                      "optional": 0,
                      "bool": true,
                      "long": "--subnets",
                      "description": "Set the subnets value."
                    },
                    {
                      "flags": "--resource-guid <resourceGuid>",
                      "required": -17,
                      "optional": 0,
                      "bool": true,
                      "long": "--resource-guid",
                      "description": "Set the resource-guid value."
                    },
                    {
                      "flags": "--provisioning-state <provisioningState>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "long": "--provisioning-state",
                      "description": "Set the provisioning-state value."
                    },
                    {
                      "flags": "--id <id>",
                      "required": -6,
                      "optional": 0,
                      "bool": true,
                      "long": "--id",
                      "description": "Set the id value."
                    },
                    {
                      "flags": "--name <name>",
                      "required": -8,
                      "optional": 0,
                      "bool": true,
                      "long": "--name",
                      "description": "Set the name value."
                    },
                    {
                      "flags": "--type <type>",
                      "required": -8,
                      "optional": 0,
                      "bool": true,
                      "long": "--type",
                      "description": "Set the type value."
                    },
                    {
                      "flags": "--location <location>",
                      "required": -12,
                      "optional": 0,
                      "bool": true,
                      "long": "--location",
                      "description": "Set the location value."
                    },
                    {
                      "flags": "--tags <tags>",
                      "required": -8,
                      "optional": 0,
                      "bool": true,
                      "long": "--tags",
                      "description": "Set the tags value."
                    }
                  ]
                },
                {
                  "name": "remove",
                  "description": "Remove virtual-network in create-or-update-parameters string or files, e.g. \r\n{\r\n  \"etag\":\"\",\r\n  \"addressSpace\":{\r\n    \"addressPrefixes\":[\r\n      \"\"\r\n    ]\r\n  },\r\n  \"dhcpOptions\":{\r\n    \"dnsServers\":[\r\n      \"\"\r\n    ]\r\n  },\r\n  \"subnets\":[\r\n    {\r\n      \"name\":\"\",\r\n      \"etag\":\"\",\r\n      \"addressPrefix\":\"\",\r\n      \"networkSecurityGroup\":{\r\n        \"etag\":\"\",\r\n        \"securityRules\":[\r\n          {\r\n            \"name\":\"\",\r\n            \"etag\":\"\",\r\n            \"description\":\"\",\r\n            \"protocol\":\"\",\r\n            \"sourcePortRange\":\"\",\r\n            \"destinationPortRange\":\"\",\r\n            \"sourceAddressPrefix\":\"\",\r\n            \"destinationAddressPrefix\":\"\",\r\n            \"access\":\"\",\r\n            \"priority\":null,\r\n            \"direction\":\"\",\r\n            \"provisioningState\":\"\",\r\n            \"id\":\"\"\r\n          }\r\n        ],\r\n        \"defaultSecurityRules\":[\r\nnull\r\n        ],\r\n        \"networkInterfaces\":[\r\n          {\r\n            \"etag\":\"\",\r\n            \"virtualMachine\":{\r\n              \"id\":\"\"\r\n            },\r\n            \"networkSecurityGroup\":null,\r\n            \"ipConfigurations\":[\r\n              {\r\n                \"name\":\"\",\r\n                \"etag\":\"\",\r\n                \"loadBalancerBackendAddressPools\":[\r\n                  {\r\n                    \"name\":\"\",\r\n                    \"etag\":\"\",\r\n                    \"backendIPConfigurations\":[\r\nnull\r\n                    ],\r\n                    \"loadBalancingRules\":[\r\nnull\r\n                    ],\r\n                    \"outboundNatRule\":null,\r\n                    \"provisioningState\":\"\",\r\n                    \"id\":\"\"\r\n                  }\r\n                ],\r\n                \"loadBalancerInboundNatRules\":[\r\n                  {\r\n                    \"name\":\"\",\r\n                    \"etag\":\"\",\r\n                    \"frontendIPConfiguration\":null,\r\n                    \"backendIPConfiguration\":null,\r\n                    \"protocol\":\"\",\r\n                    \"frontendPort\":null,\r\n                    \"backendPort\":null,\r\n                    \"idleTimeoutInMinutes\":null,\r\n                    \"enableFloatingIP\":null,\r\n                    \"provisioningState\":\"\",\r\n                    \"id\":\"\"\r\n                  }\r\n                ],\r\n                \"privateIPAddress\":\"\",\r\n                \"privateIPAllocationMethod\":\"\",\r\n                \"subnet\":null,\r\n                \"publicIPAddress\":{\r\n                  \"etag\":\"\",\r\n                  \"publicIPAllocationMethod\":\"\",\r\n                  \"ipConfiguration\":{\r\n                    \"name\":\"\",\r\n                    \"etag\":\"\",\r\n                    \"privateIPAddress\":\"\",\r\n                    \"privateIPAllocationMethod\":\"\",\r\n                    \"subnet\":null,\r\n                    \"publicIPAddress\":null,\r\n                    \"provisioningState\":\"\",\r\n                    \"id\":\"\"\r\n                  },\r\n                  \"dnsSettings\":{\r\n                    \"domainNameLabel\":\"\",\r\n                    \"fqdn\":\"\",\r\n                    \"reverseFqdn\":\"\"\r\n                  },\r\n                  \"ipAddress\":\"\",\r\n                  \"idleTimeoutInMinutes\":null,\r\n                  \"resourceGuid\":\"\",\r\n                  \"provisioningState\":\"\",\r\n                  \"id\":\"\",\r\n                  \"name\":null,\r\n                  \"type\":null,\r\n                  \"location\":\"\",\r\n                  \"tags\":{\r\n                  }\r\n                },\r\n                \"provisioningState\":\"\",\r\n                \"id\":\"\"\r\n              }\r\n            ],\r\n            \"dnsSettings\":{\r\n              \"dnsServers\":[\r\n                \"\"\r\n              ],\r\n              \"appliedDnsServers\":[\r\n                \"\"\r\n              ],\r\n              \"internalDnsNameLabel\":\"\",\r\n              \"internalFqdn\":\"\"\r\n            },\r\n            \"macAddress\":\"\",\r\n            \"primary\":null,\r\n            \"enableIPForwarding\":null,\r\n            \"resourceGuid\":\"\",\r\n            \"provisioningState\":\"\",\r\n            \"id\":\"\",\r\n            \"name\":null,\r\n            \"type\":null,\r\n            \"location\":\"\",\r\n            \"tags\":{\r\n            }\r\n          }\r\n        ],\r\n        \"subnets\":[\r\nnull\r\n        ],\r\n        \"resourceGuid\":\"\",\r\n        \"provisioningState\":\"\",\r\n        \"id\":\"\",\r\n        \"name\":null,\r\n        \"type\":null,\r\n        \"location\":\"\",\r\n        \"tags\":{\r\n        }\r\n      },\r\n      \"routeTable\":{\r\n        \"etag\":\"\",\r\n        \"routes\":[\r\n          {\r\n            \"name\":\"\",\r\n            \"etag\":\"\",\r\n            \"addressPrefix\":\"\",\r\n            \"nextHopType\":\"\",\r\n            \"nextHopIpAddress\":\"\",\r\n            \"provisioningState\":\"\",\r\n            \"id\":\"\"\r\n          }\r\n        ],\r\n        \"subnets\":[\r\nnull\r\n        ],\r\n        \"provisioningState\":\"\",\r\n        \"id\":\"\",\r\n        \"name\":null,\r\n        \"type\":null,\r\n        \"location\":\"\",\r\n        \"tags\":{\r\n        }\r\n      },\r\n      \"ipConfigurations\":[\r\nnull\r\n      ],\r\n      \"provisioningState\":\"\",\r\n      \"id\":\"\"\r\n    }\r\n  ],\r\n  \"resourceGuid\":\"\",\r\n  \"provisioningState\":\"\",\r\n  \"id\":\"\",\r\n  \"name\":null,\r\n  \"type\":null,\r\n  \"location\":\"\",\r\n  \"tags\":{\r\n  }\r\n}\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "virtual-networks create-or-update-parameters virtual-network remove",
                  "usage": "[options]",
                  "filePath": "commands/arm/vnet/vnet._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--etag",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--etag",
                      "description": "Remove the etag value."
                    },
                    {
                      "flags": "--address-space",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--address-space",
                      "description": "Remove the address-space value."
                    },
                    {
                      "flags": "--dhcp-options",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--dhcp-options",
                      "description": "Remove the dhcp-options value."
                    },
                    {
                      "flags": "--subnets",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--subnets",
                      "description": "Remove the subnets value."
                    },
                    {
                      "flags": "--resource-guid",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--resource-guid",
                      "description": "Remove the resource-guid value."
                    },
                    {
                      "flags": "--provisioning-state",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--provisioning-state",
                      "description": "Remove the provisioning-state value."
                    },
                    {
                      "flags": "--id",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--id",
                      "description": "Remove the id value."
                    },
                    {
                      "flags": "--name",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--name",
                      "description": "Remove the name value."
                    },
                    {
                      "flags": "--type",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--type",
                      "description": "Remove the type value."
                    },
                    {
                      "flags": "--location",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--location",
                      "description": "Remove the location value."
                    },
                    {
                      "flags": "--tags",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--tags",
                      "description": "Remove the tags value."
                    }
                  ]
                },
                {
                  "name": "add",
                  "description": "Add virtual-network in create-or-update-parameters string or files, e.g. \r\n{\r\n  \"etag\":\"\",\r\n  \"addressSpace\":{\r\n    \"addressPrefixes\":[\r\n      \"\"\r\n    ]\r\n  },\r\n  \"dhcpOptions\":{\r\n    \"dnsServers\":[\r\n      \"\"\r\n    ]\r\n  },\r\n  \"subnets\":[\r\n    {\r\n      \"name\":\"\",\r\n      \"etag\":\"\",\r\n      \"addressPrefix\":\"\",\r\n      \"networkSecurityGroup\":{\r\n        \"etag\":\"\",\r\n        \"securityRules\":[\r\n          {\r\n            \"name\":\"\",\r\n            \"etag\":\"\",\r\n            \"description\":\"\",\r\n            \"protocol\":\"\",\r\n            \"sourcePortRange\":\"\",\r\n            \"destinationPortRange\":\"\",\r\n            \"sourceAddressPrefix\":\"\",\r\n            \"destinationAddressPrefix\":\"\",\r\n            \"access\":\"\",\r\n            \"priority\":null,\r\n            \"direction\":\"\",\r\n            \"provisioningState\":\"\",\r\n            \"id\":\"\"\r\n          }\r\n        ],\r\n        \"defaultSecurityRules\":[\r\nnull\r\n        ],\r\n        \"networkInterfaces\":[\r\n          {\r\n            \"etag\":\"\",\r\n            \"virtualMachine\":{\r\n              \"id\":\"\"\r\n            },\r\n            \"networkSecurityGroup\":null,\r\n            \"ipConfigurations\":[\r\n              {\r\n                \"name\":\"\",\r\n                \"etag\":\"\",\r\n                \"loadBalancerBackendAddressPools\":[\r\n                  {\r\n                    \"name\":\"\",\r\n                    \"etag\":\"\",\r\n                    \"backendIPConfigurations\":[\r\nnull\r\n                    ],\r\n                    \"loadBalancingRules\":[\r\nnull\r\n                    ],\r\n                    \"outboundNatRule\":null,\r\n                    \"provisioningState\":\"\",\r\n                    \"id\":\"\"\r\n                  }\r\n                ],\r\n                \"loadBalancerInboundNatRules\":[\r\n                  {\r\n                    \"name\":\"\",\r\n                    \"etag\":\"\",\r\n                    \"frontendIPConfiguration\":null,\r\n                    \"backendIPConfiguration\":null,\r\n                    \"protocol\":\"\",\r\n                    \"frontendPort\":null,\r\n                    \"backendPort\":null,\r\n                    \"idleTimeoutInMinutes\":null,\r\n                    \"enableFloatingIP\":null,\r\n                    \"provisioningState\":\"\",\r\n                    \"id\":\"\"\r\n                  }\r\n                ],\r\n                \"privateIPAddress\":\"\",\r\n                \"privateIPAllocationMethod\":\"\",\r\n                \"subnet\":null,\r\n                \"publicIPAddress\":{\r\n                  \"etag\":\"\",\r\n                  \"publicIPAllocationMethod\":\"\",\r\n                  \"ipConfiguration\":{\r\n                    \"name\":\"\",\r\n                    \"etag\":\"\",\r\n                    \"privateIPAddress\":\"\",\r\n                    \"privateIPAllocationMethod\":\"\",\r\n                    \"subnet\":null,\r\n                    \"publicIPAddress\":null,\r\n                    \"provisioningState\":\"\",\r\n                    \"id\":\"\"\r\n                  },\r\n                  \"dnsSettings\":{\r\n                    \"domainNameLabel\":\"\",\r\n                    \"fqdn\":\"\",\r\n                    \"reverseFqdn\":\"\"\r\n                  },\r\n                  \"ipAddress\":\"\",\r\n                  \"idleTimeoutInMinutes\":null,\r\n                  \"resourceGuid\":\"\",\r\n                  \"provisioningState\":\"\",\r\n                  \"id\":\"\",\r\n                  \"name\":null,\r\n                  \"type\":null,\r\n                  \"location\":\"\",\r\n                  \"tags\":{\r\n                  }\r\n                },\r\n                \"provisioningState\":\"\",\r\n                \"id\":\"\"\r\n              }\r\n            ],\r\n            \"dnsSettings\":{\r\n              \"dnsServers\":[\r\n                \"\"\r\n              ],\r\n              \"appliedDnsServers\":[\r\n                \"\"\r\n              ],\r\n              \"internalDnsNameLabel\":\"\",\r\n              \"internalFqdn\":\"\"\r\n            },\r\n            \"macAddress\":\"\",\r\n            \"primary\":null,\r\n            \"enableIPForwarding\":null,\r\n            \"resourceGuid\":\"\",\r\n            \"provisioningState\":\"\",\r\n            \"id\":\"\",\r\n            \"name\":null,\r\n            \"type\":null,\r\n            \"location\":\"\",\r\n            \"tags\":{\r\n            }\r\n          }\r\n        ],\r\n        \"subnets\":[\r\nnull\r\n        ],\r\n        \"resourceGuid\":\"\",\r\n        \"provisioningState\":\"\",\r\n        \"id\":\"\",\r\n        \"name\":null,\r\n        \"type\":null,\r\n        \"location\":\"\",\r\n        \"tags\":{\r\n        }\r\n      },\r\n      \"routeTable\":{\r\n        \"etag\":\"\",\r\n        \"routes\":[\r\n          {\r\n            \"name\":\"\",\r\n            \"etag\":\"\",\r\n            \"addressPrefix\":\"\",\r\n            \"nextHopType\":\"\",\r\n            \"nextHopIpAddress\":\"\",\r\n            \"provisioningState\":\"\",\r\n            \"id\":\"\"\r\n          }\r\n        ],\r\n        \"subnets\":[\r\nnull\r\n        ],\r\n        \"provisioningState\":\"\",\r\n        \"id\":\"\",\r\n        \"name\":null,\r\n        \"type\":null,\r\n        \"location\":\"\",\r\n        \"tags\":{\r\n        }\r\n      },\r\n      \"ipConfigurations\":[\r\nnull\r\n      ],\r\n      \"provisioningState\":\"\",\r\n      \"id\":\"\"\r\n    }\r\n  ],\r\n  \"resourceGuid\":\"\",\r\n  \"provisioningState\":\"\",\r\n  \"id\":\"\",\r\n  \"name\":null,\r\n  \"type\":null,\r\n  \"location\":\"\",\r\n  \"tags\":{\r\n  }\r\n}\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "virtual-networks create-or-update-parameters virtual-network add",
                  "usage": "[options]",
                  "filePath": "commands/arm/vnet/vnet._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--key <key>",
                      "required": -7,
                      "optional": 0,
                      "bool": true,
                      "long": "--key",
                      "description": "The JSON key."
                    },
                    {
                      "flags": "--value <value>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--value",
                      "description": "The JSON value."
                    },
                    {
                      "flags": "--parse",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--parse",
                      "description": "Parse the input value string to a JSON object."
                    },
                    {
                      "flags": "--etag <etag>",
                      "required": -8,
                      "optional": 0,
                      "bool": true,
                      "long": "--etag",
                      "description": "Add the etag value."
                    },
                    {
                      "flags": "--address-space <addressSpace>",
                      "required": -17,
                      "optional": 0,
                      "bool": true,
                      "long": "--address-space",
                      "description": "Add the address-space value."
                    },
                    {
                      "flags": "--dhcp-options <dhcpOptions>",
                      "required": -16,
                      "optional": 0,
                      "bool": true,
                      "long": "--dhcp-options",
                      "description": "Add the dhcp-options value."
                    },
                    {
                      "flags": "--subnets <subnets>",
                      "required": -11,
                      "optional": 0,
                      "bool": true,
                      "long": "--subnets",
                      "description": "Add the subnets value."
                    },
                    {
                      "flags": "--resource-guid <resourceGuid>",
                      "required": -17,
                      "optional": 0,
                      "bool": true,
                      "long": "--resource-guid",
                      "description": "Add the resource-guid value."
                    },
                    {
                      "flags": "--provisioning-state <provisioningState>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "long": "--provisioning-state",
                      "description": "Add the provisioning-state value."
                    },
                    {
                      "flags": "--id <id>",
                      "required": -6,
                      "optional": 0,
                      "bool": true,
                      "long": "--id",
                      "description": "Add the id value."
                    },
                    {
                      "flags": "--name <name>",
                      "required": -8,
                      "optional": 0,
                      "bool": true,
                      "long": "--name",
                      "description": "Add the name value."
                    },
                    {
                      "flags": "--type <type>",
                      "required": -8,
                      "optional": 0,
                      "bool": true,
                      "long": "--type",
                      "description": "Add the type value."
                    },
                    {
                      "flags": "--location <location>",
                      "required": -12,
                      "optional": 0,
                      "bool": true,
                      "long": "--location",
                      "description": "Add the location value."
                    },
                    {
                      "flags": "--tags <tags>",
                      "required": -8,
                      "optional": 0,
                      "bool": true,
                      "long": "--tags",
                      "description": "Add the tags value."
                    }
                  ]
                }
              ],
              "categories": {}
            },
            "address-space": {
              "name": "address-space",
              "description": "Commands to set/remove/add address-space of virtual-networks in create-or-update-parameters file.",
              "fullName": "virtual-networks create-or-update-parameters address-space",
              "usage": "[options] [command]",
              "options": [],
              "commands": [
                {
                  "name": "set",
                  "description": "Set address-space in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"addressSpace\" : {\r\n             \"addressPrefixes\":[\r\n               \"\"\r\n             ]\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "virtual-networks create-or-update-parameters address-space set",
                  "usage": "[options]",
                  "filePath": "commands/arm/vnet/vnet._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--parse",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--parse",
                      "description": "Parse the input value string to a JSON object."
                    },
                    {
                      "flags": "--address-prefixes <addressPrefixes>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "long": "--address-prefixes",
                      "description": "Set the address-prefixes value."
                    }
                  ]
                },
                {
                  "name": "remove",
                  "description": "Remove address-space in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"addressSpace\" : {\r\n             \"addressPrefixes\":[\r\n               \"\"\r\n             ]\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "virtual-networks create-or-update-parameters address-space remove",
                  "usage": "[options]",
                  "filePath": "commands/arm/vnet/vnet._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--address-prefixes",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--address-prefixes",
                      "description": "Remove the address-prefixes value."
                    }
                  ]
                },
                {
                  "name": "add",
                  "description": "Add address-space in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"addressSpace\" : {\r\n             \"addressPrefixes\":[\r\n               \"\"\r\n             ]\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "virtual-networks create-or-update-parameters address-space add",
                  "usage": "[options]",
                  "filePath": "commands/arm/vnet/vnet._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--key <key>",
                      "required": -7,
                      "optional": 0,
                      "bool": true,
                      "long": "--key",
                      "description": "The JSON key."
                    },
                    {
                      "flags": "--value <value>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--value",
                      "description": "The JSON value."
                    },
                    {
                      "flags": "--parse",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--parse",
                      "description": "Parse the input value string to a JSON object."
                    },
                    {
                      "flags": "--address-prefixes <addressPrefixes>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "long": "--address-prefixes",
                      "description": "Add the address-prefixes value."
                    }
                  ]
                }
              ],
              "categories": {}
            },
            "address-prefixes": {
              "name": "address-prefixes",
              "description": "Commands to set/remove/add address-prefixes of virtual-networks in create-or-update-parameters file.",
              "fullName": "virtual-networks create-or-update-parameters address-prefixes",
              "usage": "[options] [command]",
              "options": [],
              "commands": [
                {
                  "name": "set",
                  "description": "Set address-prefixes in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"addressPrefixes\" : \"\"\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "virtual-networks create-or-update-parameters address-prefixes set",
                  "usage": "[options]",
                  "filePath": "commands/arm/vnet/vnet._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--index <index>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--index",
                      "description": "Indexer: index."
                    },
                    {
                      "flags": "--value <value>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--value",
                      "description": "The input string value for the indexed item."
                    },
                    {
                      "flags": "--parse",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--parse",
                      "description": "Parse the input value string to a JSON object."
                    }
                  ]
                },
                {
                  "name": "remove",
                  "description": "Remove address-prefixes in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"addressPrefixes\" : \"\"\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "virtual-networks create-or-update-parameters address-prefixes remove",
                  "usage": "[options]",
                  "filePath": "commands/arm/vnet/vnet._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--index <index>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--index",
                      "description": "Indexer: index."
                    }
                  ]
                },
                {
                  "name": "add",
                  "description": "Add address-prefixes in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"addressPrefixes\" : \"\"\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "virtual-networks create-or-update-parameters address-prefixes add",
                  "usage": "[options]",
                  "filePath": "commands/arm/vnet/vnet._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--key <key>",
                      "required": -7,
                      "optional": 0,
                      "bool": true,
                      "long": "--key",
                      "description": "The JSON key."
                    },
                    {
                      "flags": "--value <value>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--value",
                      "description": "The JSON value."
                    },
                    {
                      "flags": "--parse",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--parse",
                      "description": "Parse the input value string to a JSON object."
                    }
                  ]
                }
              ],
              "categories": {}
            },
            "dhcp-options": {
              "name": "dhcp-options",
              "description": "Commands to set/remove/add dhcp-options of virtual-networks in create-or-update-parameters file.",
              "fullName": "virtual-networks create-or-update-parameters dhcp-options",
              "usage": "[options] [command]",
              "options": [],
              "commands": [
                {
                  "name": "set",
                  "description": "Set dhcp-options in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"dhcpOptions\" : {\r\n             \"dnsServers\":[\r\n               \"\"\r\n             ]\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "virtual-networks create-or-update-parameters dhcp-options set",
                  "usage": "[options]",
                  "filePath": "commands/arm/vnet/vnet._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--parse",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--parse",
                      "description": "Parse the input value string to a JSON object."
                    },
                    {
                      "flags": "--dns-servers <dnsServers>",
                      "required": -15,
                      "optional": 0,
                      "bool": true,
                      "long": "--dns-servers",
                      "description": "Set the dns-servers value."
                    }
                  ]
                },
                {
                  "name": "remove",
                  "description": "Remove dhcp-options in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"dhcpOptions\" : {\r\n             \"dnsServers\":[\r\n               \"\"\r\n             ]\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "virtual-networks create-or-update-parameters dhcp-options remove",
                  "usage": "[options]",
                  "filePath": "commands/arm/vnet/vnet._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--dns-servers",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--dns-servers",
                      "description": "Remove the dns-servers value."
                    }
                  ]
                },
                {
                  "name": "add",
                  "description": "Add dhcp-options in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"dhcpOptions\" : {\r\n             \"dnsServers\":[\r\n               \"\"\r\n             ]\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "virtual-networks create-or-update-parameters dhcp-options add",
                  "usage": "[options]",
                  "filePath": "commands/arm/vnet/vnet._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--key <key>",
                      "required": -7,
                      "optional": 0,
                      "bool": true,
                      "long": "--key",
                      "description": "The JSON key."
                    },
                    {
                      "flags": "--value <value>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--value",
                      "description": "The JSON value."
                    },
                    {
                      "flags": "--parse",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--parse",
                      "description": "Parse the input value string to a JSON object."
                    },
                    {
                      "flags": "--dns-servers <dnsServers>",
                      "required": -15,
                      "optional": 0,
                      "bool": true,
                      "long": "--dns-servers",
                      "description": "Add the dns-servers value."
                    }
                  ]
                }
              ],
              "categories": {}
            },
            "dns-servers": {
              "name": "dns-servers",
              "description": "Commands to set/remove/add dns-servers of virtual-networks in create-or-update-parameters file.",
              "fullName": "virtual-networks create-or-update-parameters dns-servers",
              "usage": "[options] [command]",
              "options": [],
              "commands": [
                {
                  "name": "set",
                  "description": "Set dns-servers in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"dnsServers\" : \"\"\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "virtual-networks create-or-update-parameters dns-servers set",
                  "usage": "[options]",
                  "filePath": "commands/arm/vnet/vnet._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--index <index>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--index",
                      "description": "Indexer: index."
                    },
                    {
                      "flags": "--network-interfaces-index <network-interfaces-index>",
                      "required": -28,
                      "optional": 0,
                      "bool": true,
                      "long": "--network-interfaces-index",
                      "description": "Indexer: network-interfaces-index."
                    },
                    {
                      "flags": "--subnets-index <subnets-index>",
                      "required": -17,
                      "optional": 0,
                      "bool": true,
                      "long": "--subnets-index",
                      "description": "Indexer: subnets-index."
                    },
                    {
                      "flags": "--value <value>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--value",
                      "description": "The input string value for the indexed item."
                    },
                    {
                      "flags": "--parse",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--parse",
                      "description": "Parse the input value string to a JSON object."
                    }
                  ]
                },
                {
                  "name": "remove",
                  "description": "Remove dns-servers in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"dnsServers\" : \"\"\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "virtual-networks create-or-update-parameters dns-servers remove",
                  "usage": "[options]",
                  "filePath": "commands/arm/vnet/vnet._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--index <index>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--index",
                      "description": "Indexer: index."
                    },
                    {
                      "flags": "--network-interfaces-index <network-interfaces-index>",
                      "required": -28,
                      "optional": 0,
                      "bool": true,
                      "long": "--network-interfaces-index",
                      "description": "Indexer: network-interfaces-index."
                    },
                    {
                      "flags": "--subnets-index <subnets-index>",
                      "required": -17,
                      "optional": 0,
                      "bool": true,
                      "long": "--subnets-index",
                      "description": "Indexer: subnets-index."
                    }
                  ]
                },
                {
                  "name": "add",
                  "description": "Add dns-servers in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"dnsServers\" : \"\"\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "virtual-networks create-or-update-parameters dns-servers add",
                  "usage": "[options]",
                  "filePath": "commands/arm/vnet/vnet._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--key <key>",
                      "required": -7,
                      "optional": 0,
                      "bool": true,
                      "long": "--key",
                      "description": "The JSON key."
                    },
                    {
                      "flags": "--value <value>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--value",
                      "description": "The JSON value."
                    },
                    {
                      "flags": "--parse",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--parse",
                      "description": "Parse the input value string to a JSON object."
                    }
                  ]
                }
              ],
              "categories": {}
            },
            "subnets": {
              "name": "subnets",
              "description": "Commands to set/remove/add subnets of virtual-networks in create-or-update-parameters file.",
              "fullName": "virtual-networks create-or-update-parameters subnets",
              "usage": "[options] [command]",
              "options": [],
              "commands": [
                {
                  "name": "set",
                  "description": "Set subnets in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"subnets\" : {\r\n             \"name\":\"\",\r\n             \"etag\":\"\",\r\n             \"addressPrefix\":\"\",\r\n             \"networkSecurityGroup\":{\r\n               \"etag\":\"\",\r\n               \"securityRules\":[\r\n                 {\r\n                   \"name\":\"\",\r\n                   \"etag\":\"\",\r\n                   \"description\":\"\",\r\n                   \"protocol\":\"\",\r\n                   \"sourcePortRange\":\"\",\r\n                   \"destinationPortRange\":\"\",\r\n                   \"sourceAddressPrefix\":\"\",\r\n                   \"destinationAddressPrefix\":\"\",\r\n                   \"access\":\"\",\r\n                   \"priority\":null,\r\n                   \"direction\":\"\",\r\n                   \"provisioningState\":\"\",\r\n                   \"id\":\"\"\r\n                 }\r\n               ],\r\n               \"defaultSecurityRules\":[\r\n           null\r\n               ],\r\n               \"networkInterfaces\":[\r\n                 {\r\n                   \"etag\":\"\",\r\n                   \"virtualMachine\":{\r\n                     \"id\":\"\"\r\n                   },\r\n                   \"networkSecurityGroup\":null,\r\n                   \"ipConfigurations\":[\r\n                     {\r\n                       \"name\":\"\",\r\n                       \"etag\":\"\",\r\n                       \"loadBalancerBackendAddressPools\":[\r\n                         {\r\n                           \"name\":\"\",\r\n                           \"etag\":\"\",\r\n                           \"backendIPConfigurations\":[\r\n           null\r\n                           ],\r\n                           \"loadBalancingRules\":[\r\n           null\r\n                           ],\r\n                           \"outboundNatRule\":null,\r\n                           \"provisioningState\":\"\",\r\n                           \"id\":\"\"\r\n                         }\r\n                       ],\r\n                       \"loadBalancerInboundNatRules\":[\r\n                         {\r\n                           \"name\":\"\",\r\n                           \"etag\":\"\",\r\n                           \"frontendIPConfiguration\":null,\r\n                           \"backendIPConfiguration\":null,\r\n                           \"protocol\":\"\",\r\n                           \"frontendPort\":null,\r\n                           \"backendPort\":null,\r\n                           \"idleTimeoutInMinutes\":null,\r\n                           \"enableFloatingIP\":null,\r\n                           \"provisioningState\":\"\",\r\n                           \"id\":\"\"\r\n                         }\r\n                       ],\r\n                       \"privateIPAddress\":\"\",\r\n                       \"privateIPAllocationMethod\":\"\",\r\n                       \"subnet\":null,\r\n                       \"publicIPAddress\":{\r\n                         \"etag\":\"\",\r\n                         \"publicIPAllocationMethod\":\"\",\r\n                         \"ipConfiguration\":{\r\n                           \"name\":\"\",\r\n                           \"etag\":\"\",\r\n                           \"privateIPAddress\":\"\",\r\n                           \"privateIPAllocationMethod\":\"\",\r\n                           \"subnet\":null,\r\n                           \"publicIPAddress\":null,\r\n                           \"provisioningState\":\"\",\r\n                           \"id\":\"\"\r\n                         },\r\n                         \"dnsSettings\":{\r\n                           \"domainNameLabel\":\"\",\r\n                           \"fqdn\":\"\",\r\n                           \"reverseFqdn\":\"\"\r\n                         },\r\n                         \"ipAddress\":\"\",\r\n                         \"idleTimeoutInMinutes\":null,\r\n                         \"resourceGuid\":\"\",\r\n                         \"provisioningState\":\"\",\r\n                         \"id\":\"\",\r\n                         \"name\":null,\r\n                         \"type\":null,\r\n                         \"location\":\"\",\r\n                         \"tags\":{\r\n                         }\r\n                       },\r\n                       \"provisioningState\":\"\",\r\n                       \"id\":\"\"\r\n                     }\r\n                   ],\r\n                   \"dnsSettings\":{\r\n                     \"dnsServers\":[\r\n                       \"\"\r\n                     ],\r\n                     \"appliedDnsServers\":[\r\n                       \"\"\r\n                     ],\r\n                     \"internalDnsNameLabel\":\"\",\r\n                     \"internalFqdn\":\"\"\r\n                   },\r\n                   \"macAddress\":\"\",\r\n                   \"primary\":null,\r\n                   \"enableIPForwarding\":null,\r\n                   \"resourceGuid\":\"\",\r\n                   \"provisioningState\":\"\",\r\n                   \"id\":\"\",\r\n                   \"name\":null,\r\n                   \"type\":null,\r\n                   \"location\":\"\",\r\n                   \"tags\":{\r\n                   }\r\n                 }\r\n               ],\r\n               \"subnets\":[\r\n           null\r\n               ],\r\n               \"resourceGuid\":\"\",\r\n               \"provisioningState\":\"\",\r\n               \"id\":\"\",\r\n               \"name\":null,\r\n               \"type\":null,\r\n               \"location\":\"\",\r\n               \"tags\":{\r\n               }\r\n             },\r\n             \"routeTable\":{\r\n               \"etag\":\"\",\r\n               \"routes\":[\r\n                 {\r\n                   \"name\":\"\",\r\n                   \"etag\":\"\",\r\n                   \"addressPrefix\":\"\",\r\n                   \"nextHopType\":\"\",\r\n                   \"nextHopIpAddress\":\"\",\r\n                   \"provisioningState\":\"\",\r\n                   \"id\":\"\"\r\n                 }\r\n               ],\r\n               \"subnets\":[\r\n           null\r\n               ],\r\n               \"provisioningState\":\"\",\r\n               \"id\":\"\",\r\n               \"name\":null,\r\n               \"type\":null,\r\n               \"location\":\"\",\r\n               \"tags\":{\r\n               }\r\n             },\r\n             \"ipConfigurations\":[\r\n           null\r\n             ],\r\n             \"provisioningState\":\"\",\r\n             \"id\":\"\"\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "virtual-networks create-or-update-parameters subnets set",
                  "usage": "[options]",
                  "filePath": "commands/arm/vnet/vnet._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--index <index>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--index",
                      "description": "Indexer: index."
                    },
                    {
                      "flags": "--value <value>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--value",
                      "description": "The input string value for the indexed item."
                    },
                    {
                      "flags": "--parse",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--parse",
                      "description": "Parse the input value string to a JSON object."
                    }
                  ]
                },
                {
                  "name": "remove",
                  "description": "Remove subnets in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"subnets\" : {\r\n             \"name\":\"\",\r\n             \"etag\":\"\",\r\n             \"addressPrefix\":\"\",\r\n             \"networkSecurityGroup\":{\r\n               \"etag\":\"\",\r\n               \"securityRules\":[\r\n                 {\r\n                   \"name\":\"\",\r\n                   \"etag\":\"\",\r\n                   \"description\":\"\",\r\n                   \"protocol\":\"\",\r\n                   \"sourcePortRange\":\"\",\r\n                   \"destinationPortRange\":\"\",\r\n                   \"sourceAddressPrefix\":\"\",\r\n                   \"destinationAddressPrefix\":\"\",\r\n                   \"access\":\"\",\r\n                   \"priority\":null,\r\n                   \"direction\":\"\",\r\n                   \"provisioningState\":\"\",\r\n                   \"id\":\"\"\r\n                 }\r\n               ],\r\n               \"defaultSecurityRules\":[\r\n           null\r\n               ],\r\n               \"networkInterfaces\":[\r\n                 {\r\n                   \"etag\":\"\",\r\n                   \"virtualMachine\":{\r\n                     \"id\":\"\"\r\n                   },\r\n                   \"networkSecurityGroup\":null,\r\n                   \"ipConfigurations\":[\r\n                     {\r\n                       \"name\":\"\",\r\n                       \"etag\":\"\",\r\n                       \"loadBalancerBackendAddressPools\":[\r\n                         {\r\n                           \"name\":\"\",\r\n                           \"etag\":\"\",\r\n                           \"backendIPConfigurations\":[\r\n           null\r\n                           ],\r\n                           \"loadBalancingRules\":[\r\n           null\r\n                           ],\r\n                           \"outboundNatRule\":null,\r\n                           \"provisioningState\":\"\",\r\n                           \"id\":\"\"\r\n                         }\r\n                       ],\r\n                       \"loadBalancerInboundNatRules\":[\r\n                         {\r\n                           \"name\":\"\",\r\n                           \"etag\":\"\",\r\n                           \"frontendIPConfiguration\":null,\r\n                           \"backendIPConfiguration\":null,\r\n                           \"protocol\":\"\",\r\n                           \"frontendPort\":null,\r\n                           \"backendPort\":null,\r\n                           \"idleTimeoutInMinutes\":null,\r\n                           \"enableFloatingIP\":null,\r\n                           \"provisioningState\":\"\",\r\n                           \"id\":\"\"\r\n                         }\r\n                       ],\r\n                       \"privateIPAddress\":\"\",\r\n                       \"privateIPAllocationMethod\":\"\",\r\n                       \"subnet\":null,\r\n                       \"publicIPAddress\":{\r\n                         \"etag\":\"\",\r\n                         \"publicIPAllocationMethod\":\"\",\r\n                         \"ipConfiguration\":{\r\n                           \"name\":\"\",\r\n                           \"etag\":\"\",\r\n                           \"privateIPAddress\":\"\",\r\n                           \"privateIPAllocationMethod\":\"\",\r\n                           \"subnet\":null,\r\n                           \"publicIPAddress\":null,\r\n                           \"provisioningState\":\"\",\r\n                           \"id\":\"\"\r\n                         },\r\n                         \"dnsSettings\":{\r\n                           \"domainNameLabel\":\"\",\r\n                           \"fqdn\":\"\",\r\n                           \"reverseFqdn\":\"\"\r\n                         },\r\n                         \"ipAddress\":\"\",\r\n                         \"idleTimeoutInMinutes\":null,\r\n                         \"resourceGuid\":\"\",\r\n                         \"provisioningState\":\"\",\r\n                         \"id\":\"\",\r\n                         \"name\":null,\r\n                         \"type\":null,\r\n                         \"location\":\"\",\r\n                         \"tags\":{\r\n                         }\r\n                       },\r\n                       \"provisioningState\":\"\",\r\n                       \"id\":\"\"\r\n                     }\r\n                   ],\r\n                   \"dnsSettings\":{\r\n                     \"dnsServers\":[\r\n                       \"\"\r\n                     ],\r\n                     \"appliedDnsServers\":[\r\n                       \"\"\r\n                     ],\r\n                     \"internalDnsNameLabel\":\"\",\r\n                     \"internalFqdn\":\"\"\r\n                   },\r\n                   \"macAddress\":\"\",\r\n                   \"primary\":null,\r\n                   \"enableIPForwarding\":null,\r\n                   \"resourceGuid\":\"\",\r\n                   \"provisioningState\":\"\",\r\n                   \"id\":\"\",\r\n                   \"name\":null,\r\n                   \"type\":null,\r\n                   \"location\":\"\",\r\n                   \"tags\":{\r\n                   }\r\n                 }\r\n               ],\r\n               \"subnets\":[\r\n           null\r\n               ],\r\n               \"resourceGuid\":\"\",\r\n               \"provisioningState\":\"\",\r\n               \"id\":\"\",\r\n               \"name\":null,\r\n               \"type\":null,\r\n               \"location\":\"\",\r\n               \"tags\":{\r\n               }\r\n             },\r\n             \"routeTable\":{\r\n               \"etag\":\"\",\r\n               \"routes\":[\r\n                 {\r\n                   \"name\":\"\",\r\n                   \"etag\":\"\",\r\n                   \"addressPrefix\":\"\",\r\n                   \"nextHopType\":\"\",\r\n                   \"nextHopIpAddress\":\"\",\r\n                   \"provisioningState\":\"\",\r\n                   \"id\":\"\"\r\n                 }\r\n               ],\r\n               \"subnets\":[\r\n           null\r\n               ],\r\n               \"provisioningState\":\"\",\r\n               \"id\":\"\",\r\n               \"name\":null,\r\n               \"type\":null,\r\n               \"location\":\"\",\r\n               \"tags\":{\r\n               }\r\n             },\r\n             \"ipConfigurations\":[\r\n           null\r\n             ],\r\n             \"provisioningState\":\"\",\r\n             \"id\":\"\"\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "virtual-networks create-or-update-parameters subnets remove",
                  "usage": "[options]",
                  "filePath": "commands/arm/vnet/vnet._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--index <index>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--index",
                      "description": "Indexer: index."
                    }
                  ]
                },
                {
                  "name": "add",
                  "description": "Add subnets in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"subnets\" : {\r\n             \"name\":\"\",\r\n             \"etag\":\"\",\r\n             \"addressPrefix\":\"\",\r\n             \"networkSecurityGroup\":{\r\n               \"etag\":\"\",\r\n               \"securityRules\":[\r\n                 {\r\n                   \"name\":\"\",\r\n                   \"etag\":\"\",\r\n                   \"description\":\"\",\r\n                   \"protocol\":\"\",\r\n                   \"sourcePortRange\":\"\",\r\n                   \"destinationPortRange\":\"\",\r\n                   \"sourceAddressPrefix\":\"\",\r\n                   \"destinationAddressPrefix\":\"\",\r\n                   \"access\":\"\",\r\n                   \"priority\":null,\r\n                   \"direction\":\"\",\r\n                   \"provisioningState\":\"\",\r\n                   \"id\":\"\"\r\n                 }\r\n               ],\r\n               \"defaultSecurityRules\":[\r\n           null\r\n               ],\r\n               \"networkInterfaces\":[\r\n                 {\r\n                   \"etag\":\"\",\r\n                   \"virtualMachine\":{\r\n                     \"id\":\"\"\r\n                   },\r\n                   \"networkSecurityGroup\":null,\r\n                   \"ipConfigurations\":[\r\n                     {\r\n                       \"name\":\"\",\r\n                       \"etag\":\"\",\r\n                       \"loadBalancerBackendAddressPools\":[\r\n                         {\r\n                           \"name\":\"\",\r\n                           \"etag\":\"\",\r\n                           \"backendIPConfigurations\":[\r\n           null\r\n                           ],\r\n                           \"loadBalancingRules\":[\r\n           null\r\n                           ],\r\n                           \"outboundNatRule\":null,\r\n                           \"provisioningState\":\"\",\r\n                           \"id\":\"\"\r\n                         }\r\n                       ],\r\n                       \"loadBalancerInboundNatRules\":[\r\n                         {\r\n                           \"name\":\"\",\r\n                           \"etag\":\"\",\r\n                           \"frontendIPConfiguration\":null,\r\n                           \"backendIPConfiguration\":null,\r\n                           \"protocol\":\"\",\r\n                           \"frontendPort\":null,\r\n                           \"backendPort\":null,\r\n                           \"idleTimeoutInMinutes\":null,\r\n                           \"enableFloatingIP\":null,\r\n                           \"provisioningState\":\"\",\r\n                           \"id\":\"\"\r\n                         }\r\n                       ],\r\n                       \"privateIPAddress\":\"\",\r\n                       \"privateIPAllocationMethod\":\"\",\r\n                       \"subnet\":null,\r\n                       \"publicIPAddress\":{\r\n                         \"etag\":\"\",\r\n                         \"publicIPAllocationMethod\":\"\",\r\n                         \"ipConfiguration\":{\r\n                           \"name\":\"\",\r\n                           \"etag\":\"\",\r\n                           \"privateIPAddress\":\"\",\r\n                           \"privateIPAllocationMethod\":\"\",\r\n                           \"subnet\":null,\r\n                           \"publicIPAddress\":null,\r\n                           \"provisioningState\":\"\",\r\n                           \"id\":\"\"\r\n                         },\r\n                         \"dnsSettings\":{\r\n                           \"domainNameLabel\":\"\",\r\n                           \"fqdn\":\"\",\r\n                           \"reverseFqdn\":\"\"\r\n                         },\r\n                         \"ipAddress\":\"\",\r\n                         \"idleTimeoutInMinutes\":null,\r\n                         \"resourceGuid\":\"\",\r\n                         \"provisioningState\":\"\",\r\n                         \"id\":\"\",\r\n                         \"name\":null,\r\n                         \"type\":null,\r\n                         \"location\":\"\",\r\n                         \"tags\":{\r\n                         }\r\n                       },\r\n                       \"provisioningState\":\"\",\r\n                       \"id\":\"\"\r\n                     }\r\n                   ],\r\n                   \"dnsSettings\":{\r\n                     \"dnsServers\":[\r\n                       \"\"\r\n                     ],\r\n                     \"appliedDnsServers\":[\r\n                       \"\"\r\n                     ],\r\n                     \"internalDnsNameLabel\":\"\",\r\n                     \"internalFqdn\":\"\"\r\n                   },\r\n                   \"macAddress\":\"\",\r\n                   \"primary\":null,\r\n                   \"enableIPForwarding\":null,\r\n                   \"resourceGuid\":\"\",\r\n                   \"provisioningState\":\"\",\r\n                   \"id\":\"\",\r\n                   \"name\":null,\r\n                   \"type\":null,\r\n                   \"location\":\"\",\r\n                   \"tags\":{\r\n                   }\r\n                 }\r\n               ],\r\n               \"subnets\":[\r\n           null\r\n               ],\r\n               \"resourceGuid\":\"\",\r\n               \"provisioningState\":\"\",\r\n               \"id\":\"\",\r\n               \"name\":null,\r\n               \"type\":null,\r\n               \"location\":\"\",\r\n               \"tags\":{\r\n               }\r\n             },\r\n             \"routeTable\":{\r\n               \"etag\":\"\",\r\n               \"routes\":[\r\n                 {\r\n                   \"name\":\"\",\r\n                   \"etag\":\"\",\r\n                   \"addressPrefix\":\"\",\r\n                   \"nextHopType\":\"\",\r\n                   \"nextHopIpAddress\":\"\",\r\n                   \"provisioningState\":\"\",\r\n                   \"id\":\"\"\r\n                 }\r\n               ],\r\n               \"subnets\":[\r\n           null\r\n               ],\r\n               \"provisioningState\":\"\",\r\n               \"id\":\"\",\r\n               \"name\":null,\r\n               \"type\":null,\r\n               \"location\":\"\",\r\n               \"tags\":{\r\n               }\r\n             },\r\n             \"ipConfigurations\":[\r\n           null\r\n             ],\r\n             \"provisioningState\":\"\",\r\n             \"id\":\"\"\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "virtual-networks create-or-update-parameters subnets add",
                  "usage": "[options]",
                  "filePath": "commands/arm/vnet/vnet._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--key <key>",
                      "required": -7,
                      "optional": 0,
                      "bool": true,
                      "long": "--key",
                      "description": "The JSON key."
                    },
                    {
                      "flags": "--value <value>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--value",
                      "description": "The JSON value."
                    },
                    {
                      "flags": "--parse",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--parse",
                      "description": "Parse the input value string to a JSON object."
                    }
                  ]
                }
              ],
              "categories": {}
            },
            "network-security-group": {
              "name": "network-security-group",
              "description": "Commands to set/remove/add network-security-group of virtual-networks in create-or-update-parameters file.",
              "fullName": "virtual-networks create-or-update-parameters network-security-group",
              "usage": "[options] [command]",
              "options": [],
              "commands": [
                {
                  "name": "set",
                  "description": "Set network-security-group in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"networkSecurityGroup\" : {\r\n             \"etag\":\"\",\r\n             \"securityRules\":[\r\n               {\r\n                 \"name\":\"\",\r\n                 \"etag\":\"\",\r\n                 \"description\":\"\",\r\n                 \"protocol\":\"\",\r\n                 \"sourcePortRange\":\"\",\r\n                 \"destinationPortRange\":\"\",\r\n                 \"sourceAddressPrefix\":\"\",\r\n                 \"destinationAddressPrefix\":\"\",\r\n                 \"access\":\"\",\r\n                 \"priority\":null,\r\n                 \"direction\":\"\",\r\n                 \"provisioningState\":\"\",\r\n                 \"id\":\"\"\r\n               }\r\n             ],\r\n             \"defaultSecurityRules\":[\r\n           null\r\n             ],\r\n             \"networkInterfaces\":[\r\n               {\r\n                 \"etag\":\"\",\r\n                 \"virtualMachine\":{\r\n                   \"id\":\"\"\r\n                 },\r\n                 \"networkSecurityGroup\":null,\r\n                 \"ipConfigurations\":[\r\n                   {\r\n                     \"name\":\"\",\r\n                     \"etag\":\"\",\r\n                     \"loadBalancerBackendAddressPools\":[\r\n                       {\r\n                         \"name\":\"\",\r\n                         \"etag\":\"\",\r\n                         \"backendIPConfigurations\":[\r\n           null\r\n                         ],\r\n                         \"loadBalancingRules\":[\r\n           null\r\n                         ],\r\n                         \"outboundNatRule\":null,\r\n                         \"provisioningState\":\"\",\r\n                         \"id\":\"\"\r\n                       }\r\n                     ],\r\n                     \"loadBalancerInboundNatRules\":[\r\n                       {\r\n                         \"name\":\"\",\r\n                         \"etag\":\"\",\r\n                         \"frontendIPConfiguration\":null,\r\n                         \"backendIPConfiguration\":null,\r\n                         \"protocol\":\"\",\r\n                         \"frontendPort\":null,\r\n                         \"backendPort\":null,\r\n                         \"idleTimeoutInMinutes\":null,\r\n                         \"enableFloatingIP\":null,\r\n                         \"provisioningState\":\"\",\r\n                         \"id\":\"\"\r\n                       }\r\n                     ],\r\n                     \"privateIPAddress\":\"\",\r\n                     \"privateIPAllocationMethod\":\"\",\r\n                     \"subnet\":{\r\n                       \"name\":\"\",\r\n                       \"etag\":\"\",\r\n                       \"addressPrefix\":\"\",\r\n                       \"networkSecurityGroup\":null,\r\n                       \"routeTable\":{\r\n                         \"etag\":\"\",\r\n                         \"routes\":[\r\n                           {\r\n                             \"name\":\"\",\r\n                             \"etag\":\"\",\r\n                             \"addressPrefix\":\"\",\r\n                             \"nextHopType\":\"\",\r\n                             \"nextHopIpAddress\":\"\",\r\n                             \"provisioningState\":\"\",\r\n                             \"id\":\"\"\r\n                           }\r\n                         ],\r\n                         \"subnets\":[\r\n           null\r\n                         ],\r\n                         \"provisioningState\":\"\",\r\n                         \"id\":\"\",\r\n                         \"name\":null,\r\n                         \"type\":null,\r\n                         \"location\":\"\",\r\n                         \"tags\":{\r\n                         }\r\n                       },\r\n                       \"ipConfigurations\":[\r\n                         {\r\n                           \"name\":\"\",\r\n                           \"etag\":\"\",\r\n                           \"privateIPAddress\":\"\",\r\n                           \"privateIPAllocationMethod\":\"\",\r\n                           \"subnet\":null,\r\n                           \"publicIPAddress\":{\r\n                             \"etag\":\"\",\r\n                             \"publicIPAllocationMethod\":\"\",\r\n                             \"ipConfiguration\":null,\r\n                             \"dnsSettings\":{\r\n                               \"domainNameLabel\":\"\",\r\n                               \"fqdn\":\"\",\r\n                               \"reverseFqdn\":\"\"\r\n                             },\r\n                             \"ipAddress\":\"\",\r\n                             \"idleTimeoutInMinutes\":null,\r\n                             \"resourceGuid\":\"\",\r\n                             \"provisioningState\":\"\",\r\n                             \"id\":\"\",\r\n                             \"name\":null,\r\n                             \"type\":null,\r\n                             \"location\":\"\",\r\n                             \"tags\":{\r\n                             }\r\n                           },\r\n                           \"provisioningState\":\"\",\r\n                           \"id\":\"\"\r\n                         }\r\n                       ],\r\n                       \"provisioningState\":\"\",\r\n                       \"id\":\"\"\r\n                     },\r\n                     \"publicIPAddress\":null,\r\n                     \"provisioningState\":\"\",\r\n                     \"id\":\"\"\r\n                   }\r\n                 ],\r\n                 \"dnsSettings\":{\r\n                   \"dnsServers\":[\r\n                     \"\"\r\n                   ],\r\n                   \"appliedDnsServers\":[\r\n                     \"\"\r\n                   ],\r\n                   \"internalDnsNameLabel\":\"\",\r\n                   \"internalFqdn\":\"\"\r\n                 },\r\n                 \"macAddress\":\"\",\r\n                 \"primary\":null,\r\n                 \"enableIPForwarding\":null,\r\n                 \"resourceGuid\":\"\",\r\n                 \"provisioningState\":\"\",\r\n                 \"id\":\"\",\r\n                 \"name\":null,\r\n                 \"type\":null,\r\n                 \"location\":\"\",\r\n                 \"tags\":{\r\n                 }\r\n               }\r\n             ],\r\n             \"subnets\":[\r\n           null\r\n             ],\r\n             \"resourceGuid\":\"\",\r\n             \"provisioningState\":\"\",\r\n             \"id\":\"\",\r\n             \"name\":null,\r\n             \"type\":null,\r\n             \"location\":\"\",\r\n             \"tags\":{\r\n             }\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "virtual-networks create-or-update-parameters network-security-group set",
                  "usage": "[options]",
                  "filePath": "commands/arm/vnet/vnet._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--subnets-index <subnets-index>",
                      "required": -17,
                      "optional": 0,
                      "bool": true,
                      "long": "--subnets-index",
                      "description": "Indexer: subnets-index."
                    },
                    {
                      "flags": "--parse",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--parse",
                      "description": "Parse the input value string to a JSON object."
                    },
                    {
                      "flags": "--etag <etag>",
                      "required": -8,
                      "optional": 0,
                      "bool": true,
                      "long": "--etag",
                      "description": "Set the etag value."
                    },
                    {
                      "flags": "--security-rules <securityRules>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--security-rules",
                      "description": "Set the security-rules value."
                    },
                    {
                      "flags": "--default-security-rules <defaultSecurityRules>",
                      "required": -26,
                      "optional": 0,
                      "bool": true,
                      "long": "--default-security-rules",
                      "description": "Set the default-security-rules value."
                    },
                    {
                      "flags": "--network-interfaces <networkInterfaces>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "long": "--network-interfaces",
                      "description": "Set the network-interfaces value."
                    },
                    {
                      "flags": "--subnets <subnets>",
                      "required": -11,
                      "optional": 0,
                      "bool": true,
                      "long": "--subnets",
                      "description": "Set the subnets value."
                    },
                    {
                      "flags": "--resource-guid <resourceGuid>",
                      "required": -17,
                      "optional": 0,
                      "bool": true,
                      "long": "--resource-guid",
                      "description": "Set the resource-guid value."
                    },
                    {
                      "flags": "--provisioning-state <provisioningState>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "long": "--provisioning-state",
                      "description": "Set the provisioning-state value."
                    },
                    {
                      "flags": "--id <id>",
                      "required": -6,
                      "optional": 0,
                      "bool": true,
                      "long": "--id",
                      "description": "Set the id value."
                    },
                    {
                      "flags": "--name <name>",
                      "required": -8,
                      "optional": 0,
                      "bool": true,
                      "long": "--name",
                      "description": "Set the name value."
                    },
                    {
                      "flags": "--type <type>",
                      "required": -8,
                      "optional": 0,
                      "bool": true,
                      "long": "--type",
                      "description": "Set the type value."
                    },
                    {
                      "flags": "--location <location>",
                      "required": -12,
                      "optional": 0,
                      "bool": true,
                      "long": "--location",
                      "description": "Set the location value."
                    },
                    {
                      "flags": "--tags <tags>",
                      "required": -8,
                      "optional": 0,
                      "bool": true,
                      "long": "--tags",
                      "description": "Set the tags value."
                    }
                  ]
                },
                {
                  "name": "remove",
                  "description": "Remove network-security-group in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"networkSecurityGroup\" : {\r\n             \"etag\":\"\",\r\n             \"securityRules\":[\r\n               {\r\n                 \"name\":\"\",\r\n                 \"etag\":\"\",\r\n                 \"description\":\"\",\r\n                 \"protocol\":\"\",\r\n                 \"sourcePortRange\":\"\",\r\n                 \"destinationPortRange\":\"\",\r\n                 \"sourceAddressPrefix\":\"\",\r\n                 \"destinationAddressPrefix\":\"\",\r\n                 \"access\":\"\",\r\n                 \"priority\":null,\r\n                 \"direction\":\"\",\r\n                 \"provisioningState\":\"\",\r\n                 \"id\":\"\"\r\n               }\r\n             ],\r\n             \"defaultSecurityRules\":[\r\n           null\r\n             ],\r\n             \"networkInterfaces\":[\r\n               {\r\n                 \"etag\":\"\",\r\n                 \"virtualMachine\":{\r\n                   \"id\":\"\"\r\n                 },\r\n                 \"networkSecurityGroup\":null,\r\n                 \"ipConfigurations\":[\r\n                   {\r\n                     \"name\":\"\",\r\n                     \"etag\":\"\",\r\n                     \"loadBalancerBackendAddressPools\":[\r\n                       {\r\n                         \"name\":\"\",\r\n                         \"etag\":\"\",\r\n                         \"backendIPConfigurations\":[\r\n           null\r\n                         ],\r\n                         \"loadBalancingRules\":[\r\n           null\r\n                         ],\r\n                         \"outboundNatRule\":null,\r\n                         \"provisioningState\":\"\",\r\n                         \"id\":\"\"\r\n                       }\r\n                     ],\r\n                     \"loadBalancerInboundNatRules\":[\r\n                       {\r\n                         \"name\":\"\",\r\n                         \"etag\":\"\",\r\n                         \"frontendIPConfiguration\":null,\r\n                         \"backendIPConfiguration\":null,\r\n                         \"protocol\":\"\",\r\n                         \"frontendPort\":null,\r\n                         \"backendPort\":null,\r\n                         \"idleTimeoutInMinutes\":null,\r\n                         \"enableFloatingIP\":null,\r\n                         \"provisioningState\":\"\",\r\n                         \"id\":\"\"\r\n                       }\r\n                     ],\r\n                     \"privateIPAddress\":\"\",\r\n                     \"privateIPAllocationMethod\":\"\",\r\n                     \"subnet\":{\r\n                       \"name\":\"\",\r\n                       \"etag\":\"\",\r\n                       \"addressPrefix\":\"\",\r\n                       \"networkSecurityGroup\":null,\r\n                       \"routeTable\":{\r\n                         \"etag\":\"\",\r\n                         \"routes\":[\r\n                           {\r\n                             \"name\":\"\",\r\n                             \"etag\":\"\",\r\n                             \"addressPrefix\":\"\",\r\n                             \"nextHopType\":\"\",\r\n                             \"nextHopIpAddress\":\"\",\r\n                             \"provisioningState\":\"\",\r\n                             \"id\":\"\"\r\n                           }\r\n                         ],\r\n                         \"subnets\":[\r\n           null\r\n                         ],\r\n                         \"provisioningState\":\"\",\r\n                         \"id\":\"\",\r\n                         \"name\":null,\r\n                         \"type\":null,\r\n                         \"location\":\"\",\r\n                         \"tags\":{\r\n                         }\r\n                       },\r\n                       \"ipConfigurations\":[\r\n                         {\r\n                           \"name\":\"\",\r\n                           \"etag\":\"\",\r\n                           \"privateIPAddress\":\"\",\r\n                           \"privateIPAllocationMethod\":\"\",\r\n                           \"subnet\":null,\r\n                           \"publicIPAddress\":{\r\n                             \"etag\":\"\",\r\n                             \"publicIPAllocationMethod\":\"\",\r\n                             \"ipConfiguration\":null,\r\n                             \"dnsSettings\":{\r\n                               \"domainNameLabel\":\"\",\r\n                               \"fqdn\":\"\",\r\n                               \"reverseFqdn\":\"\"\r\n                             },\r\n                             \"ipAddress\":\"\",\r\n                             \"idleTimeoutInMinutes\":null,\r\n                             \"resourceGuid\":\"\",\r\n                             \"provisioningState\":\"\",\r\n                             \"id\":\"\",\r\n                             \"name\":null,\r\n                             \"type\":null,\r\n                             \"location\":\"\",\r\n                             \"tags\":{\r\n                             }\r\n                           },\r\n                           \"provisioningState\":\"\",\r\n                           \"id\":\"\"\r\n                         }\r\n                       ],\r\n                       \"provisioningState\":\"\",\r\n                       \"id\":\"\"\r\n                     },\r\n                     \"publicIPAddress\":null,\r\n                     \"provisioningState\":\"\",\r\n                     \"id\":\"\"\r\n                   }\r\n                 ],\r\n                 \"dnsSettings\":{\r\n                   \"dnsServers\":[\r\n                     \"\"\r\n                   ],\r\n                   \"appliedDnsServers\":[\r\n                     \"\"\r\n                   ],\r\n                   \"internalDnsNameLabel\":\"\",\r\n                   \"internalFqdn\":\"\"\r\n                 },\r\n                 \"macAddress\":\"\",\r\n                 \"primary\":null,\r\n                 \"enableIPForwarding\":null,\r\n                 \"resourceGuid\":\"\",\r\n                 \"provisioningState\":\"\",\r\n                 \"id\":\"\",\r\n                 \"name\":null,\r\n                 \"type\":null,\r\n                 \"location\":\"\",\r\n                 \"tags\":{\r\n                 }\r\n               }\r\n             ],\r\n             \"subnets\":[\r\n           null\r\n             ],\r\n             \"resourceGuid\":\"\",\r\n             \"provisioningState\":\"\",\r\n             \"id\":\"\",\r\n             \"name\":null,\r\n             \"type\":null,\r\n             \"location\":\"\",\r\n             \"tags\":{\r\n             }\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "virtual-networks create-or-update-parameters network-security-group remove",
                  "usage": "[options]",
                  "filePath": "commands/arm/vnet/vnet._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--network-interfaces-index <network-interfaces-index>",
                      "required": -28,
                      "optional": 0,
                      "bool": true,
                      "long": "--network-interfaces-index",
                      "description": "Indexer: network-interfaces-index."
                    },
                    {
                      "flags": "--subnets-index <subnets-index>",
                      "required": -17,
                      "optional": 0,
                      "bool": true,
                      "long": "--subnets-index",
                      "description": "Indexer: subnets-index."
                    }
                  ]
                },
                {
                  "name": "add",
                  "description": "Add network-security-group in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"networkSecurityGroup\" : {\r\n             \"etag\":\"\",\r\n             \"securityRules\":[\r\n               {\r\n                 \"name\":\"\",\r\n                 \"etag\":\"\",\r\n                 \"description\":\"\",\r\n                 \"protocol\":\"\",\r\n                 \"sourcePortRange\":\"\",\r\n                 \"destinationPortRange\":\"\",\r\n                 \"sourceAddressPrefix\":\"\",\r\n                 \"destinationAddressPrefix\":\"\",\r\n                 \"access\":\"\",\r\n                 \"priority\":null,\r\n                 \"direction\":\"\",\r\n                 \"provisioningState\":\"\",\r\n                 \"id\":\"\"\r\n               }\r\n             ],\r\n             \"defaultSecurityRules\":[\r\n           null\r\n             ],\r\n             \"networkInterfaces\":[\r\n               {\r\n                 \"etag\":\"\",\r\n                 \"virtualMachine\":{\r\n                   \"id\":\"\"\r\n                 },\r\n                 \"networkSecurityGroup\":null,\r\n                 \"ipConfigurations\":[\r\n                   {\r\n                     \"name\":\"\",\r\n                     \"etag\":\"\",\r\n                     \"loadBalancerBackendAddressPools\":[\r\n                       {\r\n                         \"name\":\"\",\r\n                         \"etag\":\"\",\r\n                         \"backendIPConfigurations\":[\r\n           null\r\n                         ],\r\n                         \"loadBalancingRules\":[\r\n           null\r\n                         ],\r\n                         \"outboundNatRule\":null,\r\n                         \"provisioningState\":\"\",\r\n                         \"id\":\"\"\r\n                       }\r\n                     ],\r\n                     \"loadBalancerInboundNatRules\":[\r\n                       {\r\n                         \"name\":\"\",\r\n                         \"etag\":\"\",\r\n                         \"frontendIPConfiguration\":null,\r\n                         \"backendIPConfiguration\":null,\r\n                         \"protocol\":\"\",\r\n                         \"frontendPort\":null,\r\n                         \"backendPort\":null,\r\n                         \"idleTimeoutInMinutes\":null,\r\n                         \"enableFloatingIP\":null,\r\n                         \"provisioningState\":\"\",\r\n                         \"id\":\"\"\r\n                       }\r\n                     ],\r\n                     \"privateIPAddress\":\"\",\r\n                     \"privateIPAllocationMethod\":\"\",\r\n                     \"subnet\":{\r\n                       \"name\":\"\",\r\n                       \"etag\":\"\",\r\n                       \"addressPrefix\":\"\",\r\n                       \"networkSecurityGroup\":null,\r\n                       \"routeTable\":{\r\n                         \"etag\":\"\",\r\n                         \"routes\":[\r\n                           {\r\n                             \"name\":\"\",\r\n                             \"etag\":\"\",\r\n                             \"addressPrefix\":\"\",\r\n                             \"nextHopType\":\"\",\r\n                             \"nextHopIpAddress\":\"\",\r\n                             \"provisioningState\":\"\",\r\n                             \"id\":\"\"\r\n                           }\r\n                         ],\r\n                         \"subnets\":[\r\n           null\r\n                         ],\r\n                         \"provisioningState\":\"\",\r\n                         \"id\":\"\",\r\n                         \"name\":null,\r\n                         \"type\":null,\r\n                         \"location\":\"\",\r\n                         \"tags\":{\r\n                         }\r\n                       },\r\n                       \"ipConfigurations\":[\r\n                         {\r\n                           \"name\":\"\",\r\n                           \"etag\":\"\",\r\n                           \"privateIPAddress\":\"\",\r\n                           \"privateIPAllocationMethod\":\"\",\r\n                           \"subnet\":null,\r\n                           \"publicIPAddress\":{\r\n                             \"etag\":\"\",\r\n                             \"publicIPAllocationMethod\":\"\",\r\n                             \"ipConfiguration\":null,\r\n                             \"dnsSettings\":{\r\n                               \"domainNameLabel\":\"\",\r\n                               \"fqdn\":\"\",\r\n                               \"reverseFqdn\":\"\"\r\n                             },\r\n                             \"ipAddress\":\"\",\r\n                             \"idleTimeoutInMinutes\":null,\r\n                             \"resourceGuid\":\"\",\r\n                             \"provisioningState\":\"\",\r\n                             \"id\":\"\",\r\n                             \"name\":null,\r\n                             \"type\":null,\r\n                             \"location\":\"\",\r\n                             \"tags\":{\r\n                             }\r\n                           },\r\n                           \"provisioningState\":\"\",\r\n                           \"id\":\"\"\r\n                         }\r\n                       ],\r\n                       \"provisioningState\":\"\",\r\n                       \"id\":\"\"\r\n                     },\r\n                     \"publicIPAddress\":null,\r\n                     \"provisioningState\":\"\",\r\n                     \"id\":\"\"\r\n                   }\r\n                 ],\r\n                 \"dnsSettings\":{\r\n                   \"dnsServers\":[\r\n                     \"\"\r\n                   ],\r\n                   \"appliedDnsServers\":[\r\n                     \"\"\r\n                   ],\r\n                   \"internalDnsNameLabel\":\"\",\r\n                   \"internalFqdn\":\"\"\r\n                 },\r\n                 \"macAddress\":\"\",\r\n                 \"primary\":null,\r\n                 \"enableIPForwarding\":null,\r\n                 \"resourceGuid\":\"\",\r\n                 \"provisioningState\":\"\",\r\n                 \"id\":\"\",\r\n                 \"name\":null,\r\n                 \"type\":null,\r\n                 \"location\":\"\",\r\n                 \"tags\":{\r\n                 }\r\n               }\r\n             ],\r\n             \"subnets\":[\r\n           null\r\n             ],\r\n             \"resourceGuid\":\"\",\r\n             \"provisioningState\":\"\",\r\n             \"id\":\"\",\r\n             \"name\":null,\r\n             \"type\":null,\r\n             \"location\":\"\",\r\n             \"tags\":{\r\n             }\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "virtual-networks create-or-update-parameters network-security-group add",
                  "usage": "[options]",
                  "filePath": "commands/arm/vnet/vnet._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--key <key>",
                      "required": -7,
                      "optional": 0,
                      "bool": true,
                      "long": "--key",
                      "description": "The JSON key."
                    },
                    {
                      "flags": "--value <value>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--value",
                      "description": "The JSON value."
                    },
                    {
                      "flags": "--parse",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--parse",
                      "description": "Parse the input value string to a JSON object."
                    }
                  ]
                }
              ],
              "categories": {}
            },
            "security-rules": {
              "name": "security-rules",
              "description": "Commands to set/remove/add security-rules of virtual-networks in create-or-update-parameters file.",
              "fullName": "virtual-networks create-or-update-parameters security-rules",
              "usage": "[options] [command]",
              "options": [],
              "commands": [
                {
                  "name": "set",
                  "description": "Set security-rules in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"securityRules\" : {\r\n             \"name\":\"\",\r\n             \"etag\":\"\",\r\n             \"description\":\"\",\r\n             \"protocol\":\"\",\r\n             \"sourcePortRange\":\"\",\r\n             \"destinationPortRange\":\"\",\r\n             \"sourceAddressPrefix\":\"\",\r\n             \"destinationAddressPrefix\":\"\",\r\n             \"access\":\"\",\r\n             \"priority\":null,\r\n             \"direction\":\"\",\r\n             \"provisioningState\":\"\",\r\n             \"id\":\"\"\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "virtual-networks create-or-update-parameters security-rules set",
                  "usage": "[options]",
                  "filePath": "commands/arm/vnet/vnet._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--index <index>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--index",
                      "description": "Indexer: index."
                    },
                    {
                      "flags": "--subnets-index <subnets-index>",
                      "required": -17,
                      "optional": 0,
                      "bool": true,
                      "long": "--subnets-index",
                      "description": "Indexer: subnets-index."
                    },
                    {
                      "flags": "--value <value>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--value",
                      "description": "The input string value for the indexed item."
                    },
                    {
                      "flags": "--parse",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--parse",
                      "description": "Parse the input value string to a JSON object."
                    },
                    {
                      "flags": "--name <name>",
                      "required": -8,
                      "optional": 0,
                      "bool": true,
                      "long": "--name",
                      "description": "Set the name value."
                    },
                    {
                      "flags": "--etag <etag>",
                      "required": -8,
                      "optional": 0,
                      "bool": true,
                      "long": "--etag",
                      "description": "Set the etag value."
                    },
                    {
                      "flags": "--description <description>",
                      "required": -15,
                      "optional": 0,
                      "bool": true,
                      "long": "--description",
                      "description": "Set the description value."
                    },
                    {
                      "flags": "--protocol <protocol>",
                      "required": -12,
                      "optional": 0,
                      "bool": true,
                      "long": "--protocol",
                      "description": "Set the protocol value."
                    },
                    {
                      "flags": "--source-port-range <sourcePortRange>",
                      "required": -21,
                      "optional": 0,
                      "bool": true,
                      "long": "--source-port-range",
                      "description": "Set the source-port-range value."
                    },
                    {
                      "flags": "--destination-port-range <destinationPortRange>",
                      "required": -26,
                      "optional": 0,
                      "bool": true,
                      "long": "--destination-port-range",
                      "description": "Set the destination-port-range value."
                    },
                    {
                      "flags": "--source-address-prefix <sourceAddressPrefix>",
                      "required": -25,
                      "optional": 0,
                      "bool": true,
                      "long": "--source-address-prefix",
                      "description": "Set the source-address-prefix value."
                    },
                    {
                      "flags": "--destination-address-prefix <destinationAddressPrefix>",
                      "required": -30,
                      "optional": 0,
                      "bool": true,
                      "long": "--destination-address-prefix",
                      "description": "Set the destination-address-prefix value."
                    },
                    {
                      "flags": "--access <access>",
                      "required": -10,
                      "optional": 0,
                      "bool": true,
                      "long": "--access",
                      "description": "Set the access value."
                    },
                    {
                      "flags": "--priority <priority>",
                      "required": -12,
                      "optional": 0,
                      "bool": true,
                      "long": "--priority",
                      "description": "Set the priority value."
                    },
                    {
                      "flags": "--direction <direction>",
                      "required": -13,
                      "optional": 0,
                      "bool": true,
                      "long": "--direction",
                      "description": "Set the direction value."
                    },
                    {
                      "flags": "--provisioning-state <provisioningState>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "long": "--provisioning-state",
                      "description": "Set the provisioning-state value."
                    },
                    {
                      "flags": "--id <id>",
                      "required": -6,
                      "optional": 0,
                      "bool": true,
                      "long": "--id",
                      "description": "Set the id value."
                    }
                  ]
                },
                {
                  "name": "remove",
                  "description": "Remove security-rules in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"securityRules\" : {\r\n             \"name\":\"\",\r\n             \"etag\":\"\",\r\n             \"description\":\"\",\r\n             \"protocol\":\"\",\r\n             \"sourcePortRange\":\"\",\r\n             \"destinationPortRange\":\"\",\r\n             \"sourceAddressPrefix\":\"\",\r\n             \"destinationAddressPrefix\":\"\",\r\n             \"access\":\"\",\r\n             \"priority\":null,\r\n             \"direction\":\"\",\r\n             \"provisioningState\":\"\",\r\n             \"id\":\"\"\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "virtual-networks create-or-update-parameters security-rules remove",
                  "usage": "[options]",
                  "filePath": "commands/arm/vnet/vnet._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--index <index>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--index",
                      "description": "Indexer: index."
                    },
                    {
                      "flags": "--subnets-index <subnets-index>",
                      "required": -17,
                      "optional": 0,
                      "bool": true,
                      "long": "--subnets-index",
                      "description": "Indexer: subnets-index."
                    },
                    {
                      "flags": "--name",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--name",
                      "description": "Remove the name value."
                    },
                    {
                      "flags": "--etag",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--etag",
                      "description": "Remove the etag value."
                    },
                    {
                      "flags": "--description",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--description",
                      "description": "Remove the description value."
                    },
                    {
                      "flags": "--protocol",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--protocol",
                      "description": "Remove the protocol value."
                    },
                    {
                      "flags": "--source-port-range",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--source-port-range",
                      "description": "Remove the source-port-range value."
                    },
                    {
                      "flags": "--destination-port-range",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--destination-port-range",
                      "description": "Remove the destination-port-range value."
                    },
                    {
                      "flags": "--source-address-prefix",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--source-address-prefix",
                      "description": "Remove the source-address-prefix value."
                    },
                    {
                      "flags": "--destination-address-prefix",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--destination-address-prefix",
                      "description": "Remove the destination-address-prefix value."
                    },
                    {
                      "flags": "--access",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--access",
                      "description": "Remove the access value."
                    },
                    {
                      "flags": "--priority",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--priority",
                      "description": "Remove the priority value."
                    },
                    {
                      "flags": "--direction",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--direction",
                      "description": "Remove the direction value."
                    },
                    {
                      "flags": "--provisioning-state",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--provisioning-state",
                      "description": "Remove the provisioning-state value."
                    },
                    {
                      "flags": "--id",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--id",
                      "description": "Remove the id value."
                    }
                  ]
                },
                {
                  "name": "add",
                  "description": "Add security-rules in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"securityRules\" : {\r\n             \"name\":\"\",\r\n             \"etag\":\"\",\r\n             \"description\":\"\",\r\n             \"protocol\":\"\",\r\n             \"sourcePortRange\":\"\",\r\n             \"destinationPortRange\":\"\",\r\n             \"sourceAddressPrefix\":\"\",\r\n             \"destinationAddressPrefix\":\"\",\r\n             \"access\":\"\",\r\n             \"priority\":null,\r\n             \"direction\":\"\",\r\n             \"provisioningState\":\"\",\r\n             \"id\":\"\"\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "virtual-networks create-or-update-parameters security-rules add",
                  "usage": "[options]",
                  "filePath": "commands/arm/vnet/vnet._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--key <key>",
                      "required": -7,
                      "optional": 0,
                      "bool": true,
                      "long": "--key",
                      "description": "The JSON key."
                    },
                    {
                      "flags": "--value <value>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--value",
                      "description": "The JSON value."
                    },
                    {
                      "flags": "--parse",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--parse",
                      "description": "Parse the input value string to a JSON object."
                    },
                    {
                      "flags": "--name <name>",
                      "required": -8,
                      "optional": 0,
                      "bool": true,
                      "long": "--name",
                      "description": "Add the name value."
                    },
                    {
                      "flags": "--etag <etag>",
                      "required": -8,
                      "optional": 0,
                      "bool": true,
                      "long": "--etag",
                      "description": "Add the etag value."
                    },
                    {
                      "flags": "--description <description>",
                      "required": -15,
                      "optional": 0,
                      "bool": true,
                      "long": "--description",
                      "description": "Add the description value."
                    },
                    {
                      "flags": "--protocol <protocol>",
                      "required": -12,
                      "optional": 0,
                      "bool": true,
                      "long": "--protocol",
                      "description": "Add the protocol value."
                    },
                    {
                      "flags": "--source-port-range <sourcePortRange>",
                      "required": -21,
                      "optional": 0,
                      "bool": true,
                      "long": "--source-port-range",
                      "description": "Add the source-port-range value."
                    },
                    {
                      "flags": "--destination-port-range <destinationPortRange>",
                      "required": -26,
                      "optional": 0,
                      "bool": true,
                      "long": "--destination-port-range",
                      "description": "Add the destination-port-range value."
                    },
                    {
                      "flags": "--source-address-prefix <sourceAddressPrefix>",
                      "required": -25,
                      "optional": 0,
                      "bool": true,
                      "long": "--source-address-prefix",
                      "description": "Add the source-address-prefix value."
                    },
                    {
                      "flags": "--destination-address-prefix <destinationAddressPrefix>",
                      "required": -30,
                      "optional": 0,
                      "bool": true,
                      "long": "--destination-address-prefix",
                      "description": "Add the destination-address-prefix value."
                    },
                    {
                      "flags": "--access <access>",
                      "required": -10,
                      "optional": 0,
                      "bool": true,
                      "long": "--access",
                      "description": "Add the access value."
                    },
                    {
                      "flags": "--priority <priority>",
                      "required": -12,
                      "optional": 0,
                      "bool": true,
                      "long": "--priority",
                      "description": "Add the priority value."
                    },
                    {
                      "flags": "--direction <direction>",
                      "required": -13,
                      "optional": 0,
                      "bool": true,
                      "long": "--direction",
                      "description": "Add the direction value."
                    },
                    {
                      "flags": "--provisioning-state <provisioningState>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "long": "--provisioning-state",
                      "description": "Add the provisioning-state value."
                    },
                    {
                      "flags": "--id <id>",
                      "required": -6,
                      "optional": 0,
                      "bool": true,
                      "long": "--id",
                      "description": "Add the id value."
                    }
                  ]
                }
              ],
              "categories": {}
            },
            "default-security-rules": {
              "name": "default-security-rules",
              "description": "Commands to set/remove/add default-security-rules of virtual-networks in create-or-update-parameters file.",
              "fullName": "virtual-networks create-or-update-parameters default-security-rules",
              "usage": "[options] [command]",
              "options": [],
              "commands": [
                {
                  "name": "set",
                  "description": "Set default-security-rules in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"defaultSecurityRules\" : {\r\n             \"name\":\"\",\r\n             \"etag\":\"\",\r\n             \"description\":\"\",\r\n             \"protocol\":\"\",\r\n             \"sourcePortRange\":\"\",\r\n             \"destinationPortRange\":\"\",\r\n             \"sourceAddressPrefix\":\"\",\r\n             \"destinationAddressPrefix\":\"\",\r\n             \"access\":\"\",\r\n             \"priority\":null,\r\n             \"direction\":\"\",\r\n             \"provisioningState\":\"\",\r\n             \"id\":\"\"\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "virtual-networks create-or-update-parameters default-security-rules set",
                  "usage": "[options]",
                  "filePath": "commands/arm/vnet/vnet._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--index <index>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--index",
                      "description": "Indexer: index."
                    },
                    {
                      "flags": "--subnets-index <subnets-index>",
                      "required": -17,
                      "optional": 0,
                      "bool": true,
                      "long": "--subnets-index",
                      "description": "Indexer: subnets-index."
                    },
                    {
                      "flags": "--value <value>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--value",
                      "description": "The input string value for the indexed item."
                    },
                    {
                      "flags": "--parse",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--parse",
                      "description": "Parse the input value string to a JSON object."
                    }
                  ]
                },
                {
                  "name": "remove",
                  "description": "Remove default-security-rules in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"defaultSecurityRules\" : {\r\n             \"name\":\"\",\r\n             \"etag\":\"\",\r\n             \"description\":\"\",\r\n             \"protocol\":\"\",\r\n             \"sourcePortRange\":\"\",\r\n             \"destinationPortRange\":\"\",\r\n             \"sourceAddressPrefix\":\"\",\r\n             \"destinationAddressPrefix\":\"\",\r\n             \"access\":\"\",\r\n             \"priority\":null,\r\n             \"direction\":\"\",\r\n             \"provisioningState\":\"\",\r\n             \"id\":\"\"\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "virtual-networks create-or-update-parameters default-security-rules remove",
                  "usage": "[options]",
                  "filePath": "commands/arm/vnet/vnet._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--index <index>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--index",
                      "description": "Indexer: index."
                    },
                    {
                      "flags": "--subnets-index <subnets-index>",
                      "required": -17,
                      "optional": 0,
                      "bool": true,
                      "long": "--subnets-index",
                      "description": "Indexer: subnets-index."
                    }
                  ]
                },
                {
                  "name": "add",
                  "description": "Add default-security-rules in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"defaultSecurityRules\" : {\r\n             \"name\":\"\",\r\n             \"etag\":\"\",\r\n             \"description\":\"\",\r\n             \"protocol\":\"\",\r\n             \"sourcePortRange\":\"\",\r\n             \"destinationPortRange\":\"\",\r\n             \"sourceAddressPrefix\":\"\",\r\n             \"destinationAddressPrefix\":\"\",\r\n             \"access\":\"\",\r\n             \"priority\":null,\r\n             \"direction\":\"\",\r\n             \"provisioningState\":\"\",\r\n             \"id\":\"\"\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "virtual-networks create-or-update-parameters default-security-rules add",
                  "usage": "[options]",
                  "filePath": "commands/arm/vnet/vnet._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--key <key>",
                      "required": -7,
                      "optional": 0,
                      "bool": true,
                      "long": "--key",
                      "description": "The JSON key."
                    },
                    {
                      "flags": "--value <value>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--value",
                      "description": "The JSON value."
                    },
                    {
                      "flags": "--parse",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--parse",
                      "description": "Parse the input value string to a JSON object."
                    }
                  ]
                }
              ],
              "categories": {}
            },
            "network-interfaces": {
              "name": "network-interfaces",
              "description": "Commands to set/remove/add network-interfaces of virtual-networks in create-or-update-parameters file.",
              "fullName": "virtual-networks create-or-update-parameters network-interfaces",
              "usage": "[options] [command]",
              "options": [],
              "commands": [
                {
                  "name": "set",
                  "description": "Set network-interfaces in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"networkInterfaces\" : {\r\n             \"etag\":\"\",\r\n             \"virtualMachine\":{\r\n               \"id\":\"\"\r\n             },\r\n             \"networkSecurityGroup\":{\r\n               \"etag\":\"\",\r\n               \"securityRules\":[\r\n                 {\r\n                   \"name\":\"\",\r\n                   \"etag\":\"\",\r\n                   \"description\":\"\",\r\n                   \"protocol\":\"\",\r\n                   \"sourcePortRange\":\"\",\r\n                   \"destinationPortRange\":\"\",\r\n                   \"sourceAddressPrefix\":\"\",\r\n                   \"destinationAddressPrefix\":\"\",\r\n                   \"access\":\"\",\r\n                   \"priority\":null,\r\n                   \"direction\":\"\",\r\n                   \"provisioningState\":\"\",\r\n                   \"id\":\"\"\r\n                 }\r\n               ],\r\n               \"defaultSecurityRules\":[\r\n           null\r\n               ],\r\n               \"networkInterfaces\":[\r\n           null\r\n               ],\r\n               \"subnets\":[\r\n                 {\r\n                   \"name\":\"\",\r\n                   \"etag\":\"\",\r\n                   \"addressPrefix\":\"\",\r\n                   \"networkSecurityGroup\":null,\r\n                   \"routeTable\":{\r\n                     \"etag\":\"\",\r\n                     \"routes\":[\r\n                       {\r\n                         \"name\":\"\",\r\n                         \"etag\":\"\",\r\n                         \"addressPrefix\":\"\",\r\n                         \"nextHopType\":\"\",\r\n                         \"nextHopIpAddress\":\"\",\r\n                         \"provisioningState\":\"\",\r\n                         \"id\":\"\"\r\n                       }\r\n                     ],\r\n                     \"subnets\":[\r\n           null\r\n                     ],\r\n                     \"provisioningState\":\"\",\r\n                     \"id\":\"\",\r\n                     \"name\":null,\r\n                     \"type\":null,\r\n                     \"location\":\"\",\r\n                     \"tags\":{\r\n                     }\r\n                   },\r\n                   \"ipConfigurations\":[\r\n                     {\r\n                       \"name\":\"\",\r\n                       \"etag\":\"\",\r\n                       \"privateIPAddress\":\"\",\r\n                       \"privateIPAllocationMethod\":\"\",\r\n                       \"subnet\":null,\r\n                       \"publicIPAddress\":{\r\n                         \"etag\":\"\",\r\n                         \"publicIPAllocationMethod\":\"\",\r\n                         \"ipConfiguration\":null,\r\n                         \"dnsSettings\":{\r\n                           \"domainNameLabel\":\"\",\r\n                           \"fqdn\":\"\",\r\n                           \"reverseFqdn\":\"\"\r\n                         },\r\n                         \"ipAddress\":\"\",\r\n                         \"idleTimeoutInMinutes\":null,\r\n                         \"resourceGuid\":\"\",\r\n                         \"provisioningState\":\"\",\r\n                         \"id\":\"\",\r\n                         \"name\":null,\r\n                         \"type\":null,\r\n                         \"location\":\"\",\r\n                         \"tags\":{\r\n                         }\r\n                       },\r\n                       \"provisioningState\":\"\",\r\n                       \"id\":\"\"\r\n                     }\r\n                   ],\r\n                   \"provisioningState\":\"\",\r\n                   \"id\":\"\"\r\n                 }\r\n               ],\r\n               \"resourceGuid\":\"\",\r\n               \"provisioningState\":\"\",\r\n               \"id\":\"\",\r\n               \"name\":null,\r\n               \"type\":null,\r\n               \"location\":\"\",\r\n               \"tags\":{\r\n               }\r\n             },\r\n             \"ipConfigurations\":[\r\n               {\r\n                 \"name\":\"\",\r\n                 \"etag\":\"\",\r\n                 \"loadBalancerBackendAddressPools\":[\r\n                   {\r\n                     \"name\":\"\",\r\n                     \"etag\":\"\",\r\n                     \"backendIPConfigurations\":[\r\n           null\r\n                     ],\r\n                     \"loadBalancingRules\":[\r\n           null\r\n                     ],\r\n                     \"outboundNatRule\":null,\r\n                     \"provisioningState\":\"\",\r\n                     \"id\":\"\"\r\n                   }\r\n                 ],\r\n                 \"loadBalancerInboundNatRules\":[\r\n                   {\r\n                     \"name\":\"\",\r\n                     \"etag\":\"\",\r\n                     \"frontendIPConfiguration\":null,\r\n                     \"backendIPConfiguration\":null,\r\n                     \"protocol\":\"\",\r\n                     \"frontendPort\":null,\r\n                     \"backendPort\":null,\r\n                     \"idleTimeoutInMinutes\":null,\r\n                     \"enableFloatingIP\":null,\r\n                     \"provisioningState\":\"\",\r\n                     \"id\":\"\"\r\n                   }\r\n                 ],\r\n                 \"privateIPAddress\":\"\",\r\n                 \"privateIPAllocationMethod\":\"\",\r\n                 \"subnet\":null,\r\n                 \"publicIPAddress\":null,\r\n                 \"provisioningState\":\"\",\r\n                 \"id\":\"\"\r\n               }\r\n             ],\r\n             \"dnsSettings\":{\r\n               \"dnsServers\":[\r\n                 \"\"\r\n               ],\r\n               \"appliedDnsServers\":[\r\n                 \"\"\r\n               ],\r\n               \"internalDnsNameLabel\":\"\",\r\n               \"internalFqdn\":\"\"\r\n             },\r\n             \"macAddress\":\"\",\r\n             \"primary\":null,\r\n             \"enableIPForwarding\":null,\r\n             \"resourceGuid\":\"\",\r\n             \"provisioningState\":\"\",\r\n             \"id\":\"\",\r\n             \"name\":null,\r\n             \"type\":null,\r\n             \"location\":\"\",\r\n             \"tags\":{\r\n             }\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "virtual-networks create-or-update-parameters network-interfaces set",
                  "usage": "[options]",
                  "filePath": "commands/arm/vnet/vnet._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--index <index>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--index",
                      "description": "Indexer: index."
                    },
                    {
                      "flags": "--subnets-index <subnets-index>",
                      "required": -17,
                      "optional": 0,
                      "bool": true,
                      "long": "--subnets-index",
                      "description": "Indexer: subnets-index."
                    },
                    {
                      "flags": "--value <value>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--value",
                      "description": "The input string value for the indexed item."
                    },
                    {
                      "flags": "--parse",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--parse",
                      "description": "Parse the input value string to a JSON object."
                    },
                    {
                      "flags": "--etag <etag>",
                      "required": -8,
                      "optional": 0,
                      "bool": true,
                      "long": "--etag",
                      "description": "Set the etag value."
                    },
                    {
                      "flags": "--virtual-machine <virtualMachine>",
                      "required": -19,
                      "optional": 0,
                      "bool": true,
                      "long": "--virtual-machine",
                      "description": "Set the virtual-machine value."
                    },
                    {
                      "flags": "--network-security-group <networkSecurityGroup>",
                      "required": -26,
                      "optional": 0,
                      "bool": true,
                      "long": "--network-security-group",
                      "description": "Set the network-security-group value."
                    },
                    {
                      "flags": "--ip-configurations <ipConfigurations>",
                      "required": -21,
                      "optional": 0,
                      "bool": true,
                      "long": "--ip-configurations",
                      "description": "Set the ip-configurations value."
                    },
                    {
                      "flags": "--dns-settings <dnsSettings>",
                      "required": -16,
                      "optional": 0,
                      "bool": true,
                      "long": "--dns-settings",
                      "description": "Set the dns-settings value."
                    },
                    {
                      "flags": "--mac-address <macAddress>",
                      "required": -15,
                      "optional": 0,
                      "bool": true,
                      "long": "--mac-address",
                      "description": "Set the mac-address value."
                    },
                    {
                      "flags": "--primary <primary>",
                      "required": -11,
                      "optional": 0,
                      "bool": true,
                      "long": "--primary",
                      "description": "Set the primary value."
                    },
                    {
                      "flags": "--enable-ip-forwarding <enableIPForwarding>",
                      "required": -24,
                      "optional": 0,
                      "bool": true,
                      "long": "--enable-ip-forwarding",
                      "description": "Set the enable-ip-forwarding value."
                    },
                    {
                      "flags": "--resource-guid <resourceGuid>",
                      "required": -17,
                      "optional": 0,
                      "bool": true,
                      "long": "--resource-guid",
                      "description": "Set the resource-guid value."
                    },
                    {
                      "flags": "--provisioning-state <provisioningState>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "long": "--provisioning-state",
                      "description": "Set the provisioning-state value."
                    },
                    {
                      "flags": "--id <id>",
                      "required": -6,
                      "optional": 0,
                      "bool": true,
                      "long": "--id",
                      "description": "Set the id value."
                    },
                    {
                      "flags": "--name <name>",
                      "required": -8,
                      "optional": 0,
                      "bool": true,
                      "long": "--name",
                      "description": "Set the name value."
                    },
                    {
                      "flags": "--type <type>",
                      "required": -8,
                      "optional": 0,
                      "bool": true,
                      "long": "--type",
                      "description": "Set the type value."
                    },
                    {
                      "flags": "--location <location>",
                      "required": -12,
                      "optional": 0,
                      "bool": true,
                      "long": "--location",
                      "description": "Set the location value."
                    },
                    {
                      "flags": "--tags <tags>",
                      "required": -8,
                      "optional": 0,
                      "bool": true,
                      "long": "--tags",
                      "description": "Set the tags value."
                    }
                  ]
                },
                {
                  "name": "remove",
                  "description": "Remove network-interfaces in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"networkInterfaces\" : {\r\n             \"etag\":\"\",\r\n             \"virtualMachine\":{\r\n               \"id\":\"\"\r\n             },\r\n             \"networkSecurityGroup\":{\r\n               \"etag\":\"\",\r\n               \"securityRules\":[\r\n                 {\r\n                   \"name\":\"\",\r\n                   \"etag\":\"\",\r\n                   \"description\":\"\",\r\n                   \"protocol\":\"\",\r\n                   \"sourcePortRange\":\"\",\r\n                   \"destinationPortRange\":\"\",\r\n                   \"sourceAddressPrefix\":\"\",\r\n                   \"destinationAddressPrefix\":\"\",\r\n                   \"access\":\"\",\r\n                   \"priority\":null,\r\n                   \"direction\":\"\",\r\n                   \"provisioningState\":\"\",\r\n                   \"id\":\"\"\r\n                 }\r\n               ],\r\n               \"defaultSecurityRules\":[\r\n           null\r\n               ],\r\n               \"networkInterfaces\":[\r\n           null\r\n               ],\r\n               \"subnets\":[\r\n                 {\r\n                   \"name\":\"\",\r\n                   \"etag\":\"\",\r\n                   \"addressPrefix\":\"\",\r\n                   \"networkSecurityGroup\":null,\r\n                   \"routeTable\":{\r\n                     \"etag\":\"\",\r\n                     \"routes\":[\r\n                       {\r\n                         \"name\":\"\",\r\n                         \"etag\":\"\",\r\n                         \"addressPrefix\":\"\",\r\n                         \"nextHopType\":\"\",\r\n                         \"nextHopIpAddress\":\"\",\r\n                         \"provisioningState\":\"\",\r\n                         \"id\":\"\"\r\n                       }\r\n                     ],\r\n                     \"subnets\":[\r\n           null\r\n                     ],\r\n                     \"provisioningState\":\"\",\r\n                     \"id\":\"\",\r\n                     \"name\":null,\r\n                     \"type\":null,\r\n                     \"location\":\"\",\r\n                     \"tags\":{\r\n                     }\r\n                   },\r\n                   \"ipConfigurations\":[\r\n                     {\r\n                       \"name\":\"\",\r\n                       \"etag\":\"\",\r\n                       \"privateIPAddress\":\"\",\r\n                       \"privateIPAllocationMethod\":\"\",\r\n                       \"subnet\":null,\r\n                       \"publicIPAddress\":{\r\n                         \"etag\":\"\",\r\n                         \"publicIPAllocationMethod\":\"\",\r\n                         \"ipConfiguration\":null,\r\n                         \"dnsSettings\":{\r\n                           \"domainNameLabel\":\"\",\r\n                           \"fqdn\":\"\",\r\n                           \"reverseFqdn\":\"\"\r\n                         },\r\n                         \"ipAddress\":\"\",\r\n                         \"idleTimeoutInMinutes\":null,\r\n                         \"resourceGuid\":\"\",\r\n                         \"provisioningState\":\"\",\r\n                         \"id\":\"\",\r\n                         \"name\":null,\r\n                         \"type\":null,\r\n                         \"location\":\"\",\r\n                         \"tags\":{\r\n                         }\r\n                       },\r\n                       \"provisioningState\":\"\",\r\n                       \"id\":\"\"\r\n                     }\r\n                   ],\r\n                   \"provisioningState\":\"\",\r\n                   \"id\":\"\"\r\n                 }\r\n               ],\r\n               \"resourceGuid\":\"\",\r\n               \"provisioningState\":\"\",\r\n               \"id\":\"\",\r\n               \"name\":null,\r\n               \"type\":null,\r\n               \"location\":\"\",\r\n               \"tags\":{\r\n               }\r\n             },\r\n             \"ipConfigurations\":[\r\n               {\r\n                 \"name\":\"\",\r\n                 \"etag\":\"\",\r\n                 \"loadBalancerBackendAddressPools\":[\r\n                   {\r\n                     \"name\":\"\",\r\n                     \"etag\":\"\",\r\n                     \"backendIPConfigurations\":[\r\n           null\r\n                     ],\r\n                     \"loadBalancingRules\":[\r\n           null\r\n                     ],\r\n                     \"outboundNatRule\":null,\r\n                     \"provisioningState\":\"\",\r\n                     \"id\":\"\"\r\n                   }\r\n                 ],\r\n                 \"loadBalancerInboundNatRules\":[\r\n                   {\r\n                     \"name\":\"\",\r\n                     \"etag\":\"\",\r\n                     \"frontendIPConfiguration\":null,\r\n                     \"backendIPConfiguration\":null,\r\n                     \"protocol\":\"\",\r\n                     \"frontendPort\":null,\r\n                     \"backendPort\":null,\r\n                     \"idleTimeoutInMinutes\":null,\r\n                     \"enableFloatingIP\":null,\r\n                     \"provisioningState\":\"\",\r\n                     \"id\":\"\"\r\n                   }\r\n                 ],\r\n                 \"privateIPAddress\":\"\",\r\n                 \"privateIPAllocationMethod\":\"\",\r\n                 \"subnet\":null,\r\n                 \"publicIPAddress\":null,\r\n                 \"provisioningState\":\"\",\r\n                 \"id\":\"\"\r\n               }\r\n             ],\r\n             \"dnsSettings\":{\r\n               \"dnsServers\":[\r\n                 \"\"\r\n               ],\r\n               \"appliedDnsServers\":[\r\n                 \"\"\r\n               ],\r\n               \"internalDnsNameLabel\":\"\",\r\n               \"internalFqdn\":\"\"\r\n             },\r\n             \"macAddress\":\"\",\r\n             \"primary\":null,\r\n             \"enableIPForwarding\":null,\r\n             \"resourceGuid\":\"\",\r\n             \"provisioningState\":\"\",\r\n             \"id\":\"\",\r\n             \"name\":null,\r\n             \"type\":null,\r\n             \"location\":\"\",\r\n             \"tags\":{\r\n             }\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "virtual-networks create-or-update-parameters network-interfaces remove",
                  "usage": "[options]",
                  "filePath": "commands/arm/vnet/vnet._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--index <index>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--index",
                      "description": "Indexer: index."
                    },
                    {
                      "flags": "--subnets-index <subnets-index>",
                      "required": -17,
                      "optional": 0,
                      "bool": true,
                      "long": "--subnets-index",
                      "description": "Indexer: subnets-index."
                    },
                    {
                      "flags": "--etag",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--etag",
                      "description": "Remove the etag value."
                    },
                    {
                      "flags": "--virtual-machine",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--virtual-machine",
                      "description": "Remove the virtual-machine value."
                    },
                    {
                      "flags": "--network-security-group",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--network-security-group",
                      "description": "Remove the network-security-group value."
                    },
                    {
                      "flags": "--ip-configurations",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--ip-configurations",
                      "description": "Remove the ip-configurations value."
                    },
                    {
                      "flags": "--dns-settings",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--dns-settings",
                      "description": "Remove the dns-settings value."
                    },
                    {
                      "flags": "--mac-address",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--mac-address",
                      "description": "Remove the mac-address value."
                    },
                    {
                      "flags": "--primary",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--primary",
                      "description": "Remove the primary value."
                    },
                    {
                      "flags": "--enable-ip-forwarding",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--enable-ip-forwarding",
                      "description": "Remove the enable-ip-forwarding value."
                    },
                    {
                      "flags": "--resource-guid",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--resource-guid",
                      "description": "Remove the resource-guid value."
                    },
                    {
                      "flags": "--provisioning-state",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--provisioning-state",
                      "description": "Remove the provisioning-state value."
                    },
                    {
                      "flags": "--id",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--id",
                      "description": "Remove the id value."
                    },
                    {
                      "flags": "--name",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--name",
                      "description": "Remove the name value."
                    },
                    {
                      "flags": "--type",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--type",
                      "description": "Remove the type value."
                    },
                    {
                      "flags": "--location",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--location",
                      "description": "Remove the location value."
                    },
                    {
                      "flags": "--tags",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--tags",
                      "description": "Remove the tags value."
                    }
                  ]
                },
                {
                  "name": "add",
                  "description": "Add network-interfaces in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"networkInterfaces\" : {\r\n             \"etag\":\"\",\r\n             \"virtualMachine\":{\r\n               \"id\":\"\"\r\n             },\r\n             \"networkSecurityGroup\":{\r\n               \"etag\":\"\",\r\n               \"securityRules\":[\r\n                 {\r\n                   \"name\":\"\",\r\n                   \"etag\":\"\",\r\n                   \"description\":\"\",\r\n                   \"protocol\":\"\",\r\n                   \"sourcePortRange\":\"\",\r\n                   \"destinationPortRange\":\"\",\r\n                   \"sourceAddressPrefix\":\"\",\r\n                   \"destinationAddressPrefix\":\"\",\r\n                   \"access\":\"\",\r\n                   \"priority\":null,\r\n                   \"direction\":\"\",\r\n                   \"provisioningState\":\"\",\r\n                   \"id\":\"\"\r\n                 }\r\n               ],\r\n               \"defaultSecurityRules\":[\r\n           null\r\n               ],\r\n               \"networkInterfaces\":[\r\n           null\r\n               ],\r\n               \"subnets\":[\r\n                 {\r\n                   \"name\":\"\",\r\n                   \"etag\":\"\",\r\n                   \"addressPrefix\":\"\",\r\n                   \"networkSecurityGroup\":null,\r\n                   \"routeTable\":{\r\n                     \"etag\":\"\",\r\n                     \"routes\":[\r\n                       {\r\n                         \"name\":\"\",\r\n                         \"etag\":\"\",\r\n                         \"addressPrefix\":\"\",\r\n                         \"nextHopType\":\"\",\r\n                         \"nextHopIpAddress\":\"\",\r\n                         \"provisioningState\":\"\",\r\n                         \"id\":\"\"\r\n                       }\r\n                     ],\r\n                     \"subnets\":[\r\n           null\r\n                     ],\r\n                     \"provisioningState\":\"\",\r\n                     \"id\":\"\",\r\n                     \"name\":null,\r\n                     \"type\":null,\r\n                     \"location\":\"\",\r\n                     \"tags\":{\r\n                     }\r\n                   },\r\n                   \"ipConfigurations\":[\r\n                     {\r\n                       \"name\":\"\",\r\n                       \"etag\":\"\",\r\n                       \"privateIPAddress\":\"\",\r\n                       \"privateIPAllocationMethod\":\"\",\r\n                       \"subnet\":null,\r\n                       \"publicIPAddress\":{\r\n                         \"etag\":\"\",\r\n                         \"publicIPAllocationMethod\":\"\",\r\n                         \"ipConfiguration\":null,\r\n                         \"dnsSettings\":{\r\n                           \"domainNameLabel\":\"\",\r\n                           \"fqdn\":\"\",\r\n                           \"reverseFqdn\":\"\"\r\n                         },\r\n                         \"ipAddress\":\"\",\r\n                         \"idleTimeoutInMinutes\":null,\r\n                         \"resourceGuid\":\"\",\r\n                         \"provisioningState\":\"\",\r\n                         \"id\":\"\",\r\n                         \"name\":null,\r\n                         \"type\":null,\r\n                         \"location\":\"\",\r\n                         \"tags\":{\r\n                         }\r\n                       },\r\n                       \"provisioningState\":\"\",\r\n                       \"id\":\"\"\r\n                     }\r\n                   ],\r\n                   \"provisioningState\":\"\",\r\n                   \"id\":\"\"\r\n                 }\r\n               ],\r\n               \"resourceGuid\":\"\",\r\n               \"provisioningState\":\"\",\r\n               \"id\":\"\",\r\n               \"name\":null,\r\n               \"type\":null,\r\n               \"location\":\"\",\r\n               \"tags\":{\r\n               }\r\n             },\r\n             \"ipConfigurations\":[\r\n               {\r\n                 \"name\":\"\",\r\n                 \"etag\":\"\",\r\n                 \"loadBalancerBackendAddressPools\":[\r\n                   {\r\n                     \"name\":\"\",\r\n                     \"etag\":\"\",\r\n                     \"backendIPConfigurations\":[\r\n           null\r\n                     ],\r\n                     \"loadBalancingRules\":[\r\n           null\r\n                     ],\r\n                     \"outboundNatRule\":null,\r\n                     \"provisioningState\":\"\",\r\n                     \"id\":\"\"\r\n                   }\r\n                 ],\r\n                 \"loadBalancerInboundNatRules\":[\r\n                   {\r\n                     \"name\":\"\",\r\n                     \"etag\":\"\",\r\n                     \"frontendIPConfiguration\":null,\r\n                     \"backendIPConfiguration\":null,\r\n                     \"protocol\":\"\",\r\n                     \"frontendPort\":null,\r\n                     \"backendPort\":null,\r\n                     \"idleTimeoutInMinutes\":null,\r\n                     \"enableFloatingIP\":null,\r\n                     \"provisioningState\":\"\",\r\n                     \"id\":\"\"\r\n                   }\r\n                 ],\r\n                 \"privateIPAddress\":\"\",\r\n                 \"privateIPAllocationMethod\":\"\",\r\n                 \"subnet\":null,\r\n                 \"publicIPAddress\":null,\r\n                 \"provisioningState\":\"\",\r\n                 \"id\":\"\"\r\n               }\r\n             ],\r\n             \"dnsSettings\":{\r\n               \"dnsServers\":[\r\n                 \"\"\r\n               ],\r\n               \"appliedDnsServers\":[\r\n                 \"\"\r\n               ],\r\n               \"internalDnsNameLabel\":\"\",\r\n               \"internalFqdn\":\"\"\r\n             },\r\n             \"macAddress\":\"\",\r\n             \"primary\":null,\r\n             \"enableIPForwarding\":null,\r\n             \"resourceGuid\":\"\",\r\n             \"provisioningState\":\"\",\r\n             \"id\":\"\",\r\n             \"name\":null,\r\n             \"type\":null,\r\n             \"location\":\"\",\r\n             \"tags\":{\r\n             }\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "virtual-networks create-or-update-parameters network-interfaces add",
                  "usage": "[options]",
                  "filePath": "commands/arm/vnet/vnet._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--key <key>",
                      "required": -7,
                      "optional": 0,
                      "bool": true,
                      "long": "--key",
                      "description": "The JSON key."
                    },
                    {
                      "flags": "--value <value>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--value",
                      "description": "The JSON value."
                    },
                    {
                      "flags": "--parse",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--parse",
                      "description": "Parse the input value string to a JSON object."
                    },
                    {
                      "flags": "--etag <etag>",
                      "required": -8,
                      "optional": 0,
                      "bool": true,
                      "long": "--etag",
                      "description": "Add the etag value."
                    },
                    {
                      "flags": "--virtual-machine <virtualMachine>",
                      "required": -19,
                      "optional": 0,
                      "bool": true,
                      "long": "--virtual-machine",
                      "description": "Add the virtual-machine value."
                    },
                    {
                      "flags": "--network-security-group <networkSecurityGroup>",
                      "required": -26,
                      "optional": 0,
                      "bool": true,
                      "long": "--network-security-group",
                      "description": "Add the network-security-group value."
                    },
                    {
                      "flags": "--ip-configurations <ipConfigurations>",
                      "required": -21,
                      "optional": 0,
                      "bool": true,
                      "long": "--ip-configurations",
                      "description": "Add the ip-configurations value."
                    },
                    {
                      "flags": "--dns-settings <dnsSettings>",
                      "required": -16,
                      "optional": 0,
                      "bool": true,
                      "long": "--dns-settings",
                      "description": "Add the dns-settings value."
                    },
                    {
                      "flags": "--mac-address <macAddress>",
                      "required": -15,
                      "optional": 0,
                      "bool": true,
                      "long": "--mac-address",
                      "description": "Add the mac-address value."
                    },
                    {
                      "flags": "--primary <primary>",
                      "required": -11,
                      "optional": 0,
                      "bool": true,
                      "long": "--primary",
                      "description": "Add the primary value."
                    },
                    {
                      "flags": "--enable-ip-forwarding <enableIPForwarding>",
                      "required": -24,
                      "optional": 0,
                      "bool": true,
                      "long": "--enable-ip-forwarding",
                      "description": "Add the enable-ip-forwarding value."
                    },
                    {
                      "flags": "--resource-guid <resourceGuid>",
                      "required": -17,
                      "optional": 0,
                      "bool": true,
                      "long": "--resource-guid",
                      "description": "Add the resource-guid value."
                    },
                    {
                      "flags": "--provisioning-state <provisioningState>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "long": "--provisioning-state",
                      "description": "Add the provisioning-state value."
                    },
                    {
                      "flags": "--id <id>",
                      "required": -6,
                      "optional": 0,
                      "bool": true,
                      "long": "--id",
                      "description": "Add the id value."
                    },
                    {
                      "flags": "--name <name>",
                      "required": -8,
                      "optional": 0,
                      "bool": true,
                      "long": "--name",
                      "description": "Add the name value."
                    },
                    {
                      "flags": "--type <type>",
                      "required": -8,
                      "optional": 0,
                      "bool": true,
                      "long": "--type",
                      "description": "Add the type value."
                    },
                    {
                      "flags": "--location <location>",
                      "required": -12,
                      "optional": 0,
                      "bool": true,
                      "long": "--location",
                      "description": "Add the location value."
                    },
                    {
                      "flags": "--tags <tags>",
                      "required": -8,
                      "optional": 0,
                      "bool": true,
                      "long": "--tags",
                      "description": "Add the tags value."
                    }
                  ]
                }
              ],
              "categories": {}
            },
            "virtual-machine": {
              "name": "virtual-machine",
              "description": "Commands to set/remove/add virtual-machine of virtual-networks in create-or-update-parameters file.",
              "fullName": "virtual-networks create-or-update-parameters virtual-machine",
              "usage": "[options] [command]",
              "options": [],
              "commands": [
                {
                  "name": "set",
                  "description": "Set virtual-machine in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"virtualMachine\" : {\r\n             \"id\":\"\"\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "virtual-networks create-or-update-parameters virtual-machine set",
                  "usage": "[options]",
                  "filePath": "commands/arm/vnet/vnet._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--network-interfaces-index <network-interfaces-index>",
                      "required": -28,
                      "optional": 0,
                      "bool": true,
                      "long": "--network-interfaces-index",
                      "description": "Indexer: network-interfaces-index."
                    },
                    {
                      "flags": "--subnets-index <subnets-index>",
                      "required": -17,
                      "optional": 0,
                      "bool": true,
                      "long": "--subnets-index",
                      "description": "Indexer: subnets-index."
                    },
                    {
                      "flags": "--parse",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--parse",
                      "description": "Parse the input value string to a JSON object."
                    },
                    {
                      "flags": "--id <id>",
                      "required": -6,
                      "optional": 0,
                      "bool": true,
                      "long": "--id",
                      "description": "Set the id value."
                    }
                  ]
                },
                {
                  "name": "remove",
                  "description": "Remove virtual-machine in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"virtualMachine\" : {\r\n             \"id\":\"\"\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "virtual-networks create-or-update-parameters virtual-machine remove",
                  "usage": "[options]",
                  "filePath": "commands/arm/vnet/vnet._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--network-interfaces-index <network-interfaces-index>",
                      "required": -28,
                      "optional": 0,
                      "bool": true,
                      "long": "--network-interfaces-index",
                      "description": "Indexer: network-interfaces-index."
                    },
                    {
                      "flags": "--subnets-index <subnets-index>",
                      "required": -17,
                      "optional": 0,
                      "bool": true,
                      "long": "--subnets-index",
                      "description": "Indexer: subnets-index."
                    },
                    {
                      "flags": "--id",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--id",
                      "description": "Remove the id value."
                    }
                  ]
                },
                {
                  "name": "add",
                  "description": "Add virtual-machine in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"virtualMachine\" : {\r\n             \"id\":\"\"\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "virtual-networks create-or-update-parameters virtual-machine add",
                  "usage": "[options]",
                  "filePath": "commands/arm/vnet/vnet._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--key <key>",
                      "required": -7,
                      "optional": 0,
                      "bool": true,
                      "long": "--key",
                      "description": "The JSON key."
                    },
                    {
                      "flags": "--value <value>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--value",
                      "description": "The JSON value."
                    },
                    {
                      "flags": "--parse",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--parse",
                      "description": "Parse the input value string to a JSON object."
                    },
                    {
                      "flags": "--id <id>",
                      "required": -6,
                      "optional": 0,
                      "bool": true,
                      "long": "--id",
                      "description": "Add the id value."
                    }
                  ]
                }
              ],
              "categories": {}
            },
            "ip-configurations": {
              "name": "ip-configurations",
              "description": "Commands to set/remove/add ip-configurations of virtual-networks in create-or-update-parameters file.",
              "fullName": "virtual-networks create-or-update-parameters ip-configurations",
              "usage": "[options] [command]",
              "options": [],
              "commands": [
                {
                  "name": "set",
                  "description": "Set ip-configurations in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"ipConfigurations\" : {\r\n             \"name\":\"\",\r\n             \"etag\":\"\",\r\n             \"privateIPAddress\":\"\",\r\n             \"privateIPAllocationMethod\":\"\",\r\n             \"subnet\":{\r\n               \"name\":\"\",\r\n               \"etag\":\"\",\r\n               \"addressPrefix\":\"\",\r\n               \"networkSecurityGroup\":{\r\n                 \"etag\":\"\",\r\n                 \"securityRules\":[\r\n                   {\r\n                     \"name\":\"\",\r\n                     \"etag\":\"\",\r\n                     \"description\":\"\",\r\n                     \"protocol\":\"\",\r\n                     \"sourcePortRange\":\"\",\r\n                     \"destinationPortRange\":\"\",\r\n                     \"sourceAddressPrefix\":\"\",\r\n                     \"destinationAddressPrefix\":\"\",\r\n                     \"access\":\"\",\r\n                     \"priority\":null,\r\n                     \"direction\":\"\",\r\n                     \"provisioningState\":\"\",\r\n                     \"id\":\"\"\r\n                   }\r\n                 ],\r\n                 \"defaultSecurityRules\":[\r\n           null\r\n                 ],\r\n                 \"networkInterfaces\":[\r\n                   {\r\n                     \"etag\":\"\",\r\n                     \"virtualMachine\":{\r\n                       \"id\":\"\"\r\n                     },\r\n                     \"networkSecurityGroup\":null,\r\n                     \"ipConfigurations\":[\r\n                       {\r\n                         \"name\":\"\",\r\n                         \"etag\":\"\",\r\n                         \"loadBalancerBackendAddressPools\":[\r\n                           {\r\n                             \"name\":\"\",\r\n                             \"etag\":\"\",\r\n                             \"backendIPConfigurations\":[\r\n           null\r\n                             ],\r\n                             \"loadBalancingRules\":[\r\n           null\r\n                             ],\r\n                             \"outboundNatRule\":null,\r\n                             \"provisioningState\":\"\",\r\n                             \"id\":\"\"\r\n                           }\r\n                         ],\r\n                         \"loadBalancerInboundNatRules\":[\r\n                           {\r\n                             \"name\":\"\",\r\n                             \"etag\":\"\",\r\n                             \"frontendIPConfiguration\":null,\r\n                             \"backendIPConfiguration\":null,\r\n                             \"protocol\":\"\",\r\n                             \"frontendPort\":null,\r\n                             \"backendPort\":null,\r\n                             \"idleTimeoutInMinutes\":null,\r\n                             \"enableFloatingIP\":null,\r\n                             \"provisioningState\":\"\",\r\n                             \"id\":\"\"\r\n                           }\r\n                         ],\r\n                         \"privateIPAddress\":\"\",\r\n                         \"privateIPAllocationMethod\":\"\",\r\n                         \"subnet\":null,\r\n                         \"publicIPAddress\":{\r\n                           \"etag\":\"\",\r\n                           \"publicIPAllocationMethod\":\"\",\r\n                           \"ipConfiguration\":null,\r\n                           \"dnsSettings\":{\r\n                             \"domainNameLabel\":\"\",\r\n                             \"fqdn\":\"\",\r\n                             \"reverseFqdn\":\"\"\r\n                           },\r\n                           \"ipAddress\":\"\",\r\n                           \"idleTimeoutInMinutes\":null,\r\n                           \"resourceGuid\":\"\",\r\n                           \"provisioningState\":\"\",\r\n                           \"id\":\"\",\r\n                           \"name\":null,\r\n                           \"type\":null,\r\n                           \"location\":\"\",\r\n                           \"tags\":{\r\n                           }\r\n                         },\r\n                         \"provisioningState\":\"\",\r\n                         \"id\":\"\"\r\n                       }\r\n                     ],\r\n                     \"dnsSettings\":{\r\n                       \"dnsServers\":[\r\n                         \"\"\r\n                       ],\r\n                       \"appliedDnsServers\":[\r\n                         \"\"\r\n                       ],\r\n                       \"internalDnsNameLabel\":\"\",\r\n                       \"internalFqdn\":\"\"\r\n                     },\r\n                     \"macAddress\":\"\",\r\n                     \"primary\":null,\r\n                     \"enableIPForwarding\":null,\r\n                     \"resourceGuid\":\"\",\r\n                     \"provisioningState\":\"\",\r\n                     \"id\":\"\",\r\n                     \"name\":null,\r\n                     \"type\":null,\r\n                     \"location\":\"\",\r\n                     \"tags\":{\r\n                     }\r\n                   }\r\n                 ],\r\n                 \"subnets\":[\r\n           null\r\n                 ],\r\n                 \"resourceGuid\":\"\",\r\n                 \"provisioningState\":\"\",\r\n                 \"id\":\"\",\r\n                 \"name\":null,\r\n                 \"type\":null,\r\n                 \"location\":\"\",\r\n                 \"tags\":{\r\n                 }\r\n               },\r\n               \"routeTable\":{\r\n                 \"etag\":\"\",\r\n                 \"routes\":[\r\n                   {\r\n                     \"name\":\"\",\r\n                     \"etag\":\"\",\r\n                     \"addressPrefix\":\"\",\r\n                     \"nextHopType\":\"\",\r\n                     \"nextHopIpAddress\":\"\",\r\n                     \"provisioningState\":\"\",\r\n                     \"id\":\"\"\r\n                   }\r\n                 ],\r\n                 \"subnets\":[\r\n           null\r\n                 ],\r\n                 \"provisioningState\":\"\",\r\n                 \"id\":\"\",\r\n                 \"name\":null,\r\n                 \"type\":null,\r\n                 \"location\":\"\",\r\n                 \"tags\":{\r\n                 }\r\n               },\r\n               \"ipConfigurations\":[\r\n           null\r\n               ],\r\n               \"provisioningState\":\"\",\r\n               \"id\":\"\"\r\n             },\r\n             \"publicIPAddress\":null,\r\n             \"provisioningState\":\"\",\r\n             \"id\":\"\"\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "virtual-networks create-or-update-parameters ip-configurations set",
                  "usage": "[options]",
                  "filePath": "commands/arm/vnet/vnet._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--index <index>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--index",
                      "description": "Indexer: index."
                    },
                    {
                      "flags": "--subnets-index <subnets-index>",
                      "required": -17,
                      "optional": 0,
                      "bool": true,
                      "long": "--subnets-index",
                      "description": "Indexer: subnets-index."
                    },
                    {
                      "flags": "--value <value>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--value",
                      "description": "The input string value for the indexed item."
                    },
                    {
                      "flags": "--parse",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--parse",
                      "description": "Parse the input value string to a JSON object."
                    }
                  ]
                },
                {
                  "name": "remove",
                  "description": "Remove ip-configurations in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"ipConfigurations\" : {\r\n             \"name\":\"\",\r\n             \"etag\":\"\",\r\n             \"privateIPAddress\":\"\",\r\n             \"privateIPAllocationMethod\":\"\",\r\n             \"subnet\":{\r\n               \"name\":\"\",\r\n               \"etag\":\"\",\r\n               \"addressPrefix\":\"\",\r\n               \"networkSecurityGroup\":{\r\n                 \"etag\":\"\",\r\n                 \"securityRules\":[\r\n                   {\r\n                     \"name\":\"\",\r\n                     \"etag\":\"\",\r\n                     \"description\":\"\",\r\n                     \"protocol\":\"\",\r\n                     \"sourcePortRange\":\"\",\r\n                     \"destinationPortRange\":\"\",\r\n                     \"sourceAddressPrefix\":\"\",\r\n                     \"destinationAddressPrefix\":\"\",\r\n                     \"access\":\"\",\r\n                     \"priority\":null,\r\n                     \"direction\":\"\",\r\n                     \"provisioningState\":\"\",\r\n                     \"id\":\"\"\r\n                   }\r\n                 ],\r\n                 \"defaultSecurityRules\":[\r\n           null\r\n                 ],\r\n                 \"networkInterfaces\":[\r\n                   {\r\n                     \"etag\":\"\",\r\n                     \"virtualMachine\":{\r\n                       \"id\":\"\"\r\n                     },\r\n                     \"networkSecurityGroup\":null,\r\n                     \"ipConfigurations\":[\r\n                       {\r\n                         \"name\":\"\",\r\n                         \"etag\":\"\",\r\n                         \"loadBalancerBackendAddressPools\":[\r\n                           {\r\n                             \"name\":\"\",\r\n                             \"etag\":\"\",\r\n                             \"backendIPConfigurations\":[\r\n           null\r\n                             ],\r\n                             \"loadBalancingRules\":[\r\n           null\r\n                             ],\r\n                             \"outboundNatRule\":null,\r\n                             \"provisioningState\":\"\",\r\n                             \"id\":\"\"\r\n                           }\r\n                         ],\r\n                         \"loadBalancerInboundNatRules\":[\r\n                           {\r\n                             \"name\":\"\",\r\n                             \"etag\":\"\",\r\n                             \"frontendIPConfiguration\":null,\r\n                             \"backendIPConfiguration\":null,\r\n                             \"protocol\":\"\",\r\n                             \"frontendPort\":null,\r\n                             \"backendPort\":null,\r\n                             \"idleTimeoutInMinutes\":null,\r\n                             \"enableFloatingIP\":null,\r\n                             \"provisioningState\":\"\",\r\n                             \"id\":\"\"\r\n                           }\r\n                         ],\r\n                         \"privateIPAddress\":\"\",\r\n                         \"privateIPAllocationMethod\":\"\",\r\n                         \"subnet\":null,\r\n                         \"publicIPAddress\":{\r\n                           \"etag\":\"\",\r\n                           \"publicIPAllocationMethod\":\"\",\r\n                           \"ipConfiguration\":null,\r\n                           \"dnsSettings\":{\r\n                             \"domainNameLabel\":\"\",\r\n                             \"fqdn\":\"\",\r\n                             \"reverseFqdn\":\"\"\r\n                           },\r\n                           \"ipAddress\":\"\",\r\n                           \"idleTimeoutInMinutes\":null,\r\n                           \"resourceGuid\":\"\",\r\n                           \"provisioningState\":\"\",\r\n                           \"id\":\"\",\r\n                           \"name\":null,\r\n                           \"type\":null,\r\n                           \"location\":\"\",\r\n                           \"tags\":{\r\n                           }\r\n                         },\r\n                         \"provisioningState\":\"\",\r\n                         \"id\":\"\"\r\n                       }\r\n                     ],\r\n                     \"dnsSettings\":{\r\n                       \"dnsServers\":[\r\n                         \"\"\r\n                       ],\r\n                       \"appliedDnsServers\":[\r\n                         \"\"\r\n                       ],\r\n                       \"internalDnsNameLabel\":\"\",\r\n                       \"internalFqdn\":\"\"\r\n                     },\r\n                     \"macAddress\":\"\",\r\n                     \"primary\":null,\r\n                     \"enableIPForwarding\":null,\r\n                     \"resourceGuid\":\"\",\r\n                     \"provisioningState\":\"\",\r\n                     \"id\":\"\",\r\n                     \"name\":null,\r\n                     \"type\":null,\r\n                     \"location\":\"\",\r\n                     \"tags\":{\r\n                     }\r\n                   }\r\n                 ],\r\n                 \"subnets\":[\r\n           null\r\n                 ],\r\n                 \"resourceGuid\":\"\",\r\n                 \"provisioningState\":\"\",\r\n                 \"id\":\"\",\r\n                 \"name\":null,\r\n                 \"type\":null,\r\n                 \"location\":\"\",\r\n                 \"tags\":{\r\n                 }\r\n               },\r\n               \"routeTable\":{\r\n                 \"etag\":\"\",\r\n                 \"routes\":[\r\n                   {\r\n                     \"name\":\"\",\r\n                     \"etag\":\"\",\r\n                     \"addressPrefix\":\"\",\r\n                     \"nextHopType\":\"\",\r\n                     \"nextHopIpAddress\":\"\",\r\n                     \"provisioningState\":\"\",\r\n                     \"id\":\"\"\r\n                   }\r\n                 ],\r\n                 \"subnets\":[\r\n           null\r\n                 ],\r\n                 \"provisioningState\":\"\",\r\n                 \"id\":\"\",\r\n                 \"name\":null,\r\n                 \"type\":null,\r\n                 \"location\":\"\",\r\n                 \"tags\":{\r\n                 }\r\n               },\r\n               \"ipConfigurations\":[\r\n           null\r\n               ],\r\n               \"provisioningState\":\"\",\r\n               \"id\":\"\"\r\n             },\r\n             \"publicIPAddress\":null,\r\n             \"provisioningState\":\"\",\r\n             \"id\":\"\"\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "virtual-networks create-or-update-parameters ip-configurations remove",
                  "usage": "[options]",
                  "filePath": "commands/arm/vnet/vnet._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--index <index>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--index",
                      "description": "Indexer: index."
                    },
                    {
                      "flags": "--subnets-index <subnets-index>",
                      "required": -17,
                      "optional": 0,
                      "bool": true,
                      "long": "--subnets-index",
                      "description": "Indexer: subnets-index."
                    }
                  ]
                },
                {
                  "name": "add",
                  "description": "Add ip-configurations in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"ipConfigurations\" : {\r\n             \"name\":\"\",\r\n             \"etag\":\"\",\r\n             \"privateIPAddress\":\"\",\r\n             \"privateIPAllocationMethod\":\"\",\r\n             \"subnet\":{\r\n               \"name\":\"\",\r\n               \"etag\":\"\",\r\n               \"addressPrefix\":\"\",\r\n               \"networkSecurityGroup\":{\r\n                 \"etag\":\"\",\r\n                 \"securityRules\":[\r\n                   {\r\n                     \"name\":\"\",\r\n                     \"etag\":\"\",\r\n                     \"description\":\"\",\r\n                     \"protocol\":\"\",\r\n                     \"sourcePortRange\":\"\",\r\n                     \"destinationPortRange\":\"\",\r\n                     \"sourceAddressPrefix\":\"\",\r\n                     \"destinationAddressPrefix\":\"\",\r\n                     \"access\":\"\",\r\n                     \"priority\":null,\r\n                     \"direction\":\"\",\r\n                     \"provisioningState\":\"\",\r\n                     \"id\":\"\"\r\n                   }\r\n                 ],\r\n                 \"defaultSecurityRules\":[\r\n           null\r\n                 ],\r\n                 \"networkInterfaces\":[\r\n                   {\r\n                     \"etag\":\"\",\r\n                     \"virtualMachine\":{\r\n                       \"id\":\"\"\r\n                     },\r\n                     \"networkSecurityGroup\":null,\r\n                     \"ipConfigurations\":[\r\n                       {\r\n                         \"name\":\"\",\r\n                         \"etag\":\"\",\r\n                         \"loadBalancerBackendAddressPools\":[\r\n                           {\r\n                             \"name\":\"\",\r\n                             \"etag\":\"\",\r\n                             \"backendIPConfigurations\":[\r\n           null\r\n                             ],\r\n                             \"loadBalancingRules\":[\r\n           null\r\n                             ],\r\n                             \"outboundNatRule\":null,\r\n                             \"provisioningState\":\"\",\r\n                             \"id\":\"\"\r\n                           }\r\n                         ],\r\n                         \"loadBalancerInboundNatRules\":[\r\n                           {\r\n                             \"name\":\"\",\r\n                             \"etag\":\"\",\r\n                             \"frontendIPConfiguration\":null,\r\n                             \"backendIPConfiguration\":null,\r\n                             \"protocol\":\"\",\r\n                             \"frontendPort\":null,\r\n                             \"backendPort\":null,\r\n                             \"idleTimeoutInMinutes\":null,\r\n                             \"enableFloatingIP\":null,\r\n                             \"provisioningState\":\"\",\r\n                             \"id\":\"\"\r\n                           }\r\n                         ],\r\n                         \"privateIPAddress\":\"\",\r\n                         \"privateIPAllocationMethod\":\"\",\r\n                         \"subnet\":null,\r\n                         \"publicIPAddress\":{\r\n                           \"etag\":\"\",\r\n                           \"publicIPAllocationMethod\":\"\",\r\n                           \"ipConfiguration\":null,\r\n                           \"dnsSettings\":{\r\n                             \"domainNameLabel\":\"\",\r\n                             \"fqdn\":\"\",\r\n                             \"reverseFqdn\":\"\"\r\n                           },\r\n                           \"ipAddress\":\"\",\r\n                           \"idleTimeoutInMinutes\":null,\r\n                           \"resourceGuid\":\"\",\r\n                           \"provisioningState\":\"\",\r\n                           \"id\":\"\",\r\n                           \"name\":null,\r\n                           \"type\":null,\r\n                           \"location\":\"\",\r\n                           \"tags\":{\r\n                           }\r\n                         },\r\n                         \"provisioningState\":\"\",\r\n                         \"id\":\"\"\r\n                       }\r\n                     ],\r\n                     \"dnsSettings\":{\r\n                       \"dnsServers\":[\r\n                         \"\"\r\n                       ],\r\n                       \"appliedDnsServers\":[\r\n                         \"\"\r\n                       ],\r\n                       \"internalDnsNameLabel\":\"\",\r\n                       \"internalFqdn\":\"\"\r\n                     },\r\n                     \"macAddress\":\"\",\r\n                     \"primary\":null,\r\n                     \"enableIPForwarding\":null,\r\n                     \"resourceGuid\":\"\",\r\n                     \"provisioningState\":\"\",\r\n                     \"id\":\"\",\r\n                     \"name\":null,\r\n                     \"type\":null,\r\n                     \"location\":\"\",\r\n                     \"tags\":{\r\n                     }\r\n                   }\r\n                 ],\r\n                 \"subnets\":[\r\n           null\r\n                 ],\r\n                 \"resourceGuid\":\"\",\r\n                 \"provisioningState\":\"\",\r\n                 \"id\":\"\",\r\n                 \"name\":null,\r\n                 \"type\":null,\r\n                 \"location\":\"\",\r\n                 \"tags\":{\r\n                 }\r\n               },\r\n               \"routeTable\":{\r\n                 \"etag\":\"\",\r\n                 \"routes\":[\r\n                   {\r\n                     \"name\":\"\",\r\n                     \"etag\":\"\",\r\n                     \"addressPrefix\":\"\",\r\n                     \"nextHopType\":\"\",\r\n                     \"nextHopIpAddress\":\"\",\r\n                     \"provisioningState\":\"\",\r\n                     \"id\":\"\"\r\n                   }\r\n                 ],\r\n                 \"subnets\":[\r\n           null\r\n                 ],\r\n                 \"provisioningState\":\"\",\r\n                 \"id\":\"\",\r\n                 \"name\":null,\r\n                 \"type\":null,\r\n                 \"location\":\"\",\r\n                 \"tags\":{\r\n                 }\r\n               },\r\n               \"ipConfigurations\":[\r\n           null\r\n               ],\r\n               \"provisioningState\":\"\",\r\n               \"id\":\"\"\r\n             },\r\n             \"publicIPAddress\":null,\r\n             \"provisioningState\":\"\",\r\n             \"id\":\"\"\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "virtual-networks create-or-update-parameters ip-configurations add",
                  "usage": "[options]",
                  "filePath": "commands/arm/vnet/vnet._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--key <key>",
                      "required": -7,
                      "optional": 0,
                      "bool": true,
                      "long": "--key",
                      "description": "The JSON key."
                    },
                    {
                      "flags": "--value <value>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--value",
                      "description": "The JSON value."
                    },
                    {
                      "flags": "--parse",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--parse",
                      "description": "Parse the input value string to a JSON object."
                    }
                  ]
                }
              ],
              "categories": {}
            },
            "load-balancer-backend-address-pools": {
              "name": "load-balancer-backend-address-pools",
              "description": "Commands to set/remove/add load-balancer-backend-address-pools of virtual-networks in create-or-update-parameters file.",
              "fullName": "virtual-networks create-or-update-parameters load-balancer-backend-address-pools",
              "usage": "[options] [command]",
              "options": [],
              "commands": [
                {
                  "name": "set",
                  "description": "Set load-balancer-backend-address-pools in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"loadBalancerBackendAddressPools\" : {\r\n             \"name\":\"\",\r\n             \"etag\":\"\",\r\n             \"backendIPConfigurations\":[\r\n               {\r\n                 \"name\":\"\",\r\n                 \"etag\":\"\",\r\n                 \"loadBalancerBackendAddressPools\":[\r\n           null\r\n                 ],\r\n                 \"loadBalancerInboundNatRules\":[\r\n                   {\r\n                     \"name\":\"\",\r\n                     \"etag\":\"\",\r\n                     \"frontendIPConfiguration\":{\r\n                       \"id\":\"\"\r\n                     },\r\n                     \"backendIPConfiguration\":null,\r\n                     \"protocol\":\"\",\r\n                     \"frontendPort\":null,\r\n                     \"backendPort\":null,\r\n                     \"idleTimeoutInMinutes\":null,\r\n                     \"enableFloatingIP\":null,\r\n                     \"provisioningState\":\"\",\r\n                     \"id\":\"\"\r\n                   }\r\n                 ],\r\n                 \"privateIPAddress\":\"\",\r\n                 \"privateIPAllocationMethod\":\"\",\r\n                 \"subnet\":{\r\n                   \"name\":\"\",\r\n                   \"etag\":\"\",\r\n                   \"addressPrefix\":\"\",\r\n                   \"networkSecurityGroup\":{\r\n                     \"etag\":\"\",\r\n                     \"securityRules\":[\r\n                       {\r\n                         \"name\":\"\",\r\n                         \"etag\":\"\",\r\n                         \"description\":\"\",\r\n                         \"protocol\":\"\",\r\n                         \"sourcePortRange\":\"\",\r\n                         \"destinationPortRange\":\"\",\r\n                         \"sourceAddressPrefix\":\"\",\r\n                         \"destinationAddressPrefix\":\"\",\r\n                         \"access\":\"\",\r\n                         \"priority\":null,\r\n                         \"direction\":\"\",\r\n                         \"provisioningState\":\"\",\r\n                         \"id\":\"\"\r\n                       }\r\n                     ],\r\n                     \"defaultSecurityRules\":[\r\n           null\r\n                     ],\r\n                     \"networkInterfaces\":[\r\n                       {\r\n                         \"etag\":\"\",\r\n                         \"virtualMachine\":null,\r\n                         \"networkSecurityGroup\":null,\r\n                         \"ipConfigurations\":[\r\n           null\r\n                         ],\r\n                         \"dnsSettings\":{\r\n                           \"dnsServers\":[\r\n                             \"\"\r\n                           ],\r\n                           \"appliedDnsServers\":[\r\n                             \"\"\r\n                           ],\r\n                           \"internalDnsNameLabel\":\"\",\r\n                           \"internalFqdn\":\"\"\r\n                         },\r\n                         \"macAddress\":\"\",\r\n                         \"primary\":null,\r\n                         \"enableIPForwarding\":null,\r\n                         \"resourceGuid\":\"\",\r\n                         \"provisioningState\":\"\",\r\n                         \"id\":\"\",\r\n                         \"name\":null,\r\n                         \"type\":null,\r\n                         \"location\":\"\",\r\n                         \"tags\":{\r\n                         }\r\n                       }\r\n                     ],\r\n                     \"subnets\":[\r\n           null\r\n                     ],\r\n                     \"resourceGuid\":\"\",\r\n                     \"provisioningState\":\"\",\r\n                     \"id\":\"\",\r\n                     \"name\":null,\r\n                     \"type\":null,\r\n                     \"location\":\"\",\r\n                     \"tags\":{\r\n                     }\r\n                   },\r\n                   \"routeTable\":{\r\n                     \"etag\":\"\",\r\n                     \"routes\":[\r\n                       {\r\n                         \"name\":\"\",\r\n                         \"etag\":\"\",\r\n                         \"addressPrefix\":\"\",\r\n                         \"nextHopType\":\"\",\r\n                         \"nextHopIpAddress\":\"\",\r\n                         \"provisioningState\":\"\",\r\n                         \"id\":\"\"\r\n                       }\r\n                     ],\r\n                     \"subnets\":[\r\n           null\r\n                     ],\r\n                     \"provisioningState\":\"\",\r\n                     \"id\":\"\",\r\n                     \"name\":null,\r\n                     \"type\":null,\r\n                     \"location\":\"\",\r\n                     \"tags\":{\r\n                     }\r\n                   },\r\n                   \"ipConfigurations\":[\r\n                     {\r\n                       \"name\":\"\",\r\n                       \"etag\":\"\",\r\n                       \"privateIPAddress\":\"\",\r\n                       \"privateIPAllocationMethod\":\"\",\r\n                       \"subnet\":null,\r\n                       \"publicIPAddress\":{\r\n                         \"etag\":\"\",\r\n                         \"publicIPAllocationMethod\":\"\",\r\n                         \"ipConfiguration\":null,\r\n                         \"dnsSettings\":{\r\n                           \"domainNameLabel\":\"\",\r\n                           \"fqdn\":\"\",\r\n                           \"reverseFqdn\":\"\"\r\n                         },\r\n                         \"ipAddress\":\"\",\r\n                         \"idleTimeoutInMinutes\":null,\r\n                         \"resourceGuid\":\"\",\r\n                         \"provisioningState\":\"\",\r\n                         \"id\":\"\",\r\n                         \"name\":null,\r\n                         \"type\":null,\r\n                         \"location\":\"\",\r\n                         \"tags\":{\r\n                         }\r\n                       },\r\n                       \"provisioningState\":\"\",\r\n                       \"id\":\"\"\r\n                     }\r\n                   ],\r\n                   \"provisioningState\":\"\",\r\n                   \"id\":\"\"\r\n                 },\r\n                 \"publicIPAddress\":null,\r\n                 \"provisioningState\":\"\",\r\n                 \"id\":\"\"\r\n               }\r\n             ],\r\n             \"loadBalancingRules\":[\r\n           null\r\n             ],\r\n             \"outboundNatRule\":null,\r\n             \"provisioningState\":\"\",\r\n             \"id\":\"\"\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "virtual-networks create-or-update-parameters load-balancer-backend-address-pools set",
                  "usage": "[options]",
                  "filePath": "commands/arm/vnet/vnet._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--index <index>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--index",
                      "description": "Indexer: index."
                    },
                    {
                      "flags": "--ip-configurations-index <ip-configurations-index>",
                      "required": -27,
                      "optional": 0,
                      "bool": true,
                      "long": "--ip-configurations-index",
                      "description": "Indexer: ip-configurations-index."
                    },
                    {
                      "flags": "--network-interfaces-index <network-interfaces-index>",
                      "required": -28,
                      "optional": 0,
                      "bool": true,
                      "long": "--network-interfaces-index",
                      "description": "Indexer: network-interfaces-index."
                    },
                    {
                      "flags": "--subnets-index <subnets-index>",
                      "required": -17,
                      "optional": 0,
                      "bool": true,
                      "long": "--subnets-index",
                      "description": "Indexer: subnets-index."
                    },
                    {
                      "flags": "--value <value>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--value",
                      "description": "The input string value for the indexed item."
                    },
                    {
                      "flags": "--parse",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--parse",
                      "description": "Parse the input value string to a JSON object."
                    },
                    {
                      "flags": "--name <name>",
                      "required": -8,
                      "optional": 0,
                      "bool": true,
                      "long": "--name",
                      "description": "Set the name value."
                    },
                    {
                      "flags": "--etag <etag>",
                      "required": -8,
                      "optional": 0,
                      "bool": true,
                      "long": "--etag",
                      "description": "Set the etag value."
                    },
                    {
                      "flags": "--backend-ip-configurations <backendIPConfigurations>",
                      "required": -29,
                      "optional": 0,
                      "bool": true,
                      "long": "--backend-ip-configurations",
                      "description": "Set the backend-ip-configurations value."
                    },
                    {
                      "flags": "--load-balancing-rules <loadBalancingRules>",
                      "required": -24,
                      "optional": 0,
                      "bool": true,
                      "long": "--load-balancing-rules",
                      "description": "Set the load-balancing-rules value."
                    },
                    {
                      "flags": "--outbound-nat-rule <outboundNatRule>",
                      "required": -21,
                      "optional": 0,
                      "bool": true,
                      "long": "--outbound-nat-rule",
                      "description": "Set the outbound-nat-rule value."
                    },
                    {
                      "flags": "--provisioning-state <provisioningState>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "long": "--provisioning-state",
                      "description": "Set the provisioning-state value."
                    },
                    {
                      "flags": "--id <id>",
                      "required": -6,
                      "optional": 0,
                      "bool": true,
                      "long": "--id",
                      "description": "Set the id value."
                    }
                  ]
                },
                {
                  "name": "remove",
                  "description": "Remove load-balancer-backend-address-pools in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"loadBalancerBackendAddressPools\" : {\r\n             \"name\":\"\",\r\n             \"etag\":\"\",\r\n             \"backendIPConfigurations\":[\r\n               {\r\n                 \"name\":\"\",\r\n                 \"etag\":\"\",\r\n                 \"loadBalancerBackendAddressPools\":[\r\n           null\r\n                 ],\r\n                 \"loadBalancerInboundNatRules\":[\r\n                   {\r\n                     \"name\":\"\",\r\n                     \"etag\":\"\",\r\n                     \"frontendIPConfiguration\":{\r\n                       \"id\":\"\"\r\n                     },\r\n                     \"backendIPConfiguration\":null,\r\n                     \"protocol\":\"\",\r\n                     \"frontendPort\":null,\r\n                     \"backendPort\":null,\r\n                     \"idleTimeoutInMinutes\":null,\r\n                     \"enableFloatingIP\":null,\r\n                     \"provisioningState\":\"\",\r\n                     \"id\":\"\"\r\n                   }\r\n                 ],\r\n                 \"privateIPAddress\":\"\",\r\n                 \"privateIPAllocationMethod\":\"\",\r\n                 \"subnet\":{\r\n                   \"name\":\"\",\r\n                   \"etag\":\"\",\r\n                   \"addressPrefix\":\"\",\r\n                   \"networkSecurityGroup\":{\r\n                     \"etag\":\"\",\r\n                     \"securityRules\":[\r\n                       {\r\n                         \"name\":\"\",\r\n                         \"etag\":\"\",\r\n                         \"description\":\"\",\r\n                         \"protocol\":\"\",\r\n                         \"sourcePortRange\":\"\",\r\n                         \"destinationPortRange\":\"\",\r\n                         \"sourceAddressPrefix\":\"\",\r\n                         \"destinationAddressPrefix\":\"\",\r\n                         \"access\":\"\",\r\n                         \"priority\":null,\r\n                         \"direction\":\"\",\r\n                         \"provisioningState\":\"\",\r\n                         \"id\":\"\"\r\n                       }\r\n                     ],\r\n                     \"defaultSecurityRules\":[\r\n           null\r\n                     ],\r\n                     \"networkInterfaces\":[\r\n                       {\r\n                         \"etag\":\"\",\r\n                         \"virtualMachine\":null,\r\n                         \"networkSecurityGroup\":null,\r\n                         \"ipConfigurations\":[\r\n           null\r\n                         ],\r\n                         \"dnsSettings\":{\r\n                           \"dnsServers\":[\r\n                             \"\"\r\n                           ],\r\n                           \"appliedDnsServers\":[\r\n                             \"\"\r\n                           ],\r\n                           \"internalDnsNameLabel\":\"\",\r\n                           \"internalFqdn\":\"\"\r\n                         },\r\n                         \"macAddress\":\"\",\r\n                         \"primary\":null,\r\n                         \"enableIPForwarding\":null,\r\n                         \"resourceGuid\":\"\",\r\n                         \"provisioningState\":\"\",\r\n                         \"id\":\"\",\r\n                         \"name\":null,\r\n                         \"type\":null,\r\n                         \"location\":\"\",\r\n                         \"tags\":{\r\n                         }\r\n                       }\r\n                     ],\r\n                     \"subnets\":[\r\n           null\r\n                     ],\r\n                     \"resourceGuid\":\"\",\r\n                     \"provisioningState\":\"\",\r\n                     \"id\":\"\",\r\n                     \"name\":null,\r\n                     \"type\":null,\r\n                     \"location\":\"\",\r\n                     \"tags\":{\r\n                     }\r\n                   },\r\n                   \"routeTable\":{\r\n                     \"etag\":\"\",\r\n                     \"routes\":[\r\n                       {\r\n                         \"name\":\"\",\r\n                         \"etag\":\"\",\r\n                         \"addressPrefix\":\"\",\r\n                         \"nextHopType\":\"\",\r\n                         \"nextHopIpAddress\":\"\",\r\n                         \"provisioningState\":\"\",\r\n                         \"id\":\"\"\r\n                       }\r\n                     ],\r\n                     \"subnets\":[\r\n           null\r\n                     ],\r\n                     \"provisioningState\":\"\",\r\n                     \"id\":\"\",\r\n                     \"name\":null,\r\n                     \"type\":null,\r\n                     \"location\":\"\",\r\n                     \"tags\":{\r\n                     }\r\n                   },\r\n                   \"ipConfigurations\":[\r\n                     {\r\n                       \"name\":\"\",\r\n                       \"etag\":\"\",\r\n                       \"privateIPAddress\":\"\",\r\n                       \"privateIPAllocationMethod\":\"\",\r\n                       \"subnet\":null,\r\n                       \"publicIPAddress\":{\r\n                         \"etag\":\"\",\r\n                         \"publicIPAllocationMethod\":\"\",\r\n                         \"ipConfiguration\":null,\r\n                         \"dnsSettings\":{\r\n                           \"domainNameLabel\":\"\",\r\n                           \"fqdn\":\"\",\r\n                           \"reverseFqdn\":\"\"\r\n                         },\r\n                         \"ipAddress\":\"\",\r\n                         \"idleTimeoutInMinutes\":null,\r\n                         \"resourceGuid\":\"\",\r\n                         \"provisioningState\":\"\",\r\n                         \"id\":\"\",\r\n                         \"name\":null,\r\n                         \"type\":null,\r\n                         \"location\":\"\",\r\n                         \"tags\":{\r\n                         }\r\n                       },\r\n                       \"provisioningState\":\"\",\r\n                       \"id\":\"\"\r\n                     }\r\n                   ],\r\n                   \"provisioningState\":\"\",\r\n                   \"id\":\"\"\r\n                 },\r\n                 \"publicIPAddress\":null,\r\n                 \"provisioningState\":\"\",\r\n                 \"id\":\"\"\r\n               }\r\n             ],\r\n             \"loadBalancingRules\":[\r\n           null\r\n             ],\r\n             \"outboundNatRule\":null,\r\n             \"provisioningState\":\"\",\r\n             \"id\":\"\"\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "virtual-networks create-or-update-parameters load-balancer-backend-address-pools remove",
                  "usage": "[options]",
                  "filePath": "commands/arm/vnet/vnet._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--index <index>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--index",
                      "description": "Indexer: index."
                    },
                    {
                      "flags": "--ip-configurations-index <ip-configurations-index>",
                      "required": -27,
                      "optional": 0,
                      "bool": true,
                      "long": "--ip-configurations-index",
                      "description": "Indexer: ip-configurations-index."
                    },
                    {
                      "flags": "--network-interfaces-index <network-interfaces-index>",
                      "required": -28,
                      "optional": 0,
                      "bool": true,
                      "long": "--network-interfaces-index",
                      "description": "Indexer: network-interfaces-index."
                    },
                    {
                      "flags": "--subnets-index <subnets-index>",
                      "required": -17,
                      "optional": 0,
                      "bool": true,
                      "long": "--subnets-index",
                      "description": "Indexer: subnets-index."
                    },
                    {
                      "flags": "--name",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--name",
                      "description": "Remove the name value."
                    },
                    {
                      "flags": "--etag",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--etag",
                      "description": "Remove the etag value."
                    },
                    {
                      "flags": "--backend-ip-configurations",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--backend-ip-configurations",
                      "description": "Remove the backend-ip-configurations value."
                    },
                    {
                      "flags": "--load-balancing-rules",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--load-balancing-rules",
                      "description": "Remove the load-balancing-rules value."
                    },
                    {
                      "flags": "--outbound-nat-rule",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--outbound-nat-rule",
                      "description": "Remove the outbound-nat-rule value."
                    },
                    {
                      "flags": "--provisioning-state",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--provisioning-state",
                      "description": "Remove the provisioning-state value."
                    },
                    {
                      "flags": "--id",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--id",
                      "description": "Remove the id value."
                    }
                  ]
                },
                {
                  "name": "add",
                  "description": "Add load-balancer-backend-address-pools in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"loadBalancerBackendAddressPools\" : {\r\n             \"name\":\"\",\r\n             \"etag\":\"\",\r\n             \"backendIPConfigurations\":[\r\n               {\r\n                 \"name\":\"\",\r\n                 \"etag\":\"\",\r\n                 \"loadBalancerBackendAddressPools\":[\r\n           null\r\n                 ],\r\n                 \"loadBalancerInboundNatRules\":[\r\n                   {\r\n                     \"name\":\"\",\r\n                     \"etag\":\"\",\r\n                     \"frontendIPConfiguration\":{\r\n                       \"id\":\"\"\r\n                     },\r\n                     \"backendIPConfiguration\":null,\r\n                     \"protocol\":\"\",\r\n                     \"frontendPort\":null,\r\n                     \"backendPort\":null,\r\n                     \"idleTimeoutInMinutes\":null,\r\n                     \"enableFloatingIP\":null,\r\n                     \"provisioningState\":\"\",\r\n                     \"id\":\"\"\r\n                   }\r\n                 ],\r\n                 \"privateIPAddress\":\"\",\r\n                 \"privateIPAllocationMethod\":\"\",\r\n                 \"subnet\":{\r\n                   \"name\":\"\",\r\n                   \"etag\":\"\",\r\n                   \"addressPrefix\":\"\",\r\n                   \"networkSecurityGroup\":{\r\n                     \"etag\":\"\",\r\n                     \"securityRules\":[\r\n                       {\r\n                         \"name\":\"\",\r\n                         \"etag\":\"\",\r\n                         \"description\":\"\",\r\n                         \"protocol\":\"\",\r\n                         \"sourcePortRange\":\"\",\r\n                         \"destinationPortRange\":\"\",\r\n                         \"sourceAddressPrefix\":\"\",\r\n                         \"destinationAddressPrefix\":\"\",\r\n                         \"access\":\"\",\r\n                         \"priority\":null,\r\n                         \"direction\":\"\",\r\n                         \"provisioningState\":\"\",\r\n                         \"id\":\"\"\r\n                       }\r\n                     ],\r\n                     \"defaultSecurityRules\":[\r\n           null\r\n                     ],\r\n                     \"networkInterfaces\":[\r\n                       {\r\n                         \"etag\":\"\",\r\n                         \"virtualMachine\":null,\r\n                         \"networkSecurityGroup\":null,\r\n                         \"ipConfigurations\":[\r\n           null\r\n                         ],\r\n                         \"dnsSettings\":{\r\n                           \"dnsServers\":[\r\n                             \"\"\r\n                           ],\r\n                           \"appliedDnsServers\":[\r\n                             \"\"\r\n                           ],\r\n                           \"internalDnsNameLabel\":\"\",\r\n                           \"internalFqdn\":\"\"\r\n                         },\r\n                         \"macAddress\":\"\",\r\n                         \"primary\":null,\r\n                         \"enableIPForwarding\":null,\r\n                         \"resourceGuid\":\"\",\r\n                         \"provisioningState\":\"\",\r\n                         \"id\":\"\",\r\n                         \"name\":null,\r\n                         \"type\":null,\r\n                         \"location\":\"\",\r\n                         \"tags\":{\r\n                         }\r\n                       }\r\n                     ],\r\n                     \"subnets\":[\r\n           null\r\n                     ],\r\n                     \"resourceGuid\":\"\",\r\n                     \"provisioningState\":\"\",\r\n                     \"id\":\"\",\r\n                     \"name\":null,\r\n                     \"type\":null,\r\n                     \"location\":\"\",\r\n                     \"tags\":{\r\n                     }\r\n                   },\r\n                   \"routeTable\":{\r\n                     \"etag\":\"\",\r\n                     \"routes\":[\r\n                       {\r\n                         \"name\":\"\",\r\n                         \"etag\":\"\",\r\n                         \"addressPrefix\":\"\",\r\n                         \"nextHopType\":\"\",\r\n                         \"nextHopIpAddress\":\"\",\r\n                         \"provisioningState\":\"\",\r\n                         \"id\":\"\"\r\n                       }\r\n                     ],\r\n                     \"subnets\":[\r\n           null\r\n                     ],\r\n                     \"provisioningState\":\"\",\r\n                     \"id\":\"\",\r\n                     \"name\":null,\r\n                     \"type\":null,\r\n                     \"location\":\"\",\r\n                     \"tags\":{\r\n                     }\r\n                   },\r\n                   \"ipConfigurations\":[\r\n                     {\r\n                       \"name\":\"\",\r\n                       \"etag\":\"\",\r\n                       \"privateIPAddress\":\"\",\r\n                       \"privateIPAllocationMethod\":\"\",\r\n                       \"subnet\":null,\r\n                       \"publicIPAddress\":{\r\n                         \"etag\":\"\",\r\n                         \"publicIPAllocationMethod\":\"\",\r\n                         \"ipConfiguration\":null,\r\n                         \"dnsSettings\":{\r\n                           \"domainNameLabel\":\"\",\r\n                           \"fqdn\":\"\",\r\n                           \"reverseFqdn\":\"\"\r\n                         },\r\n                         \"ipAddress\":\"\",\r\n                         \"idleTimeoutInMinutes\":null,\r\n                         \"resourceGuid\":\"\",\r\n                         \"provisioningState\":\"\",\r\n                         \"id\":\"\",\r\n                         \"name\":null,\r\n                         \"type\":null,\r\n                         \"location\":\"\",\r\n                         \"tags\":{\r\n                         }\r\n                       },\r\n                       \"provisioningState\":\"\",\r\n                       \"id\":\"\"\r\n                     }\r\n                   ],\r\n                   \"provisioningState\":\"\",\r\n                   \"id\":\"\"\r\n                 },\r\n                 \"publicIPAddress\":null,\r\n                 \"provisioningState\":\"\",\r\n                 \"id\":\"\"\r\n               }\r\n             ],\r\n             \"loadBalancingRules\":[\r\n           null\r\n             ],\r\n             \"outboundNatRule\":null,\r\n             \"provisioningState\":\"\",\r\n             \"id\":\"\"\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "virtual-networks create-or-update-parameters load-balancer-backend-address-pools add",
                  "usage": "[options]",
                  "filePath": "commands/arm/vnet/vnet._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--key <key>",
                      "required": -7,
                      "optional": 0,
                      "bool": true,
                      "long": "--key",
                      "description": "The JSON key."
                    },
                    {
                      "flags": "--value <value>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--value",
                      "description": "The JSON value."
                    },
                    {
                      "flags": "--parse",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--parse",
                      "description": "Parse the input value string to a JSON object."
                    },
                    {
                      "flags": "--name <name>",
                      "required": -8,
                      "optional": 0,
                      "bool": true,
                      "long": "--name",
                      "description": "Add the name value."
                    },
                    {
                      "flags": "--etag <etag>",
                      "required": -8,
                      "optional": 0,
                      "bool": true,
                      "long": "--etag",
                      "description": "Add the etag value."
                    },
                    {
                      "flags": "--backend-ip-configurations <backendIPConfigurations>",
                      "required": -29,
                      "optional": 0,
                      "bool": true,
                      "long": "--backend-ip-configurations",
                      "description": "Add the backend-ip-configurations value."
                    },
                    {
                      "flags": "--load-balancing-rules <loadBalancingRules>",
                      "required": -24,
                      "optional": 0,
                      "bool": true,
                      "long": "--load-balancing-rules",
                      "description": "Add the load-balancing-rules value."
                    },
                    {
                      "flags": "--outbound-nat-rule <outboundNatRule>",
                      "required": -21,
                      "optional": 0,
                      "bool": true,
                      "long": "--outbound-nat-rule",
                      "description": "Add the outbound-nat-rule value."
                    },
                    {
                      "flags": "--provisioning-state <provisioningState>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "long": "--provisioning-state",
                      "description": "Add the provisioning-state value."
                    },
                    {
                      "flags": "--id <id>",
                      "required": -6,
                      "optional": 0,
                      "bool": true,
                      "long": "--id",
                      "description": "Add the id value."
                    }
                  ]
                }
              ],
              "categories": {}
            },
            "backend-ip-configurations": {
              "name": "backend-ip-configurations",
              "description": "Commands to set/remove/add backend-ip-configurations of virtual-networks in create-or-update-parameters file.",
              "fullName": "virtual-networks create-or-update-parameters backend-ip-configurations",
              "usage": "[options] [command]",
              "options": [],
              "commands": [
                {
                  "name": "set",
                  "description": "Set backend-ip-configurations in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"backendIPConfigurations\" : {\r\n             \"name\":\"\",\r\n             \"etag\":\"\",\r\n             \"loadBalancerBackendAddressPools\":[\r\n               {\r\n                 \"name\":\"\",\r\n                 \"etag\":\"\",\r\n                 \"backendIPConfigurations\":[\r\n           null\r\n                 ],\r\n                 \"loadBalancingRules\":[\r\n                   {\r\n                     \"id\":\"\"\r\n                   }\r\n                 ],\r\n                 \"outboundNatRule\":null,\r\n                 \"provisioningState\":\"\",\r\n                 \"id\":\"\"\r\n               }\r\n             ],\r\n             \"loadBalancerInboundNatRules\":[\r\n               {\r\n                 \"name\":\"\",\r\n                 \"etag\":\"\",\r\n                 \"frontendIPConfiguration\":null,\r\n                 \"backendIPConfiguration\":null,\r\n                 \"protocol\":\"\",\r\n                 \"frontendPort\":null,\r\n                 \"backendPort\":null,\r\n                 \"idleTimeoutInMinutes\":null,\r\n                 \"enableFloatingIP\":null,\r\n                 \"provisioningState\":\"\",\r\n                 \"id\":\"\"\r\n               }\r\n             ],\r\n             \"privateIPAddress\":\"\",\r\n             \"privateIPAllocationMethod\":\"\",\r\n             \"subnet\":{\r\n               \"name\":\"\",\r\n               \"etag\":\"\",\r\n               \"addressPrefix\":\"\",\r\n               \"networkSecurityGroup\":{\r\n                 \"etag\":\"\",\r\n                 \"securityRules\":[\r\n                   {\r\n                     \"name\":\"\",\r\n                     \"etag\":\"\",\r\n                     \"description\":\"\",\r\n                     \"protocol\":\"\",\r\n                     \"sourcePortRange\":\"\",\r\n                     \"destinationPortRange\":\"\",\r\n                     \"sourceAddressPrefix\":\"\",\r\n                     \"destinationAddressPrefix\":\"\",\r\n                     \"access\":\"\",\r\n                     \"priority\":null,\r\n                     \"direction\":\"\",\r\n                     \"provisioningState\":\"\",\r\n                     \"id\":\"\"\r\n                   }\r\n                 ],\r\n                 \"defaultSecurityRules\":[\r\n           null\r\n                 ],\r\n                 \"networkInterfaces\":[\r\n                   {\r\n                     \"etag\":\"\",\r\n                     \"virtualMachine\":null,\r\n                     \"networkSecurityGroup\":null,\r\n                     \"ipConfigurations\":[\r\n           null\r\n                     ],\r\n                     \"dnsSettings\":{\r\n                       \"dnsServers\":[\r\n                         \"\"\r\n                       ],\r\n                       \"appliedDnsServers\":[\r\n                         \"\"\r\n                       ],\r\n                       \"internalDnsNameLabel\":\"\",\r\n                       \"internalFqdn\":\"\"\r\n                     },\r\n                     \"macAddress\":\"\",\r\n                     \"primary\":null,\r\n                     \"enableIPForwarding\":null,\r\n                     \"resourceGuid\":\"\",\r\n                     \"provisioningState\":\"\",\r\n                     \"id\":\"\",\r\n                     \"name\":null,\r\n                     \"type\":null,\r\n                     \"location\":\"\",\r\n                     \"tags\":{\r\n                     }\r\n                   }\r\n                 ],\r\n                 \"subnets\":[\r\n           null\r\n                 ],\r\n                 \"resourceGuid\":\"\",\r\n                 \"provisioningState\":\"\",\r\n                 \"id\":\"\",\r\n                 \"name\":null,\r\n                 \"type\":null,\r\n                 \"location\":\"\",\r\n                 \"tags\":{\r\n                 }\r\n               },\r\n               \"routeTable\":{\r\n                 \"etag\":\"\",\r\n                 \"routes\":[\r\n                   {\r\n                     \"name\":\"\",\r\n                     \"etag\":\"\",\r\n                     \"addressPrefix\":\"\",\r\n                     \"nextHopType\":\"\",\r\n                     \"nextHopIpAddress\":\"\",\r\n                     \"provisioningState\":\"\",\r\n                     \"id\":\"\"\r\n                   }\r\n                 ],\r\n                 \"subnets\":[\r\n           null\r\n                 ],\r\n                 \"provisioningState\":\"\",\r\n                 \"id\":\"\",\r\n                 \"name\":null,\r\n                 \"type\":null,\r\n                 \"location\":\"\",\r\n                 \"tags\":{\r\n                 }\r\n               },\r\n               \"ipConfigurations\":[\r\n                 {\r\n                   \"name\":\"\",\r\n                   \"etag\":\"\",\r\n                   \"privateIPAddress\":\"\",\r\n                   \"privateIPAllocationMethod\":\"\",\r\n                   \"subnet\":null,\r\n                   \"publicIPAddress\":{\r\n                     \"etag\":\"\",\r\n                     \"publicIPAllocationMethod\":\"\",\r\n                     \"ipConfiguration\":null,\r\n                     \"dnsSettings\":{\r\n                       \"domainNameLabel\":\"\",\r\n                       \"fqdn\":\"\",\r\n                       \"reverseFqdn\":\"\"\r\n                     },\r\n                     \"ipAddress\":\"\",\r\n                     \"idleTimeoutInMinutes\":null,\r\n                     \"resourceGuid\":\"\",\r\n                     \"provisioningState\":\"\",\r\n                     \"id\":\"\",\r\n                     \"name\":null,\r\n                     \"type\":null,\r\n                     \"location\":\"\",\r\n                     \"tags\":{\r\n                     }\r\n                   },\r\n                   \"provisioningState\":\"\",\r\n                   \"id\":\"\"\r\n                 }\r\n               ],\r\n               \"provisioningState\":\"\",\r\n               \"id\":\"\"\r\n             },\r\n             \"publicIPAddress\":null,\r\n             \"provisioningState\":\"\",\r\n             \"id\":\"\"\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "virtual-networks create-or-update-parameters backend-ip-configurations set",
                  "usage": "[options]",
                  "filePath": "commands/arm/vnet/vnet._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--index <index>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--index",
                      "description": "Indexer: index."
                    },
                    {
                      "flags": "--load-balancer-backend-address-pools-index <load-balancer-backend-address-pools-index>",
                      "required": -45,
                      "optional": 0,
                      "bool": true,
                      "long": "--load-balancer-backend-address-pools-index",
                      "description": "Indexer: load-balancer-backend-address-pools-index."
                    },
                    {
                      "flags": "--ip-configurations-index <ip-configurations-index>",
                      "required": -27,
                      "optional": 0,
                      "bool": true,
                      "long": "--ip-configurations-index",
                      "description": "Indexer: ip-configurations-index."
                    },
                    {
                      "flags": "--network-interfaces-index <network-interfaces-index>",
                      "required": -28,
                      "optional": 0,
                      "bool": true,
                      "long": "--network-interfaces-index",
                      "description": "Indexer: network-interfaces-index."
                    },
                    {
                      "flags": "--subnets-index <subnets-index>",
                      "required": -17,
                      "optional": 0,
                      "bool": true,
                      "long": "--subnets-index",
                      "description": "Indexer: subnets-index."
                    },
                    {
                      "flags": "--value <value>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--value",
                      "description": "The input string value for the indexed item."
                    },
                    {
                      "flags": "--parse",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--parse",
                      "description": "Parse the input value string to a JSON object."
                    }
                  ]
                },
                {
                  "name": "remove",
                  "description": "Remove backend-ip-configurations in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"backendIPConfigurations\" : {\r\n             \"name\":\"\",\r\n             \"etag\":\"\",\r\n             \"loadBalancerBackendAddressPools\":[\r\n               {\r\n                 \"name\":\"\",\r\n                 \"etag\":\"\",\r\n                 \"backendIPConfigurations\":[\r\n           null\r\n                 ],\r\n                 \"loadBalancingRules\":[\r\n                   {\r\n                     \"id\":\"\"\r\n                   }\r\n                 ],\r\n                 \"outboundNatRule\":null,\r\n                 \"provisioningState\":\"\",\r\n                 \"id\":\"\"\r\n               }\r\n             ],\r\n             \"loadBalancerInboundNatRules\":[\r\n               {\r\n                 \"name\":\"\",\r\n                 \"etag\":\"\",\r\n                 \"frontendIPConfiguration\":null,\r\n                 \"backendIPConfiguration\":null,\r\n                 \"protocol\":\"\",\r\n                 \"frontendPort\":null,\r\n                 \"backendPort\":null,\r\n                 \"idleTimeoutInMinutes\":null,\r\n                 \"enableFloatingIP\":null,\r\n                 \"provisioningState\":\"\",\r\n                 \"id\":\"\"\r\n               }\r\n             ],\r\n             \"privateIPAddress\":\"\",\r\n             \"privateIPAllocationMethod\":\"\",\r\n             \"subnet\":{\r\n               \"name\":\"\",\r\n               \"etag\":\"\",\r\n               \"addressPrefix\":\"\",\r\n               \"networkSecurityGroup\":{\r\n                 \"etag\":\"\",\r\n                 \"securityRules\":[\r\n                   {\r\n                     \"name\":\"\",\r\n                     \"etag\":\"\",\r\n                     \"description\":\"\",\r\n                     \"protocol\":\"\",\r\n                     \"sourcePortRange\":\"\",\r\n                     \"destinationPortRange\":\"\",\r\n                     \"sourceAddressPrefix\":\"\",\r\n                     \"destinationAddressPrefix\":\"\",\r\n                     \"access\":\"\",\r\n                     \"priority\":null,\r\n                     \"direction\":\"\",\r\n                     \"provisioningState\":\"\",\r\n                     \"id\":\"\"\r\n                   }\r\n                 ],\r\n                 \"defaultSecurityRules\":[\r\n           null\r\n                 ],\r\n                 \"networkInterfaces\":[\r\n                   {\r\n                     \"etag\":\"\",\r\n                     \"virtualMachine\":null,\r\n                     \"networkSecurityGroup\":null,\r\n                     \"ipConfigurations\":[\r\n           null\r\n                     ],\r\n                     \"dnsSettings\":{\r\n                       \"dnsServers\":[\r\n                         \"\"\r\n                       ],\r\n                       \"appliedDnsServers\":[\r\n                         \"\"\r\n                       ],\r\n                       \"internalDnsNameLabel\":\"\",\r\n                       \"internalFqdn\":\"\"\r\n                     },\r\n                     \"macAddress\":\"\",\r\n                     \"primary\":null,\r\n                     \"enableIPForwarding\":null,\r\n                     \"resourceGuid\":\"\",\r\n                     \"provisioningState\":\"\",\r\n                     \"id\":\"\",\r\n                     \"name\":null,\r\n                     \"type\":null,\r\n                     \"location\":\"\",\r\n                     \"tags\":{\r\n                     }\r\n                   }\r\n                 ],\r\n                 \"subnets\":[\r\n           null\r\n                 ],\r\n                 \"resourceGuid\":\"\",\r\n                 \"provisioningState\":\"\",\r\n                 \"id\":\"\",\r\n                 \"name\":null,\r\n                 \"type\":null,\r\n                 \"location\":\"\",\r\n                 \"tags\":{\r\n                 }\r\n               },\r\n               \"routeTable\":{\r\n                 \"etag\":\"\",\r\n                 \"routes\":[\r\n                   {\r\n                     \"name\":\"\",\r\n                     \"etag\":\"\",\r\n                     \"addressPrefix\":\"\",\r\n                     \"nextHopType\":\"\",\r\n                     \"nextHopIpAddress\":\"\",\r\n                     \"provisioningState\":\"\",\r\n                     \"id\":\"\"\r\n                   }\r\n                 ],\r\n                 \"subnets\":[\r\n           null\r\n                 ],\r\n                 \"provisioningState\":\"\",\r\n                 \"id\":\"\",\r\n                 \"name\":null,\r\n                 \"type\":null,\r\n                 \"location\":\"\",\r\n                 \"tags\":{\r\n                 }\r\n               },\r\n               \"ipConfigurations\":[\r\n                 {\r\n                   \"name\":\"\",\r\n                   \"etag\":\"\",\r\n                   \"privateIPAddress\":\"\",\r\n                   \"privateIPAllocationMethod\":\"\",\r\n                   \"subnet\":null,\r\n                   \"publicIPAddress\":{\r\n                     \"etag\":\"\",\r\n                     \"publicIPAllocationMethod\":\"\",\r\n                     \"ipConfiguration\":null,\r\n                     \"dnsSettings\":{\r\n                       \"domainNameLabel\":\"\",\r\n                       \"fqdn\":\"\",\r\n                       \"reverseFqdn\":\"\"\r\n                     },\r\n                     \"ipAddress\":\"\",\r\n                     \"idleTimeoutInMinutes\":null,\r\n                     \"resourceGuid\":\"\",\r\n                     \"provisioningState\":\"\",\r\n                     \"id\":\"\",\r\n                     \"name\":null,\r\n                     \"type\":null,\r\n                     \"location\":\"\",\r\n                     \"tags\":{\r\n                     }\r\n                   },\r\n                   \"provisioningState\":\"\",\r\n                   \"id\":\"\"\r\n                 }\r\n               ],\r\n               \"provisioningState\":\"\",\r\n               \"id\":\"\"\r\n             },\r\n             \"publicIPAddress\":null,\r\n             \"provisioningState\":\"\",\r\n             \"id\":\"\"\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "virtual-networks create-or-update-parameters backend-ip-configurations remove",
                  "usage": "[options]",
                  "filePath": "commands/arm/vnet/vnet._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--index <index>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--index",
                      "description": "Indexer: index."
                    },
                    {
                      "flags": "--load-balancer-backend-address-pools-index <load-balancer-backend-address-pools-index>",
                      "required": -45,
                      "optional": 0,
                      "bool": true,
                      "long": "--load-balancer-backend-address-pools-index",
                      "description": "Indexer: load-balancer-backend-address-pools-index."
                    },
                    {
                      "flags": "--ip-configurations-index <ip-configurations-index>",
                      "required": -27,
                      "optional": 0,
                      "bool": true,
                      "long": "--ip-configurations-index",
                      "description": "Indexer: ip-configurations-index."
                    },
                    {
                      "flags": "--network-interfaces-index <network-interfaces-index>",
                      "required": -28,
                      "optional": 0,
                      "bool": true,
                      "long": "--network-interfaces-index",
                      "description": "Indexer: network-interfaces-index."
                    },
                    {
                      "flags": "--subnets-index <subnets-index>",
                      "required": -17,
                      "optional": 0,
                      "bool": true,
                      "long": "--subnets-index",
                      "description": "Indexer: subnets-index."
                    }
                  ]
                },
                {
                  "name": "add",
                  "description": "Add backend-ip-configurations in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"backendIPConfigurations\" : {\r\n             \"name\":\"\",\r\n             \"etag\":\"\",\r\n             \"loadBalancerBackendAddressPools\":[\r\n               {\r\n                 \"name\":\"\",\r\n                 \"etag\":\"\",\r\n                 \"backendIPConfigurations\":[\r\n           null\r\n                 ],\r\n                 \"loadBalancingRules\":[\r\n                   {\r\n                     \"id\":\"\"\r\n                   }\r\n                 ],\r\n                 \"outboundNatRule\":null,\r\n                 \"provisioningState\":\"\",\r\n                 \"id\":\"\"\r\n               }\r\n             ],\r\n             \"loadBalancerInboundNatRules\":[\r\n               {\r\n                 \"name\":\"\",\r\n                 \"etag\":\"\",\r\n                 \"frontendIPConfiguration\":null,\r\n                 \"backendIPConfiguration\":null,\r\n                 \"protocol\":\"\",\r\n                 \"frontendPort\":null,\r\n                 \"backendPort\":null,\r\n                 \"idleTimeoutInMinutes\":null,\r\n                 \"enableFloatingIP\":null,\r\n                 \"provisioningState\":\"\",\r\n                 \"id\":\"\"\r\n               }\r\n             ],\r\n             \"privateIPAddress\":\"\",\r\n             \"privateIPAllocationMethod\":\"\",\r\n             \"subnet\":{\r\n               \"name\":\"\",\r\n               \"etag\":\"\",\r\n               \"addressPrefix\":\"\",\r\n               \"networkSecurityGroup\":{\r\n                 \"etag\":\"\",\r\n                 \"securityRules\":[\r\n                   {\r\n                     \"name\":\"\",\r\n                     \"etag\":\"\",\r\n                     \"description\":\"\",\r\n                     \"protocol\":\"\",\r\n                     \"sourcePortRange\":\"\",\r\n                     \"destinationPortRange\":\"\",\r\n                     \"sourceAddressPrefix\":\"\",\r\n                     \"destinationAddressPrefix\":\"\",\r\n                     \"access\":\"\",\r\n                     \"priority\":null,\r\n                     \"direction\":\"\",\r\n                     \"provisioningState\":\"\",\r\n                     \"id\":\"\"\r\n                   }\r\n                 ],\r\n                 \"defaultSecurityRules\":[\r\n           null\r\n                 ],\r\n                 \"networkInterfaces\":[\r\n                   {\r\n                     \"etag\":\"\",\r\n                     \"virtualMachine\":null,\r\n                     \"networkSecurityGroup\":null,\r\n                     \"ipConfigurations\":[\r\n           null\r\n                     ],\r\n                     \"dnsSettings\":{\r\n                       \"dnsServers\":[\r\n                         \"\"\r\n                       ],\r\n                       \"appliedDnsServers\":[\r\n                         \"\"\r\n                       ],\r\n                       \"internalDnsNameLabel\":\"\",\r\n                       \"internalFqdn\":\"\"\r\n                     },\r\n                     \"macAddress\":\"\",\r\n                     \"primary\":null,\r\n                     \"enableIPForwarding\":null,\r\n                     \"resourceGuid\":\"\",\r\n                     \"provisioningState\":\"\",\r\n                     \"id\":\"\",\r\n                     \"name\":null,\r\n                     \"type\":null,\r\n                     \"location\":\"\",\r\n                     \"tags\":{\r\n                     }\r\n                   }\r\n                 ],\r\n                 \"subnets\":[\r\n           null\r\n                 ],\r\n                 \"resourceGuid\":\"\",\r\n                 \"provisioningState\":\"\",\r\n                 \"id\":\"\",\r\n                 \"name\":null,\r\n                 \"type\":null,\r\n                 \"location\":\"\",\r\n                 \"tags\":{\r\n                 }\r\n               },\r\n               \"routeTable\":{\r\n                 \"etag\":\"\",\r\n                 \"routes\":[\r\n                   {\r\n                     \"name\":\"\",\r\n                     \"etag\":\"\",\r\n                     \"addressPrefix\":\"\",\r\n                     \"nextHopType\":\"\",\r\n                     \"nextHopIpAddress\":\"\",\r\n                     \"provisioningState\":\"\",\r\n                     \"id\":\"\"\r\n                   }\r\n                 ],\r\n                 \"subnets\":[\r\n           null\r\n                 ],\r\n                 \"provisioningState\":\"\",\r\n                 \"id\":\"\",\r\n                 \"name\":null,\r\n                 \"type\":null,\r\n                 \"location\":\"\",\r\n                 \"tags\":{\r\n                 }\r\n               },\r\n               \"ipConfigurations\":[\r\n                 {\r\n                   \"name\":\"\",\r\n                   \"etag\":\"\",\r\n                   \"privateIPAddress\":\"\",\r\n                   \"privateIPAllocationMethod\":\"\",\r\n                   \"subnet\":null,\r\n                   \"publicIPAddress\":{\r\n                     \"etag\":\"\",\r\n                     \"publicIPAllocationMethod\":\"\",\r\n                     \"ipConfiguration\":null,\r\n                     \"dnsSettings\":{\r\n                       \"domainNameLabel\":\"\",\r\n                       \"fqdn\":\"\",\r\n                       \"reverseFqdn\":\"\"\r\n                     },\r\n                     \"ipAddress\":\"\",\r\n                     \"idleTimeoutInMinutes\":null,\r\n                     \"resourceGuid\":\"\",\r\n                     \"provisioningState\":\"\",\r\n                     \"id\":\"\",\r\n                     \"name\":null,\r\n                     \"type\":null,\r\n                     \"location\":\"\",\r\n                     \"tags\":{\r\n                     }\r\n                   },\r\n                   \"provisioningState\":\"\",\r\n                   \"id\":\"\"\r\n                 }\r\n               ],\r\n               \"provisioningState\":\"\",\r\n               \"id\":\"\"\r\n             },\r\n             \"publicIPAddress\":null,\r\n             \"provisioningState\":\"\",\r\n             \"id\":\"\"\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "virtual-networks create-or-update-parameters backend-ip-configurations add",
                  "usage": "[options]",
                  "filePath": "commands/arm/vnet/vnet._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--key <key>",
                      "required": -7,
                      "optional": 0,
                      "bool": true,
                      "long": "--key",
                      "description": "The JSON key."
                    },
                    {
                      "flags": "--value <value>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--value",
                      "description": "The JSON value."
                    },
                    {
                      "flags": "--parse",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--parse",
                      "description": "Parse the input value string to a JSON object."
                    }
                  ]
                }
              ],
              "categories": {}
            },
            "load-balancing-rules": {
              "name": "load-balancing-rules",
              "description": "Commands to set/remove/add load-balancing-rules of virtual-networks in create-or-update-parameters file.",
              "fullName": "virtual-networks create-or-update-parameters load-balancing-rules",
              "usage": "[options] [command]",
              "options": [],
              "commands": [
                {
                  "name": "set",
                  "description": "Set load-balancing-rules in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"loadBalancingRules\" : {\r\n             \"id\":\"\"\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "virtual-networks create-or-update-parameters load-balancing-rules set",
                  "usage": "[options]",
                  "filePath": "commands/arm/vnet/vnet._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--index <index>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--index",
                      "description": "Indexer: index."
                    },
                    {
                      "flags": "--load-balancer-backend-address-pools-index <load-balancer-backend-address-pools-index>",
                      "required": -45,
                      "optional": 0,
                      "bool": true,
                      "long": "--load-balancer-backend-address-pools-index",
                      "description": "Indexer: load-balancer-backend-address-pools-index."
                    },
                    {
                      "flags": "--ip-configurations-index <ip-configurations-index>",
                      "required": -27,
                      "optional": 0,
                      "bool": true,
                      "long": "--ip-configurations-index",
                      "description": "Indexer: ip-configurations-index."
                    },
                    {
                      "flags": "--network-interfaces-index <network-interfaces-index>",
                      "required": -28,
                      "optional": 0,
                      "bool": true,
                      "long": "--network-interfaces-index",
                      "description": "Indexer: network-interfaces-index."
                    },
                    {
                      "flags": "--subnets-index <subnets-index>",
                      "required": -17,
                      "optional": 0,
                      "bool": true,
                      "long": "--subnets-index",
                      "description": "Indexer: subnets-index."
                    },
                    {
                      "flags": "--value <value>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--value",
                      "description": "The input string value for the indexed item."
                    },
                    {
                      "flags": "--parse",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--parse",
                      "description": "Parse the input value string to a JSON object."
                    }
                  ]
                },
                {
                  "name": "remove",
                  "description": "Remove load-balancing-rules in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"loadBalancingRules\" : {\r\n             \"id\":\"\"\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "virtual-networks create-or-update-parameters load-balancing-rules remove",
                  "usage": "[options]",
                  "filePath": "commands/arm/vnet/vnet._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--index <index>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--index",
                      "description": "Indexer: index."
                    },
                    {
                      "flags": "--load-balancer-backend-address-pools-index <load-balancer-backend-address-pools-index>",
                      "required": -45,
                      "optional": 0,
                      "bool": true,
                      "long": "--load-balancer-backend-address-pools-index",
                      "description": "Indexer: load-balancer-backend-address-pools-index."
                    },
                    {
                      "flags": "--ip-configurations-index <ip-configurations-index>",
                      "required": -27,
                      "optional": 0,
                      "bool": true,
                      "long": "--ip-configurations-index",
                      "description": "Indexer: ip-configurations-index."
                    },
                    {
                      "flags": "--network-interfaces-index <network-interfaces-index>",
                      "required": -28,
                      "optional": 0,
                      "bool": true,
                      "long": "--network-interfaces-index",
                      "description": "Indexer: network-interfaces-index."
                    },
                    {
                      "flags": "--subnets-index <subnets-index>",
                      "required": -17,
                      "optional": 0,
                      "bool": true,
                      "long": "--subnets-index",
                      "description": "Indexer: subnets-index."
                    }
                  ]
                },
                {
                  "name": "add",
                  "description": "Add load-balancing-rules in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"loadBalancingRules\" : {\r\n             \"id\":\"\"\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "virtual-networks create-or-update-parameters load-balancing-rules add",
                  "usage": "[options]",
                  "filePath": "commands/arm/vnet/vnet._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--key <key>",
                      "required": -7,
                      "optional": 0,
                      "bool": true,
                      "long": "--key",
                      "description": "The JSON key."
                    },
                    {
                      "flags": "--value <value>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--value",
                      "description": "The JSON value."
                    },
                    {
                      "flags": "--parse",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--parse",
                      "description": "Parse the input value string to a JSON object."
                    }
                  ]
                }
              ],
              "categories": {}
            },
            "outbound-nat-rule": {
              "name": "outbound-nat-rule",
              "description": "Commands to set/remove/add outbound-nat-rule of virtual-networks in create-or-update-parameters file.",
              "fullName": "virtual-networks create-or-update-parameters outbound-nat-rule",
              "usage": "[options] [command]",
              "options": [],
              "commands": [
                {
                  "name": "remove",
                  "description": "Remove outbound-nat-rule in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"outboundNatRule\" : {\r\n             \"id\":\"\"\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "virtual-networks create-or-update-parameters outbound-nat-rule remove",
                  "usage": "[options]",
                  "filePath": "commands/arm/vnet/vnet._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--load-balancer-backend-address-pools-index <load-balancer-backend-address-pools-index>",
                      "required": -45,
                      "optional": 0,
                      "bool": true,
                      "long": "--load-balancer-backend-address-pools-index",
                      "description": "Indexer: load-balancer-backend-address-pools-index."
                    },
                    {
                      "flags": "--ip-configurations-index <ip-configurations-index>",
                      "required": -27,
                      "optional": 0,
                      "bool": true,
                      "long": "--ip-configurations-index",
                      "description": "Indexer: ip-configurations-index."
                    },
                    {
                      "flags": "--network-interfaces-index <network-interfaces-index>",
                      "required": -28,
                      "optional": 0,
                      "bool": true,
                      "long": "--network-interfaces-index",
                      "description": "Indexer: network-interfaces-index."
                    },
                    {
                      "flags": "--subnets-index <subnets-index>",
                      "required": -17,
                      "optional": 0,
                      "bool": true,
                      "long": "--subnets-index",
                      "description": "Indexer: subnets-index."
                    }
                  ]
                },
                {
                  "name": "add",
                  "description": "Add outbound-nat-rule in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"outboundNatRule\" : {\r\n             \"id\":\"\"\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "virtual-networks create-or-update-parameters outbound-nat-rule add",
                  "usage": "[options]",
                  "filePath": "commands/arm/vnet/vnet._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--key <key>",
                      "required": -7,
                      "optional": 0,
                      "bool": true,
                      "long": "--key",
                      "description": "The JSON key."
                    },
                    {
                      "flags": "--value <value>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--value",
                      "description": "The JSON value."
                    },
                    {
                      "flags": "--parse",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--parse",
                      "description": "Parse the input value string to a JSON object."
                    }
                  ]
                }
              ],
              "categories": {}
            },
            "load-balancer-inbound-nat-rules": {
              "name": "load-balancer-inbound-nat-rules",
              "description": "Commands to set/remove/add load-balancer-inbound-nat-rules of virtual-networks in create-or-update-parameters file.",
              "fullName": "virtual-networks create-or-update-parameters load-balancer-inbound-nat-rules",
              "usage": "[options] [command]",
              "options": [],
              "commands": [
                {
                  "name": "set",
                  "description": "Set load-balancer-inbound-nat-rules in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"loadBalancerInboundNatRules\" : {\r\n             \"name\":\"\",\r\n             \"etag\":\"\",\r\n             \"frontendIPConfiguration\":{\r\n               \"id\":\"\"\r\n             },\r\n             \"backendIPConfiguration\":{\r\n               \"name\":\"\",\r\n               \"etag\":\"\",\r\n               \"loadBalancerBackendAddressPools\":[\r\n                 {\r\n                   \"name\":\"\",\r\n                   \"etag\":\"\",\r\n                   \"backendIPConfigurations\":[\r\n           null\r\n                   ],\r\n                   \"loadBalancingRules\":[\r\n           null\r\n                   ],\r\n                   \"outboundNatRule\":null,\r\n                   \"provisioningState\":\"\",\r\n                   \"id\":\"\"\r\n                 }\r\n               ],\r\n               \"loadBalancerInboundNatRules\":[\r\n           null\r\n               ],\r\n               \"privateIPAddress\":\"\",\r\n               \"privateIPAllocationMethod\":\"\",\r\n               \"subnet\":{\r\n                 \"name\":\"\",\r\n                 \"etag\":\"\",\r\n                 \"addressPrefix\":\"\",\r\n                 \"networkSecurityGroup\":{\r\n                   \"etag\":\"\",\r\n                   \"securityRules\":[\r\n                     {\r\n                       \"name\":\"\",\r\n                       \"etag\":\"\",\r\n                       \"description\":\"\",\r\n                       \"protocol\":\"\",\r\n                       \"sourcePortRange\":\"\",\r\n                       \"destinationPortRange\":\"\",\r\n                       \"sourceAddressPrefix\":\"\",\r\n                       \"destinationAddressPrefix\":\"\",\r\n                       \"access\":\"\",\r\n                       \"priority\":null,\r\n                       \"direction\":\"\",\r\n                       \"provisioningState\":\"\",\r\n                       \"id\":\"\"\r\n                     }\r\n                   ],\r\n                   \"defaultSecurityRules\":[\r\n           null\r\n                   ],\r\n                   \"networkInterfaces\":[\r\n                     {\r\n                       \"etag\":\"\",\r\n                       \"virtualMachine\":null,\r\n                       \"networkSecurityGroup\":null,\r\n                       \"ipConfigurations\":[\r\n           null\r\n                       ],\r\n                       \"dnsSettings\":{\r\n                         \"dnsServers\":[\r\n                           \"\"\r\n                         ],\r\n                         \"appliedDnsServers\":[\r\n                           \"\"\r\n                         ],\r\n                         \"internalDnsNameLabel\":\"\",\r\n                         \"internalFqdn\":\"\"\r\n                       },\r\n                       \"macAddress\":\"\",\r\n                       \"primary\":null,\r\n                       \"enableIPForwarding\":null,\r\n                       \"resourceGuid\":\"\",\r\n                       \"provisioningState\":\"\",\r\n                       \"id\":\"\",\r\n                       \"name\":null,\r\n                       \"type\":null,\r\n                       \"location\":\"\",\r\n                       \"tags\":{\r\n                       }\r\n                     }\r\n                   ],\r\n                   \"subnets\":[\r\n           null\r\n                   ],\r\n                   \"resourceGuid\":\"\",\r\n                   \"provisioningState\":\"\",\r\n                   \"id\":\"\",\r\n                   \"name\":null,\r\n                   \"type\":null,\r\n                   \"location\":\"\",\r\n                   \"tags\":{\r\n                   }\r\n                 },\r\n                 \"routeTable\":{\r\n                   \"etag\":\"\",\r\n                   \"routes\":[\r\n                     {\r\n                       \"name\":\"\",\r\n                       \"etag\":\"\",\r\n                       \"addressPrefix\":\"\",\r\n                       \"nextHopType\":\"\",\r\n                       \"nextHopIpAddress\":\"\",\r\n                       \"provisioningState\":\"\",\r\n                       \"id\":\"\"\r\n                     }\r\n                   ],\r\n                   \"subnets\":[\r\n           null\r\n                   ],\r\n                   \"provisioningState\":\"\",\r\n                   \"id\":\"\",\r\n                   \"name\":null,\r\n                   \"type\":null,\r\n                   \"location\":\"\",\r\n                   \"tags\":{\r\n                   }\r\n                 },\r\n                 \"ipConfigurations\":[\r\n                   {\r\n                     \"name\":\"\",\r\n                     \"etag\":\"\",\r\n                     \"privateIPAddress\":\"\",\r\n                     \"privateIPAllocationMethod\":\"\",\r\n                     \"subnet\":null,\r\n                     \"publicIPAddress\":{\r\n                       \"etag\":\"\",\r\n                       \"publicIPAllocationMethod\":\"\",\r\n                       \"ipConfiguration\":null,\r\n                       \"dnsSettings\":{\r\n                         \"domainNameLabel\":\"\",\r\n                         \"fqdn\":\"\",\r\n                         \"reverseFqdn\":\"\"\r\n                       },\r\n                       \"ipAddress\":\"\",\r\n                       \"idleTimeoutInMinutes\":null,\r\n                       \"resourceGuid\":\"\",\r\n                       \"provisioningState\":\"\",\r\n                       \"id\":\"\",\r\n                       \"name\":null,\r\n                       \"type\":null,\r\n                       \"location\":\"\",\r\n                       \"tags\":{\r\n                       }\r\n                     },\r\n                     \"provisioningState\":\"\",\r\n                     \"id\":\"\"\r\n                   }\r\n                 ],\r\n                 \"provisioningState\":\"\",\r\n                 \"id\":\"\"\r\n               },\r\n               \"publicIPAddress\":null,\r\n               \"provisioningState\":\"\",\r\n               \"id\":\"\"\r\n             },\r\n             \"protocol\":\"\",\r\n             \"frontendPort\":null,\r\n             \"backendPort\":null,\r\n             \"idleTimeoutInMinutes\":null,\r\n             \"enableFloatingIP\":null,\r\n             \"provisioningState\":\"\",\r\n             \"id\":\"\"\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "virtual-networks create-or-update-parameters load-balancer-inbound-nat-rules set",
                  "usage": "[options]",
                  "filePath": "commands/arm/vnet/vnet._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--index <index>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--index",
                      "description": "Indexer: index."
                    },
                    {
                      "flags": "--ip-configurations-index <ip-configurations-index>",
                      "required": -27,
                      "optional": 0,
                      "bool": true,
                      "long": "--ip-configurations-index",
                      "description": "Indexer: ip-configurations-index."
                    },
                    {
                      "flags": "--network-interfaces-index <network-interfaces-index>",
                      "required": -28,
                      "optional": 0,
                      "bool": true,
                      "long": "--network-interfaces-index",
                      "description": "Indexer: network-interfaces-index."
                    },
                    {
                      "flags": "--subnets-index <subnets-index>",
                      "required": -17,
                      "optional": 0,
                      "bool": true,
                      "long": "--subnets-index",
                      "description": "Indexer: subnets-index."
                    },
                    {
                      "flags": "--value <value>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--value",
                      "description": "The input string value for the indexed item."
                    },
                    {
                      "flags": "--parse",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--parse",
                      "description": "Parse the input value string to a JSON object."
                    },
                    {
                      "flags": "--name <name>",
                      "required": -8,
                      "optional": 0,
                      "bool": true,
                      "long": "--name",
                      "description": "Set the name value."
                    },
                    {
                      "flags": "--etag <etag>",
                      "required": -8,
                      "optional": 0,
                      "bool": true,
                      "long": "--etag",
                      "description": "Set the etag value."
                    },
                    {
                      "flags": "--frontend-ip-configuration <frontendIPConfiguration>",
                      "required": -29,
                      "optional": 0,
                      "bool": true,
                      "long": "--frontend-ip-configuration",
                      "description": "Set the frontend-ip-configuration value."
                    },
                    {
                      "flags": "--backend-ip-configuration <backendIPConfiguration>",
                      "required": -28,
                      "optional": 0,
                      "bool": true,
                      "long": "--backend-ip-configuration",
                      "description": "Set the backend-ip-configuration value."
                    },
                    {
                      "flags": "--protocol <protocol>",
                      "required": -12,
                      "optional": 0,
                      "bool": true,
                      "long": "--protocol",
                      "description": "Set the protocol value."
                    },
                    {
                      "flags": "--frontend-port <frontendPort>",
                      "required": -17,
                      "optional": 0,
                      "bool": true,
                      "long": "--frontend-port",
                      "description": "Set the frontend-port value."
                    },
                    {
                      "flags": "--backend-port <backendPort>",
                      "required": -16,
                      "optional": 0,
                      "bool": true,
                      "long": "--backend-port",
                      "description": "Set the backend-port value."
                    },
                    {
                      "flags": "--idle-timeout-in-minutes <idleTimeoutInMinutes>",
                      "required": -27,
                      "optional": 0,
                      "bool": true,
                      "long": "--idle-timeout-in-minutes",
                      "description": "Set the idle-timeout-in-minutes value."
                    },
                    {
                      "flags": "--enable-floating-ip <enableFloatingIP>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "long": "--enable-floating-ip",
                      "description": "Set the enable-floating-ip value."
                    },
                    {
                      "flags": "--provisioning-state <provisioningState>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "long": "--provisioning-state",
                      "description": "Set the provisioning-state value."
                    },
                    {
                      "flags": "--id <id>",
                      "required": -6,
                      "optional": 0,
                      "bool": true,
                      "long": "--id",
                      "description": "Set the id value."
                    }
                  ]
                },
                {
                  "name": "remove",
                  "description": "Remove load-balancer-inbound-nat-rules in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"loadBalancerInboundNatRules\" : {\r\n             \"name\":\"\",\r\n             \"etag\":\"\",\r\n             \"frontendIPConfiguration\":{\r\n               \"id\":\"\"\r\n             },\r\n             \"backendIPConfiguration\":{\r\n               \"name\":\"\",\r\n               \"etag\":\"\",\r\n               \"loadBalancerBackendAddressPools\":[\r\n                 {\r\n                   \"name\":\"\",\r\n                   \"etag\":\"\",\r\n                   \"backendIPConfigurations\":[\r\n           null\r\n                   ],\r\n                   \"loadBalancingRules\":[\r\n           null\r\n                   ],\r\n                   \"outboundNatRule\":null,\r\n                   \"provisioningState\":\"\",\r\n                   \"id\":\"\"\r\n                 }\r\n               ],\r\n               \"loadBalancerInboundNatRules\":[\r\n           null\r\n               ],\r\n               \"privateIPAddress\":\"\",\r\n               \"privateIPAllocationMethod\":\"\",\r\n               \"subnet\":{\r\n                 \"name\":\"\",\r\n                 \"etag\":\"\",\r\n                 \"addressPrefix\":\"\",\r\n                 \"networkSecurityGroup\":{\r\n                   \"etag\":\"\",\r\n                   \"securityRules\":[\r\n                     {\r\n                       \"name\":\"\",\r\n                       \"etag\":\"\",\r\n                       \"description\":\"\",\r\n                       \"protocol\":\"\",\r\n                       \"sourcePortRange\":\"\",\r\n                       \"destinationPortRange\":\"\",\r\n                       \"sourceAddressPrefix\":\"\",\r\n                       \"destinationAddressPrefix\":\"\",\r\n                       \"access\":\"\",\r\n                       \"priority\":null,\r\n                       \"direction\":\"\",\r\n                       \"provisioningState\":\"\",\r\n                       \"id\":\"\"\r\n                     }\r\n                   ],\r\n                   \"defaultSecurityRules\":[\r\n           null\r\n                   ],\r\n                   \"networkInterfaces\":[\r\n                     {\r\n                       \"etag\":\"\",\r\n                       \"virtualMachine\":null,\r\n                       \"networkSecurityGroup\":null,\r\n                       \"ipConfigurations\":[\r\n           null\r\n                       ],\r\n                       \"dnsSettings\":{\r\n                         \"dnsServers\":[\r\n                           \"\"\r\n                         ],\r\n                         \"appliedDnsServers\":[\r\n                           \"\"\r\n                         ],\r\n                         \"internalDnsNameLabel\":\"\",\r\n                         \"internalFqdn\":\"\"\r\n                       },\r\n                       \"macAddress\":\"\",\r\n                       \"primary\":null,\r\n                       \"enableIPForwarding\":null,\r\n                       \"resourceGuid\":\"\",\r\n                       \"provisioningState\":\"\",\r\n                       \"id\":\"\",\r\n                       \"name\":null,\r\n                       \"type\":null,\r\n                       \"location\":\"\",\r\n                       \"tags\":{\r\n                       }\r\n                     }\r\n                   ],\r\n                   \"subnets\":[\r\n           null\r\n                   ],\r\n                   \"resourceGuid\":\"\",\r\n                   \"provisioningState\":\"\",\r\n                   \"id\":\"\",\r\n                   \"name\":null,\r\n                   \"type\":null,\r\n                   \"location\":\"\",\r\n                   \"tags\":{\r\n                   }\r\n                 },\r\n                 \"routeTable\":{\r\n                   \"etag\":\"\",\r\n                   \"routes\":[\r\n                     {\r\n                       \"name\":\"\",\r\n                       \"etag\":\"\",\r\n                       \"addressPrefix\":\"\",\r\n                       \"nextHopType\":\"\",\r\n                       \"nextHopIpAddress\":\"\",\r\n                       \"provisioningState\":\"\",\r\n                       \"id\":\"\"\r\n                     }\r\n                   ],\r\n                   \"subnets\":[\r\n           null\r\n                   ],\r\n                   \"provisioningState\":\"\",\r\n                   \"id\":\"\",\r\n                   \"name\":null,\r\n                   \"type\":null,\r\n                   \"location\":\"\",\r\n                   \"tags\":{\r\n                   }\r\n                 },\r\n                 \"ipConfigurations\":[\r\n                   {\r\n                     \"name\":\"\",\r\n                     \"etag\":\"\",\r\n                     \"privateIPAddress\":\"\",\r\n                     \"privateIPAllocationMethod\":\"\",\r\n                     \"subnet\":null,\r\n                     \"publicIPAddress\":{\r\n                       \"etag\":\"\",\r\n                       \"publicIPAllocationMethod\":\"\",\r\n                       \"ipConfiguration\":null,\r\n                       \"dnsSettings\":{\r\n                         \"domainNameLabel\":\"\",\r\n                         \"fqdn\":\"\",\r\n                         \"reverseFqdn\":\"\"\r\n                       },\r\n                       \"ipAddress\":\"\",\r\n                       \"idleTimeoutInMinutes\":null,\r\n                       \"resourceGuid\":\"\",\r\n                       \"provisioningState\":\"\",\r\n                       \"id\":\"\",\r\n                       \"name\":null,\r\n                       \"type\":null,\r\n                       \"location\":\"\",\r\n                       \"tags\":{\r\n                       }\r\n                     },\r\n                     \"provisioningState\":\"\",\r\n                     \"id\":\"\"\r\n                   }\r\n                 ],\r\n                 \"provisioningState\":\"\",\r\n                 \"id\":\"\"\r\n               },\r\n               \"publicIPAddress\":null,\r\n               \"provisioningState\":\"\",\r\n               \"id\":\"\"\r\n             },\r\n             \"protocol\":\"\",\r\n             \"frontendPort\":null,\r\n             \"backendPort\":null,\r\n             \"idleTimeoutInMinutes\":null,\r\n             \"enableFloatingIP\":null,\r\n             \"provisioningState\":\"\",\r\n             \"id\":\"\"\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "virtual-networks create-or-update-parameters load-balancer-inbound-nat-rules remove",
                  "usage": "[options]",
                  "filePath": "commands/arm/vnet/vnet._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--index <index>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--index",
                      "description": "Indexer: index."
                    },
                    {
                      "flags": "--ip-configurations-index <ip-configurations-index>",
                      "required": -27,
                      "optional": 0,
                      "bool": true,
                      "long": "--ip-configurations-index",
                      "description": "Indexer: ip-configurations-index."
                    },
                    {
                      "flags": "--network-interfaces-index <network-interfaces-index>",
                      "required": -28,
                      "optional": 0,
                      "bool": true,
                      "long": "--network-interfaces-index",
                      "description": "Indexer: network-interfaces-index."
                    },
                    {
                      "flags": "--subnets-index <subnets-index>",
                      "required": -17,
                      "optional": 0,
                      "bool": true,
                      "long": "--subnets-index",
                      "description": "Indexer: subnets-index."
                    },
                    {
                      "flags": "--name",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--name",
                      "description": "Remove the name value."
                    },
                    {
                      "flags": "--etag",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--etag",
                      "description": "Remove the etag value."
                    },
                    {
                      "flags": "--frontend-ip-configuration",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--frontend-ip-configuration",
                      "description": "Remove the frontend-ip-configuration value."
                    },
                    {
                      "flags": "--backend-ip-configuration",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--backend-ip-configuration",
                      "description": "Remove the backend-ip-configuration value."
                    },
                    {
                      "flags": "--protocol",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--protocol",
                      "description": "Remove the protocol value."
                    },
                    {
                      "flags": "--frontend-port",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--frontend-port",
                      "description": "Remove the frontend-port value."
                    },
                    {
                      "flags": "--backend-port",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--backend-port",
                      "description": "Remove the backend-port value."
                    },
                    {
                      "flags": "--idle-timeout-in-minutes",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--idle-timeout-in-minutes",
                      "description": "Remove the idle-timeout-in-minutes value."
                    },
                    {
                      "flags": "--enable-floating-ip",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--enable-floating-ip",
                      "description": "Remove the enable-floating-ip value."
                    },
                    {
                      "flags": "--provisioning-state",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--provisioning-state",
                      "description": "Remove the provisioning-state value."
                    },
                    {
                      "flags": "--id",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--id",
                      "description": "Remove the id value."
                    }
                  ]
                },
                {
                  "name": "add",
                  "description": "Add load-balancer-inbound-nat-rules in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"loadBalancerInboundNatRules\" : {\r\n             \"name\":\"\",\r\n             \"etag\":\"\",\r\n             \"frontendIPConfiguration\":{\r\n               \"id\":\"\"\r\n             },\r\n             \"backendIPConfiguration\":{\r\n               \"name\":\"\",\r\n               \"etag\":\"\",\r\n               \"loadBalancerBackendAddressPools\":[\r\n                 {\r\n                   \"name\":\"\",\r\n                   \"etag\":\"\",\r\n                   \"backendIPConfigurations\":[\r\n           null\r\n                   ],\r\n                   \"loadBalancingRules\":[\r\n           null\r\n                   ],\r\n                   \"outboundNatRule\":null,\r\n                   \"provisioningState\":\"\",\r\n                   \"id\":\"\"\r\n                 }\r\n               ],\r\n               \"loadBalancerInboundNatRules\":[\r\n           null\r\n               ],\r\n               \"privateIPAddress\":\"\",\r\n               \"privateIPAllocationMethod\":\"\",\r\n               \"subnet\":{\r\n                 \"name\":\"\",\r\n                 \"etag\":\"\",\r\n                 \"addressPrefix\":\"\",\r\n                 \"networkSecurityGroup\":{\r\n                   \"etag\":\"\",\r\n                   \"securityRules\":[\r\n                     {\r\n                       \"name\":\"\",\r\n                       \"etag\":\"\",\r\n                       \"description\":\"\",\r\n                       \"protocol\":\"\",\r\n                       \"sourcePortRange\":\"\",\r\n                       \"destinationPortRange\":\"\",\r\n                       \"sourceAddressPrefix\":\"\",\r\n                       \"destinationAddressPrefix\":\"\",\r\n                       \"access\":\"\",\r\n                       \"priority\":null,\r\n                       \"direction\":\"\",\r\n                       \"provisioningState\":\"\",\r\n                       \"id\":\"\"\r\n                     }\r\n                   ],\r\n                   \"defaultSecurityRules\":[\r\n           null\r\n                   ],\r\n                   \"networkInterfaces\":[\r\n                     {\r\n                       \"etag\":\"\",\r\n                       \"virtualMachine\":null,\r\n                       \"networkSecurityGroup\":null,\r\n                       \"ipConfigurations\":[\r\n           null\r\n                       ],\r\n                       \"dnsSettings\":{\r\n                         \"dnsServers\":[\r\n                           \"\"\r\n                         ],\r\n                         \"appliedDnsServers\":[\r\n                           \"\"\r\n                         ],\r\n                         \"internalDnsNameLabel\":\"\",\r\n                         \"internalFqdn\":\"\"\r\n                       },\r\n                       \"macAddress\":\"\",\r\n                       \"primary\":null,\r\n                       \"enableIPForwarding\":null,\r\n                       \"resourceGuid\":\"\",\r\n                       \"provisioningState\":\"\",\r\n                       \"id\":\"\",\r\n                       \"name\":null,\r\n                       \"type\":null,\r\n                       \"location\":\"\",\r\n                       \"tags\":{\r\n                       }\r\n                     }\r\n                   ],\r\n                   \"subnets\":[\r\n           null\r\n                   ],\r\n                   \"resourceGuid\":\"\",\r\n                   \"provisioningState\":\"\",\r\n                   \"id\":\"\",\r\n                   \"name\":null,\r\n                   \"type\":null,\r\n                   \"location\":\"\",\r\n                   \"tags\":{\r\n                   }\r\n                 },\r\n                 \"routeTable\":{\r\n                   \"etag\":\"\",\r\n                   \"routes\":[\r\n                     {\r\n                       \"name\":\"\",\r\n                       \"etag\":\"\",\r\n                       \"addressPrefix\":\"\",\r\n                       \"nextHopType\":\"\",\r\n                       \"nextHopIpAddress\":\"\",\r\n                       \"provisioningState\":\"\",\r\n                       \"id\":\"\"\r\n                     }\r\n                   ],\r\n                   \"subnets\":[\r\n           null\r\n                   ],\r\n                   \"provisioningState\":\"\",\r\n                   \"id\":\"\",\r\n                   \"name\":null,\r\n                   \"type\":null,\r\n                   \"location\":\"\",\r\n                   \"tags\":{\r\n                   }\r\n                 },\r\n                 \"ipConfigurations\":[\r\n                   {\r\n                     \"name\":\"\",\r\n                     \"etag\":\"\",\r\n                     \"privateIPAddress\":\"\",\r\n                     \"privateIPAllocationMethod\":\"\",\r\n                     \"subnet\":null,\r\n                     \"publicIPAddress\":{\r\n                       \"etag\":\"\",\r\n                       \"publicIPAllocationMethod\":\"\",\r\n                       \"ipConfiguration\":null,\r\n                       \"dnsSettings\":{\r\n                         \"domainNameLabel\":\"\",\r\n                         \"fqdn\":\"\",\r\n                         \"reverseFqdn\":\"\"\r\n                       },\r\n                       \"ipAddress\":\"\",\r\n                       \"idleTimeoutInMinutes\":null,\r\n                       \"resourceGuid\":\"\",\r\n                       \"provisioningState\":\"\",\r\n                       \"id\":\"\",\r\n                       \"name\":null,\r\n                       \"type\":null,\r\n                       \"location\":\"\",\r\n                       \"tags\":{\r\n                       }\r\n                     },\r\n                     \"provisioningState\":\"\",\r\n                     \"id\":\"\"\r\n                   }\r\n                 ],\r\n                 \"provisioningState\":\"\",\r\n                 \"id\":\"\"\r\n               },\r\n               \"publicIPAddress\":null,\r\n               \"provisioningState\":\"\",\r\n               \"id\":\"\"\r\n             },\r\n             \"protocol\":\"\",\r\n             \"frontendPort\":null,\r\n             \"backendPort\":null,\r\n             \"idleTimeoutInMinutes\":null,\r\n             \"enableFloatingIP\":null,\r\n             \"provisioningState\":\"\",\r\n             \"id\":\"\"\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "virtual-networks create-or-update-parameters load-balancer-inbound-nat-rules add",
                  "usage": "[options]",
                  "filePath": "commands/arm/vnet/vnet._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--key <key>",
                      "required": -7,
                      "optional": 0,
                      "bool": true,
                      "long": "--key",
                      "description": "The JSON key."
                    },
                    {
                      "flags": "--value <value>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--value",
                      "description": "The JSON value."
                    },
                    {
                      "flags": "--parse",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--parse",
                      "description": "Parse the input value string to a JSON object."
                    },
                    {
                      "flags": "--name <name>",
                      "required": -8,
                      "optional": 0,
                      "bool": true,
                      "long": "--name",
                      "description": "Add the name value."
                    },
                    {
                      "flags": "--etag <etag>",
                      "required": -8,
                      "optional": 0,
                      "bool": true,
                      "long": "--etag",
                      "description": "Add the etag value."
                    },
                    {
                      "flags": "--frontend-ip-configuration <frontendIPConfiguration>",
                      "required": -29,
                      "optional": 0,
                      "bool": true,
                      "long": "--frontend-ip-configuration",
                      "description": "Add the frontend-ip-configuration value."
                    },
                    {
                      "flags": "--backend-ip-configuration <backendIPConfiguration>",
                      "required": -28,
                      "optional": 0,
                      "bool": true,
                      "long": "--backend-ip-configuration",
                      "description": "Add the backend-ip-configuration value."
                    },
                    {
                      "flags": "--protocol <protocol>",
                      "required": -12,
                      "optional": 0,
                      "bool": true,
                      "long": "--protocol",
                      "description": "Add the protocol value."
                    },
                    {
                      "flags": "--frontend-port <frontendPort>",
                      "required": -17,
                      "optional": 0,
                      "bool": true,
                      "long": "--frontend-port",
                      "description": "Add the frontend-port value."
                    },
                    {
                      "flags": "--backend-port <backendPort>",
                      "required": -16,
                      "optional": 0,
                      "bool": true,
                      "long": "--backend-port",
                      "description": "Add the backend-port value."
                    },
                    {
                      "flags": "--idle-timeout-in-minutes <idleTimeoutInMinutes>",
                      "required": -27,
                      "optional": 0,
                      "bool": true,
                      "long": "--idle-timeout-in-minutes",
                      "description": "Add the idle-timeout-in-minutes value."
                    },
                    {
                      "flags": "--enable-floating-ip <enableFloatingIP>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "long": "--enable-floating-ip",
                      "description": "Add the enable-floating-ip value."
                    },
                    {
                      "flags": "--provisioning-state <provisioningState>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "long": "--provisioning-state",
                      "description": "Add the provisioning-state value."
                    },
                    {
                      "flags": "--id <id>",
                      "required": -6,
                      "optional": 0,
                      "bool": true,
                      "long": "--id",
                      "description": "Add the id value."
                    }
                  ]
                }
              ],
              "categories": {}
            },
            "frontend-ip-configuration": {
              "name": "frontend-ip-configuration",
              "description": "Commands to set/remove/add frontend-ip-configuration of virtual-networks in create-or-update-parameters file.",
              "fullName": "virtual-networks create-or-update-parameters frontend-ip-configuration",
              "usage": "[options] [command]",
              "options": [],
              "commands": [
                {
                  "name": "remove",
                  "description": "Remove frontend-ip-configuration in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"frontendIPConfiguration\" : {\r\n             \"id\":\"\"\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "virtual-networks create-or-update-parameters frontend-ip-configuration remove",
                  "usage": "[options]",
                  "filePath": "commands/arm/vnet/vnet._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--load-balancer-inbound-nat-rules-index <load-balancer-inbound-nat-rules-index>",
                      "required": -41,
                      "optional": 0,
                      "bool": true,
                      "long": "--load-balancer-inbound-nat-rules-index",
                      "description": "Indexer: load-balancer-inbound-nat-rules-index."
                    },
                    {
                      "flags": "--ip-configurations-index <ip-configurations-index>",
                      "required": -27,
                      "optional": 0,
                      "bool": true,
                      "long": "--ip-configurations-index",
                      "description": "Indexer: ip-configurations-index."
                    },
                    {
                      "flags": "--network-interfaces-index <network-interfaces-index>",
                      "required": -28,
                      "optional": 0,
                      "bool": true,
                      "long": "--network-interfaces-index",
                      "description": "Indexer: network-interfaces-index."
                    },
                    {
                      "flags": "--subnets-index <subnets-index>",
                      "required": -17,
                      "optional": 0,
                      "bool": true,
                      "long": "--subnets-index",
                      "description": "Indexer: subnets-index."
                    }
                  ]
                },
                {
                  "name": "add",
                  "description": "Add frontend-ip-configuration in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"frontendIPConfiguration\" : {\r\n             \"id\":\"\"\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "virtual-networks create-or-update-parameters frontend-ip-configuration add",
                  "usage": "[options]",
                  "filePath": "commands/arm/vnet/vnet._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--key <key>",
                      "required": -7,
                      "optional": 0,
                      "bool": true,
                      "long": "--key",
                      "description": "The JSON key."
                    },
                    {
                      "flags": "--value <value>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--value",
                      "description": "The JSON value."
                    },
                    {
                      "flags": "--parse",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--parse",
                      "description": "Parse the input value string to a JSON object."
                    }
                  ]
                }
              ],
              "categories": {}
            },
            "backend-ip-configuration": {
              "name": "backend-ip-configuration",
              "description": "Commands to set/remove/add backend-ip-configuration of virtual-networks in create-or-update-parameters file.",
              "fullName": "virtual-networks create-or-update-parameters backend-ip-configuration",
              "usage": "[options] [command]",
              "options": [],
              "commands": [
                {
                  "name": "remove",
                  "description": "Remove backend-ip-configuration in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"backendIPConfiguration\" : {\r\n             \"name\":\"\",\r\n             \"etag\":\"\",\r\n             \"loadBalancerBackendAddressPools\":[\r\n               {\r\n                 \"name\":\"\",\r\n                 \"etag\":\"\",\r\n                 \"backendIPConfigurations\":[\r\n           null\r\n                 ],\r\n                 \"loadBalancingRules\":[\r\n                   {\r\n                     \"id\":\"\"\r\n                   }\r\n                 ],\r\n                 \"outboundNatRule\":null,\r\n                 \"provisioningState\":\"\",\r\n                 \"id\":\"\"\r\n               }\r\n             ],\r\n             \"loadBalancerInboundNatRules\":[\r\n               {\r\n                 \"name\":\"\",\r\n                 \"etag\":\"\",\r\n                 \"frontendIPConfiguration\":null,\r\n                 \"backendIPConfiguration\":null,\r\n                 \"protocol\":\"\",\r\n                 \"frontendPort\":null,\r\n                 \"backendPort\":null,\r\n                 \"idleTimeoutInMinutes\":null,\r\n                 \"enableFloatingIP\":null,\r\n                 \"provisioningState\":\"\",\r\n                 \"id\":\"\"\r\n               }\r\n             ],\r\n             \"privateIPAddress\":\"\",\r\n             \"privateIPAllocationMethod\":\"\",\r\n             \"subnet\":{\r\n               \"name\":\"\",\r\n               \"etag\":\"\",\r\n               \"addressPrefix\":\"\",\r\n               \"networkSecurityGroup\":{\r\n                 \"etag\":\"\",\r\n                 \"securityRules\":[\r\n                   {\r\n                     \"name\":\"\",\r\n                     \"etag\":\"\",\r\n                     \"description\":\"\",\r\n                     \"protocol\":\"\",\r\n                     \"sourcePortRange\":\"\",\r\n                     \"destinationPortRange\":\"\",\r\n                     \"sourceAddressPrefix\":\"\",\r\n                     \"destinationAddressPrefix\":\"\",\r\n                     \"access\":\"\",\r\n                     \"priority\":null,\r\n                     \"direction\":\"\",\r\n                     \"provisioningState\":\"\",\r\n                     \"id\":\"\"\r\n                   }\r\n                 ],\r\n                 \"defaultSecurityRules\":[\r\n           null\r\n                 ],\r\n                 \"networkInterfaces\":[\r\n                   {\r\n                     \"etag\":\"\",\r\n                     \"virtualMachine\":null,\r\n                     \"networkSecurityGroup\":null,\r\n                     \"ipConfigurations\":[\r\n           null\r\n                     ],\r\n                     \"dnsSettings\":{\r\n                       \"dnsServers\":[\r\n                         \"\"\r\n                       ],\r\n                       \"appliedDnsServers\":[\r\n                         \"\"\r\n                       ],\r\n                       \"internalDnsNameLabel\":\"\",\r\n                       \"internalFqdn\":\"\"\r\n                     },\r\n                     \"macAddress\":\"\",\r\n                     \"primary\":null,\r\n                     \"enableIPForwarding\":null,\r\n                     \"resourceGuid\":\"\",\r\n                     \"provisioningState\":\"\",\r\n                     \"id\":\"\",\r\n                     \"name\":null,\r\n                     \"type\":null,\r\n                     \"location\":\"\",\r\n                     \"tags\":{\r\n                     }\r\n                   }\r\n                 ],\r\n                 \"subnets\":[\r\n           null\r\n                 ],\r\n                 \"resourceGuid\":\"\",\r\n                 \"provisioningState\":\"\",\r\n                 \"id\":\"\",\r\n                 \"name\":null,\r\n                 \"type\":null,\r\n                 \"location\":\"\",\r\n                 \"tags\":{\r\n                 }\r\n               },\r\n               \"routeTable\":{\r\n                 \"etag\":\"\",\r\n                 \"routes\":[\r\n                   {\r\n                     \"name\":\"\",\r\n                     \"etag\":\"\",\r\n                     \"addressPrefix\":\"\",\r\n                     \"nextHopType\":\"\",\r\n                     \"nextHopIpAddress\":\"\",\r\n                     \"provisioningState\":\"\",\r\n                     \"id\":\"\"\r\n                   }\r\n                 ],\r\n                 \"subnets\":[\r\n           null\r\n                 ],\r\n                 \"provisioningState\":\"\",\r\n                 \"id\":\"\",\r\n                 \"name\":null,\r\n                 \"type\":null,\r\n                 \"location\":\"\",\r\n                 \"tags\":{\r\n                 }\r\n               },\r\n               \"ipConfigurations\":[\r\n                 {\r\n                   \"name\":\"\",\r\n                   \"etag\":\"\",\r\n                   \"privateIPAddress\":\"\",\r\n                   \"privateIPAllocationMethod\":\"\",\r\n                   \"subnet\":null,\r\n                   \"publicIPAddress\":{\r\n                     \"etag\":\"\",\r\n                     \"publicIPAllocationMethod\":\"\",\r\n                     \"ipConfiguration\":null,\r\n                     \"dnsSettings\":{\r\n                       \"domainNameLabel\":\"\",\r\n                       \"fqdn\":\"\",\r\n                       \"reverseFqdn\":\"\"\r\n                     },\r\n                     \"ipAddress\":\"\",\r\n                     \"idleTimeoutInMinutes\":null,\r\n                     \"resourceGuid\":\"\",\r\n                     \"provisioningState\":\"\",\r\n                     \"id\":\"\",\r\n                     \"name\":null,\r\n                     \"type\":null,\r\n                     \"location\":\"\",\r\n                     \"tags\":{\r\n                     }\r\n                   },\r\n                   \"provisioningState\":\"\",\r\n                   \"id\":\"\"\r\n                 }\r\n               ],\r\n               \"provisioningState\":\"\",\r\n               \"id\":\"\"\r\n             },\r\n             \"publicIPAddress\":null,\r\n             \"provisioningState\":\"\",\r\n             \"id\":\"\"\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "virtual-networks create-or-update-parameters backend-ip-configuration remove",
                  "usage": "[options]",
                  "filePath": "commands/arm/vnet/vnet._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--load-balancer-inbound-nat-rules-index <load-balancer-inbound-nat-rules-index>",
                      "required": -41,
                      "optional": 0,
                      "bool": true,
                      "long": "--load-balancer-inbound-nat-rules-index",
                      "description": "Indexer: load-balancer-inbound-nat-rules-index."
                    },
                    {
                      "flags": "--ip-configurations-index <ip-configurations-index>",
                      "required": -27,
                      "optional": 0,
                      "bool": true,
                      "long": "--ip-configurations-index",
                      "description": "Indexer: ip-configurations-index."
                    },
                    {
                      "flags": "--network-interfaces-index <network-interfaces-index>",
                      "required": -28,
                      "optional": 0,
                      "bool": true,
                      "long": "--network-interfaces-index",
                      "description": "Indexer: network-interfaces-index."
                    },
                    {
                      "flags": "--subnets-index <subnets-index>",
                      "required": -17,
                      "optional": 0,
                      "bool": true,
                      "long": "--subnets-index",
                      "description": "Indexer: subnets-index."
                    }
                  ]
                },
                {
                  "name": "add",
                  "description": "Add backend-ip-configuration in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"backendIPConfiguration\" : {\r\n             \"name\":\"\",\r\n             \"etag\":\"\",\r\n             \"loadBalancerBackendAddressPools\":[\r\n               {\r\n                 \"name\":\"\",\r\n                 \"etag\":\"\",\r\n                 \"backendIPConfigurations\":[\r\n           null\r\n                 ],\r\n                 \"loadBalancingRules\":[\r\n                   {\r\n                     \"id\":\"\"\r\n                   }\r\n                 ],\r\n                 \"outboundNatRule\":null,\r\n                 \"provisioningState\":\"\",\r\n                 \"id\":\"\"\r\n               }\r\n             ],\r\n             \"loadBalancerInboundNatRules\":[\r\n               {\r\n                 \"name\":\"\",\r\n                 \"etag\":\"\",\r\n                 \"frontendIPConfiguration\":null,\r\n                 \"backendIPConfiguration\":null,\r\n                 \"protocol\":\"\",\r\n                 \"frontendPort\":null,\r\n                 \"backendPort\":null,\r\n                 \"idleTimeoutInMinutes\":null,\r\n                 \"enableFloatingIP\":null,\r\n                 \"provisioningState\":\"\",\r\n                 \"id\":\"\"\r\n               }\r\n             ],\r\n             \"privateIPAddress\":\"\",\r\n             \"privateIPAllocationMethod\":\"\",\r\n             \"subnet\":{\r\n               \"name\":\"\",\r\n               \"etag\":\"\",\r\n               \"addressPrefix\":\"\",\r\n               \"networkSecurityGroup\":{\r\n                 \"etag\":\"\",\r\n                 \"securityRules\":[\r\n                   {\r\n                     \"name\":\"\",\r\n                     \"etag\":\"\",\r\n                     \"description\":\"\",\r\n                     \"protocol\":\"\",\r\n                     \"sourcePortRange\":\"\",\r\n                     \"destinationPortRange\":\"\",\r\n                     \"sourceAddressPrefix\":\"\",\r\n                     \"destinationAddressPrefix\":\"\",\r\n                     \"access\":\"\",\r\n                     \"priority\":null,\r\n                     \"direction\":\"\",\r\n                     \"provisioningState\":\"\",\r\n                     \"id\":\"\"\r\n                   }\r\n                 ],\r\n                 \"defaultSecurityRules\":[\r\n           null\r\n                 ],\r\n                 \"networkInterfaces\":[\r\n                   {\r\n                     \"etag\":\"\",\r\n                     \"virtualMachine\":null,\r\n                     \"networkSecurityGroup\":null,\r\n                     \"ipConfigurations\":[\r\n           null\r\n                     ],\r\n                     \"dnsSettings\":{\r\n                       \"dnsServers\":[\r\n                         \"\"\r\n                       ],\r\n                       \"appliedDnsServers\":[\r\n                         \"\"\r\n                       ],\r\n                       \"internalDnsNameLabel\":\"\",\r\n                       \"internalFqdn\":\"\"\r\n                     },\r\n                     \"macAddress\":\"\",\r\n                     \"primary\":null,\r\n                     \"enableIPForwarding\":null,\r\n                     \"resourceGuid\":\"\",\r\n                     \"provisioningState\":\"\",\r\n                     \"id\":\"\",\r\n                     \"name\":null,\r\n                     \"type\":null,\r\n                     \"location\":\"\",\r\n                     \"tags\":{\r\n                     }\r\n                   }\r\n                 ],\r\n                 \"subnets\":[\r\n           null\r\n                 ],\r\n                 \"resourceGuid\":\"\",\r\n                 \"provisioningState\":\"\",\r\n                 \"id\":\"\",\r\n                 \"name\":null,\r\n                 \"type\":null,\r\n                 \"location\":\"\",\r\n                 \"tags\":{\r\n                 }\r\n               },\r\n               \"routeTable\":{\r\n                 \"etag\":\"\",\r\n                 \"routes\":[\r\n                   {\r\n                     \"name\":\"\",\r\n                     \"etag\":\"\",\r\n                     \"addressPrefix\":\"\",\r\n                     \"nextHopType\":\"\",\r\n                     \"nextHopIpAddress\":\"\",\r\n                     \"provisioningState\":\"\",\r\n                     \"id\":\"\"\r\n                   }\r\n                 ],\r\n                 \"subnets\":[\r\n           null\r\n                 ],\r\n                 \"provisioningState\":\"\",\r\n                 \"id\":\"\",\r\n                 \"name\":null,\r\n                 \"type\":null,\r\n                 \"location\":\"\",\r\n                 \"tags\":{\r\n                 }\r\n               },\r\n               \"ipConfigurations\":[\r\n                 {\r\n                   \"name\":\"\",\r\n                   \"etag\":\"\",\r\n                   \"privateIPAddress\":\"\",\r\n                   \"privateIPAllocationMethod\":\"\",\r\n                   \"subnet\":null,\r\n                   \"publicIPAddress\":{\r\n                     \"etag\":\"\",\r\n                     \"publicIPAllocationMethod\":\"\",\r\n                     \"ipConfiguration\":null,\r\n                     \"dnsSettings\":{\r\n                       \"domainNameLabel\":\"\",\r\n                       \"fqdn\":\"\",\r\n                       \"reverseFqdn\":\"\"\r\n                     },\r\n                     \"ipAddress\":\"\",\r\n                     \"idleTimeoutInMinutes\":null,\r\n                     \"resourceGuid\":\"\",\r\n                     \"provisioningState\":\"\",\r\n                     \"id\":\"\",\r\n                     \"name\":null,\r\n                     \"type\":null,\r\n                     \"location\":\"\",\r\n                     \"tags\":{\r\n                     }\r\n                   },\r\n                   \"provisioningState\":\"\",\r\n                   \"id\":\"\"\r\n                 }\r\n               ],\r\n               \"provisioningState\":\"\",\r\n               \"id\":\"\"\r\n             },\r\n             \"publicIPAddress\":null,\r\n             \"provisioningState\":\"\",\r\n             \"id\":\"\"\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "virtual-networks create-or-update-parameters backend-ip-configuration add",
                  "usage": "[options]",
                  "filePath": "commands/arm/vnet/vnet._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--key <key>",
                      "required": -7,
                      "optional": 0,
                      "bool": true,
                      "long": "--key",
                      "description": "The JSON key."
                    },
                    {
                      "flags": "--value <value>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--value",
                      "description": "The JSON value."
                    },
                    {
                      "flags": "--parse",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--parse",
                      "description": "Parse the input value string to a JSON object."
                    }
                  ]
                }
              ],
              "categories": {}
            },
            "subnet": {
              "name": "subnet",
              "description": "Commands to set/remove/add subnet of virtual-networks in create-or-update-parameters file.",
              "fullName": "virtual-networks create-or-update-parameters subnet",
              "usage": "[options] [command]",
              "options": [],
              "commands": [
                {
                  "name": "remove",
                  "description": "Remove subnet in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"subnet\" : {\r\n             \"name\":\"\",\r\n             \"etag\":\"\",\r\n             \"addressPrefix\":\"\",\r\n             \"networkSecurityGroup\":{\r\n               \"etag\":\"\",\r\n               \"securityRules\":[\r\n                 {\r\n                   \"name\":\"\",\r\n                   \"etag\":\"\",\r\n                   \"description\":\"\",\r\n                   \"protocol\":\"\",\r\n                   \"sourcePortRange\":\"\",\r\n                   \"destinationPortRange\":\"\",\r\n                   \"sourceAddressPrefix\":\"\",\r\n                   \"destinationAddressPrefix\":\"\",\r\n                   \"access\":\"\",\r\n                   \"priority\":null,\r\n                   \"direction\":\"\",\r\n                   \"provisioningState\":\"\",\r\n                   \"id\":\"\"\r\n                 }\r\n               ],\r\n               \"defaultSecurityRules\":[\r\n           null\r\n               ],\r\n               \"networkInterfaces\":[\r\n                 {\r\n                   \"etag\":\"\",\r\n                   \"virtualMachine\":{\r\n                     \"id\":\"\"\r\n                   },\r\n                   \"networkSecurityGroup\":null,\r\n                   \"ipConfigurations\":[\r\n                     {\r\n                       \"name\":\"\",\r\n                       \"etag\":\"\",\r\n                       \"loadBalancerBackendAddressPools\":[\r\n                         {\r\n                           \"name\":\"\",\r\n                           \"etag\":\"\",\r\n                           \"backendIPConfigurations\":[\r\n           null\r\n                           ],\r\n                           \"loadBalancingRules\":[\r\n           null\r\n                           ],\r\n                           \"outboundNatRule\":null,\r\n                           \"provisioningState\":\"\",\r\n                           \"id\":\"\"\r\n                         }\r\n                       ],\r\n                       \"loadBalancerInboundNatRules\":[\r\n                         {\r\n                           \"name\":\"\",\r\n                           \"etag\":\"\",\r\n                           \"frontendIPConfiguration\":null,\r\n                           \"backendIPConfiguration\":null,\r\n                           \"protocol\":\"\",\r\n                           \"frontendPort\":null,\r\n                           \"backendPort\":null,\r\n                           \"idleTimeoutInMinutes\":null,\r\n                           \"enableFloatingIP\":null,\r\n                           \"provisioningState\":\"\",\r\n                           \"id\":\"\"\r\n                         }\r\n                       ],\r\n                       \"privateIPAddress\":\"\",\r\n                       \"privateIPAllocationMethod\":\"\",\r\n                       \"subnet\":null,\r\n                       \"publicIPAddress\":{\r\n                         \"etag\":\"\",\r\n                         \"publicIPAllocationMethod\":\"\",\r\n                         \"ipConfiguration\":{\r\n                           \"name\":\"\",\r\n                           \"etag\":\"\",\r\n                           \"privateIPAddress\":\"\",\r\n                           \"privateIPAllocationMethod\":\"\",\r\n                           \"subnet\":null,\r\n                           \"publicIPAddress\":null,\r\n                           \"provisioningState\":\"\",\r\n                           \"id\":\"\"\r\n                         },\r\n                         \"dnsSettings\":{\r\n                           \"domainNameLabel\":\"\",\r\n                           \"fqdn\":\"\",\r\n                           \"reverseFqdn\":\"\"\r\n                         },\r\n                         \"ipAddress\":\"\",\r\n                         \"idleTimeoutInMinutes\":null,\r\n                         \"resourceGuid\":\"\",\r\n                         \"provisioningState\":\"\",\r\n                         \"id\":\"\",\r\n                         \"name\":null,\r\n                         \"type\":null,\r\n                         \"location\":\"\",\r\n                         \"tags\":{\r\n                         }\r\n                       },\r\n                       \"provisioningState\":\"\",\r\n                       \"id\":\"\"\r\n                     }\r\n                   ],\r\n                   \"dnsSettings\":{\r\n                     \"dnsServers\":[\r\n                       \"\"\r\n                     ],\r\n                     \"appliedDnsServers\":[\r\n                       \"\"\r\n                     ],\r\n                     \"internalDnsNameLabel\":\"\",\r\n                     \"internalFqdn\":\"\"\r\n                   },\r\n                   \"macAddress\":\"\",\r\n                   \"primary\":null,\r\n                   \"enableIPForwarding\":null,\r\n                   \"resourceGuid\":\"\",\r\n                   \"provisioningState\":\"\",\r\n                   \"id\":\"\",\r\n                   \"name\":null,\r\n                   \"type\":null,\r\n                   \"location\":\"\",\r\n                   \"tags\":{\r\n                   }\r\n                 }\r\n               ],\r\n               \"subnets\":[\r\n           null\r\n               ],\r\n               \"resourceGuid\":\"\",\r\n               \"provisioningState\":\"\",\r\n               \"id\":\"\",\r\n               \"name\":null,\r\n               \"type\":null,\r\n               \"location\":\"\",\r\n               \"tags\":{\r\n               }\r\n             },\r\n             \"routeTable\":{\r\n               \"etag\":\"\",\r\n               \"routes\":[\r\n                 {\r\n                   \"name\":\"\",\r\n                   \"etag\":\"\",\r\n                   \"addressPrefix\":\"\",\r\n                   \"nextHopType\":\"\",\r\n                   \"nextHopIpAddress\":\"\",\r\n                   \"provisioningState\":\"\",\r\n                   \"id\":\"\"\r\n                 }\r\n               ],\r\n               \"subnets\":[\r\n           null\r\n               ],\r\n               \"provisioningState\":\"\",\r\n               \"id\":\"\",\r\n               \"name\":null,\r\n               \"type\":null,\r\n               \"location\":\"\",\r\n               \"tags\":{\r\n               }\r\n             },\r\n             \"ipConfigurations\":[\r\n           null\r\n             ],\r\n             \"provisioningState\":\"\",\r\n             \"id\":\"\"\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "virtual-networks create-or-update-parameters subnet remove",
                  "usage": "[options]",
                  "filePath": "commands/arm/vnet/vnet._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--ip-configurations-index <ip-configurations-index>",
                      "required": -27,
                      "optional": 0,
                      "bool": true,
                      "long": "--ip-configurations-index",
                      "description": "Indexer: ip-configurations-index."
                    },
                    {
                      "flags": "--network-interfaces-index <network-interfaces-index>",
                      "required": -28,
                      "optional": 0,
                      "bool": true,
                      "long": "--network-interfaces-index",
                      "description": "Indexer: network-interfaces-index."
                    },
                    {
                      "flags": "--subnets-index <subnets-index>",
                      "required": -17,
                      "optional": 0,
                      "bool": true,
                      "long": "--subnets-index",
                      "description": "Indexer: subnets-index."
                    }
                  ]
                },
                {
                  "name": "add",
                  "description": "Add subnet in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"subnet\" : {\r\n             \"name\":\"\",\r\n             \"etag\":\"\",\r\n             \"addressPrefix\":\"\",\r\n             \"networkSecurityGroup\":{\r\n               \"etag\":\"\",\r\n               \"securityRules\":[\r\n                 {\r\n                   \"name\":\"\",\r\n                   \"etag\":\"\",\r\n                   \"description\":\"\",\r\n                   \"protocol\":\"\",\r\n                   \"sourcePortRange\":\"\",\r\n                   \"destinationPortRange\":\"\",\r\n                   \"sourceAddressPrefix\":\"\",\r\n                   \"destinationAddressPrefix\":\"\",\r\n                   \"access\":\"\",\r\n                   \"priority\":null,\r\n                   \"direction\":\"\",\r\n                   \"provisioningState\":\"\",\r\n                   \"id\":\"\"\r\n                 }\r\n               ],\r\n               \"defaultSecurityRules\":[\r\n           null\r\n               ],\r\n               \"networkInterfaces\":[\r\n                 {\r\n                   \"etag\":\"\",\r\n                   \"virtualMachine\":{\r\n                     \"id\":\"\"\r\n                   },\r\n                   \"networkSecurityGroup\":null,\r\n                   \"ipConfigurations\":[\r\n                     {\r\n                       \"name\":\"\",\r\n                       \"etag\":\"\",\r\n                       \"loadBalancerBackendAddressPools\":[\r\n                         {\r\n                           \"name\":\"\",\r\n                           \"etag\":\"\",\r\n                           \"backendIPConfigurations\":[\r\n           null\r\n                           ],\r\n                           \"loadBalancingRules\":[\r\n           null\r\n                           ],\r\n                           \"outboundNatRule\":null,\r\n                           \"provisioningState\":\"\",\r\n                           \"id\":\"\"\r\n                         }\r\n                       ],\r\n                       \"loadBalancerInboundNatRules\":[\r\n                         {\r\n                           \"name\":\"\",\r\n                           \"etag\":\"\",\r\n                           \"frontendIPConfiguration\":null,\r\n                           \"backendIPConfiguration\":null,\r\n                           \"protocol\":\"\",\r\n                           \"frontendPort\":null,\r\n                           \"backendPort\":null,\r\n                           \"idleTimeoutInMinutes\":null,\r\n                           \"enableFloatingIP\":null,\r\n                           \"provisioningState\":\"\",\r\n                           \"id\":\"\"\r\n                         }\r\n                       ],\r\n                       \"privateIPAddress\":\"\",\r\n                       \"privateIPAllocationMethod\":\"\",\r\n                       \"subnet\":null,\r\n                       \"publicIPAddress\":{\r\n                         \"etag\":\"\",\r\n                         \"publicIPAllocationMethod\":\"\",\r\n                         \"ipConfiguration\":{\r\n                           \"name\":\"\",\r\n                           \"etag\":\"\",\r\n                           \"privateIPAddress\":\"\",\r\n                           \"privateIPAllocationMethod\":\"\",\r\n                           \"subnet\":null,\r\n                           \"publicIPAddress\":null,\r\n                           \"provisioningState\":\"\",\r\n                           \"id\":\"\"\r\n                         },\r\n                         \"dnsSettings\":{\r\n                           \"domainNameLabel\":\"\",\r\n                           \"fqdn\":\"\",\r\n                           \"reverseFqdn\":\"\"\r\n                         },\r\n                         \"ipAddress\":\"\",\r\n                         \"idleTimeoutInMinutes\":null,\r\n                         \"resourceGuid\":\"\",\r\n                         \"provisioningState\":\"\",\r\n                         \"id\":\"\",\r\n                         \"name\":null,\r\n                         \"type\":null,\r\n                         \"location\":\"\",\r\n                         \"tags\":{\r\n                         }\r\n                       },\r\n                       \"provisioningState\":\"\",\r\n                       \"id\":\"\"\r\n                     }\r\n                   ],\r\n                   \"dnsSettings\":{\r\n                     \"dnsServers\":[\r\n                       \"\"\r\n                     ],\r\n                     \"appliedDnsServers\":[\r\n                       \"\"\r\n                     ],\r\n                     \"internalDnsNameLabel\":\"\",\r\n                     \"internalFqdn\":\"\"\r\n                   },\r\n                   \"macAddress\":\"\",\r\n                   \"primary\":null,\r\n                   \"enableIPForwarding\":null,\r\n                   \"resourceGuid\":\"\",\r\n                   \"provisioningState\":\"\",\r\n                   \"id\":\"\",\r\n                   \"name\":null,\r\n                   \"type\":null,\r\n                   \"location\":\"\",\r\n                   \"tags\":{\r\n                   }\r\n                 }\r\n               ],\r\n               \"subnets\":[\r\n           null\r\n               ],\r\n               \"resourceGuid\":\"\",\r\n               \"provisioningState\":\"\",\r\n               \"id\":\"\",\r\n               \"name\":null,\r\n               \"type\":null,\r\n               \"location\":\"\",\r\n               \"tags\":{\r\n               }\r\n             },\r\n             \"routeTable\":{\r\n               \"etag\":\"\",\r\n               \"routes\":[\r\n                 {\r\n                   \"name\":\"\",\r\n                   \"etag\":\"\",\r\n                   \"addressPrefix\":\"\",\r\n                   \"nextHopType\":\"\",\r\n                   \"nextHopIpAddress\":\"\",\r\n                   \"provisioningState\":\"\",\r\n                   \"id\":\"\"\r\n                 }\r\n               ],\r\n               \"subnets\":[\r\n           null\r\n               ],\r\n               \"provisioningState\":\"\",\r\n               \"id\":\"\",\r\n               \"name\":null,\r\n               \"type\":null,\r\n               \"location\":\"\",\r\n               \"tags\":{\r\n               }\r\n             },\r\n             \"ipConfigurations\":[\r\n           null\r\n             ],\r\n             \"provisioningState\":\"\",\r\n             \"id\":\"\"\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "virtual-networks create-or-update-parameters subnet add",
                  "usage": "[options]",
                  "filePath": "commands/arm/vnet/vnet._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--key <key>",
                      "required": -7,
                      "optional": 0,
                      "bool": true,
                      "long": "--key",
                      "description": "The JSON key."
                    },
                    {
                      "flags": "--value <value>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--value",
                      "description": "The JSON value."
                    },
                    {
                      "flags": "--parse",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--parse",
                      "description": "Parse the input value string to a JSON object."
                    }
                  ]
                }
              ],
              "categories": {}
            },
            "public-ip-address": {
              "name": "public-ip-address",
              "description": "Commands to set/remove/add public-ip-address of virtual-networks in create-or-update-parameters file.",
              "fullName": "virtual-networks create-or-update-parameters public-ip-address",
              "usage": "[options] [command]",
              "options": [],
              "commands": [
                {
                  "name": "set",
                  "description": "Set public-ip-address in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"publicIPAddress\" : {\r\n             \"etag\":\"\",\r\n             \"publicIPAllocationMethod\":\"\",\r\n             \"ipConfiguration\":{\r\n               \"name\":\"\",\r\n               \"etag\":\"\",\r\n               \"privateIPAddress\":\"\",\r\n               \"privateIPAllocationMethod\":\"\",\r\n               \"subnet\":{\r\n                 \"name\":\"\",\r\n                 \"etag\":\"\",\r\n                 \"addressPrefix\":\"\",\r\n                 \"networkSecurityGroup\":{\r\n                   \"etag\":\"\",\r\n                   \"securityRules\":[\r\n                     {\r\n                       \"name\":\"\",\r\n                       \"etag\":\"\",\r\n                       \"description\":\"\",\r\n                       \"protocol\":\"\",\r\n                       \"sourcePortRange\":\"\",\r\n                       \"destinationPortRange\":\"\",\r\n                       \"sourceAddressPrefix\":\"\",\r\n                       \"destinationAddressPrefix\":\"\",\r\n                       \"access\":\"\",\r\n                       \"priority\":null,\r\n                       \"direction\":\"\",\r\n                       \"provisioningState\":\"\",\r\n                       \"id\":\"\"\r\n                     }\r\n                   ],\r\n                   \"defaultSecurityRules\":[\r\n           null\r\n                   ],\r\n                   \"networkInterfaces\":[\r\n                     {\r\n                       \"etag\":\"\",\r\n                       \"virtualMachine\":{\r\n                         \"id\":\"\"\r\n                       },\r\n                       \"networkSecurityGroup\":null,\r\n                       \"ipConfigurations\":[\r\n                         {\r\n                           \"name\":\"\",\r\n                           \"etag\":\"\",\r\n                           \"loadBalancerBackendAddressPools\":[\r\n                             {\r\n                               \"name\":\"\",\r\n                               \"etag\":\"\",\r\n                               \"backendIPConfigurations\":[\r\n           null\r\n                               ],\r\n                               \"loadBalancingRules\":[\r\n           null\r\n                               ],\r\n                               \"outboundNatRule\":null,\r\n                               \"provisioningState\":\"\",\r\n                               \"id\":\"\"\r\n                             }\r\n                           ],\r\n                           \"loadBalancerInboundNatRules\":[\r\n                             {\r\n                               \"name\":\"\",\r\n                               \"etag\":\"\",\r\n                               \"frontendIPConfiguration\":null,\r\n                               \"backendIPConfiguration\":null,\r\n                               \"protocol\":\"\",\r\n                               \"frontendPort\":null,\r\n                               \"backendPort\":null,\r\n                               \"idleTimeoutInMinutes\":null,\r\n                               \"enableFloatingIP\":null,\r\n                               \"provisioningState\":\"\",\r\n                               \"id\":\"\"\r\n                             }\r\n                           ],\r\n                           \"privateIPAddress\":\"\",\r\n                           \"privateIPAllocationMethod\":\"\",\r\n                           \"subnet\":null,\r\n                           \"publicIPAddress\":null,\r\n                           \"provisioningState\":\"\",\r\n                           \"id\":\"\"\r\n                         }\r\n                       ],\r\n                       \"dnsSettings\":{\r\n                         \"dnsServers\":[\r\n                           \"\"\r\n                         ],\r\n                         \"appliedDnsServers\":[\r\n                           \"\"\r\n                         ],\r\n                         \"internalDnsNameLabel\":\"\",\r\n                         \"internalFqdn\":\"\"\r\n                       },\r\n                       \"macAddress\":\"\",\r\n                       \"primary\":null,\r\n                       \"enableIPForwarding\":null,\r\n                       \"resourceGuid\":\"\",\r\n                       \"provisioningState\":\"\",\r\n                       \"id\":\"\",\r\n                       \"name\":null,\r\n                       \"type\":null,\r\n                       \"location\":\"\",\r\n                       \"tags\":{\r\n                       }\r\n                     }\r\n                   ],\r\n                   \"subnets\":[\r\n           null\r\n                   ],\r\n                   \"resourceGuid\":\"\",\r\n                   \"provisioningState\":\"\",\r\n                   \"id\":\"\",\r\n                   \"name\":null,\r\n                   \"type\":null,\r\n                   \"location\":\"\",\r\n                   \"tags\":{\r\n                   }\r\n                 },\r\n                 \"routeTable\":{\r\n                   \"etag\":\"\",\r\n                   \"routes\":[\r\n                     {\r\n                       \"name\":\"\",\r\n                       \"etag\":\"\",\r\n                       \"addressPrefix\":\"\",\r\n                       \"nextHopType\":\"\",\r\n                       \"nextHopIpAddress\":\"\",\r\n                       \"provisioningState\":\"\",\r\n                       \"id\":\"\"\r\n                     }\r\n                   ],\r\n                   \"subnets\":[\r\n           null\r\n                   ],\r\n                   \"provisioningState\":\"\",\r\n                   \"id\":\"\",\r\n                   \"name\":null,\r\n                   \"type\":null,\r\n                   \"location\":\"\",\r\n                   \"tags\":{\r\n                   }\r\n                 },\r\n                 \"ipConfigurations\":[\r\n           null\r\n                 ],\r\n                 \"provisioningState\":\"\",\r\n                 \"id\":\"\"\r\n               },\r\n               \"publicIPAddress\":null,\r\n               \"provisioningState\":\"\",\r\n               \"id\":\"\"\r\n             },\r\n             \"dnsSettings\":{\r\n               \"domainNameLabel\":\"\",\r\n               \"fqdn\":\"\",\r\n               \"reverseFqdn\":\"\"\r\n             },\r\n             \"ipAddress\":\"\",\r\n             \"idleTimeoutInMinutes\":null,\r\n             \"resourceGuid\":\"\",\r\n             \"provisioningState\":\"\",\r\n             \"id\":\"\",\r\n             \"name\":null,\r\n             \"type\":null,\r\n             \"location\":\"\",\r\n             \"tags\":{\r\n             }\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "virtual-networks create-or-update-parameters public-ip-address set",
                  "usage": "[options]",
                  "filePath": "commands/arm/vnet/vnet._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--ip-configurations-index <ip-configurations-index>",
                      "required": -27,
                      "optional": 0,
                      "bool": true,
                      "long": "--ip-configurations-index",
                      "description": "Indexer: ip-configurations-index."
                    },
                    {
                      "flags": "--network-interfaces-index <network-interfaces-index>",
                      "required": -28,
                      "optional": 0,
                      "bool": true,
                      "long": "--network-interfaces-index",
                      "description": "Indexer: network-interfaces-index."
                    },
                    {
                      "flags": "--subnets-index <subnets-index>",
                      "required": -17,
                      "optional": 0,
                      "bool": true,
                      "long": "--subnets-index",
                      "description": "Indexer: subnets-index."
                    },
                    {
                      "flags": "--parse",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--parse",
                      "description": "Parse the input value string to a JSON object."
                    },
                    {
                      "flags": "--etag <etag>",
                      "required": -8,
                      "optional": 0,
                      "bool": true,
                      "long": "--etag",
                      "description": "Set the etag value."
                    },
                    {
                      "flags": "--public-ip-allocation-method <publicIPAllocationMethod>",
                      "required": -31,
                      "optional": 0,
                      "bool": true,
                      "long": "--public-ip-allocation-method",
                      "description": "Set the public-ip-allocation-method value."
                    },
                    {
                      "flags": "--ip-configuration <ipConfiguration>",
                      "required": -20,
                      "optional": 0,
                      "bool": true,
                      "long": "--ip-configuration",
                      "description": "Set the ip-configuration value."
                    },
                    {
                      "flags": "--dns-settings <dnsSettings>",
                      "required": -16,
                      "optional": 0,
                      "bool": true,
                      "long": "--dns-settings",
                      "description": "Set the dns-settings value."
                    },
                    {
                      "flags": "--ip-address <ipAddress>",
                      "required": -14,
                      "optional": 0,
                      "bool": true,
                      "long": "--ip-address",
                      "description": "Set the ip-address value."
                    },
                    {
                      "flags": "--idle-timeout-in-minutes <idleTimeoutInMinutes>",
                      "required": -27,
                      "optional": 0,
                      "bool": true,
                      "long": "--idle-timeout-in-minutes",
                      "description": "Set the idle-timeout-in-minutes value."
                    },
                    {
                      "flags": "--resource-guid <resourceGuid>",
                      "required": -17,
                      "optional": 0,
                      "bool": true,
                      "long": "--resource-guid",
                      "description": "Set the resource-guid value."
                    },
                    {
                      "flags": "--provisioning-state <provisioningState>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "long": "--provisioning-state",
                      "description": "Set the provisioning-state value."
                    },
                    {
                      "flags": "--id <id>",
                      "required": -6,
                      "optional": 0,
                      "bool": true,
                      "long": "--id",
                      "description": "Set the id value."
                    },
                    {
                      "flags": "--name <name>",
                      "required": -8,
                      "optional": 0,
                      "bool": true,
                      "long": "--name",
                      "description": "Set the name value."
                    },
                    {
                      "flags": "--type <type>",
                      "required": -8,
                      "optional": 0,
                      "bool": true,
                      "long": "--type",
                      "description": "Set the type value."
                    },
                    {
                      "flags": "--location <location>",
                      "required": -12,
                      "optional": 0,
                      "bool": true,
                      "long": "--location",
                      "description": "Set the location value."
                    },
                    {
                      "flags": "--tags <tags>",
                      "required": -8,
                      "optional": 0,
                      "bool": true,
                      "long": "--tags",
                      "description": "Set the tags value."
                    }
                  ]
                },
                {
                  "name": "remove",
                  "description": "Remove public-ip-address in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"publicIPAddress\" : {\r\n             \"etag\":\"\",\r\n             \"publicIPAllocationMethod\":\"\",\r\n             \"ipConfiguration\":{\r\n               \"name\":\"\",\r\n               \"etag\":\"\",\r\n               \"privateIPAddress\":\"\",\r\n               \"privateIPAllocationMethod\":\"\",\r\n               \"subnet\":{\r\n                 \"name\":\"\",\r\n                 \"etag\":\"\",\r\n                 \"addressPrefix\":\"\",\r\n                 \"networkSecurityGroup\":{\r\n                   \"etag\":\"\",\r\n                   \"securityRules\":[\r\n                     {\r\n                       \"name\":\"\",\r\n                       \"etag\":\"\",\r\n                       \"description\":\"\",\r\n                       \"protocol\":\"\",\r\n                       \"sourcePortRange\":\"\",\r\n                       \"destinationPortRange\":\"\",\r\n                       \"sourceAddressPrefix\":\"\",\r\n                       \"destinationAddressPrefix\":\"\",\r\n                       \"access\":\"\",\r\n                       \"priority\":null,\r\n                       \"direction\":\"\",\r\n                       \"provisioningState\":\"\",\r\n                       \"id\":\"\"\r\n                     }\r\n                   ],\r\n                   \"defaultSecurityRules\":[\r\n           null\r\n                   ],\r\n                   \"networkInterfaces\":[\r\n                     {\r\n                       \"etag\":\"\",\r\n                       \"virtualMachine\":{\r\n                         \"id\":\"\"\r\n                       },\r\n                       \"networkSecurityGroup\":null,\r\n                       \"ipConfigurations\":[\r\n                         {\r\n                           \"name\":\"\",\r\n                           \"etag\":\"\",\r\n                           \"loadBalancerBackendAddressPools\":[\r\n                             {\r\n                               \"name\":\"\",\r\n                               \"etag\":\"\",\r\n                               \"backendIPConfigurations\":[\r\n           null\r\n                               ],\r\n                               \"loadBalancingRules\":[\r\n           null\r\n                               ],\r\n                               \"outboundNatRule\":null,\r\n                               \"provisioningState\":\"\",\r\n                               \"id\":\"\"\r\n                             }\r\n                           ],\r\n                           \"loadBalancerInboundNatRules\":[\r\n                             {\r\n                               \"name\":\"\",\r\n                               \"etag\":\"\",\r\n                               \"frontendIPConfiguration\":null,\r\n                               \"backendIPConfiguration\":null,\r\n                               \"protocol\":\"\",\r\n                               \"frontendPort\":null,\r\n                               \"backendPort\":null,\r\n                               \"idleTimeoutInMinutes\":null,\r\n                               \"enableFloatingIP\":null,\r\n                               \"provisioningState\":\"\",\r\n                               \"id\":\"\"\r\n                             }\r\n                           ],\r\n                           \"privateIPAddress\":\"\",\r\n                           \"privateIPAllocationMethod\":\"\",\r\n                           \"subnet\":null,\r\n                           \"publicIPAddress\":null,\r\n                           \"provisioningState\":\"\",\r\n                           \"id\":\"\"\r\n                         }\r\n                       ],\r\n                       \"dnsSettings\":{\r\n                         \"dnsServers\":[\r\n                           \"\"\r\n                         ],\r\n                         \"appliedDnsServers\":[\r\n                           \"\"\r\n                         ],\r\n                         \"internalDnsNameLabel\":\"\",\r\n                         \"internalFqdn\":\"\"\r\n                       },\r\n                       \"macAddress\":\"\",\r\n                       \"primary\":null,\r\n                       \"enableIPForwarding\":null,\r\n                       \"resourceGuid\":\"\",\r\n                       \"provisioningState\":\"\",\r\n                       \"id\":\"\",\r\n                       \"name\":null,\r\n                       \"type\":null,\r\n                       \"location\":\"\",\r\n                       \"tags\":{\r\n                       }\r\n                     }\r\n                   ],\r\n                   \"subnets\":[\r\n           null\r\n                   ],\r\n                   \"resourceGuid\":\"\",\r\n                   \"provisioningState\":\"\",\r\n                   \"id\":\"\",\r\n                   \"name\":null,\r\n                   \"type\":null,\r\n                   \"location\":\"\",\r\n                   \"tags\":{\r\n                   }\r\n                 },\r\n                 \"routeTable\":{\r\n                   \"etag\":\"\",\r\n                   \"routes\":[\r\n                     {\r\n                       \"name\":\"\",\r\n                       \"etag\":\"\",\r\n                       \"addressPrefix\":\"\",\r\n                       \"nextHopType\":\"\",\r\n                       \"nextHopIpAddress\":\"\",\r\n                       \"provisioningState\":\"\",\r\n                       \"id\":\"\"\r\n                     }\r\n                   ],\r\n                   \"subnets\":[\r\n           null\r\n                   ],\r\n                   \"provisioningState\":\"\",\r\n                   \"id\":\"\",\r\n                   \"name\":null,\r\n                   \"type\":null,\r\n                   \"location\":\"\",\r\n                   \"tags\":{\r\n                   }\r\n                 },\r\n                 \"ipConfigurations\":[\r\n           null\r\n                 ],\r\n                 \"provisioningState\":\"\",\r\n                 \"id\":\"\"\r\n               },\r\n               \"publicIPAddress\":null,\r\n               \"provisioningState\":\"\",\r\n               \"id\":\"\"\r\n             },\r\n             \"dnsSettings\":{\r\n               \"domainNameLabel\":\"\",\r\n               \"fqdn\":\"\",\r\n               \"reverseFqdn\":\"\"\r\n             },\r\n             \"ipAddress\":\"\",\r\n             \"idleTimeoutInMinutes\":null,\r\n             \"resourceGuid\":\"\",\r\n             \"provisioningState\":\"\",\r\n             \"id\":\"\",\r\n             \"name\":null,\r\n             \"type\":null,\r\n             \"location\":\"\",\r\n             \"tags\":{\r\n             }\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "virtual-networks create-or-update-parameters public-ip-address remove",
                  "usage": "[options]",
                  "filePath": "commands/arm/vnet/vnet._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--ip-configurations-index <ip-configurations-index>",
                      "required": -27,
                      "optional": 0,
                      "bool": true,
                      "long": "--ip-configurations-index",
                      "description": "Indexer: ip-configurations-index."
                    },
                    {
                      "flags": "--network-interfaces-index <network-interfaces-index>",
                      "required": -28,
                      "optional": 0,
                      "bool": true,
                      "long": "--network-interfaces-index",
                      "description": "Indexer: network-interfaces-index."
                    },
                    {
                      "flags": "--subnets-index <subnets-index>",
                      "required": -17,
                      "optional": 0,
                      "bool": true,
                      "long": "--subnets-index",
                      "description": "Indexer: subnets-index."
                    }
                  ]
                },
                {
                  "name": "add",
                  "description": "Add public-ip-address in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"publicIPAddress\" : {\r\n             \"etag\":\"\",\r\n             \"publicIPAllocationMethod\":\"\",\r\n             \"ipConfiguration\":{\r\n               \"name\":\"\",\r\n               \"etag\":\"\",\r\n               \"privateIPAddress\":\"\",\r\n               \"privateIPAllocationMethod\":\"\",\r\n               \"subnet\":{\r\n                 \"name\":\"\",\r\n                 \"etag\":\"\",\r\n                 \"addressPrefix\":\"\",\r\n                 \"networkSecurityGroup\":{\r\n                   \"etag\":\"\",\r\n                   \"securityRules\":[\r\n                     {\r\n                       \"name\":\"\",\r\n                       \"etag\":\"\",\r\n                       \"description\":\"\",\r\n                       \"protocol\":\"\",\r\n                       \"sourcePortRange\":\"\",\r\n                       \"destinationPortRange\":\"\",\r\n                       \"sourceAddressPrefix\":\"\",\r\n                       \"destinationAddressPrefix\":\"\",\r\n                       \"access\":\"\",\r\n                       \"priority\":null,\r\n                       \"direction\":\"\",\r\n                       \"provisioningState\":\"\",\r\n                       \"id\":\"\"\r\n                     }\r\n                   ],\r\n                   \"defaultSecurityRules\":[\r\n           null\r\n                   ],\r\n                   \"networkInterfaces\":[\r\n                     {\r\n                       \"etag\":\"\",\r\n                       \"virtualMachine\":{\r\n                         \"id\":\"\"\r\n                       },\r\n                       \"networkSecurityGroup\":null,\r\n                       \"ipConfigurations\":[\r\n                         {\r\n                           \"name\":\"\",\r\n                           \"etag\":\"\",\r\n                           \"loadBalancerBackendAddressPools\":[\r\n                             {\r\n                               \"name\":\"\",\r\n                               \"etag\":\"\",\r\n                               \"backendIPConfigurations\":[\r\n           null\r\n                               ],\r\n                               \"loadBalancingRules\":[\r\n           null\r\n                               ],\r\n                               \"outboundNatRule\":null,\r\n                               \"provisioningState\":\"\",\r\n                               \"id\":\"\"\r\n                             }\r\n                           ],\r\n                           \"loadBalancerInboundNatRules\":[\r\n                             {\r\n                               \"name\":\"\",\r\n                               \"etag\":\"\",\r\n                               \"frontendIPConfiguration\":null,\r\n                               \"backendIPConfiguration\":null,\r\n                               \"protocol\":\"\",\r\n                               \"frontendPort\":null,\r\n                               \"backendPort\":null,\r\n                               \"idleTimeoutInMinutes\":null,\r\n                               \"enableFloatingIP\":null,\r\n                               \"provisioningState\":\"\",\r\n                               \"id\":\"\"\r\n                             }\r\n                           ],\r\n                           \"privateIPAddress\":\"\",\r\n                           \"privateIPAllocationMethod\":\"\",\r\n                           \"subnet\":null,\r\n                           \"publicIPAddress\":null,\r\n                           \"provisioningState\":\"\",\r\n                           \"id\":\"\"\r\n                         }\r\n                       ],\r\n                       \"dnsSettings\":{\r\n                         \"dnsServers\":[\r\n                           \"\"\r\n                         ],\r\n                         \"appliedDnsServers\":[\r\n                           \"\"\r\n                         ],\r\n                         \"internalDnsNameLabel\":\"\",\r\n                         \"internalFqdn\":\"\"\r\n                       },\r\n                       \"macAddress\":\"\",\r\n                       \"primary\":null,\r\n                       \"enableIPForwarding\":null,\r\n                       \"resourceGuid\":\"\",\r\n                       \"provisioningState\":\"\",\r\n                       \"id\":\"\",\r\n                       \"name\":null,\r\n                       \"type\":null,\r\n                       \"location\":\"\",\r\n                       \"tags\":{\r\n                       }\r\n                     }\r\n                   ],\r\n                   \"subnets\":[\r\n           null\r\n                   ],\r\n                   \"resourceGuid\":\"\",\r\n                   \"provisioningState\":\"\",\r\n                   \"id\":\"\",\r\n                   \"name\":null,\r\n                   \"type\":null,\r\n                   \"location\":\"\",\r\n                   \"tags\":{\r\n                   }\r\n                 },\r\n                 \"routeTable\":{\r\n                   \"etag\":\"\",\r\n                   \"routes\":[\r\n                     {\r\n                       \"name\":\"\",\r\n                       \"etag\":\"\",\r\n                       \"addressPrefix\":\"\",\r\n                       \"nextHopType\":\"\",\r\n                       \"nextHopIpAddress\":\"\",\r\n                       \"provisioningState\":\"\",\r\n                       \"id\":\"\"\r\n                     }\r\n                   ],\r\n                   \"subnets\":[\r\n           null\r\n                   ],\r\n                   \"provisioningState\":\"\",\r\n                   \"id\":\"\",\r\n                   \"name\":null,\r\n                   \"type\":null,\r\n                   \"location\":\"\",\r\n                   \"tags\":{\r\n                   }\r\n                 },\r\n                 \"ipConfigurations\":[\r\n           null\r\n                 ],\r\n                 \"provisioningState\":\"\",\r\n                 \"id\":\"\"\r\n               },\r\n               \"publicIPAddress\":null,\r\n               \"provisioningState\":\"\",\r\n               \"id\":\"\"\r\n             },\r\n             \"dnsSettings\":{\r\n               \"domainNameLabel\":\"\",\r\n               \"fqdn\":\"\",\r\n               \"reverseFqdn\":\"\"\r\n             },\r\n             \"ipAddress\":\"\",\r\n             \"idleTimeoutInMinutes\":null,\r\n             \"resourceGuid\":\"\",\r\n             \"provisioningState\":\"\",\r\n             \"id\":\"\",\r\n             \"name\":null,\r\n             \"type\":null,\r\n             \"location\":\"\",\r\n             \"tags\":{\r\n             }\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "virtual-networks create-or-update-parameters public-ip-address add",
                  "usage": "[options]",
                  "filePath": "commands/arm/vnet/vnet._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--key <key>",
                      "required": -7,
                      "optional": 0,
                      "bool": true,
                      "long": "--key",
                      "description": "The JSON key."
                    },
                    {
                      "flags": "--value <value>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--value",
                      "description": "The JSON value."
                    },
                    {
                      "flags": "--parse",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--parse",
                      "description": "Parse the input value string to a JSON object."
                    }
                  ]
                }
              ],
              "categories": {}
            },
            "ip-configuration": {
              "name": "ip-configuration",
              "description": "Commands to set/remove/add ip-configuration of virtual-networks in create-or-update-parameters file.",
              "fullName": "virtual-networks create-or-update-parameters ip-configuration",
              "usage": "[options] [command]",
              "options": [],
              "commands": [
                {
                  "name": "set",
                  "description": "Set ip-configuration in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"ipConfiguration\" : {\r\n             \"name\":\"\",\r\n             \"etag\":\"\",\r\n             \"privateIPAddress\":\"\",\r\n             \"privateIPAllocationMethod\":\"\",\r\n             \"subnet\":{\r\n               \"name\":\"\",\r\n               \"etag\":\"\",\r\n               \"addressPrefix\":\"\",\r\n               \"networkSecurityGroup\":{\r\n                 \"etag\":\"\",\r\n                 \"securityRules\":[\r\n                   {\r\n                     \"name\":\"\",\r\n                     \"etag\":\"\",\r\n                     \"description\":\"\",\r\n                     \"protocol\":\"\",\r\n                     \"sourcePortRange\":\"\",\r\n                     \"destinationPortRange\":\"\",\r\n                     \"sourceAddressPrefix\":\"\",\r\n                     \"destinationAddressPrefix\":\"\",\r\n                     \"access\":\"\",\r\n                     \"priority\":null,\r\n                     \"direction\":\"\",\r\n                     \"provisioningState\":\"\",\r\n                     \"id\":\"\"\r\n                   }\r\n                 ],\r\n                 \"defaultSecurityRules\":[\r\n           null\r\n                 ],\r\n                 \"networkInterfaces\":[\r\n                   {\r\n                     \"etag\":\"\",\r\n                     \"virtualMachine\":{\r\n                       \"id\":\"\"\r\n                     },\r\n                     \"networkSecurityGroup\":null,\r\n                     \"ipConfigurations\":[\r\n                       {\r\n                         \"name\":\"\",\r\n                         \"etag\":\"\",\r\n                         \"loadBalancerBackendAddressPools\":[\r\n                           {\r\n                             \"name\":\"\",\r\n                             \"etag\":\"\",\r\n                             \"backendIPConfigurations\":[\r\n           null\r\n                             ],\r\n                             \"loadBalancingRules\":[\r\n           null\r\n                             ],\r\n                             \"outboundNatRule\":null,\r\n                             \"provisioningState\":\"\",\r\n                             \"id\":\"\"\r\n                           }\r\n                         ],\r\n                         \"loadBalancerInboundNatRules\":[\r\n                           {\r\n                             \"name\":\"\",\r\n                             \"etag\":\"\",\r\n                             \"frontendIPConfiguration\":null,\r\n                             \"backendIPConfiguration\":null,\r\n                             \"protocol\":\"\",\r\n                             \"frontendPort\":null,\r\n                             \"backendPort\":null,\r\n                             \"idleTimeoutInMinutes\":null,\r\n                             \"enableFloatingIP\":null,\r\n                             \"provisioningState\":\"\",\r\n                             \"id\":\"\"\r\n                           }\r\n                         ],\r\n                         \"privateIPAddress\":\"\",\r\n                         \"privateIPAllocationMethod\":\"\",\r\n                         \"subnet\":null,\r\n                         \"publicIPAddress\":{\r\n                           \"etag\":\"\",\r\n                           \"publicIPAllocationMethod\":\"\",\r\n                           \"ipConfiguration\":null,\r\n                           \"dnsSettings\":{\r\n                             \"domainNameLabel\":\"\",\r\n                             \"fqdn\":\"\",\r\n                             \"reverseFqdn\":\"\"\r\n                           },\r\n                           \"ipAddress\":\"\",\r\n                           \"idleTimeoutInMinutes\":null,\r\n                           \"resourceGuid\":\"\",\r\n                           \"provisioningState\":\"\",\r\n                           \"id\":\"\",\r\n                           \"name\":null,\r\n                           \"type\":null,\r\n                           \"location\":\"\",\r\n                           \"tags\":{\r\n                           }\r\n                         },\r\n                         \"provisioningState\":\"\",\r\n                         \"id\":\"\"\r\n                       }\r\n                     ],\r\n                     \"dnsSettings\":{\r\n                       \"dnsServers\":[\r\n                         \"\"\r\n                       ],\r\n                       \"appliedDnsServers\":[\r\n                         \"\"\r\n                       ],\r\n                       \"internalDnsNameLabel\":\"\",\r\n                       \"internalFqdn\":\"\"\r\n                     },\r\n                     \"macAddress\":\"\",\r\n                     \"primary\":null,\r\n                     \"enableIPForwarding\":null,\r\n                     \"resourceGuid\":\"\",\r\n                     \"provisioningState\":\"\",\r\n                     \"id\":\"\",\r\n                     \"name\":null,\r\n                     \"type\":null,\r\n                     \"location\":\"\",\r\n                     \"tags\":{\r\n                     }\r\n                   }\r\n                 ],\r\n                 \"subnets\":[\r\n           null\r\n                 ],\r\n                 \"resourceGuid\":\"\",\r\n                 \"provisioningState\":\"\",\r\n                 \"id\":\"\",\r\n                 \"name\":null,\r\n                 \"type\":null,\r\n                 \"location\":\"\",\r\n                 \"tags\":{\r\n                 }\r\n               },\r\n               \"routeTable\":{\r\n                 \"etag\":\"\",\r\n                 \"routes\":[\r\n                   {\r\n                     \"name\":\"\",\r\n                     \"etag\":\"\",\r\n                     \"addressPrefix\":\"\",\r\n                     \"nextHopType\":\"\",\r\n                     \"nextHopIpAddress\":\"\",\r\n                     \"provisioningState\":\"\",\r\n                     \"id\":\"\"\r\n                   }\r\n                 ],\r\n                 \"subnets\":[\r\n           null\r\n                 ],\r\n                 \"provisioningState\":\"\",\r\n                 \"id\":\"\",\r\n                 \"name\":null,\r\n                 \"type\":null,\r\n                 \"location\":\"\",\r\n                 \"tags\":{\r\n                 }\r\n               },\r\n               \"ipConfigurations\":[\r\n           null\r\n               ],\r\n               \"provisioningState\":\"\",\r\n               \"id\":\"\"\r\n             },\r\n             \"publicIPAddress\":null,\r\n             \"provisioningState\":\"\",\r\n             \"id\":\"\"\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "virtual-networks create-or-update-parameters ip-configuration set",
                  "usage": "[options]",
                  "filePath": "commands/arm/vnet/vnet._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--ip-configurations-index <ip-configurations-index>",
                      "required": -27,
                      "optional": 0,
                      "bool": true,
                      "long": "--ip-configurations-index",
                      "description": "Indexer: ip-configurations-index."
                    },
                    {
                      "flags": "--network-interfaces-index <network-interfaces-index>",
                      "required": -28,
                      "optional": 0,
                      "bool": true,
                      "long": "--network-interfaces-index",
                      "description": "Indexer: network-interfaces-index."
                    },
                    {
                      "flags": "--subnets-index <subnets-index>",
                      "required": -17,
                      "optional": 0,
                      "bool": true,
                      "long": "--subnets-index",
                      "description": "Indexer: subnets-index."
                    },
                    {
                      "flags": "--parse",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--parse",
                      "description": "Parse the input value string to a JSON object."
                    },
                    {
                      "flags": "--name <name>",
                      "required": -8,
                      "optional": 0,
                      "bool": true,
                      "long": "--name",
                      "description": "Set the name value."
                    },
                    {
                      "flags": "--etag <etag>",
                      "required": -8,
                      "optional": 0,
                      "bool": true,
                      "long": "--etag",
                      "description": "Set the etag value."
                    },
                    {
                      "flags": "--private-ip-address <privateIPAddress>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "long": "--private-ip-address",
                      "description": "Set the private-ip-address value."
                    },
                    {
                      "flags": "--private-ip-allocation-method <privateIPAllocationMethod>",
                      "required": -32,
                      "optional": 0,
                      "bool": true,
                      "long": "--private-ip-allocation-method",
                      "description": "Set the private-ip-allocation-method value."
                    },
                    {
                      "flags": "--subnet <subnet>",
                      "required": -10,
                      "optional": 0,
                      "bool": true,
                      "long": "--subnet",
                      "description": "Set the subnet value."
                    },
                    {
                      "flags": "--public-ip-address <publicIPAddress>",
                      "required": -21,
                      "optional": 0,
                      "bool": true,
                      "long": "--public-ip-address",
                      "description": "Set the public-ip-address value."
                    },
                    {
                      "flags": "--provisioning-state <provisioningState>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "long": "--provisioning-state",
                      "description": "Set the provisioning-state value."
                    },
                    {
                      "flags": "--id <id>",
                      "required": -6,
                      "optional": 0,
                      "bool": true,
                      "long": "--id",
                      "description": "Set the id value."
                    }
                  ]
                },
                {
                  "name": "remove",
                  "description": "Remove ip-configuration in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"ipConfiguration\" : {\r\n             \"name\":\"\",\r\n             \"etag\":\"\",\r\n             \"privateIPAddress\":\"\",\r\n             \"privateIPAllocationMethod\":\"\",\r\n             \"subnet\":{\r\n               \"name\":\"\",\r\n               \"etag\":\"\",\r\n               \"addressPrefix\":\"\",\r\n               \"networkSecurityGroup\":{\r\n                 \"etag\":\"\",\r\n                 \"securityRules\":[\r\n                   {\r\n                     \"name\":\"\",\r\n                     \"etag\":\"\",\r\n                     \"description\":\"\",\r\n                     \"protocol\":\"\",\r\n                     \"sourcePortRange\":\"\",\r\n                     \"destinationPortRange\":\"\",\r\n                     \"sourceAddressPrefix\":\"\",\r\n                     \"destinationAddressPrefix\":\"\",\r\n                     \"access\":\"\",\r\n                     \"priority\":null,\r\n                     \"direction\":\"\",\r\n                     \"provisioningState\":\"\",\r\n                     \"id\":\"\"\r\n                   }\r\n                 ],\r\n                 \"defaultSecurityRules\":[\r\n           null\r\n                 ],\r\n                 \"networkInterfaces\":[\r\n                   {\r\n                     \"etag\":\"\",\r\n                     \"virtualMachine\":{\r\n                       \"id\":\"\"\r\n                     },\r\n                     \"networkSecurityGroup\":null,\r\n                     \"ipConfigurations\":[\r\n                       {\r\n                         \"name\":\"\",\r\n                         \"etag\":\"\",\r\n                         \"loadBalancerBackendAddressPools\":[\r\n                           {\r\n                             \"name\":\"\",\r\n                             \"etag\":\"\",\r\n                             \"backendIPConfigurations\":[\r\n           null\r\n                             ],\r\n                             \"loadBalancingRules\":[\r\n           null\r\n                             ],\r\n                             \"outboundNatRule\":null,\r\n                             \"provisioningState\":\"\",\r\n                             \"id\":\"\"\r\n                           }\r\n                         ],\r\n                         \"loadBalancerInboundNatRules\":[\r\n                           {\r\n                             \"name\":\"\",\r\n                             \"etag\":\"\",\r\n                             \"frontendIPConfiguration\":null,\r\n                             \"backendIPConfiguration\":null,\r\n                             \"protocol\":\"\",\r\n                             \"frontendPort\":null,\r\n                             \"backendPort\":null,\r\n                             \"idleTimeoutInMinutes\":null,\r\n                             \"enableFloatingIP\":null,\r\n                             \"provisioningState\":\"\",\r\n                             \"id\":\"\"\r\n                           }\r\n                         ],\r\n                         \"privateIPAddress\":\"\",\r\n                         \"privateIPAllocationMethod\":\"\",\r\n                         \"subnet\":null,\r\n                         \"publicIPAddress\":{\r\n                           \"etag\":\"\",\r\n                           \"publicIPAllocationMethod\":\"\",\r\n                           \"ipConfiguration\":null,\r\n                           \"dnsSettings\":{\r\n                             \"domainNameLabel\":\"\",\r\n                             \"fqdn\":\"\",\r\n                             \"reverseFqdn\":\"\"\r\n                           },\r\n                           \"ipAddress\":\"\",\r\n                           \"idleTimeoutInMinutes\":null,\r\n                           \"resourceGuid\":\"\",\r\n                           \"provisioningState\":\"\",\r\n                           \"id\":\"\",\r\n                           \"name\":null,\r\n                           \"type\":null,\r\n                           \"location\":\"\",\r\n                           \"tags\":{\r\n                           }\r\n                         },\r\n                         \"provisioningState\":\"\",\r\n                         \"id\":\"\"\r\n                       }\r\n                     ],\r\n                     \"dnsSettings\":{\r\n                       \"dnsServers\":[\r\n                         \"\"\r\n                       ],\r\n                       \"appliedDnsServers\":[\r\n                         \"\"\r\n                       ],\r\n                       \"internalDnsNameLabel\":\"\",\r\n                       \"internalFqdn\":\"\"\r\n                     },\r\n                     \"macAddress\":\"\",\r\n                     \"primary\":null,\r\n                     \"enableIPForwarding\":null,\r\n                     \"resourceGuid\":\"\",\r\n                     \"provisioningState\":\"\",\r\n                     \"id\":\"\",\r\n                     \"name\":null,\r\n                     \"type\":null,\r\n                     \"location\":\"\",\r\n                     \"tags\":{\r\n                     }\r\n                   }\r\n                 ],\r\n                 \"subnets\":[\r\n           null\r\n                 ],\r\n                 \"resourceGuid\":\"\",\r\n                 \"provisioningState\":\"\",\r\n                 \"id\":\"\",\r\n                 \"name\":null,\r\n                 \"type\":null,\r\n                 \"location\":\"\",\r\n                 \"tags\":{\r\n                 }\r\n               },\r\n               \"routeTable\":{\r\n                 \"etag\":\"\",\r\n                 \"routes\":[\r\n                   {\r\n                     \"name\":\"\",\r\n                     \"etag\":\"\",\r\n                     \"addressPrefix\":\"\",\r\n                     \"nextHopType\":\"\",\r\n                     \"nextHopIpAddress\":\"\",\r\n                     \"provisioningState\":\"\",\r\n                     \"id\":\"\"\r\n                   }\r\n                 ],\r\n                 \"subnets\":[\r\n           null\r\n                 ],\r\n                 \"provisioningState\":\"\",\r\n                 \"id\":\"\",\r\n                 \"name\":null,\r\n                 \"type\":null,\r\n                 \"location\":\"\",\r\n                 \"tags\":{\r\n                 }\r\n               },\r\n               \"ipConfigurations\":[\r\n           null\r\n               ],\r\n               \"provisioningState\":\"\",\r\n               \"id\":\"\"\r\n             },\r\n             \"publicIPAddress\":null,\r\n             \"provisioningState\":\"\",\r\n             \"id\":\"\"\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "virtual-networks create-or-update-parameters ip-configuration remove",
                  "usage": "[options]",
                  "filePath": "commands/arm/vnet/vnet._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--ip-configurations-index <ip-configurations-index>",
                      "required": -27,
                      "optional": 0,
                      "bool": true,
                      "long": "--ip-configurations-index",
                      "description": "Indexer: ip-configurations-index."
                    },
                    {
                      "flags": "--network-interfaces-index <network-interfaces-index>",
                      "required": -28,
                      "optional": 0,
                      "bool": true,
                      "long": "--network-interfaces-index",
                      "description": "Indexer: network-interfaces-index."
                    },
                    {
                      "flags": "--subnets-index <subnets-index>",
                      "required": -17,
                      "optional": 0,
                      "bool": true,
                      "long": "--subnets-index",
                      "description": "Indexer: subnets-index."
                    },
                    {
                      "flags": "--name",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--name",
                      "description": "Remove the name value."
                    },
                    {
                      "flags": "--etag",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--etag",
                      "description": "Remove the etag value."
                    },
                    {
                      "flags": "--private-ip-address",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--private-ip-address",
                      "description": "Remove the private-ip-address value."
                    },
                    {
                      "flags": "--private-ip-allocation-method",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--private-ip-allocation-method",
                      "description": "Remove the private-ip-allocation-method value."
                    },
                    {
                      "flags": "--subnet",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--subnet",
                      "description": "Remove the subnet value."
                    },
                    {
                      "flags": "--public-ip-address",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--public-ip-address",
                      "description": "Remove the public-ip-address value."
                    },
                    {
                      "flags": "--provisioning-state",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--provisioning-state",
                      "description": "Remove the provisioning-state value."
                    },
                    {
                      "flags": "--id",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--id",
                      "description": "Remove the id value."
                    }
                  ]
                },
                {
                  "name": "add",
                  "description": "Add ip-configuration in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"ipConfiguration\" : {\r\n             \"name\":\"\",\r\n             \"etag\":\"\",\r\n             \"privateIPAddress\":\"\",\r\n             \"privateIPAllocationMethod\":\"\",\r\n             \"subnet\":{\r\n               \"name\":\"\",\r\n               \"etag\":\"\",\r\n               \"addressPrefix\":\"\",\r\n               \"networkSecurityGroup\":{\r\n                 \"etag\":\"\",\r\n                 \"securityRules\":[\r\n                   {\r\n                     \"name\":\"\",\r\n                     \"etag\":\"\",\r\n                     \"description\":\"\",\r\n                     \"protocol\":\"\",\r\n                     \"sourcePortRange\":\"\",\r\n                     \"destinationPortRange\":\"\",\r\n                     \"sourceAddressPrefix\":\"\",\r\n                     \"destinationAddressPrefix\":\"\",\r\n                     \"access\":\"\",\r\n                     \"priority\":null,\r\n                     \"direction\":\"\",\r\n                     \"provisioningState\":\"\",\r\n                     \"id\":\"\"\r\n                   }\r\n                 ],\r\n                 \"defaultSecurityRules\":[\r\n           null\r\n                 ],\r\n                 \"networkInterfaces\":[\r\n                   {\r\n                     \"etag\":\"\",\r\n                     \"virtualMachine\":{\r\n                       \"id\":\"\"\r\n                     },\r\n                     \"networkSecurityGroup\":null,\r\n                     \"ipConfigurations\":[\r\n                       {\r\n                         \"name\":\"\",\r\n                         \"etag\":\"\",\r\n                         \"loadBalancerBackendAddressPools\":[\r\n                           {\r\n                             \"name\":\"\",\r\n                             \"etag\":\"\",\r\n                             \"backendIPConfigurations\":[\r\n           null\r\n                             ],\r\n                             \"loadBalancingRules\":[\r\n           null\r\n                             ],\r\n                             \"outboundNatRule\":null,\r\n                             \"provisioningState\":\"\",\r\n                             \"id\":\"\"\r\n                           }\r\n                         ],\r\n                         \"loadBalancerInboundNatRules\":[\r\n                           {\r\n                             \"name\":\"\",\r\n                             \"etag\":\"\",\r\n                             \"frontendIPConfiguration\":null,\r\n                             \"backendIPConfiguration\":null,\r\n                             \"protocol\":\"\",\r\n                             \"frontendPort\":null,\r\n                             \"backendPort\":null,\r\n                             \"idleTimeoutInMinutes\":null,\r\n                             \"enableFloatingIP\":null,\r\n                             \"provisioningState\":\"\",\r\n                             \"id\":\"\"\r\n                           }\r\n                         ],\r\n                         \"privateIPAddress\":\"\",\r\n                         \"privateIPAllocationMethod\":\"\",\r\n                         \"subnet\":null,\r\n                         \"publicIPAddress\":{\r\n                           \"etag\":\"\",\r\n                           \"publicIPAllocationMethod\":\"\",\r\n                           \"ipConfiguration\":null,\r\n                           \"dnsSettings\":{\r\n                             \"domainNameLabel\":\"\",\r\n                             \"fqdn\":\"\",\r\n                             \"reverseFqdn\":\"\"\r\n                           },\r\n                           \"ipAddress\":\"\",\r\n                           \"idleTimeoutInMinutes\":null,\r\n                           \"resourceGuid\":\"\",\r\n                           \"provisioningState\":\"\",\r\n                           \"id\":\"\",\r\n                           \"name\":null,\r\n                           \"type\":null,\r\n                           \"location\":\"\",\r\n                           \"tags\":{\r\n                           }\r\n                         },\r\n                         \"provisioningState\":\"\",\r\n                         \"id\":\"\"\r\n                       }\r\n                     ],\r\n                     \"dnsSettings\":{\r\n                       \"dnsServers\":[\r\n                         \"\"\r\n                       ],\r\n                       \"appliedDnsServers\":[\r\n                         \"\"\r\n                       ],\r\n                       \"internalDnsNameLabel\":\"\",\r\n                       \"internalFqdn\":\"\"\r\n                     },\r\n                     \"macAddress\":\"\",\r\n                     \"primary\":null,\r\n                     \"enableIPForwarding\":null,\r\n                     \"resourceGuid\":\"\",\r\n                     \"provisioningState\":\"\",\r\n                     \"id\":\"\",\r\n                     \"name\":null,\r\n                     \"type\":null,\r\n                     \"location\":\"\",\r\n                     \"tags\":{\r\n                     }\r\n                   }\r\n                 ],\r\n                 \"subnets\":[\r\n           null\r\n                 ],\r\n                 \"resourceGuid\":\"\",\r\n                 \"provisioningState\":\"\",\r\n                 \"id\":\"\",\r\n                 \"name\":null,\r\n                 \"type\":null,\r\n                 \"location\":\"\",\r\n                 \"tags\":{\r\n                 }\r\n               },\r\n               \"routeTable\":{\r\n                 \"etag\":\"\",\r\n                 \"routes\":[\r\n                   {\r\n                     \"name\":\"\",\r\n                     \"etag\":\"\",\r\n                     \"addressPrefix\":\"\",\r\n                     \"nextHopType\":\"\",\r\n                     \"nextHopIpAddress\":\"\",\r\n                     \"provisioningState\":\"\",\r\n                     \"id\":\"\"\r\n                   }\r\n                 ],\r\n                 \"subnets\":[\r\n           null\r\n                 ],\r\n                 \"provisioningState\":\"\",\r\n                 \"id\":\"\",\r\n                 \"name\":null,\r\n                 \"type\":null,\r\n                 \"location\":\"\",\r\n                 \"tags\":{\r\n                 }\r\n               },\r\n               \"ipConfigurations\":[\r\n           null\r\n               ],\r\n               \"provisioningState\":\"\",\r\n               \"id\":\"\"\r\n             },\r\n             \"publicIPAddress\":null,\r\n             \"provisioningState\":\"\",\r\n             \"id\":\"\"\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "virtual-networks create-or-update-parameters ip-configuration add",
                  "usage": "[options]",
                  "filePath": "commands/arm/vnet/vnet._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--key <key>",
                      "required": -7,
                      "optional": 0,
                      "bool": true,
                      "long": "--key",
                      "description": "The JSON key."
                    },
                    {
                      "flags": "--value <value>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--value",
                      "description": "The JSON value."
                    },
                    {
                      "flags": "--parse",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--parse",
                      "description": "Parse the input value string to a JSON object."
                    },
                    {
                      "flags": "--name <name>",
                      "required": -8,
                      "optional": 0,
                      "bool": true,
                      "long": "--name",
                      "description": "Add the name value."
                    },
                    {
                      "flags": "--etag <etag>",
                      "required": -8,
                      "optional": 0,
                      "bool": true,
                      "long": "--etag",
                      "description": "Add the etag value."
                    },
                    {
                      "flags": "--private-ip-address <privateIPAddress>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "long": "--private-ip-address",
                      "description": "Add the private-ip-address value."
                    },
                    {
                      "flags": "--private-ip-allocation-method <privateIPAllocationMethod>",
                      "required": -32,
                      "optional": 0,
                      "bool": true,
                      "long": "--private-ip-allocation-method",
                      "description": "Add the private-ip-allocation-method value."
                    },
                    {
                      "flags": "--subnet <subnet>",
                      "required": -10,
                      "optional": 0,
                      "bool": true,
                      "long": "--subnet",
                      "description": "Add the subnet value."
                    },
                    {
                      "flags": "--public-ip-address <publicIPAddress>",
                      "required": -21,
                      "optional": 0,
                      "bool": true,
                      "long": "--public-ip-address",
                      "description": "Add the public-ip-address value."
                    },
                    {
                      "flags": "--provisioning-state <provisioningState>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "long": "--provisioning-state",
                      "description": "Add the provisioning-state value."
                    },
                    {
                      "flags": "--id <id>",
                      "required": -6,
                      "optional": 0,
                      "bool": true,
                      "long": "--id",
                      "description": "Add the id value."
                    }
                  ]
                }
              ],
              "categories": {}
            },
            "dns-settings": {
              "name": "dns-settings",
              "description": "Commands to set/remove/add dns-settings of virtual-networks in create-or-update-parameters file.",
              "fullName": "virtual-networks create-or-update-parameters dns-settings",
              "usage": "[options] [command]",
              "options": [],
              "commands": [
                {
                  "name": "set",
                  "description": "Set dns-settings in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"dnsSettings\" : {\r\n             \"dnsServers\":[\r\n               \"\"\r\n             ],\r\n             \"appliedDnsServers\":[\r\n               \"\"\r\n             ],\r\n             \"internalDnsNameLabel\":\"\",\r\n             \"internalFqdn\":\"\"\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "virtual-networks create-or-update-parameters dns-settings set",
                  "usage": "[options]",
                  "filePath": "commands/arm/vnet/vnet._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--network-interfaces-index <network-interfaces-index>",
                      "required": -28,
                      "optional": 0,
                      "bool": true,
                      "long": "--network-interfaces-index",
                      "description": "Indexer: network-interfaces-index."
                    },
                    {
                      "flags": "--subnets-index <subnets-index>",
                      "required": -17,
                      "optional": 0,
                      "bool": true,
                      "long": "--subnets-index",
                      "description": "Indexer: subnets-index."
                    },
                    {
                      "flags": "--parse",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--parse",
                      "description": "Parse the input value string to a JSON object."
                    },
                    {
                      "flags": "--dns-servers <dnsServers>",
                      "required": -15,
                      "optional": 0,
                      "bool": true,
                      "long": "--dns-servers",
                      "description": "Set the dns-servers value."
                    },
                    {
                      "flags": "--applied-dns-servers <appliedDnsServers>",
                      "required": -23,
                      "optional": 0,
                      "bool": true,
                      "long": "--applied-dns-servers",
                      "description": "Set the applied-dns-servers value."
                    },
                    {
                      "flags": "--internal-dns-name-label <internalDnsNameLabel>",
                      "required": -27,
                      "optional": 0,
                      "bool": true,
                      "long": "--internal-dns-name-label",
                      "description": "Set the internal-dns-name-label value."
                    },
                    {
                      "flags": "--internal-fqdn <internalFqdn>",
                      "required": -17,
                      "optional": 0,
                      "bool": true,
                      "long": "--internal-fqdn",
                      "description": "Set the internal-fqdn value."
                    }
                  ]
                },
                {
                  "name": "remove",
                  "description": "Remove dns-settings in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"dnsSettings\" : {\r\n             \"dnsServers\":[\r\n               \"\"\r\n             ],\r\n             \"appliedDnsServers\":[\r\n               \"\"\r\n             ],\r\n             \"internalDnsNameLabel\":\"\",\r\n             \"internalFqdn\":\"\"\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "virtual-networks create-or-update-parameters dns-settings remove",
                  "usage": "[options]",
                  "filePath": "commands/arm/vnet/vnet._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--network-interfaces-index <network-interfaces-index>",
                      "required": -28,
                      "optional": 0,
                      "bool": true,
                      "long": "--network-interfaces-index",
                      "description": "Indexer: network-interfaces-index."
                    },
                    {
                      "flags": "--subnets-index <subnets-index>",
                      "required": -17,
                      "optional": 0,
                      "bool": true,
                      "long": "--subnets-index",
                      "description": "Indexer: subnets-index."
                    },
                    {
                      "flags": "--dns-servers",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--dns-servers",
                      "description": "Remove the dns-servers value."
                    },
                    {
                      "flags": "--applied-dns-servers",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--applied-dns-servers",
                      "description": "Remove the applied-dns-servers value."
                    },
                    {
                      "flags": "--internal-dns-name-label",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--internal-dns-name-label",
                      "description": "Remove the internal-dns-name-label value."
                    },
                    {
                      "flags": "--internal-fqdn",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--internal-fqdn",
                      "description": "Remove the internal-fqdn value."
                    }
                  ]
                },
                {
                  "name": "add",
                  "description": "Add dns-settings in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"dnsSettings\" : {\r\n             \"dnsServers\":[\r\n               \"\"\r\n             ],\r\n             \"appliedDnsServers\":[\r\n               \"\"\r\n             ],\r\n             \"internalDnsNameLabel\":\"\",\r\n             \"internalFqdn\":\"\"\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "virtual-networks create-or-update-parameters dns-settings add",
                  "usage": "[options]",
                  "filePath": "commands/arm/vnet/vnet._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--key <key>",
                      "required": -7,
                      "optional": 0,
                      "bool": true,
                      "long": "--key",
                      "description": "The JSON key."
                    },
                    {
                      "flags": "--value <value>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--value",
                      "description": "The JSON value."
                    },
                    {
                      "flags": "--parse",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--parse",
                      "description": "Parse the input value string to a JSON object."
                    },
                    {
                      "flags": "--dns-servers <dnsServers>",
                      "required": -15,
                      "optional": 0,
                      "bool": true,
                      "long": "--dns-servers",
                      "description": "Add the dns-servers value."
                    },
                    {
                      "flags": "--applied-dns-servers <appliedDnsServers>",
                      "required": -23,
                      "optional": 0,
                      "bool": true,
                      "long": "--applied-dns-servers",
                      "description": "Add the applied-dns-servers value."
                    },
                    {
                      "flags": "--internal-dns-name-label <internalDnsNameLabel>",
                      "required": -27,
                      "optional": 0,
                      "bool": true,
                      "long": "--internal-dns-name-label",
                      "description": "Add the internal-dns-name-label value."
                    },
                    {
                      "flags": "--internal-fqdn <internalFqdn>",
                      "required": -17,
                      "optional": 0,
                      "bool": true,
                      "long": "--internal-fqdn",
                      "description": "Add the internal-fqdn value."
                    }
                  ]
                }
              ],
              "categories": {}
            },
            "applied-dns-servers": {
              "name": "applied-dns-servers",
              "description": "Commands to set/remove/add applied-dns-servers of virtual-networks in create-or-update-parameters file.",
              "fullName": "virtual-networks create-or-update-parameters applied-dns-servers",
              "usage": "[options] [command]",
              "options": [],
              "commands": [
                {
                  "name": "set",
                  "description": "Set applied-dns-servers in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"appliedDnsServers\" : \"\"\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "virtual-networks create-or-update-parameters applied-dns-servers set",
                  "usage": "[options]",
                  "filePath": "commands/arm/vnet/vnet._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--index <index>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--index",
                      "description": "Indexer: index."
                    },
                    {
                      "flags": "--network-interfaces-index <network-interfaces-index>",
                      "required": -28,
                      "optional": 0,
                      "bool": true,
                      "long": "--network-interfaces-index",
                      "description": "Indexer: network-interfaces-index."
                    },
                    {
                      "flags": "--subnets-index <subnets-index>",
                      "required": -17,
                      "optional": 0,
                      "bool": true,
                      "long": "--subnets-index",
                      "description": "Indexer: subnets-index."
                    },
                    {
                      "flags": "--value <value>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--value",
                      "description": "The input string value for the indexed item."
                    },
                    {
                      "flags": "--parse",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--parse",
                      "description": "Parse the input value string to a JSON object."
                    }
                  ]
                },
                {
                  "name": "remove",
                  "description": "Remove applied-dns-servers in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"appliedDnsServers\" : \"\"\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "virtual-networks create-or-update-parameters applied-dns-servers remove",
                  "usage": "[options]",
                  "filePath": "commands/arm/vnet/vnet._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--index <index>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--index",
                      "description": "Indexer: index."
                    },
                    {
                      "flags": "--network-interfaces-index <network-interfaces-index>",
                      "required": -28,
                      "optional": 0,
                      "bool": true,
                      "long": "--network-interfaces-index",
                      "description": "Indexer: network-interfaces-index."
                    },
                    {
                      "flags": "--subnets-index <subnets-index>",
                      "required": -17,
                      "optional": 0,
                      "bool": true,
                      "long": "--subnets-index",
                      "description": "Indexer: subnets-index."
                    }
                  ]
                },
                {
                  "name": "add",
                  "description": "Add applied-dns-servers in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"appliedDnsServers\" : \"\"\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "virtual-networks create-or-update-parameters applied-dns-servers add",
                  "usage": "[options]",
                  "filePath": "commands/arm/vnet/vnet._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--key <key>",
                      "required": -7,
                      "optional": 0,
                      "bool": true,
                      "long": "--key",
                      "description": "The JSON key."
                    },
                    {
                      "flags": "--value <value>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--value",
                      "description": "The JSON value."
                    },
                    {
                      "flags": "--parse",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--parse",
                      "description": "Parse the input value string to a JSON object."
                    }
                  ]
                }
              ],
              "categories": {}
            },
            "route-table": {
              "name": "route-table",
              "description": "Commands to set/remove/add route-table of virtual-networks in create-or-update-parameters file.",
              "fullName": "virtual-networks create-or-update-parameters route-table",
              "usage": "[options] [command]",
              "options": [],
              "commands": [
                {
                  "name": "set",
                  "description": "Set route-table in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"routeTable\" : {\r\n             \"etag\":\"\",\r\n             \"routes\":[\r\n               {\r\n                 \"name\":\"\",\r\n                 \"etag\":\"\",\r\n                 \"addressPrefix\":\"\",\r\n                 \"nextHopType\":\"\",\r\n                 \"nextHopIpAddress\":\"\",\r\n                 \"provisioningState\":\"\",\r\n                 \"id\":\"\"\r\n               }\r\n             ],\r\n             \"subnets\":[\r\n               {\r\n                 \"name\":\"\",\r\n                 \"etag\":\"\",\r\n                 \"addressPrefix\":\"\",\r\n                 \"networkSecurityGroup\":{\r\n                   \"etag\":\"\",\r\n                   \"securityRules\":[\r\n                     {\r\n                       \"name\":\"\",\r\n                       \"etag\":\"\",\r\n                       \"description\":\"\",\r\n                       \"protocol\":\"\",\r\n                       \"sourcePortRange\":\"\",\r\n                       \"destinationPortRange\":\"\",\r\n                       \"sourceAddressPrefix\":\"\",\r\n                       \"destinationAddressPrefix\":\"\",\r\n                       \"access\":\"\",\r\n                       \"priority\":null,\r\n                       \"direction\":\"\",\r\n                       \"provisioningState\":\"\",\r\n                       \"id\":\"\"\r\n                     }\r\n                   ],\r\n                   \"defaultSecurityRules\":[\r\n           null\r\n                   ],\r\n                   \"networkInterfaces\":[\r\n                     {\r\n                       \"etag\":\"\",\r\n                       \"virtualMachine\":{\r\n                         \"id\":\"\"\r\n                       },\r\n                       \"networkSecurityGroup\":null,\r\n                       \"ipConfigurations\":[\r\n                         {\r\n                           \"name\":\"\",\r\n                           \"etag\":\"\",\r\n                           \"loadBalancerBackendAddressPools\":[\r\n                             {\r\n                               \"name\":\"\",\r\n                               \"etag\":\"\",\r\n                               \"backendIPConfigurations\":[\r\n           null\r\n                               ],\r\n                               \"loadBalancingRules\":[\r\n           null\r\n                               ],\r\n                               \"outboundNatRule\":null,\r\n                               \"provisioningState\":\"\",\r\n                               \"id\":\"\"\r\n                             }\r\n                           ],\r\n                           \"loadBalancerInboundNatRules\":[\r\n                             {\r\n                               \"name\":\"\",\r\n                               \"etag\":\"\",\r\n                               \"frontendIPConfiguration\":null,\r\n                               \"backendIPConfiguration\":null,\r\n                               \"protocol\":\"\",\r\n                               \"frontendPort\":null,\r\n                               \"backendPort\":null,\r\n                               \"idleTimeoutInMinutes\":null,\r\n                               \"enableFloatingIP\":null,\r\n                               \"provisioningState\":\"\",\r\n                               \"id\":\"\"\r\n                             }\r\n                           ],\r\n                           \"privateIPAddress\":\"\",\r\n                           \"privateIPAllocationMethod\":\"\",\r\n                           \"subnet\":null,\r\n                           \"publicIPAddress\":{\r\n                             \"etag\":\"\",\r\n                             \"publicIPAllocationMethod\":\"\",\r\n                             \"ipConfiguration\":{\r\n                               \"name\":\"\",\r\n                               \"etag\":\"\",\r\n                               \"privateIPAddress\":\"\",\r\n                               \"privateIPAllocationMethod\":\"\",\r\n                               \"subnet\":null,\r\n                               \"publicIPAddress\":null,\r\n                               \"provisioningState\":\"\",\r\n                               \"id\":\"\"\r\n                             },\r\n                             \"dnsSettings\":{\r\n                               \"domainNameLabel\":\"\",\r\n                               \"fqdn\":\"\",\r\n                               \"reverseFqdn\":\"\"\r\n                             },\r\n                             \"ipAddress\":\"\",\r\n                             \"idleTimeoutInMinutes\":null,\r\n                             \"resourceGuid\":\"\",\r\n                             \"provisioningState\":\"\",\r\n                             \"id\":\"\",\r\n                             \"name\":null,\r\n                             \"type\":null,\r\n                             \"location\":\"\",\r\n                             \"tags\":{\r\n                             }\r\n                           },\r\n                           \"provisioningState\":\"\",\r\n                           \"id\":\"\"\r\n                         }\r\n                       ],\r\n                       \"dnsSettings\":{\r\n                         \"dnsServers\":[\r\n                           \"\"\r\n                         ],\r\n                         \"appliedDnsServers\":[\r\n                           \"\"\r\n                         ],\r\n                         \"internalDnsNameLabel\":\"\",\r\n                         \"internalFqdn\":\"\"\r\n                       },\r\n                       \"macAddress\":\"\",\r\n                       \"primary\":null,\r\n                       \"enableIPForwarding\":null,\r\n                       \"resourceGuid\":\"\",\r\n                       \"provisioningState\":\"\",\r\n                       \"id\":\"\",\r\n                       \"name\":null,\r\n                       \"type\":null,\r\n                       \"location\":\"\",\r\n                       \"tags\":{\r\n                       }\r\n                     }\r\n                   ],\r\n                   \"subnets\":[\r\n           null\r\n                   ],\r\n                   \"resourceGuid\":\"\",\r\n                   \"provisioningState\":\"\",\r\n                   \"id\":\"\",\r\n                   \"name\":null,\r\n                   \"type\":null,\r\n                   \"location\":\"\",\r\n                   \"tags\":{\r\n                   }\r\n                 },\r\n                 \"routeTable\":null,\r\n                 \"ipConfigurations\":[\r\n           null\r\n                 ],\r\n                 \"provisioningState\":\"\",\r\n                 \"id\":\"\"\r\n               }\r\n             ],\r\n             \"provisioningState\":\"\",\r\n             \"id\":\"\",\r\n             \"name\":null,\r\n             \"type\":null,\r\n             \"location\":\"\",\r\n             \"tags\":{\r\n             }\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "virtual-networks create-or-update-parameters route-table set",
                  "usage": "[options]",
                  "filePath": "commands/arm/vnet/vnet._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--subnets-index <subnets-index>",
                      "required": -17,
                      "optional": 0,
                      "bool": true,
                      "long": "--subnets-index",
                      "description": "Indexer: subnets-index."
                    },
                    {
                      "flags": "--parse",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--parse",
                      "description": "Parse the input value string to a JSON object."
                    },
                    {
                      "flags": "--etag <etag>",
                      "required": -8,
                      "optional": 0,
                      "bool": true,
                      "long": "--etag",
                      "description": "Set the etag value."
                    },
                    {
                      "flags": "--routes <routes>",
                      "required": -10,
                      "optional": 0,
                      "bool": true,
                      "long": "--routes",
                      "description": "Set the routes value."
                    },
                    {
                      "flags": "--subnets <subnets>",
                      "required": -11,
                      "optional": 0,
                      "bool": true,
                      "long": "--subnets",
                      "description": "Set the subnets value."
                    },
                    {
                      "flags": "--provisioning-state <provisioningState>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "long": "--provisioning-state",
                      "description": "Set the provisioning-state value."
                    },
                    {
                      "flags": "--id <id>",
                      "required": -6,
                      "optional": 0,
                      "bool": true,
                      "long": "--id",
                      "description": "Set the id value."
                    },
                    {
                      "flags": "--name <name>",
                      "required": -8,
                      "optional": 0,
                      "bool": true,
                      "long": "--name",
                      "description": "Set the name value."
                    },
                    {
                      "flags": "--type <type>",
                      "required": -8,
                      "optional": 0,
                      "bool": true,
                      "long": "--type",
                      "description": "Set the type value."
                    },
                    {
                      "flags": "--location <location>",
                      "required": -12,
                      "optional": 0,
                      "bool": true,
                      "long": "--location",
                      "description": "Set the location value."
                    },
                    {
                      "flags": "--tags <tags>",
                      "required": -8,
                      "optional": 0,
                      "bool": true,
                      "long": "--tags",
                      "description": "Set the tags value."
                    }
                  ]
                },
                {
                  "name": "remove",
                  "description": "Remove route-table in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"routeTable\" : {\r\n             \"etag\":\"\",\r\n             \"routes\":[\r\n               {\r\n                 \"name\":\"\",\r\n                 \"etag\":\"\",\r\n                 \"addressPrefix\":\"\",\r\n                 \"nextHopType\":\"\",\r\n                 \"nextHopIpAddress\":\"\",\r\n                 \"provisioningState\":\"\",\r\n                 \"id\":\"\"\r\n               }\r\n             ],\r\n             \"subnets\":[\r\n               {\r\n                 \"name\":\"\",\r\n                 \"etag\":\"\",\r\n                 \"addressPrefix\":\"\",\r\n                 \"networkSecurityGroup\":{\r\n                   \"etag\":\"\",\r\n                   \"securityRules\":[\r\n                     {\r\n                       \"name\":\"\",\r\n                       \"etag\":\"\",\r\n                       \"description\":\"\",\r\n                       \"protocol\":\"\",\r\n                       \"sourcePortRange\":\"\",\r\n                       \"destinationPortRange\":\"\",\r\n                       \"sourceAddressPrefix\":\"\",\r\n                       \"destinationAddressPrefix\":\"\",\r\n                       \"access\":\"\",\r\n                       \"priority\":null,\r\n                       \"direction\":\"\",\r\n                       \"provisioningState\":\"\",\r\n                       \"id\":\"\"\r\n                     }\r\n                   ],\r\n                   \"defaultSecurityRules\":[\r\n           null\r\n                   ],\r\n                   \"networkInterfaces\":[\r\n                     {\r\n                       \"etag\":\"\",\r\n                       \"virtualMachine\":{\r\n                         \"id\":\"\"\r\n                       },\r\n                       \"networkSecurityGroup\":null,\r\n                       \"ipConfigurations\":[\r\n                         {\r\n                           \"name\":\"\",\r\n                           \"etag\":\"\",\r\n                           \"loadBalancerBackendAddressPools\":[\r\n                             {\r\n                               \"name\":\"\",\r\n                               \"etag\":\"\",\r\n                               \"backendIPConfigurations\":[\r\n           null\r\n                               ],\r\n                               \"loadBalancingRules\":[\r\n           null\r\n                               ],\r\n                               \"outboundNatRule\":null,\r\n                               \"provisioningState\":\"\",\r\n                               \"id\":\"\"\r\n                             }\r\n                           ],\r\n                           \"loadBalancerInboundNatRules\":[\r\n                             {\r\n                               \"name\":\"\",\r\n                               \"etag\":\"\",\r\n                               \"frontendIPConfiguration\":null,\r\n                               \"backendIPConfiguration\":null,\r\n                               \"protocol\":\"\",\r\n                               \"frontendPort\":null,\r\n                               \"backendPort\":null,\r\n                               \"idleTimeoutInMinutes\":null,\r\n                               \"enableFloatingIP\":null,\r\n                               \"provisioningState\":\"\",\r\n                               \"id\":\"\"\r\n                             }\r\n                           ],\r\n                           \"privateIPAddress\":\"\",\r\n                           \"privateIPAllocationMethod\":\"\",\r\n                           \"subnet\":null,\r\n                           \"publicIPAddress\":{\r\n                             \"etag\":\"\",\r\n                             \"publicIPAllocationMethod\":\"\",\r\n                             \"ipConfiguration\":{\r\n                               \"name\":\"\",\r\n                               \"etag\":\"\",\r\n                               \"privateIPAddress\":\"\",\r\n                               \"privateIPAllocationMethod\":\"\",\r\n                               \"subnet\":null,\r\n                               \"publicIPAddress\":null,\r\n                               \"provisioningState\":\"\",\r\n                               \"id\":\"\"\r\n                             },\r\n                             \"dnsSettings\":{\r\n                               \"domainNameLabel\":\"\",\r\n                               \"fqdn\":\"\",\r\n                               \"reverseFqdn\":\"\"\r\n                             },\r\n                             \"ipAddress\":\"\",\r\n                             \"idleTimeoutInMinutes\":null,\r\n                             \"resourceGuid\":\"\",\r\n                             \"provisioningState\":\"\",\r\n                             \"id\":\"\",\r\n                             \"name\":null,\r\n                             \"type\":null,\r\n                             \"location\":\"\",\r\n                             \"tags\":{\r\n                             }\r\n                           },\r\n                           \"provisioningState\":\"\",\r\n                           \"id\":\"\"\r\n                         }\r\n                       ],\r\n                       \"dnsSettings\":{\r\n                         \"dnsServers\":[\r\n                           \"\"\r\n                         ],\r\n                         \"appliedDnsServers\":[\r\n                           \"\"\r\n                         ],\r\n                         \"internalDnsNameLabel\":\"\",\r\n                         \"internalFqdn\":\"\"\r\n                       },\r\n                       \"macAddress\":\"\",\r\n                       \"primary\":null,\r\n                       \"enableIPForwarding\":null,\r\n                       \"resourceGuid\":\"\",\r\n                       \"provisioningState\":\"\",\r\n                       \"id\":\"\",\r\n                       \"name\":null,\r\n                       \"type\":null,\r\n                       \"location\":\"\",\r\n                       \"tags\":{\r\n                       }\r\n                     }\r\n                   ],\r\n                   \"subnets\":[\r\n           null\r\n                   ],\r\n                   \"resourceGuid\":\"\",\r\n                   \"provisioningState\":\"\",\r\n                   \"id\":\"\",\r\n                   \"name\":null,\r\n                   \"type\":null,\r\n                   \"location\":\"\",\r\n                   \"tags\":{\r\n                   }\r\n                 },\r\n                 \"routeTable\":null,\r\n                 \"ipConfigurations\":[\r\n           null\r\n                 ],\r\n                 \"provisioningState\":\"\",\r\n                 \"id\":\"\"\r\n               }\r\n             ],\r\n             \"provisioningState\":\"\",\r\n             \"id\":\"\",\r\n             \"name\":null,\r\n             \"type\":null,\r\n             \"location\":\"\",\r\n             \"tags\":{\r\n             }\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "virtual-networks create-or-update-parameters route-table remove",
                  "usage": "[options]",
                  "filePath": "commands/arm/vnet/vnet._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--subnets-index <subnets-index>",
                      "required": -17,
                      "optional": 0,
                      "bool": true,
                      "long": "--subnets-index",
                      "description": "Indexer: subnets-index."
                    },
                    {
                      "flags": "--etag",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--etag",
                      "description": "Remove the etag value."
                    },
                    {
                      "flags": "--routes",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--routes",
                      "description": "Remove the routes value."
                    },
                    {
                      "flags": "--subnets",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--subnets",
                      "description": "Remove the subnets value."
                    },
                    {
                      "flags": "--provisioning-state",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--provisioning-state",
                      "description": "Remove the provisioning-state value."
                    },
                    {
                      "flags": "--id",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--id",
                      "description": "Remove the id value."
                    },
                    {
                      "flags": "--name",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--name",
                      "description": "Remove the name value."
                    },
                    {
                      "flags": "--type",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--type",
                      "description": "Remove the type value."
                    },
                    {
                      "flags": "--location",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--location",
                      "description": "Remove the location value."
                    },
                    {
                      "flags": "--tags",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--tags",
                      "description": "Remove the tags value."
                    }
                  ]
                },
                {
                  "name": "add",
                  "description": "Add route-table in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"routeTable\" : {\r\n             \"etag\":\"\",\r\n             \"routes\":[\r\n               {\r\n                 \"name\":\"\",\r\n                 \"etag\":\"\",\r\n                 \"addressPrefix\":\"\",\r\n                 \"nextHopType\":\"\",\r\n                 \"nextHopIpAddress\":\"\",\r\n                 \"provisioningState\":\"\",\r\n                 \"id\":\"\"\r\n               }\r\n             ],\r\n             \"subnets\":[\r\n               {\r\n                 \"name\":\"\",\r\n                 \"etag\":\"\",\r\n                 \"addressPrefix\":\"\",\r\n                 \"networkSecurityGroup\":{\r\n                   \"etag\":\"\",\r\n                   \"securityRules\":[\r\n                     {\r\n                       \"name\":\"\",\r\n                       \"etag\":\"\",\r\n                       \"description\":\"\",\r\n                       \"protocol\":\"\",\r\n                       \"sourcePortRange\":\"\",\r\n                       \"destinationPortRange\":\"\",\r\n                       \"sourceAddressPrefix\":\"\",\r\n                       \"destinationAddressPrefix\":\"\",\r\n                       \"access\":\"\",\r\n                       \"priority\":null,\r\n                       \"direction\":\"\",\r\n                       \"provisioningState\":\"\",\r\n                       \"id\":\"\"\r\n                     }\r\n                   ],\r\n                   \"defaultSecurityRules\":[\r\n           null\r\n                   ],\r\n                   \"networkInterfaces\":[\r\n                     {\r\n                       \"etag\":\"\",\r\n                       \"virtualMachine\":{\r\n                         \"id\":\"\"\r\n                       },\r\n                       \"networkSecurityGroup\":null,\r\n                       \"ipConfigurations\":[\r\n                         {\r\n                           \"name\":\"\",\r\n                           \"etag\":\"\",\r\n                           \"loadBalancerBackendAddressPools\":[\r\n                             {\r\n                               \"name\":\"\",\r\n                               \"etag\":\"\",\r\n                               \"backendIPConfigurations\":[\r\n           null\r\n                               ],\r\n                               \"loadBalancingRules\":[\r\n           null\r\n                               ],\r\n                               \"outboundNatRule\":null,\r\n                               \"provisioningState\":\"\",\r\n                               \"id\":\"\"\r\n                             }\r\n                           ],\r\n                           \"loadBalancerInboundNatRules\":[\r\n                             {\r\n                               \"name\":\"\",\r\n                               \"etag\":\"\",\r\n                               \"frontendIPConfiguration\":null,\r\n                               \"backendIPConfiguration\":null,\r\n                               \"protocol\":\"\",\r\n                               \"frontendPort\":null,\r\n                               \"backendPort\":null,\r\n                               \"idleTimeoutInMinutes\":null,\r\n                               \"enableFloatingIP\":null,\r\n                               \"provisioningState\":\"\",\r\n                               \"id\":\"\"\r\n                             }\r\n                           ],\r\n                           \"privateIPAddress\":\"\",\r\n                           \"privateIPAllocationMethod\":\"\",\r\n                           \"subnet\":null,\r\n                           \"publicIPAddress\":{\r\n                             \"etag\":\"\",\r\n                             \"publicIPAllocationMethod\":\"\",\r\n                             \"ipConfiguration\":{\r\n                               \"name\":\"\",\r\n                               \"etag\":\"\",\r\n                               \"privateIPAddress\":\"\",\r\n                               \"privateIPAllocationMethod\":\"\",\r\n                               \"subnet\":null,\r\n                               \"publicIPAddress\":null,\r\n                               \"provisioningState\":\"\",\r\n                               \"id\":\"\"\r\n                             },\r\n                             \"dnsSettings\":{\r\n                               \"domainNameLabel\":\"\",\r\n                               \"fqdn\":\"\",\r\n                               \"reverseFqdn\":\"\"\r\n                             },\r\n                             \"ipAddress\":\"\",\r\n                             \"idleTimeoutInMinutes\":null,\r\n                             \"resourceGuid\":\"\",\r\n                             \"provisioningState\":\"\",\r\n                             \"id\":\"\",\r\n                             \"name\":null,\r\n                             \"type\":null,\r\n                             \"location\":\"\",\r\n                             \"tags\":{\r\n                             }\r\n                           },\r\n                           \"provisioningState\":\"\",\r\n                           \"id\":\"\"\r\n                         }\r\n                       ],\r\n                       \"dnsSettings\":{\r\n                         \"dnsServers\":[\r\n                           \"\"\r\n                         ],\r\n                         \"appliedDnsServers\":[\r\n                           \"\"\r\n                         ],\r\n                         \"internalDnsNameLabel\":\"\",\r\n                         \"internalFqdn\":\"\"\r\n                       },\r\n                       \"macAddress\":\"\",\r\n                       \"primary\":null,\r\n                       \"enableIPForwarding\":null,\r\n                       \"resourceGuid\":\"\",\r\n                       \"provisioningState\":\"\",\r\n                       \"id\":\"\",\r\n                       \"name\":null,\r\n                       \"type\":null,\r\n                       \"location\":\"\",\r\n                       \"tags\":{\r\n                       }\r\n                     }\r\n                   ],\r\n                   \"subnets\":[\r\n           null\r\n                   ],\r\n                   \"resourceGuid\":\"\",\r\n                   \"provisioningState\":\"\",\r\n                   \"id\":\"\",\r\n                   \"name\":null,\r\n                   \"type\":null,\r\n                   \"location\":\"\",\r\n                   \"tags\":{\r\n                   }\r\n                 },\r\n                 \"routeTable\":null,\r\n                 \"ipConfigurations\":[\r\n           null\r\n                 ],\r\n                 \"provisioningState\":\"\",\r\n                 \"id\":\"\"\r\n               }\r\n             ],\r\n             \"provisioningState\":\"\",\r\n             \"id\":\"\",\r\n             \"name\":null,\r\n             \"type\":null,\r\n             \"location\":\"\",\r\n             \"tags\":{\r\n             }\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "virtual-networks create-or-update-parameters route-table add",
                  "usage": "[options]",
                  "filePath": "commands/arm/vnet/vnet._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--key <key>",
                      "required": -7,
                      "optional": 0,
                      "bool": true,
                      "long": "--key",
                      "description": "The JSON key."
                    },
                    {
                      "flags": "--value <value>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--value",
                      "description": "The JSON value."
                    },
                    {
                      "flags": "--parse",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--parse",
                      "description": "Parse the input value string to a JSON object."
                    },
                    {
                      "flags": "--etag <etag>",
                      "required": -8,
                      "optional": 0,
                      "bool": true,
                      "long": "--etag",
                      "description": "Add the etag value."
                    },
                    {
                      "flags": "--routes <routes>",
                      "required": -10,
                      "optional": 0,
                      "bool": true,
                      "long": "--routes",
                      "description": "Add the routes value."
                    },
                    {
                      "flags": "--subnets <subnets>",
                      "required": -11,
                      "optional": 0,
                      "bool": true,
                      "long": "--subnets",
                      "description": "Add the subnets value."
                    },
                    {
                      "flags": "--provisioning-state <provisioningState>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "long": "--provisioning-state",
                      "description": "Add the provisioning-state value."
                    },
                    {
                      "flags": "--id <id>",
                      "required": -6,
                      "optional": 0,
                      "bool": true,
                      "long": "--id",
                      "description": "Add the id value."
                    },
                    {
                      "flags": "--name <name>",
                      "required": -8,
                      "optional": 0,
                      "bool": true,
                      "long": "--name",
                      "description": "Add the name value."
                    },
                    {
                      "flags": "--type <type>",
                      "required": -8,
                      "optional": 0,
                      "bool": true,
                      "long": "--type",
                      "description": "Add the type value."
                    },
                    {
                      "flags": "--location <location>",
                      "required": -12,
                      "optional": 0,
                      "bool": true,
                      "long": "--location",
                      "description": "Add the location value."
                    },
                    {
                      "flags": "--tags <tags>",
                      "required": -8,
                      "optional": 0,
                      "bool": true,
                      "long": "--tags",
                      "description": "Add the tags value."
                    }
                  ]
                }
              ],
              "categories": {}
            },
            "routes": {
              "name": "routes",
              "description": "Commands to set/remove/add routes of virtual-networks in create-or-update-parameters file.",
              "fullName": "virtual-networks create-or-update-parameters routes",
              "usage": "[options] [command]",
              "options": [],
              "commands": [
                {
                  "name": "set",
                  "description": "Set routes in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"routes\" : {\r\n             \"name\":\"\",\r\n             \"etag\":\"\",\r\n             \"addressPrefix\":\"\",\r\n             \"nextHopType\":\"\",\r\n             \"nextHopIpAddress\":\"\",\r\n             \"provisioningState\":\"\",\r\n             \"id\":\"\"\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "virtual-networks create-or-update-parameters routes set",
                  "usage": "[options]",
                  "filePath": "commands/arm/vnet/vnet._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--index <index>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--index",
                      "description": "Indexer: index."
                    },
                    {
                      "flags": "--subnets-index <subnets-index>",
                      "required": -17,
                      "optional": 0,
                      "bool": true,
                      "long": "--subnets-index",
                      "description": "Indexer: subnets-index."
                    },
                    {
                      "flags": "--value <value>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--value",
                      "description": "The input string value for the indexed item."
                    },
                    {
                      "flags": "--parse",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--parse",
                      "description": "Parse the input value string to a JSON object."
                    },
                    {
                      "flags": "--name <name>",
                      "required": -8,
                      "optional": 0,
                      "bool": true,
                      "long": "--name",
                      "description": "Set the name value."
                    },
                    {
                      "flags": "--etag <etag>",
                      "required": -8,
                      "optional": 0,
                      "bool": true,
                      "long": "--etag",
                      "description": "Set the etag value."
                    },
                    {
                      "flags": "--address-prefix <addressPrefix>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--address-prefix",
                      "description": "Set the address-prefix value."
                    },
                    {
                      "flags": "--next-hop-type <nextHopType>",
                      "required": -17,
                      "optional": 0,
                      "bool": true,
                      "long": "--next-hop-type",
                      "description": "Set the next-hop-type value."
                    },
                    {
                      "flags": "--next-hop-ip-address <nextHopIpAddress>",
                      "required": -23,
                      "optional": 0,
                      "bool": true,
                      "long": "--next-hop-ip-address",
                      "description": "Set the next-hop-ip-address value."
                    },
                    {
                      "flags": "--provisioning-state <provisioningState>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "long": "--provisioning-state",
                      "description": "Set the provisioning-state value."
                    },
                    {
                      "flags": "--id <id>",
                      "required": -6,
                      "optional": 0,
                      "bool": true,
                      "long": "--id",
                      "description": "Set the id value."
                    }
                  ]
                },
                {
                  "name": "remove",
                  "description": "Remove routes in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"routes\" : {\r\n             \"name\":\"\",\r\n             \"etag\":\"\",\r\n             \"addressPrefix\":\"\",\r\n             \"nextHopType\":\"\",\r\n             \"nextHopIpAddress\":\"\",\r\n             \"provisioningState\":\"\",\r\n             \"id\":\"\"\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "virtual-networks create-or-update-parameters routes remove",
                  "usage": "[options]",
                  "filePath": "commands/arm/vnet/vnet._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--index <index>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--index",
                      "description": "Indexer: index."
                    },
                    {
                      "flags": "--subnets-index <subnets-index>",
                      "required": -17,
                      "optional": 0,
                      "bool": true,
                      "long": "--subnets-index",
                      "description": "Indexer: subnets-index."
                    },
                    {
                      "flags": "--name",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--name",
                      "description": "Remove the name value."
                    },
                    {
                      "flags": "--etag",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--etag",
                      "description": "Remove the etag value."
                    },
                    {
                      "flags": "--address-prefix",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--address-prefix",
                      "description": "Remove the address-prefix value."
                    },
                    {
                      "flags": "--next-hop-type",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--next-hop-type",
                      "description": "Remove the next-hop-type value."
                    },
                    {
                      "flags": "--next-hop-ip-address",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--next-hop-ip-address",
                      "description": "Remove the next-hop-ip-address value."
                    },
                    {
                      "flags": "--provisioning-state",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--provisioning-state",
                      "description": "Remove the provisioning-state value."
                    },
                    {
                      "flags": "--id",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--id",
                      "description": "Remove the id value."
                    }
                  ]
                },
                {
                  "name": "add",
                  "description": "Add routes in create-or-update-parameters string or files, e.g. \r\n         {\r\n           ...\r\n           \"routes\" : {\r\n             \"name\":\"\",\r\n             \"etag\":\"\",\r\n             \"addressPrefix\":\"\",\r\n             \"nextHopType\":\"\",\r\n             \"nextHopIpAddress\":\"\",\r\n             \"provisioningState\":\"\",\r\n             \"id\":\"\"\r\n           }\r\n           ...\r\n         }\r\n\r\n         There are two sets of commands:\r\n           1) function commands that are used to manage Azure resources in the cloud, and \r\n           2) parameter commands that generate & edit input files for the other set of commands.\r\n         For example, 'vmss get/list/stop' are the function commands that call get, list and stop operations of \r\n         virtual machine scale set, whereas 'vmss create-or-update-parameters * generate/set/remove/add' commands \r\n         are used to configure the input parameter file. The 'vmss create-or-update' command takes a parameter \r\n         file as for the VM scale set configuration, and creates it online.",
                  "fullName": "virtual-networks create-or-update-parameters routes add",
                  "usage": "[options]",
                  "filePath": "commands/arm/vnet/vnet._js",
                  "options": [
                    {
                      "flags": "-v, --verbose",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "short": "-v",
                      "long": "--verbose",
                      "description": "use verbose output"
                    },
                    {
                      "flags": "-vv",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "-vv",
                      "description": "more verbose with debug output"
                    },
                    {
                      "flags": "--json",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--json",
                      "description": "use json output"
                    },
                    {
                      "flags": "--parameter-file <parameter-file>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--parameter-file",
                      "description": "The parameter file path."
                    },
                    {
                      "flags": "--key <key>",
                      "required": -7,
                      "optional": 0,
                      "bool": true,
                      "long": "--key",
                      "description": "The JSON key."
                    },
                    {
                      "flags": "--value <value>",
                      "required": -9,
                      "optional": 0,
                      "bool": true,
                      "long": "--value",
                      "description": "The JSON value."
                    },
                    {
                      "flags": "--parse",
                      "required": 0,
                      "optional": 0,
                      "bool": true,
                      "long": "--parse",
                      "description": "Parse the input value string to a JSON object."
                    },
                    {
                      "flags": "--name <name>",
                      "required": -8,
                      "optional": 0,
                      "bool": true,
                      "long": "--name",
                      "description": "Add the name value."
                    },
                    {
                      "flags": "--etag <etag>",
                      "required": -8,
                      "optional": 0,
                      "bool": true,
                      "long": "--etag",
                      "description": "Add the etag value."
                    },
                    {
                      "flags": "--address-prefix <addressPrefix>",
                      "required": -18,
                      "optional": 0,
                      "bool": true,
                      "long": "--address-prefix",
                      "description": "Add the address-prefix value."
                    },
                    {
                      "flags": "--next-hop-type <nextHopType>",
                      "required": -17,
                      "optional": 0,
                      "bool": true,
                      "long": "--next-hop-type",
                      "description": "Add the next-hop-type value."
                    },
                    {
                      "flags": "--next-hop-ip-address <nextHopIpAddress>",
                      "required": -23,
                      "optional": 0,
                      "bool": true,
                      "long": "--next-hop-ip-address",
                      "description": "Add the next-hop-ip-address value."
                    },
                    {
                      "flags": "--provisioning-state <provisioningState>",
                      "required": -22,
                      "optional": 0,
                      "bool": true,
                      "long": "--provisioning-state",
                      "description": "Add the provisioning-state value."
                    },
                    {
                      "flags": "--id <id>",
                      "required": -6,
                      "optional": 0,
                      "bool": true,
                      "long": "--id",
                      "description": "Add the id value."
                    }
                  ]
                }
              ],
              "categories": {}
            }
          }
        }
      }
    },
    "webapp": {
      "name": "webapp",
      "description": "Commands to manage your Azure webapps",
      "fullName": "webapp",
      "usage": "[options] [command]",
      "options": [],
      "commands": [
        {
          "name": "create",
          "description": "create a web app",
          "fullName": "webapp create",
          "usage": "[options] [resource-group] [name] [location] [plan]",
          "filePath": "commands/arm/webapp/webapp._js",
          "options": [
            {
              "flags": "-v, --verbose",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-v",
              "long": "--verbose",
              "description": "use verbose output"
            },
            {
              "flags": "-vv",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "-vv",
              "description": "more verbose with debug output"
            },
            {
              "flags": "--json",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--json",
              "description": "use json output"
            },
            {
              "flags": "-g --resource-group <resource-group>",
              "required": -21,
              "optional": 0,
              "bool": true,
              "short": "-g",
              "long": "--resource-group",
              "description": "Name of the resource group"
            },
            {
              "flags": "-n --name <name>",
              "required": -11,
              "optional": 0,
              "bool": true,
              "short": "-n",
              "long": "--name",
              "description": "the name of the webapp to create"
            },
            {
              "flags": "--slot <slot>",
              "required": -8,
              "optional": 0,
              "bool": true,
              "long": "--slot",
              "description": "the name of the slot"
            },
            {
              "flags": "-l --location <location>",
              "required": -15,
              "optional": 0,
              "bool": true,
              "short": "-l",
              "long": "--location",
              "description": "the geographic region to create the webapp"
            },
            {
              "flags": "-p --plan <plan>",
              "required": -11,
              "optional": 0,
              "bool": true,
              "short": "-p",
              "long": "--plan",
              "description": "the name of the app service plan eg: Default1."
            },
            {
              "flags": "-s, --subscription <id>",
              "required": -20,
              "optional": 0,
              "bool": true,
              "short": "-s",
              "long": "--subscription",
              "description": "the subscription identifier"
            }
          ]
        },
        {
          "name": "stop",
          "description": "Stop a web app",
          "fullName": "webapp stop",
          "usage": "[options] [resource-group] [name]",
          "filePath": "commands/arm/webapp/webapp._js",
          "options": [
            {
              "flags": "-v, --verbose",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-v",
              "long": "--verbose",
              "description": "use verbose output"
            },
            {
              "flags": "-vv",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "-vv",
              "description": "more verbose with debug output"
            },
            {
              "flags": "--json",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--json",
              "description": "use json output"
            },
            {
              "flags": "-g --resource-group <resource-group>",
              "required": -21,
              "optional": 0,
              "bool": true,
              "short": "-g",
              "long": "--resource-group",
              "description": "the name of the resource group"
            },
            {
              "flags": "-n --name <name>",
              "required": -11,
              "optional": 0,
              "bool": true,
              "short": "-n",
              "long": "--name",
              "description": "the name of the webapp to stop"
            },
            {
              "flags": "--slot <slot>",
              "required": -8,
              "optional": 0,
              "bool": true,
              "long": "--slot",
              "description": "the name of the slot"
            },
            {
              "flags": "-s, --subscription <id>",
              "required": -20,
              "optional": 0,
              "bool": true,
              "short": "-s",
              "long": "--subscription",
              "description": "the subscription id"
            }
          ]
        },
        {
          "name": "start",
          "description": "Start a web app",
          "fullName": "webapp start",
          "usage": "[options] [resource-group] [name]",
          "filePath": "commands/arm/webapp/webapp._js",
          "options": [
            {
              "flags": "-v, --verbose",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-v",
              "long": "--verbose",
              "description": "use verbose output"
            },
            {
              "flags": "-vv",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "-vv",
              "description": "more verbose with debug output"
            },
            {
              "flags": "--json",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--json",
              "description": "use json output"
            },
            {
              "flags": "-g --resource-group <resource-group>",
              "required": -21,
              "optional": 0,
              "bool": true,
              "short": "-g",
              "long": "--resource-group",
              "description": "the name of the resource group"
            },
            {
              "flags": "-n --name <name>",
              "required": -11,
              "optional": 0,
              "bool": true,
              "short": "-n",
              "long": "--name",
              "description": "the name of the webapp to start"
            },
            {
              "flags": "--slot <slot>",
              "required": -8,
              "optional": 0,
              "bool": true,
              "long": "--slot",
              "description": "the name of the slot"
            },
            {
              "flags": "-s, --subscription <id>",
              "required": -20,
              "optional": 0,
              "bool": true,
              "short": "-s",
              "long": "--subscription",
              "description": "the subscription id"
            }
          ]
        },
        {
          "name": "restart",
          "description": "Stop and then start a web app",
          "fullName": "webapp restart",
          "usage": "[options] [resource-group] [name]",
          "filePath": "commands/arm/webapp/webapp._js",
          "options": [
            {
              "flags": "-v, --verbose",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-v",
              "long": "--verbose",
              "description": "use verbose output"
            },
            {
              "flags": "-vv",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "-vv",
              "description": "more verbose with debug output"
            },
            {
              "flags": "--json",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--json",
              "description": "use json output"
            },
            {
              "flags": "-g --resource-group <resource-group>",
              "required": -21,
              "optional": 0,
              "bool": true,
              "short": "-g",
              "long": "--resource-group",
              "description": "the name of the resource group"
            },
            {
              "flags": "-n --name <name>",
              "required": -11,
              "optional": 0,
              "bool": true,
              "short": "-n",
              "long": "--name",
              "description": "the name of the webapp to restart"
            },
            {
              "flags": "--slot <slot>",
              "required": -8,
              "optional": 0,
              "bool": true,
              "long": "--slot",
              "description": "the name of the slot"
            },
            {
              "flags": "-s, --subscription <id>",
              "required": -20,
              "optional": 0,
              "bool": true,
              "short": "-s",
              "long": "--subscription",
              "description": "the subscription id"
            }
          ]
        },
        {
          "name": "delete",
          "description": "Delete a webapp",
          "fullName": "webapp delete",
          "usage": "[options] [resource-group] [name]",
          "filePath": "commands/arm/webapp/webapp._js",
          "options": [
            {
              "flags": "-v, --verbose",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-v",
              "long": "--verbose",
              "description": "use verbose output"
            },
            {
              "flags": "-vv",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "-vv",
              "description": "more verbose with debug output"
            },
            {
              "flags": "--json",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--json",
              "description": "use json output"
            },
            {
              "flags": "-g --resource-group <resource-group>",
              "required": -21,
              "optional": 0,
              "bool": true,
              "short": "-g",
              "long": "--resource-group",
              "description": "Name of the resource group"
            },
            {
              "flags": "-n --name <name>",
              "required": -11,
              "optional": 0,
              "bool": true,
              "short": "-n",
              "long": "--name",
              "description": "the name of the webapp to delete"
            },
            {
              "flags": "--slot <slot>",
              "required": -8,
              "optional": 0,
              "bool": true,
              "long": "--slot",
              "description": "the name of the slot to be deleted"
            },
            {
              "flags": "-q, --quiet",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-q",
              "long": "--quiet",
              "description": "quiet mode, do not ask for delete confirmation"
            },
            {
              "flags": "-s --subscription <subscription>",
              "required": -19,
              "optional": 0,
              "bool": true,
              "short": "-s",
              "long": "--subscription",
              "description": "the subscription identifier"
            }
          ]
        },
        {
          "name": "list",
          "description": "List your webapps",
          "fullName": "webapp list",
          "usage": "[options] [resource-group]",
          "filePath": "commands/arm/webapp/webapp._js",
          "options": [
            {
              "flags": "-v, --verbose",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-v",
              "long": "--verbose",
              "description": "use verbose output"
            },
            {
              "flags": "-vv",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "-vv",
              "description": "more verbose with debug output"
            },
            {
              "flags": "--json",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--json",
              "description": "use json output"
            },
            {
              "flags": "-g --resource-group <resource-group>",
              "required": -21,
              "optional": 0,
              "bool": true,
              "short": "-g",
              "long": "--resource-group",
              "description": "the name of the resource group"
            },
            {
              "flags": "-s --subscription <subscription>",
              "required": -19,
              "optional": 0,
              "bool": true,
              "short": "-s",
              "long": "--subscription",
              "description": "the subscription identifier"
            }
          ]
        },
        {
          "name": "show",
          "description": "Get an available webapp",
          "fullName": "webapp show",
          "usage": "[options] [resource-group] [name]",
          "filePath": "commands/arm/webapp/webapp._js",
          "options": [
            {
              "flags": "-v, --verbose",
              "required": 0,
              "optional": 0,
              "bool": true,
              "short": "-v",
              "long": "--verbose",
              "description": "use verbose output"
            },
            {
              "flags": "-vv",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "-vv",
              "description": "more verbose with debug output"
            },
            {
              "flags": "--json",
              "required": 0,
              "optional": 0,
              "bool": true,
              "long": "--json",
              "description": "use json output"
            },
            {
              "flags": "-g --resource-group <resource-group>",
              "required": -21,
              "optional": 0,
              "bool": true,
              "short": "-g",
              "long": "--resource-group",
              "description": "the name of the resource group"
            },
            {
              "flags": "-n --name <name>",
              "required": -11,
              "optional": 0,
              "bool": true,
              "short": "-n",
              "long": "--name",
              "description": "the name of the webapp to show"
            },
            {
              "flags": "--slot <slot>",
              "required": -8,
              "optional": 0,
              "bool": true,
              "long": "--slot",
              "description": "the name of the slot to show"
            },
            {
              "flags": "-s --subscription <subscription>",
              "required": -19,
              "optional": 0,
              "bool": true,
              "short": "-s",
              "long": "--subscription",
              "description": "the subscription identifier"
            }
          ]
        }
      ],
      "categories": {}
    }
  }
}